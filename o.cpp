struct None {};

template <class... Ts>
struct Pack {};

template <class S>
struct NamedDecl {
  constexpr static const char* DeclName = S::value;
};
template <class S>
struct NamedDeclName : NamedDecl<S> {};
template <class S>
struct NamedDeclAnon : NamedDecl<S> {};

template <typename T>
struct TypeDecl {
  using Type = T;
};

template <typename F, typename P>
struct FunctionDecl {
  using FunctionProtoType = F;
  using Params = P;
};

template <typename RT, typename CRT>
struct FunctionResult {
  using ReturnType = RT;
  using CallResultType = CRT;
};
struct FunctionNoResult {
  using ReturnType = None;
  using CallResultType = None;
};

template <typename T>
struct FunctionInstance {
  using ThisType = T;
};
struct FunctionNoInstance {
  using ThisType = None;
};

struct CXXMethodDecl {};
struct CXXConstructorDecl {};
struct CXXDestructorDecl {};
struct CXXConversionDecl {};
struct _s1 { constexpr static const char* value = "v8"; };
struct _s2 { constexpr static const char* value = "Context"; };
struct _s3 { constexpr static const char* value = "Data"; };
struct _s4 { constexpr static const char* value = "Isolate"; };
struct _s5 { constexpr static const char* value = "AccessorSignature"; };
struct _s6 { constexpr static const char* value = "Array"; };
struct _s7 { constexpr static const char* value = "ArrayBuffer"; };
struct _s8 { constexpr static const char* value = "BigInt"; };
struct _s9 { constexpr static const char* value = "BigIntObject"; };
struct _s10 { constexpr static const char* value = "Boolean"; };
struct _s11 { constexpr static const char* value = "BooleanObject"; };
struct _s12 { constexpr static const char* value = "Date"; };
struct _s13 { constexpr static const char* value = "External"; };
struct _s14 { constexpr static const char* value = "Function"; };
struct _s15 { constexpr static const char* value = "FunctionTemplate"; };
struct _s16 { constexpr static const char* value = "HeapProfiler"; };
struct _s17 { constexpr static const char* value = "ImplementationUtilities"; };
struct _s18 { constexpr static const char* value = "Int32"; };
struct _s19 { constexpr static const char* value = "Integer"; };
struct _s20 { constexpr static const char* value = "Maybe"; };
struct _s21 { constexpr static const char* value = "T"; };
struct _s22 { constexpr static const char* value = "MicrotaskQueue"; };
struct _s23 { constexpr static const char* value = "Name"; };
struct _s24 { constexpr static const char* value = "Number"; };
struct _s25 { constexpr static const char* value = "NumberObject"; };
struct _s26 { constexpr static const char* value = "Object"; };
struct _s27 { constexpr static const char* value = "ObjectOperationDescriptor"; };
struct _s28 { constexpr static const char* value = "ObjectTemplate"; };
struct _s29 { constexpr static const char* value = "Platform"; };
struct _s30 { constexpr static const char* value = "Primitive"; };
struct _s31 { constexpr static const char* value = "Promise"; };
struct _s32 { constexpr static const char* value = "PropertyDescriptor"; };
struct _s33 { constexpr static const char* value = "Proxy"; };
struct _s34 { constexpr static const char* value = "RawOperationDescriptor"; };
struct _s35 { constexpr static const char* value = "Script"; };
struct _s36 { constexpr static const char* value = "SharedArrayBuffer"; };
struct _s37 { constexpr static const char* value = "Signature"; };
struct _s38 { constexpr static const char* value = "StartupData"; };
struct _s39 { constexpr static const char* value = "StackFrame"; };
struct _s40 { constexpr static const char* value = "StackTrace"; };
struct _s41 { constexpr static const char* value = "String"; };
struct _s42 { constexpr static const char* value = "StringObject"; };
struct _s43 { constexpr static const char* value = "Symbol"; };
struct _s44 { constexpr static const char* value = "SymbolObject"; };
struct _s45 { constexpr static const char* value = "PrimitiveArray"; };
struct _s46 { constexpr static const char* value = "Private"; };
struct _s47 { constexpr static const char* value = "Uint32"; };
struct _s48 { constexpr static const char* value = "Utils"; };
struct _s49 { constexpr static const char* value = "Value"; };
struct _s50 { constexpr static const char* value = "WasmModuleObject"; };
struct _s51 { constexpr static const char* value = "Local"; };
struct _s52 { constexpr static const char* value = "S"; };
struct _s53 { constexpr static const char* value = "that"; };
struct _s54 { constexpr static const char* value = "IsEmpty"; };
struct _s55 { constexpr static const char* value = "Clear"; };
struct _s56 { constexpr static const char* value = "operator->"; };
struct _s57 { constexpr static const char* value = "operator*"; };
struct _s58 { constexpr static const char* value = "operator=="; };
struct _s59 { constexpr static const char* value = "operator!="; };
struct _s60 { constexpr static const char* value = "Cast"; };
struct _s61 { constexpr static const char* value = "As"; };
struct _s62 { constexpr static const char* value = "New"; };
struct _s63 { constexpr static const char* value = "isolate"; };
struct _s64 { constexpr static const char* value = "PersistentBase"; };
struct _s65 { constexpr static const char* value = "TracedGlobal"; };
struct _s66 { constexpr static const char* value = ""; };
struct _s67 { constexpr static const char* value = "operator="; };
struct _s68 { constexpr static const char* value = "UnboundScript"; };
struct _s69 { constexpr static const char* value = "MaybeLocal"; };
struct _s70 { constexpr static const char* value = "ToLocal"; };
struct _s71 { constexpr static const char* value = "out"; };
struct _s72 { constexpr static const char* value = "ToLocalChecked"; };
struct _s73 { constexpr static const char* value = "FromMaybe"; };
struct _s74 { constexpr static const char* value = "default_value"; };
struct _s75 { constexpr static const char* value = "Eternal"; };
struct _s76 { constexpr static const char* value = "NonCopyablePersistentTraits"; };
struct _s77 { constexpr static const char* value = "Reset"; };
struct _s78 { constexpr static const char* value = "other"; };
struct _s79 { constexpr static const char* value = "Empty"; };
struct _s80 { constexpr static const char* value = "Get"; };
struct _s81 { constexpr static const char* value = "SetWeak"; };
struct _s82 { constexpr static const char* value = "P"; };
struct _s83 { constexpr static const char* value = "parameter"; };
struct _s84 { constexpr static const char* value = "callback"; };
struct _s85 { constexpr static const char* value = "type"; };
struct _s86 { constexpr static const char* value = "WeakCallbackType"; };
struct _s87 { constexpr static const char* value = "ClearWeak"; };
struct _s88 { constexpr static const char* value = "AnnotateStrongRetainer"; };
struct _s89 { constexpr static const char* value = "label"; };
struct _s90 { constexpr static const char* value = "IsWeak"; };
struct _s91 { constexpr static const char* value = "SetWrapperClassId"; };
struct _s92 { constexpr static const char* value = "class_id"; };
struct _s93 { constexpr static const char* value = "WrapperClassId"; };
struct _s94 { constexpr static const char* value = "Persistent"; };
struct _s95 { constexpr static const char* value = "M"; };
struct _s96 { constexpr static const char* value = "M2"; };
struct _s97 { constexpr static const char* value = "Global"; };
struct _s98 { constexpr static const char* value = "rhs"; };
struct _s99 { constexpr static const char* value = "SetFinalizationCallback"; };
struct _s100 { constexpr static const char* value = "WeakCallbackInfo"; };
struct _s101 { constexpr static const char* value = "PersistentValueMap"; };
struct _s102 { constexpr static const char* value = "K"; };
struct _s103 { constexpr static const char* value = "V"; };
struct _s104 { constexpr static const char* value = "PersistentValueMapBase"; };
struct _s105 { constexpr static const char* value = "GlobalValueMap"; };
struct _s106 { constexpr static const char* value = "PersistentValueVector"; };
struct _s107 { constexpr static const char* value = "WeakCallbackObject"; };
struct _s108 { constexpr static const char* value = "FunctionCallbackInfo"; };
struct _s109 { constexpr static const char* value = "PropertyCallbackInfo"; };
struct _s110 { constexpr static const char* value = "CallHandlerHelper"; };
struct _s111 { constexpr static const char* value = "EscapableHandleScope"; };
struct _s112 { constexpr static const char* value = "ReturnValue"; };
struct _s113 { constexpr static const char* value = "debug"; };
struct _s114 { constexpr static const char* value = "ConsoleCallArguments"; };
struct _s115 { constexpr static const char* value = "Local<T>"; };
struct _s116 { constexpr static const char* value = "Handle"; };
struct _s117 { constexpr static const char* value = "MaybeLocal<T>"; };
struct _s118 { constexpr static const char* value = "Eternal<T>"; };
struct _s119 { constexpr static const char* value = "handle"; };
struct _s120 { constexpr static const char* value = "Set"; };
struct _s121 { constexpr static const char* value = "kInternalFieldsInWeakCallback"; };
struct _s122 { constexpr static const char* value = "kEmbedderFieldsInWeakCallback"; };
struct _s123 { constexpr static const char* value = "Callback"; };
struct _s124 { constexpr static const char* value = "embedder_fields"; };
struct _s125 { constexpr static const char* value = "GetIsolate"; };
struct _s126 { constexpr static const char* value = "GetParameter"; };
struct _s127 { constexpr static const char* value = "GetInternalField"; };
struct _s128 { constexpr static const char* value = "index"; };
struct _s129 { constexpr static const char* value = "SetSecondPassCallback"; };
struct _s130 { constexpr static const char* value = "data"; };
struct _s131 { constexpr static const char* value = "kParameter"; };
struct _s132 { constexpr static const char* value = "kInternalFields"; };
struct _s133 { constexpr static const char* value = "kFinalizer"; };
struct _s134 { constexpr static const char* value = "NonCopyablePersistent"; };
struct _s135 { constexpr static const char* value = "kResetInDestructor"; };
struct _s136 { constexpr static const char* value = "Copy"; };
struct _s137 { constexpr static const char* value = "source"; };
struct _s138 { constexpr static const char* value = "dest"; };
struct _s139 { constexpr static const char* value = "Uncompilable"; };
struct _s140 { constexpr static const char* value = "O"; };
struct _s141 { constexpr static const char* value = "CopyablePersistentTraits"; };
struct _s142 { constexpr static const char* value = "CopyablePersistent"; };
struct _s143 { constexpr static const char* value = "Persistent<T, M>"; };
struct _s144 { constexpr static const char* value = "Global<T>"; };
struct _s145 { constexpr static const char* value = "Pass"; };
struct _s146 { constexpr static const char* value = "MoveOnlyTypeForCPP03"; };
struct _s147 { constexpr static const char* value = "UniquePersistent"; };
struct _s148 { constexpr static const char* value = "TracedGlobal<T>"; };
struct _s149 { constexpr static const char* value = "HandleScope"; };
struct _s150 { constexpr static const char* value = "NumberOfHandles"; };
struct _s151 { constexpr static const char* value = "Initialize"; };
struct _s152 { constexpr static const char* value = "CreateHandle"; };
struct _s153 { constexpr static const char* value = "value"; };
struct _s154 { constexpr static const char* value = "Escape"; };
struct _s155 { constexpr static const char* value = "EscapeMaybe"; };
struct _s156 { constexpr static const char* value = "SealHandleScope"; };
struct _s157 { constexpr static const char* value = "ScriptOrModule"; };
struct _s158 { constexpr static const char* value = "GetResourceName"; };
struct _s159 { constexpr static const char* value = "GetHostDefinedOptions"; };
struct _s160 { constexpr static const char* value = "length"; };
struct _s161 { constexpr static const char* value = "Length"; };
struct _s162 { constexpr static const char* value = "item"; };
struct _s163 { constexpr static const char* value = "ScriptOriginOptions"; };
struct _s164 { constexpr static const char* value = "is_shared_cross_origin"; };
struct _s165 { constexpr static const char* value = "is_opaque"; };
struct _s166 { constexpr static const char* value = "is_wasm"; };
struct _s167 { constexpr static const char* value = "is_module"; };
struct _s168 { constexpr static const char* value = "flags"; };
struct _s169 { constexpr static const char* value = "IsSharedCrossOrigin"; };
struct _s170 { constexpr static const char* value = "IsOpaque"; };
struct _s171 { constexpr static const char* value = "IsWasm"; };
struct _s172 { constexpr static const char* value = "IsModule"; };
struct _s173 { constexpr static const char* value = "Flags"; };
struct _s174 { constexpr static const char* value = "ScriptOrigin"; };
struct _s175 { constexpr static const char* value = "resource_name"; };
struct _s176 { constexpr static const char* value = "resource_line_offset"; };
struct _s177 { constexpr static const char* value = "resource_column_offset"; };
struct _s178 { constexpr static const char* value = "resource_is_shared_cross_origin"; };
struct _s179 { constexpr static const char* value = "script_id"; };
struct _s180 { constexpr static const char* value = "source_map_url"; };
struct _s181 { constexpr static const char* value = "resource_is_opaque"; };
struct _s182 { constexpr static const char* value = "host_defined_options"; };
struct _s183 { constexpr static const char* value = "ResourceName"; };
struct _s184 { constexpr static const char* value = "ResourceLineOffset"; };
struct _s185 { constexpr static const char* value = "ResourceColumnOffset"; };
struct _s186 { constexpr static const char* value = "ScriptID"; };
struct _s187 { constexpr static const char* value = "SourceMapUrl"; };
struct _s188 { constexpr static const char* value = "HostDefinedOptions"; };
struct _s189 { constexpr static const char* value = "Options"; };
struct _s190 { constexpr static const char* value = "BindToCurrentContext"; };
struct _s191 { constexpr static const char* value = "GetId"; };
struct _s192 { constexpr static const char* value = "GetScriptName"; };
struct _s193 { constexpr static const char* value = "GetSourceURL"; };
struct _s194 { constexpr static const char* value = "GetSourceMappingURL"; };
struct _s195 { constexpr static const char* value = "GetLineNumber"; };
struct _s196 { constexpr static const char* value = "code_pos"; };
struct _s197 { constexpr static const char* value = "kNoScriptId"; };
struct _s198 { constexpr static const char* value = "UnboundModuleScript"; };
struct _s199 { constexpr static const char* value = "Location"; };
struct _s200 { constexpr static const char* value = "GetColumnNumber"; };
struct _s201 { constexpr static const char* value = "line_number"; };
struct _s202 { constexpr static const char* value = "column_number"; };
struct _s203 { constexpr static const char* value = "Module"; };
struct _s204 { constexpr static const char* value = "Status"; };
struct _s205 { constexpr static const char* value = "kUninstantiated"; };
struct _s206 { constexpr static const char* value = "kInstantiating"; };
struct _s207 { constexpr static const char* value = "kInstantiated"; };
struct _s208 { constexpr static const char* value = "kEvaluating"; };
struct _s209 { constexpr static const char* value = "kEvaluated"; };
struct _s210 { constexpr static const char* value = "kErrored"; };
struct _s211 { constexpr static const char* value = "GetStatus"; };
struct _s212 { constexpr static const char* value = "GetException"; };
struct _s213 { constexpr static const char* value = "GetModuleRequestsLength"; };
struct _s214 { constexpr static const char* value = "GetModuleRequest"; };
struct _s215 { constexpr static const char* value = "i"; };
struct _s216 { constexpr static const char* value = "GetModuleRequestLocation"; };
struct _s217 { constexpr static const char* value = "GetIdentityHash"; };
struct _s218 { constexpr static const char* value = "ResolveCallback"; };
struct _s219 { constexpr static const char* value = "InstantiateModule"; };
struct _s220 { constexpr static const char* value = "context"; };
struct _s221 { constexpr static const char* value = "Evaluate"; };
struct _s222 { constexpr static const char* value = "GetModuleNamespace"; };
struct _s223 { constexpr static const char* value = "GetUnboundModuleScript"; };
struct _s224 { constexpr static const char* value = "Compile"; };
struct _s225 { constexpr static const char* value = "origin"; };
struct _s226 { constexpr static const char* value = "Run"; };
struct _s227 { constexpr static const char* value = "GetUnboundScript"; };
struct _s228 { constexpr static const char* value = "ScriptCompiler"; };
struct _s229 { constexpr static const char* value = "CachedData"; };
struct _s230 { constexpr static const char* value = "BufferPolicy"; };
struct _s231 { constexpr static const char* value = "BufferNotOwned"; };
struct _s232 { constexpr static const char* value = "BufferOwned"; };
struct _s233 { constexpr static const char* value = "buffer_policy"; };
struct _s234 { constexpr static const char* value = "rejected"; };
struct _s235 { constexpr static const char* value = "Source"; };
struct _s236 { constexpr static const char* value = "source_string"; };
struct _s237 { constexpr static const char* value = "cached_data"; };
struct _s238 { constexpr static const char* value = "GetCachedData"; };
struct _s239 { constexpr static const char* value = "GetResourceOptions"; };
struct _s240 { constexpr static const char* value = "ExternalSourceStream"; };
struct _s241 { constexpr static const char* value = "GetMoreData"; };
struct _s242 { constexpr static const char* value = "src"; };
struct _s243 { constexpr static const char* value = "SetBookmark"; };
struct _s244 { constexpr static const char* value = "ResetToBookmark"; };
struct _s245 { constexpr static const char* value = "StreamedSource"; };
struct _s246 { constexpr static const char* value = "Encoding"; };
struct _s247 { constexpr static const char* value = "ONE_BYTE"; };
struct _s248 { constexpr static const char* value = "TWO_BYTE"; };
struct _s249 { constexpr static const char* value = "UTF8"; };
struct _s250 { constexpr static const char* value = "source_stream"; };
struct _s251 { constexpr static const char* value = "encoding"; };
struct _s252 { constexpr static const char* value = "unique_ptr"; };
struct _s253 { constexpr static const char* value = "impl"; };
struct _s254 { constexpr static const char* value = "ScriptStreamingData"; };
struct _s255 { constexpr static const char* value = "ScriptStreamingTask"; };
struct _s256 { constexpr static const char* value = "CompileOptions"; };
struct _s257 { constexpr static const char* value = "kNoCompileOptions"; };
struct _s258 { constexpr static const char* value = "kConsumeCodeCache"; };
struct _s259 { constexpr static const char* value = "kEagerCompile"; };
struct _s260 { constexpr static const char* value = "NoCacheReason"; };
struct _s261 { constexpr static const char* value = "kNoCacheNoReason"; };
struct _s262 { constexpr static const char* value = "kNoCacheBecauseCachingDisabled"; };
struct _s263 { constexpr static const char* value = "kNoCacheBecauseNoResource"; };
struct _s264 { constexpr static const char* value = "kNoCacheBecauseInlineScript"; };
struct _s265 { constexpr static const char* value = "kNoCacheBecauseModule"; };
struct _s266 { constexpr static const char* value = "kNoCacheBecauseStreamingSource"; };
struct _s267 { constexpr static const char* value = "kNoCacheBecauseInspector"; };
struct _s268 { constexpr static const char* value = "kNoCacheBecauseScriptTooSmall"; };
struct _s269 { constexpr static const char* value = "kNoCacheBecauseCacheTooCold"; };
struct _s270 { constexpr static const char* value = "kNoCacheBecauseV8Extension"; };
struct _s271 { constexpr static const char* value = "kNoCacheBecauseExtensionModule"; };
struct _s272 { constexpr static const char* value = "kNoCacheBecausePacScript"; };
struct _s273 { constexpr static const char* value = "kNoCacheBecauseInDocumentWrite"; };
struct _s274 { constexpr static const char* value = "kNoCacheBecauseResourceWithNoCacheHandler"; };
struct _s275 { constexpr static const char* value = "kNoCacheBecauseDeferredProduceCodeCache"; };
struct _s276 { constexpr static const char* value = "CompileUnboundScript"; };
struct _s277 { constexpr static const char* value = "options"; };
struct _s278 { constexpr static const char* value = "no_cache_reason"; };
struct _s279 { constexpr static const char* value = "StartStreamingScript"; };
struct _s280 { constexpr static const char* value = "full_source_string"; };
struct _s281 { constexpr static const char* value = "CachedDataVersionTag"; };
struct _s282 { constexpr static const char* value = "CompileModule"; };
struct _s283 { constexpr static const char* value = "CompileFunctionInContext"; };
struct _s284 { constexpr static const char* value = "arguments_count"; };
struct _s285 { constexpr static const char* value = "arguments"; };
struct _s286 { constexpr static const char* value = "context_extension_count"; };
struct _s287 { constexpr static const char* value = "context_extensions"; };
struct _s288 { constexpr static const char* value = "CreateCodeCache"; };
struct _s289 { constexpr static const char* value = "unbound_script"; };
struct _s290 { constexpr static const char* value = "unbound_module_script"; };
struct _s291 { constexpr static const char* value = "CreateCodeCacheForFunction"; };
struct _s292 { constexpr static const char* value = "function"; };
struct _s293 { constexpr static const char* value = "Message"; };
struct _s294 { constexpr static const char* value = "GetSourceLine"; };
struct _s295 { constexpr static const char* value = "GetScriptOrigin"; };
struct _s296 { constexpr static const char* value = "GetScriptResourceName"; };
struct _s297 { constexpr static const char* value = "GetStackTrace"; };
struct _s298 { constexpr static const char* value = "GetStartPosition"; };
struct _s299 { constexpr static const char* value = "GetEndPosition"; };
struct _s300 { constexpr static const char* value = "ErrorLevel"; };
struct _s301 { constexpr static const char* value = "GetStartColumn"; };
struct _s302 { constexpr static const char* value = "GetEndColumn"; };
struct _s303 { constexpr static const char* value = "PrintCurrentStackTrace"; };
struct _s304 { constexpr static const char* value = "_iobuf"; };
struct _s305 { constexpr static const char* value = "kNoLineNumberInfo"; };
struct _s306 { constexpr static const char* value = "kNoColumnInfo"; };
struct _s307 { constexpr static const char* value = "kNoScriptIdInfo"; };
struct _s308 { constexpr static const char* value = "StackTraceOptions"; };
struct _s309 { constexpr static const char* value = "kLineNumber"; };
struct _s310 { constexpr static const char* value = "kColumnOffset"; };
struct _s311 { constexpr static const char* value = "kScriptName"; };
struct _s312 { constexpr static const char* value = "kFunctionName"; };
struct _s313 { constexpr static const char* value = "kIsEval"; };
struct _s314 { constexpr static const char* value = "kIsConstructor"; };
struct _s315 { constexpr static const char* value = "kScriptNameOrSourceURL"; };
struct _s316 { constexpr static const char* value = "kScriptId"; };
struct _s317 { constexpr static const char* value = "kExposeFramesAcrossSecurityOrigins"; };
struct _s318 { constexpr static const char* value = "kOverview"; };
struct _s319 { constexpr static const char* value = "kDetailed"; };
struct _s320 { constexpr static const char* value = "GetFrame"; };
struct _s321 { constexpr static const char* value = "GetFrameCount"; };
struct _s322 { constexpr static const char* value = "CurrentStackTrace"; };
struct _s323 { constexpr static const char* value = "frame_limit"; };
struct _s324 { constexpr static const char* value = "GetColumn"; };
struct _s325 { constexpr static const char* value = "GetScriptId"; };
struct _s326 { constexpr static const char* value = "GetScriptNameOrSourceURL"; };
struct _s327 { constexpr static const char* value = "GetFunctionName"; };
struct _s328 { constexpr static const char* value = "IsEval"; };
struct _s329 { constexpr static const char* value = "IsConstructor"; };
struct _s330 { constexpr static const char* value = "IsUserJavaScript"; };
struct _s331 { constexpr static const char* value = "StateTag"; };
struct _s332 { constexpr static const char* value = "JS"; };
struct _s333 { constexpr static const char* value = "GC"; };
struct _s334 { constexpr static const char* value = "PARSER"; };
struct _s335 { constexpr static const char* value = "BYTECODE_COMPILER"; };
struct _s336 { constexpr static const char* value = "COMPILER"; };
struct _s337 { constexpr static const char* value = "OTHER"; };
struct _s338 { constexpr static const char* value = "EXTERNAL"; };
struct _s339 { constexpr static const char* value = "IDLE"; };
struct _s340 { constexpr static const char* value = "RegisterState"; };
struct _s341 { constexpr static const char* value = "pc"; };
struct _s342 { constexpr static const char* value = "sp"; };
struct _s343 { constexpr static const char* value = "fp"; };
struct _s344 { constexpr static const char* value = "lr"; };
struct _s345 { constexpr static const char* value = "SampleInfo"; };
struct _s346 { constexpr static const char* value = "frames_count"; };
struct _s347 { constexpr static const char* value = "vm_state"; };
struct _s348 { constexpr static const char* value = "external_callback_entry"; };
struct _s349 { constexpr static const char* value = "MemoryRange"; };
struct _s350 { constexpr static const char* value = "start"; };
struct _s351 { constexpr static const char* value = "length_in_bytes"; };
struct _s352 { constexpr static const char* value = "JSEntryStub"; };
struct _s353 { constexpr static const char* value = "code"; };
struct _s354 { constexpr static const char* value = "UnwindState"; };
struct _s355 { constexpr static const char* value = "code_range"; };
struct _s356 { constexpr static const char* value = "embedded_code_range"; };
struct _s357 { constexpr static const char* value = "js_entry_stub"; };
struct _s358 { constexpr static const char* value = "JSON"; };
struct _s359 { constexpr static const char* value = "Parse"; };
struct _s360 { constexpr static const char* value = "json_string"; };
struct _s361 { constexpr static const char* value = "Stringify"; };
struct _s362 { constexpr static const char* value = "json_object"; };
struct _s363 { constexpr static const char* value = "gap"; };
struct _s364 { constexpr static const char* value = "ValueSerializer"; };
struct _s365 { constexpr static const char* value = "Delegate"; };
struct _s366 { constexpr static const char* value = "ThrowDataCloneError"; };
struct _s367 { constexpr static const char* value = "message"; };
struct _s368 { constexpr static const char* value = "WriteHostObject"; };
struct _s369 { constexpr static const char* value = "object"; };
struct _s370 { constexpr static const char* value = "GetSharedArrayBufferId"; };
struct _s371 { constexpr static const char* value = "shared_array_buffer"; };
struct _s372 { constexpr static const char* value = "GetWasmModuleTransferId"; };
struct _s373 { constexpr static const char* value = "module"; };
struct _s374 { constexpr static const char* value = "ReallocateBufferMemory"; };
struct _s375 { constexpr static const char* value = "old_buffer"; };
struct _s376 { constexpr static const char* value = "size"; };
struct _s377 { constexpr static const char* value = "actual_size"; };
struct _s378 { constexpr static const char* value = "FreeBufferMemory"; };
struct _s379 { constexpr static const char* value = "buffer"; };
struct _s380 { constexpr static const char* value = "delegate"; };
struct _s381 { constexpr static const char* value = "WriteHeader"; };
struct _s382 { constexpr static const char* value = "WriteValue"; };
struct _s383 { constexpr static const char* value = "Release"; };
struct _s384 { constexpr static const char* value = "pair"; };
struct _s385 { constexpr static const char* value = "TransferArrayBuffer"; };
struct _s386 { constexpr static const char* value = "transfer_id"; };
struct _s387 { constexpr static const char* value = "array_buffer"; };
struct _s388 { constexpr static const char* value = "SetTreatArrayBufferViewsAsHostObjects"; };
struct _s389 { constexpr static const char* value = "mode"; };
struct _s390 { constexpr static const char* value = "WriteUint32"; };
struct _s391 { constexpr static const char* value = "WriteUint64"; };
struct _s392 { constexpr static const char* value = "WriteDouble"; };
struct _s393 { constexpr static const char* value = "WriteRawBytes"; };
struct _s394 { constexpr static const char* value = "ValueDeserializer"; };
struct _s395 { constexpr static const char* value = "ReadHostObject"; };
struct _s396 { constexpr static const char* value = "GetWasmModuleFromId"; };
struct _s397 { constexpr static const char* value = "GetSharedArrayBufferFromId"; };
struct _s398 { constexpr static const char* value = "clone_id"; };
struct _s399 { constexpr static const char* value = "ReadHeader"; };
struct _s400 { constexpr static const char* value = "ReadValue"; };
struct _s401 { constexpr static const char* value = "TransferSharedArrayBuffer"; };
struct _s402 { constexpr static const char* value = "id"; };
struct _s403 { constexpr static const char* value = "SetSupportsLegacyWireFormat"; };
struct _s404 { constexpr static const char* value = "supports_legacy_wire_format"; };
struct _s405 { constexpr static const char* value = "SetExpectInlineWasm"; };
struct _s406 { constexpr static const char* value = "allow_inline_wasm"; };
struct _s407 { constexpr static const char* value = "GetWireFormatVersion"; };
struct _s408 { constexpr static const char* value = "ReadUint32"; };
struct _s409 { constexpr static const char* value = "ReadUint64"; };
struct _s410 { constexpr static const char* value = "ReadDouble"; };
struct _s411 { constexpr static const char* value = "ReadRawBytes"; };
struct _s412 { constexpr static const char* value = "IsUndefined"; };
struct _s413 { constexpr static const char* value = "IsNull"; };
struct _s414 { constexpr static const char* value = "IsNullOrUndefined"; };
struct _s415 { constexpr static const char* value = "IsTrue"; };
struct _s416 { constexpr static const char* value = "IsFalse"; };
struct _s417 { constexpr static const char* value = "IsName"; };
struct _s418 { constexpr static const char* value = "IsString"; };
struct _s419 { constexpr static const char* value = "IsSymbol"; };
struct _s420 { constexpr static const char* value = "IsFunction"; };
struct _s421 { constexpr static const char* value = "IsArray"; };
struct _s422 { constexpr static const char* value = "IsObject"; };
struct _s423 { constexpr static const char* value = "IsBigInt"; };
struct _s424 { constexpr static const char* value = "IsBoolean"; };
struct _s425 { constexpr static const char* value = "IsNumber"; };
struct _s426 { constexpr static const char* value = "IsExternal"; };
struct _s427 { constexpr static const char* value = "IsInt32"; };
struct _s428 { constexpr static const char* value = "IsUint32"; };
struct _s429 { constexpr static const char* value = "IsDate"; };
struct _s430 { constexpr static const char* value = "IsArgumentsObject"; };
struct _s431 { constexpr static const char* value = "IsBigIntObject"; };
struct _s432 { constexpr static const char* value = "IsBooleanObject"; };
struct _s433 { constexpr static const char* value = "IsNumberObject"; };
struct _s434 { constexpr static const char* value = "IsStringObject"; };
struct _s435 { constexpr static const char* value = "IsSymbolObject"; };
struct _s436 { constexpr static const char* value = "IsNativeError"; };
struct _s437 { constexpr static const char* value = "IsRegExp"; };
struct _s438 { constexpr static const char* value = "IsAsyncFunction"; };
struct _s439 { constexpr static const char* value = "IsGeneratorFunction"; };
struct _s440 { constexpr static const char* value = "IsGeneratorObject"; };
struct _s441 { constexpr static const char* value = "IsPromise"; };
struct _s442 { constexpr static const char* value = "IsMap"; };
struct _s443 { constexpr static const char* value = "IsSet"; };
struct _s444 { constexpr static const char* value = "IsMapIterator"; };
struct _s445 { constexpr static const char* value = "IsSetIterator"; };
struct _s446 { constexpr static const char* value = "IsWeakMap"; };
struct _s447 { constexpr static const char* value = "IsWeakSet"; };
struct _s448 { constexpr static const char* value = "IsArrayBuffer"; };
struct _s449 { constexpr static const char* value = "IsArrayBufferView"; };
struct _s450 { constexpr static const char* value = "IsTypedArray"; };
struct _s451 { constexpr static const char* value = "IsUint8Array"; };
struct _s452 { constexpr static const char* value = "IsUint8ClampedArray"; };
struct _s453 { constexpr static const char* value = "IsInt8Array"; };
struct _s454 { constexpr static const char* value = "IsUint16Array"; };
struct _s455 { constexpr static const char* value = "IsInt16Array"; };
struct _s456 { constexpr static const char* value = "IsUint32Array"; };
struct _s457 { constexpr static const char* value = "IsInt32Array"; };
struct _s458 { constexpr static const char* value = "IsFloat32Array"; };
struct _s459 { constexpr static const char* value = "IsFloat64Array"; };
struct _s460 { constexpr static const char* value = "IsBigInt64Array"; };
struct _s461 { constexpr static const char* value = "IsBigUint64Array"; };
struct _s462 { constexpr static const char* value = "IsDataView"; };
struct _s463 { constexpr static const char* value = "IsSharedArrayBuffer"; };
struct _s464 { constexpr static const char* value = "IsProxy"; };
struct _s465 { constexpr static const char* value = "IsWebAssemblyCompiledModule"; };
struct _s466 { constexpr static const char* value = "IsModuleNamespaceObject"; };
struct _s467 { constexpr static const char* value = "ToBigInt"; };
struct _s468 { constexpr static const char* value = "ToNumber"; };
struct _s469 { constexpr static const char* value = "ToString"; };
struct _s470 { constexpr static const char* value = "ToDetailString"; };
struct _s471 { constexpr static const char* value = "ToObject"; };
struct _s472 { constexpr static const char* value = "ToInteger"; };
struct _s473 { constexpr static const char* value = "ToUint32"; };
struct _s474 { constexpr static const char* value = "ToInt32"; };
struct _s475 { constexpr static const char* value = "ToBoolean"; };
struct _s476 { constexpr static const char* value = "ToArrayIndex"; };
struct _s477 { constexpr static const char* value = "BooleanValue"; };
struct _s478 { constexpr static const char* value = "NumberValue"; };
struct _s479 { constexpr static const char* value = "IntegerValue"; };
struct _s480 { constexpr static const char* value = "Uint32Value"; };
struct _s481 { constexpr static const char* value = "Int32Value"; };
struct _s482 { constexpr static const char* value = "Equals"; };
struct _s483 { constexpr static const char* value = "StrictEquals"; };
struct _s484 { constexpr static const char* value = "SameValue"; };
struct _s485 { constexpr static const char* value = "TypeOf"; };
struct _s486 { constexpr static const char* value = "InstanceOf"; };
struct _s487 { constexpr static const char* value = "obj"; };
struct _s488 { constexpr static const char* value = "NewStringType"; };
struct _s489 { constexpr static const char* value = "kNormal"; };
struct _s490 { constexpr static const char* value = "kInternalized"; };
struct _s491 { constexpr static const char* value = "kMaxLength"; };
struct _s492 { constexpr static const char* value = "UNKNOWN_ENCODING"; };
struct _s493 { constexpr static const char* value = "TWO_BYTE_ENCODING"; };
struct _s494 { constexpr static const char* value = "ONE_BYTE_ENCODING"; };
struct _s495 { constexpr static const char* value = "Utf8Length"; };
struct _s496 { constexpr static const char* value = "IsOneByte"; };
struct _s497 { constexpr static const char* value = "ContainsOnlyOneByte"; };
struct _s498 { constexpr static const char* value = "WriteOptions"; };
struct _s499 { constexpr static const char* value = "NO_OPTIONS"; };
struct _s500 { constexpr static const char* value = "HINT_MANY_WRITES_EXPECTED"; };
struct _s501 { constexpr static const char* value = "NO_NULL_TERMINATION"; };
struct _s502 { constexpr static const char* value = "PRESERVE_ONE_BYTE_NULL"; };
struct _s503 { constexpr static const char* value = "REPLACE_INVALID_UTF8"; };
struct _s504 { constexpr static const char* value = "Write"; };
struct _s505 { constexpr static const char* value = "WriteOneByte"; };
struct _s506 { constexpr static const char* value = "WriteUtf8"; };
struct _s507 { constexpr static const char* value = "nchars_ref"; };
struct _s508 { constexpr static const char* value = "IsExternalOneByte"; };
struct _s509 { constexpr static const char* value = "ExternalStringResourceBase"; };
struct _s510 { constexpr static const char* value = "IsCacheable"; };
struct _s511 { constexpr static const char* value = "Dispose"; };
struct _s512 { constexpr static const char* value = "Lock"; };
struct _s513 { constexpr static const char* value = "Unlock"; };
struct _s514 { constexpr static const char* value = "ExternalStringResource"; };
struct _s515 { constexpr static const char* value = "ExternalOneByteStringResource"; };
struct _s516 { constexpr static const char* value = "GetExternalStringResourceBase"; };
struct _s517 { constexpr static const char* value = "encoding_out"; };
struct _s518 { constexpr static const char* value = "GetExternalStringResource"; };
struct _s519 { constexpr static const char* value = "GetExternalOneByteStringResource"; };
struct _s520 { constexpr static const char* value = "NewFromUtf8"; };
struct _s521 { constexpr static const char* value = "NewFromOneByte"; };
struct _s522 { constexpr static const char* value = "NewFromTwoByte"; };
struct _s523 { constexpr static const char* value = "Concat"; };
struct _s524 { constexpr static const char* value = "left"; };
struct _s525 { constexpr static const char* value = "right"; };
struct _s526 { constexpr static const char* value = "NewExternalTwoByte"; };
struct _s527 { constexpr static const char* value = "resource"; };
struct _s528 { constexpr static const char* value = "MakeExternal"; };
struct _s529 { constexpr static const char* value = "NewExternalOneByte"; };
struct _s530 { constexpr static const char* value = "CanMakeExternal"; };
struct _s531 { constexpr static const char* value = "StringEquals"; };
struct _s532 { constexpr static const char* value = "str"; };
struct _s533 { constexpr static const char* value = "Utf8Value"; };
struct _s534 { constexpr static const char* value = "name"; };
struct _s535 { constexpr static const char* value = "For"; };
struct _s536 { constexpr static const char* value = "ForApi"; };
struct _s537 { constexpr static const char* value = "GetAsyncIterator"; };
struct _s538 { constexpr static const char* value = "GetHasInstance"; };
struct _s539 { constexpr static const char* value = "GetIsConcatSpreadable"; };
struct _s540 { constexpr static const char* value = "GetIterator"; };
struct _s541 { constexpr static const char* value = "GetMatch"; };
struct _s542 { constexpr static const char* value = "GetReplace"; };
struct _s543 { constexpr static const char* value = "GetSearch"; };
struct _s544 { constexpr static const char* value = "GetSplit"; };
struct _s545 { constexpr static const char* value = "GetToPrimitive"; };
struct _s546 { constexpr static const char* value = "GetToStringTag"; };
struct _s547 { constexpr static const char* value = "GetUnscopables"; };
struct _s548 { constexpr static const char* value = "NewFromUnsigned"; };
struct _s549 { constexpr static const char* value = "NewFromWords"; };
struct _s550 { constexpr static const char* value = "sign_bit"; };
struct _s551 { constexpr static const char* value = "word_count"; };
struct _s552 { constexpr static const char* value = "words"; };
struct _s553 { constexpr static const char* value = "Uint64Value"; };
struct _s554 { constexpr static const char* value = "lossless"; };
struct _s555 { constexpr static const char* value = "Int64Value"; };
struct _s556 { constexpr static const char* value = "WordCount"; };
struct _s557 { constexpr static const char* value = "ToWordsArray"; };
struct _s558 { constexpr static const char* value = "PropertyAttribute"; };
struct _s559 { constexpr static const char* value = "None"; };
struct _s560 { constexpr static const char* value = "ReadOnly"; };
struct _s561 { constexpr static const char* value = "DontEnum"; };
struct _s562 { constexpr static const char* value = "DontDelete"; };
struct _s563 { constexpr static const char* value = "AccessorGetterCallback"; };
struct _s564 { constexpr static const char* value = "AccessorNameGetterCallback"; };
struct _s565 { constexpr static const char* value = "AccessorSetterCallback"; };
struct _s566 { constexpr static const char* value = "AccessorNameSetterCallback"; };
struct _s567 { constexpr static const char* value = "AccessControl"; };
struct _s568 { constexpr static const char* value = "DEFAULT"; };
struct _s569 { constexpr static const char* value = "ALL_CAN_READ"; };
struct _s570 { constexpr static const char* value = "ALL_CAN_WRITE"; };
struct _s571 { constexpr static const char* value = "PROHIBITS_OVERWRITING"; };
struct _s572 { constexpr static const char* value = "PropertyFilter"; };
struct _s573 { constexpr static const char* value = "ALL_PROPERTIES"; };
struct _s574 { constexpr static const char* value = "ONLY_WRITABLE"; };
struct _s575 { constexpr static const char* value = "ONLY_ENUMERABLE"; };
struct _s576 { constexpr static const char* value = "ONLY_CONFIGURABLE"; };
struct _s577 { constexpr static const char* value = "SKIP_STRINGS"; };
struct _s578 { constexpr static const char* value = "SKIP_SYMBOLS"; };
struct _s579 { constexpr static const char* value = "SideEffectType"; };
struct _s580 { constexpr static const char* value = "kHasSideEffect"; };
struct _s581 { constexpr static const char* value = "kHasNoSideEffect"; };
struct _s582 { constexpr static const char* value = "kHasSideEffectToReceiver"; };
struct _s583 { constexpr static const char* value = "KeyCollectionMode"; };
struct _s584 { constexpr static const char* value = "kOwnOnly"; };
struct _s585 { constexpr static const char* value = "kIncludePrototypes"; };
struct _s586 { constexpr static const char* value = "IndexFilter"; };
struct _s587 { constexpr static const char* value = "kIncludeIndices"; };
struct _s588 { constexpr static const char* value = "kSkipIndices"; };
struct _s589 { constexpr static const char* value = "KeyConversionMode"; };
struct _s590 { constexpr static const char* value = "kConvertToString"; };
struct _s591 { constexpr static const char* value = "kKeepNumbers"; };
struct _s592 { constexpr static const char* value = "IntegrityLevel"; };
struct _s593 { constexpr static const char* value = "kFrozen"; };
struct _s594 { constexpr static const char* value = "kSealed"; };
struct _s595 { constexpr static const char* value = "key"; };
struct _s596 { constexpr static const char* value = "CreateDataProperty"; };
struct _s597 { constexpr static const char* value = "DefineOwnProperty"; };
struct _s598 { constexpr static const char* value = "attributes"; };
struct _s599 { constexpr static const char* value = "DefineProperty"; };
struct _s600 { constexpr static const char* value = "descriptor"; };
struct _s601 { constexpr static const char* value = "GetPropertyAttributes"; };
struct _s602 { constexpr static const char* value = "GetOwnPropertyDescriptor"; };
struct _s603 { constexpr static const char* value = "Has"; };
struct _s604 { constexpr static const char* value = "Delete"; };
struct _s605 { constexpr static const char* value = "SetAccessor"; };
struct _s606 { constexpr static const char* value = "getter"; };
struct _s607 { constexpr static const char* value = "setter"; };
struct _s608 { constexpr static const char* value = "settings"; };
struct _s609 { constexpr static const char* value = "attribute"; };
struct _s610 { constexpr static const char* value = "getter_side_effect_type"; };
struct _s611 { constexpr static const char* value = "setter_side_effect_type"; };
struct _s612 { constexpr static const char* value = "SetAccessorProperty"; };
struct _s613 { constexpr static const char* value = "SetNativeDataProperty"; };
struct _s614 { constexpr static const char* value = "SetLazyDataProperty"; };
struct _s615 { constexpr static const char* value = "HasPrivate"; };
struct _s616 { constexpr static const char* value = "SetPrivate"; };
struct _s617 { constexpr static const char* value = "DeletePrivate"; };
struct _s618 { constexpr static const char* value = "GetPrivate"; };
struct _s619 { constexpr static const char* value = "GetPropertyNames"; };
struct _s620 { constexpr static const char* value = "property_filter"; };
struct _s621 { constexpr static const char* value = "index_filter"; };
struct _s622 { constexpr static const char* value = "key_conversion"; };
struct _s623 { constexpr static const char* value = "GetOwnPropertyNames"; };
struct _s624 { constexpr static const char* value = "filter"; };
struct _s625 { constexpr static const char* value = "GetPrototype"; };
struct _s626 { constexpr static const char* value = "SetPrototype"; };
struct _s627 { constexpr static const char* value = "prototype"; };
struct _s628 { constexpr static const char* value = "FindInstanceInPrototypeChain"; };
struct _s629 { constexpr static const char* value = "tmpl"; };
struct _s630 { constexpr static const char* value = "ObjectProtoToString"; };
struct _s631 { constexpr static const char* value = "GetConstructorName"; };
struct _s632 { constexpr static const char* value = "SetIntegrityLevel"; };
struct _s633 { constexpr static const char* value = "level"; };
struct _s634 { constexpr static const char* value = "InternalFieldCount"; };
struct _s635 { constexpr static const char* value = "SetInternalField"; };
struct _s636 { constexpr static const char* value = "GetAlignedPointerFromInternalField"; };
struct _s637 { constexpr static const char* value = "SetAlignedPointerInInternalField"; };
struct _s638 { constexpr static const char* value = "SetAlignedPointerInInternalFields"; };
struct _s639 { constexpr static const char* value = "argc"; };
struct _s640 { constexpr static const char* value = "indices"; };
struct _s641 { constexpr static const char* value = "values"; };
struct _s642 { constexpr static const char* value = "HasOwnProperty"; };
struct _s643 { constexpr static const char* value = "HasRealNamedProperty"; };
struct _s644 { constexpr static const char* value = "HasRealIndexedProperty"; };
struct _s645 { constexpr static const char* value = "HasRealNamedCallbackProperty"; };
struct _s646 { constexpr static const char* value = "GetRealNamedPropertyInPrototypeChain"; };
struct _s647 { constexpr static const char* value = "GetRealNamedPropertyAttributesInPrototypeChain"; };
struct _s648 { constexpr static const char* value = "GetRealNamedProperty"; };
struct _s649 { constexpr static const char* value = "GetRealNamedPropertyAttributes"; };
struct _s650 { constexpr static const char* value = "HasNamedLookupInterceptor"; };
struct _s651 { constexpr static const char* value = "HasIndexedLookupInterceptor"; };
struct _s652 { constexpr static const char* value = "Clone"; };
struct _s653 { constexpr static const char* value = "CreationContext"; };
struct _s654 { constexpr static const char* value = "IsCallable"; };
struct _s655 { constexpr static const char* value = "CallAsFunction"; };
struct _s656 { constexpr static const char* value = "recv"; };
struct _s657 { constexpr static const char* value = "argv"; };
struct _s658 { constexpr static const char* value = "CallAsConstructor"; };
struct _s659 { constexpr static const char* value = "PreviewEntries"; };
struct _s660 { constexpr static const char* value = "is_key_value"; };
struct _s661 { constexpr static const char* value = "prototype_or_null"; };
struct _s662 { constexpr static const char* value = "names"; };
struct _s663 { constexpr static const char* value = "elements"; };
struct _s664 { constexpr static const char* value = "Map"; };
struct _s665 { constexpr static const char* value = "Size"; };
struct _s666 { constexpr static const char* value = "AsArray"; };
struct _s667 { constexpr static const char* value = "Add"; };
struct _s668 { constexpr static const char* value = "ReturnValue<T>"; };
struct _s669 { constexpr static const char* value = "SetNull"; };
struct _s670 { constexpr static const char* value = "SetUndefined"; };
struct _s671 { constexpr static const char* value = "SetEmptyString"; };
struct _s672 { constexpr static const char* value = "whatever"; };
struct _s673 { constexpr static const char* value = "operator[]"; };
struct _s674 { constexpr static const char* value = "This"; };
struct _s675 { constexpr static const char* value = "Holder"; };
struct _s676 { constexpr static const char* value = "NewTarget"; };
struct _s677 { constexpr static const char* value = "IsConstructCall"; };
struct _s678 { constexpr static const char* value = "GetReturnValue"; };
struct _s679 { constexpr static const char* value = "kArgsLength"; };
struct _s680 { constexpr static const char* value = "kHolderIndex"; };
struct _s681 { constexpr static const char* value = "kIsolateIndex"; };
struct _s682 { constexpr static const char* value = "kReturnValueDefaultValueIndex"; };
struct _s683 { constexpr static const char* value = "kReturnValueIndex"; };
struct _s684 { constexpr static const char* value = "kDataIndex"; };
struct _s685 { constexpr static const char* value = "kNewTargetIndex"; };
struct _s686 { constexpr static const char* value = "implicit_args"; };
struct _s687 { constexpr static const char* value = "implicit_args_"; };
struct _s688 { constexpr static const char* value = "values_"; };
struct _s689 { constexpr static const char* value = "length_"; };
struct _s690 { constexpr static const char* value = "ShouldThrowOnError"; };
struct _s691 { constexpr static const char* value = "kShouldThrowOnErrorIndex"; };
struct _s692 { constexpr static const char* value = "kThisIndex"; };
struct _s693 { constexpr static const char* value = "args"; };
struct _s694 { constexpr static const char* value = "args_"; };
struct _s695 { constexpr static const char* value = "FunctionCallback"; };
struct _s696 { constexpr static const char* value = "ConstructorBehavior"; };
struct _s697 { constexpr static const char* value = "kThrow"; };
struct _s698 { constexpr static const char* value = "kAllow"; };
struct _s699 { constexpr static const char* value = "behavior"; };
struct _s700 { constexpr static const char* value = "side_effect_type"; };
struct _s701 { constexpr static const char* value = "NewInstance"; };
struct _s702 { constexpr static const char* value = "NewInstanceWithSideEffectType"; };
struct _s703 { constexpr static const char* value = "Call"; };
struct _s704 { constexpr static const char* value = "SetName"; };
struct _s705 { constexpr static const char* value = "GetName"; };
struct _s706 { constexpr static const char* value = "GetInferredName"; };
struct _s707 { constexpr static const char* value = "GetDebugName"; };
struct _s708 { constexpr static const char* value = "GetDisplayName"; };
struct _s709 { constexpr static const char* value = "GetScriptLineNumber"; };
struct _s710 { constexpr static const char* value = "GetScriptColumnNumber"; };
struct _s711 { constexpr static const char* value = "ScriptId"; };
struct _s712 { constexpr static const char* value = "GetBoundFunction"; };
struct _s713 { constexpr static const char* value = "kLineOffsetNotFound"; };
struct _s714 { constexpr static const char* value = "PromiseState"; };
struct _s715 { constexpr static const char* value = "kPending"; };
struct _s716 { constexpr static const char* value = "kFulfilled"; };
struct _s717 { constexpr static const char* value = "kRejected"; };
struct _s718 { constexpr static const char* value = "Resolver"; };
struct _s719 { constexpr static const char* value = "GetPromise"; };
struct _s720 { constexpr static const char* value = "Resolve"; };
struct _s721 { constexpr static const char* value = "Reject"; };
struct _s722 { constexpr static const char* value = "Catch"; };
struct _s723 { constexpr static const char* value = "handler"; };
struct _s724 { constexpr static const char* value = "Then"; };
struct _s725 { constexpr static const char* value = "on_fulfilled"; };
struct _s726 { constexpr static const char* value = "on_rejected"; };
struct _s727 { constexpr static const char* value = "HasHandler"; };
struct _s728 { constexpr static const char* value = "Result"; };
struct _s729 { constexpr static const char* value = "State"; };
struct _s730 { constexpr static const char* value = "MarkAsHandled"; };
struct _s731 { constexpr static const char* value = "kEmbedderFieldCount"; };
struct _s732 { constexpr static const char* value = "writable"; };
struct _s733 { constexpr static const char* value = "get"; };
struct _s734 { constexpr static const char* value = "set"; };
struct _s735 { constexpr static const char* value = "has_value"; };
struct _s736 { constexpr static const char* value = "has_get"; };
struct _s737 { constexpr static const char* value = "has_set"; };
struct _s738 { constexpr static const char* value = "set_enumerable"; };
struct _s739 { constexpr static const char* value = "enumerable"; };
struct _s740 { constexpr static const char* value = "has_enumerable"; };
struct _s741 { constexpr static const char* value = "set_configurable"; };
struct _s742 { constexpr static const char* value = "configurable"; };
struct _s743 { constexpr static const char* value = "has_configurable"; };
struct _s744 { constexpr static const char* value = "has_writable"; };
struct _s745 { constexpr static const char* value = "PrivateData"; };
struct _s746 { constexpr static const char* value = "get_private"; };
struct _s747 { constexpr static const char* value = "GetTarget"; };
struct _s748 { constexpr static const char* value = "GetHandler"; };
struct _s749 { constexpr static const char* value = "IsRevoked"; };
struct _s750 { constexpr static const char* value = "Revoke"; };
struct _s751 { constexpr static const char* value = "local_target"; };
struct _s752 { constexpr static const char* value = "local_handler"; };
struct _s753 { constexpr static const char* value = "MemorySpan"; };
struct _s754 { constexpr static const char* value = "OwnedBuffer"; };
struct _s755 { constexpr static const char* value = "CompiledWasmModule"; };
struct _s756 { constexpr static const char* value = "Serialize"; };
struct _s757 { constexpr static const char* value = "GetWireBytesRef"; };
struct _s758 { constexpr static const char* value = "TransferrableModule"; };
struct _s759 { constexpr static const char* value = "GetTransferrableModule"; };
struct _s760 { constexpr static const char* value = "FromTransferrableModule"; };
struct _s761 { constexpr static const char* value = "GetCompiledModule"; };
struct _s762 { constexpr static const char* value = "DeserializeOrCompile"; };
struct _s763 { constexpr static const char* value = "serialized_module"; };
struct _s764 { constexpr static const char* value = "wire_bytes"; };
struct _s765 { constexpr static const char* value = "WasmStreaming"; };
struct _s766 { constexpr static const char* value = "WasmStreamingImpl"; };
struct _s767 { constexpr static const char* value = "Client"; };
struct _s768 { constexpr static const char* value = "OnModuleCompiled"; };
struct _s769 { constexpr static const char* value = "compiled_module"; };
struct _s770 { constexpr static const char* value = "OnBytesReceived"; };
struct _s771 { constexpr static const char* value = "bytes"; };
struct _s772 { constexpr static const char* value = "Finish"; };
struct _s773 { constexpr static const char* value = "Abort"; };
struct _s774 { constexpr static const char* value = "exception"; };
struct _s775 { constexpr static const char* value = "SetCompiledModuleBytes"; };
struct _s776 { constexpr static const char* value = "SetClient"; };
struct _s777 { constexpr static const char* value = "client"; };
struct _s778 { constexpr static const char* value = "shared_ptr"; };
struct _s779 { constexpr static const char* value = "Unpack"; };
struct _s780 { constexpr static const char* value = "WasmModuleObjectBuilderStreaming"; };
struct _s781 { constexpr static const char* value = "ArrayBufferCreationMode"; };
struct _s782 { constexpr static const char* value = "kExternalized"; };
struct _s783 { constexpr static const char* value = "Allocator"; };
struct _s784 { constexpr static const char* value = "Allocate"; };
struct _s785 { constexpr static const char* value = "AllocateUninitialized"; };
struct _s786 { constexpr static const char* value = "Free"; };
struct _s787 { constexpr static const char* value = "AllocationMode"; };
struct _s788 { constexpr static const char* value = "kReservation"; };
struct _s789 { constexpr static const char* value = "NewDefaultAllocator"; };
struct _s790 { constexpr static const char* value = "Contents"; };
struct _s791 { constexpr static const char* value = "DeleterCallback"; };
struct _s792 { constexpr static const char* value = "AllocationBase"; };
struct _s793 { constexpr static const char* value = "AllocationLength"; };
struct _s794 { constexpr static const char* value = "ByteLength"; };
struct _s795 { constexpr static const char* value = "Deleter"; };
struct _s796 { constexpr static const char* value = "DeleterData"; };
struct _s797 { constexpr static const char* value = "byte_length"; };
struct _s798 { constexpr static const char* value = "IsDetachable"; };
struct _s799 { constexpr static const char* value = "IsNeuterable"; };
struct _s800 { constexpr static const char* value = "Detach"; };
struct _s801 { constexpr static const char* value = "Neuter"; };
struct _s802 { constexpr static const char* value = "Externalize"; };
struct _s803 { constexpr static const char* value = "GetContents"; };
struct _s804 { constexpr static const char* value = "kInternalFieldCount"; };
struct _s805 { constexpr static const char* value = "ArrayBufferView"; };
struct _s806 { constexpr static const char* value = "Buffer"; };
struct _s807 { constexpr static const char* value = "ByteOffset"; };
struct _s808 { constexpr static const char* value = "CopyContents"; };
struct _s809 { constexpr static const char* value = "HasBuffer"; };
struct _s810 { constexpr static const char* value = "TypedArray"; };
struct _s811 { constexpr static const char* value = "Uint8Array"; };
struct _s812 { constexpr static const char* value = "byte_offset"; };
struct _s813 { constexpr static const char* value = "Uint8ClampedArray"; };
struct _s814 { constexpr static const char* value = "Int8Array"; };
struct _s815 { constexpr static const char* value = "Uint16Array"; };
struct _s816 { constexpr static const char* value = "Int16Array"; };
struct _s817 { constexpr static const char* value = "Uint32Array"; };
struct _s818 { constexpr static const char* value = "Int32Array"; };
struct _s819 { constexpr static const char* value = "Float32Array"; };
struct _s820 { constexpr static const char* value = "Float64Array"; };
struct _s821 { constexpr static const char* value = "BigInt64Array"; };
struct _s822 { constexpr static const char* value = "BigUint64Array"; };
struct _s823 { constexpr static const char* value = "DataView"; };
struct _s824 { constexpr static const char* value = "time"; };
struct _s825 { constexpr static const char* value = "ValueOf"; };
struct _s826 { constexpr static const char* value = "RegExp"; };
struct _s827 { constexpr static const char* value = "kNone"; };
struct _s828 { constexpr static const char* value = "kGlobal"; };
struct _s829 { constexpr static const char* value = "kIgnoreCase"; };
struct _s830 { constexpr static const char* value = "kMultiline"; };
struct _s831 { constexpr static const char* value = "kSticky"; };
struct _s832 { constexpr static const char* value = "kUnicode"; };
struct _s833 { constexpr static const char* value = "kDotAll"; };
struct _s834 { constexpr static const char* value = "pattern"; };
struct _s835 { constexpr static const char* value = "GetSource"; };
struct _s836 { constexpr static const char* value = "GetFlags"; };
struct _s837 { constexpr static const char* value = "Intrinsic"; };
struct _s838 { constexpr static const char* value = "kArrayProto_entries"; };
struct _s839 { constexpr static const char* value = "kArrayProto_forEach"; };
struct _s840 { constexpr static const char* value = "kArrayProto_keys"; };
struct _s841 { constexpr static const char* value = "kArrayProto_values"; };
struct _s842 { constexpr static const char* value = "kErrorPrototype"; };
struct _s843 { constexpr static const char* value = "kIteratorPrototype"; };
struct _s844 { constexpr static const char* value = "Template"; };
struct _s845 { constexpr static const char* value = "signature"; };
struct _s846 { constexpr static const char* value = "SetIntrinsicDataProperty"; };
struct _s847 { constexpr static const char* value = "intrinsic"; };
struct _s848 { constexpr static const char* value = "GenericNamedPropertyGetterCallback"; };
struct _s849 { constexpr static const char* value = "GenericNamedPropertySetterCallback"; };
struct _s850 { constexpr static const char* value = "GenericNamedPropertyQueryCallback"; };
struct _s851 { constexpr static const char* value = "GenericNamedPropertyDeleterCallback"; };
struct _s852 { constexpr static const char* value = "GenericNamedPropertyEnumeratorCallback"; };
struct _s853 { constexpr static const char* value = "GenericNamedPropertyDefinerCallback"; };
struct _s854 { constexpr static const char* value = "GenericNamedPropertyDescriptorCallback"; };
struct _s855 { constexpr static const char* value = "IndexedPropertyGetterCallback"; };
struct _s856 { constexpr static const char* value = "IndexedPropertySetterCallback"; };
struct _s857 { constexpr static const char* value = "IndexedPropertyQueryCallback"; };
struct _s858 { constexpr static const char* value = "IndexedPropertyDeleterCallback"; };
struct _s859 { constexpr static const char* value = "IndexedPropertyEnumeratorCallback"; };
struct _s860 { constexpr static const char* value = "IndexedPropertyDefinerCallback"; };
struct _s861 { constexpr static const char* value = "IndexedPropertyDescriptorCallback"; };
struct _s862 { constexpr static const char* value = "AccessType"; };
struct _s863 { constexpr static const char* value = "ACCESS_GET"; };
struct _s864 { constexpr static const char* value = "ACCESS_SET"; };
struct _s865 { constexpr static const char* value = "ACCESS_HAS"; };
struct _s866 { constexpr static const char* value = "ACCESS_DELETE"; };
struct _s867 { constexpr static const char* value = "ACCESS_KEYS"; };
struct _s868 { constexpr static const char* value = "AccessCheckCallback"; };
struct _s869 { constexpr static const char* value = "FromSnapshot"; };
struct _s870 { constexpr static const char* value = "NewWithCache"; };
struct _s871 { constexpr static const char* value = "cache_property"; };
struct _s872 { constexpr static const char* value = "GetFunction"; };
struct _s873 { constexpr static const char* value = "NewRemoteInstance"; };
struct _s874 { constexpr static const char* value = "SetCallHandler"; };
struct _s875 { constexpr static const char* value = "SetLength"; };
struct _s876 { constexpr static const char* value = "InstanceTemplate"; };
struct _s877 { constexpr static const char* value = "Inherit"; };
struct _s878 { constexpr static const char* value = "parent"; };
struct _s879 { constexpr static const char* value = "PrototypeTemplate"; };
struct _s880 { constexpr static const char* value = "SetPrototypeProviderTemplate"; };
struct _s881 { constexpr static const char* value = "prototype_provider"; };
struct _s882 { constexpr static const char* value = "SetClassName"; };
struct _s883 { constexpr static const char* value = "SetAcceptAnyReceiver"; };
struct _s884 { constexpr static const char* value = "ReadOnlyPrototype"; };
struct _s885 { constexpr static const char* value = "RemovePrototype"; };
struct _s886 { constexpr static const char* value = "HasInstance"; };
struct _s887 { constexpr static const char* value = "PropertyHandlerFlags"; };
struct _s888 { constexpr static const char* value = "kAllCanRead"; };
struct _s889 { constexpr static const char* value = "kNonMasking"; };
struct _s890 { constexpr static const char* value = "kOnlyInterceptStrings"; };
struct _s891 { constexpr static const char* value = "NamedPropertyHandlerConfiguration"; };
struct _s892 { constexpr static const char* value = "query"; };
struct _s893 { constexpr static const char* value = "deleter"; };
struct _s894 { constexpr static const char* value = "enumerator"; };
struct _s895 { constexpr static const char* value = "definer"; };
struct _s896 { constexpr static const char* value = "IndexedPropertyHandlerConfiguration"; };
struct _s897 { constexpr static const char* value = "constructor"; };
struct _s898 { constexpr static const char* value = "SetHandler"; };
struct _s899 { constexpr static const char* value = "configuration"; };
struct _s900 { constexpr static const char* value = "SetIndexedPropertyHandler"; };
struct _s901 { constexpr static const char* value = "SetCallAsFunctionHandler"; };
struct _s902 { constexpr static const char* value = "MarkAsUndetectable"; };
struct _s903 { constexpr static const char* value = "SetAccessCheckCallback"; };
struct _s904 { constexpr static const char* value = "SetAccessCheckCallbackAndHandler"; };
struct _s905 { constexpr static const char* value = "named_handler"; };
struct _s906 { constexpr static const char* value = "indexed_handler"; };
struct _s907 { constexpr static const char* value = "SetInternalFieldCount"; };
struct _s908 { constexpr static const char* value = "IsImmutableProto"; };
struct _s909 { constexpr static const char* value = "SetImmutableProto"; };
struct _s910 { constexpr static const char* value = "receiver"; };
struct _s911 { constexpr static const char* value = "Extension"; };
struct _s912 { constexpr static const char* value = "dep_count"; };
struct _s913 { constexpr static const char* value = "deps"; };
struct _s914 { constexpr static const char* value = "source_length"; };
struct _s915 { constexpr static const char* value = "GetNativeFunctionTemplate"; };
struct _s916 { constexpr static const char* value = "dependency_count"; };
struct _s917 { constexpr static const char* value = "dependencies"; };
struct _s918 { constexpr static const char* value = "set_auto_enable"; };
struct _s919 { constexpr static const char* value = "auto_enable"; };
struct _s920 { constexpr static const char* value = "RegisterExtension"; };
struct _s921 { constexpr static const char* value = "Undefined"; };
struct _s922 { constexpr static const char* value = "Null"; };
struct _s923 { constexpr static const char* value = "True"; };
struct _s924 { constexpr static const char* value = "False"; };
struct _s925 { constexpr static const char* value = "ResourceConstraints"; };
struct _s926 { constexpr static const char* value = "ConfigureDefaultsFromHeapSize"; };
struct _s927 { constexpr static const char* value = "initial_heap_size_in_bytes"; };
struct _s928 { constexpr static const char* value = "maximum_heap_size_in_bytes"; };
struct _s929 { constexpr static const char* value = "ConfigureDefaults"; };
struct _s930 { constexpr static const char* value = "physical_memory"; };
struct _s931 { constexpr static const char* value = "virtual_memory_limit"; };
struct _s932 { constexpr static const char* value = "stack_limit"; };
struct _s933 { constexpr static const char* value = "set_stack_limit"; };
struct _s934 { constexpr static const char* value = "code_range_size_in_bytes"; };
struct _s935 { constexpr static const char* value = "set_code_range_size_in_bytes"; };
struct _s936 { constexpr static const char* value = "limit"; };
struct _s937 { constexpr static const char* value = "max_old_generation_size_in_bytes"; };
struct _s938 { constexpr static const char* value = "set_max_old_generation_size_in_bytes"; };
struct _s939 { constexpr static const char* value = "max_young_generation_size_in_bytes"; };
struct _s940 { constexpr static const char* value = "set_max_young_generation_size_in_bytes"; };
struct _s941 { constexpr static const char* value = "initial_old_generation_size_in_bytes"; };
struct _s942 { constexpr static const char* value = "set_initial_old_generation_size_in_bytes"; };
struct _s943 { constexpr static const char* value = "initial_size"; };
struct _s944 { constexpr static const char* value = "initial_young_generation_size_in_bytes"; };
struct _s945 { constexpr static const char* value = "set_initial_young_generation_size_in_bytes"; };
struct _s946 { constexpr static const char* value = "code_range_size"; };
struct _s947 { constexpr static const char* value = "set_code_range_size"; };
struct _s948 { constexpr static const char* value = "limit_in_mb"; };
struct _s949 { constexpr static const char* value = "max_semi_space_size_in_kb"; };
struct _s950 { constexpr static const char* value = "set_max_semi_space_size_in_kb"; };
struct _s951 { constexpr static const char* value = "limit_in_kb"; };
struct _s952 { constexpr static const char* value = "max_old_space_size"; };
struct _s953 { constexpr static const char* value = "set_max_old_space_size"; };
struct _s954 { constexpr static const char* value = "max_zone_pool_size"; };
struct _s955 { constexpr static const char* value = "set_max_zone_pool_size"; };
struct _s956 { constexpr static const char* value = "FatalErrorCallback"; };
struct _s957 { constexpr static const char* value = "OOMErrorCallback"; };
struct _s958 { constexpr static const char* value = "DcheckErrorCallback"; };
struct _s959 { constexpr static const char* value = "MessageCallback"; };
struct _s960 { constexpr static const char* value = "LogEventCallback"; };
struct _s961 { constexpr static const char* value = "Exception"; };
struct _s962 { constexpr static const char* value = "RangeError"; };
struct _s963 { constexpr static const char* value = "ReferenceError"; };
struct _s964 { constexpr static const char* value = "SyntaxError"; };
struct _s965 { constexpr static const char* value = "TypeError"; };
struct _s966 { constexpr static const char* value = "Error"; };
struct _s967 { constexpr static const char* value = "CreateMessage"; };
struct _s968 { constexpr static const char* value = "CounterLookupCallback"; };
struct _s969 { constexpr static const char* value = "CreateHistogramCallback"; };
struct _s970 { constexpr static const char* value = "AddHistogramSampleCallback"; };
struct _s971 { constexpr static const char* value = "BeforeCallEnteredCallback"; };
struct _s972 { constexpr static const char* value = "CallCompletedCallback"; };
struct _s973 { constexpr static const char* value = "HostImportModuleDynamicallyCallback"; };
struct _s974 { constexpr static const char* value = "HostInitializeImportMetaObjectCallback"; };
struct _s975 { constexpr static const char* value = "PrepareStackTraceCallback"; };
struct _s976 { constexpr static const char* value = "PromiseHookType"; };
struct _s977 { constexpr static const char* value = "kInit"; };
struct _s978 { constexpr static const char* value = "kResolve"; };
struct _s979 { constexpr static const char* value = "kBefore"; };
struct _s980 { constexpr static const char* value = "kAfter"; };
struct _s981 { constexpr static const char* value = "PromiseHook"; };
struct _s982 { constexpr static const char* value = "PromiseRejectEvent"; };
struct _s983 { constexpr static const char* value = "kPromiseRejectWithNoHandler"; };
struct _s984 { constexpr static const char* value = "kPromiseHandlerAddedAfterReject"; };
struct _s985 { constexpr static const char* value = "kPromiseRejectAfterResolved"; };
struct _s986 { constexpr static const char* value = "kPromiseResolveAfterResolved"; };
struct _s987 { constexpr static const char* value = "PromiseRejectMessage"; };
struct _s988 { constexpr static const char* value = "promise"; };
struct _s989 { constexpr static const char* value = "event"; };
struct _s990 { constexpr static const char* value = "GetEvent"; };
struct _s991 { constexpr static const char* value = "GetValue"; };
struct _s992 { constexpr static const char* value = "PromiseRejectCallback"; };
struct _s993 { constexpr static const char* value = "MicrotasksCompletedCallback"; };
struct _s994 { constexpr static const char* value = "MicrotasksCompletedCallbackWithData"; };
struct _s995 { constexpr static const char* value = "MicrotaskCallback"; };
struct _s996 { constexpr static const char* value = "MicrotasksPolicy"; };
struct _s997 { constexpr static const char* value = "kExplicit"; };
struct _s998 { constexpr static const char* value = "kScoped"; };
struct _s999 { constexpr static const char* value = "kAuto"; };
struct _s1000 { constexpr static const char* value = "policy"; };
struct _s1001 { constexpr static const char* value = "EnqueueMicrotask"; };
struct _s1002 { constexpr static const char* value = "microtask"; };
struct _s1003 { constexpr static const char* value = "AddMicrotasksCompletedCallback"; };
struct _s1004 { constexpr static const char* value = "RemoveMicrotasksCompletedCallback"; };
struct _s1005 { constexpr static const char* value = "PerformCheckpoint"; };
struct _s1006 { constexpr static const char* value = "IsRunningMicrotasks"; };
struct _s1007 { constexpr static const char* value = "GetMicrotasksScopeDepth"; };
struct _s1008 { constexpr static const char* value = "MicrotasksScope"; };
struct _s1009 { constexpr static const char* value = "Type"; };
struct _s1010 { constexpr static const char* value = "kRunMicrotasks"; };
struct _s1011 { constexpr static const char* value = "kDoNotRunMicrotasks"; };
struct _s1012 { constexpr static const char* value = "microtask_queue"; };
struct _s1013 { constexpr static const char* value = "GetCurrentDepth"; };
struct _s1014 { constexpr static const char* value = "FailedAccessCheckCallback"; };
struct _s1015 { constexpr static const char* value = "AllowCodeGenerationFromStringsCallback"; };
struct _s1016 { constexpr static const char* value = "ExtensionCallback"; };
struct _s1017 { constexpr static const char* value = "AllowWasmCodeGenerationCallback"; };
struct _s1018 { constexpr static const char* value = "ApiImplementationCallback"; };
struct _s1019 { constexpr static const char* value = "WasmStreamingCallback"; };
struct _s1020 { constexpr static const char* value = "WasmThreadsEnabledCallback"; };
struct _s1021 { constexpr static const char* value = "GCType"; };
struct _s1022 { constexpr static const char* value = "kGCTypeScavenge"; };
struct _s1023 { constexpr static const char* value = "kGCTypeMarkSweepCompact"; };
struct _s1024 { constexpr static const char* value = "kGCTypeIncrementalMarking"; };
struct _s1025 { constexpr static const char* value = "kGCTypeProcessWeakCallbacks"; };
struct _s1026 { constexpr static const char* value = "kGCTypeAll"; };
struct _s1027 { constexpr static const char* value = "GCCallbackFlags"; };
struct _s1028 { constexpr static const char* value = "kNoGCCallbackFlags"; };
struct _s1029 { constexpr static const char* value = "kGCCallbackFlagConstructRetainedObjectInfos"; };
struct _s1030 { constexpr static const char* value = "kGCCallbackFlagForced"; };
struct _s1031 { constexpr static const char* value = "kGCCallbackFlagSynchronousPhantomCallbackProcessing"; };
struct _s1032 { constexpr static const char* value = "kGCCallbackFlagCollectAllAvailableGarbage"; };
struct _s1033 { constexpr static const char* value = "kGCCallbackFlagCollectAllExternalMemory"; };
struct _s1034 { constexpr static const char* value = "kGCCallbackScheduleIdleGarbageCollection"; };
struct _s1035 { constexpr static const char* value = "GCCallback"; };
struct _s1036 { constexpr static const char* value = "InterruptCallback"; };
struct _s1037 { constexpr static const char* value = "NearHeapLimitCallback"; };
struct _s1038 { constexpr static const char* value = "HeapStatistics"; };
struct _s1039 { constexpr static const char* value = "total_heap_size"; };
struct _s1040 { constexpr static const char* value = "total_heap_size_executable"; };
struct _s1041 { constexpr static const char* value = "total_physical_size"; };
struct _s1042 { constexpr static const char* value = "total_available_size"; };
struct _s1043 { constexpr static const char* value = "used_heap_size"; };
struct _s1044 { constexpr static const char* value = "heap_size_limit"; };
struct _s1045 { constexpr static const char* value = "malloced_memory"; };
struct _s1046 { constexpr static const char* value = "external_memory"; };
struct _s1047 { constexpr static const char* value = "peak_malloced_memory"; };
struct _s1048 { constexpr static const char* value = "number_of_native_contexts"; };
struct _s1049 { constexpr static const char* value = "number_of_detached_contexts"; };
struct _s1050 { constexpr static const char* value = "does_zap_garbage"; };
struct _s1051 { constexpr static const char* value = "HeapSpaceStatistics"; };
struct _s1052 { constexpr static const char* value = "space_name"; };
struct _s1053 { constexpr static const char* value = "space_size"; };
struct _s1054 { constexpr static const char* value = "space_used_size"; };
struct _s1055 { constexpr static const char* value = "space_available_size"; };
struct _s1056 { constexpr static const char* value = "physical_space_size"; };
struct _s1057 { constexpr static const char* value = "HeapObjectStatistics"; };
struct _s1058 { constexpr static const char* value = "object_type"; };
struct _s1059 { constexpr static const char* value = "object_sub_type"; };
struct _s1060 { constexpr static const char* value = "object_count"; };
struct _s1061 { constexpr static const char* value = "object_size"; };
struct _s1062 { constexpr static const char* value = "HeapCodeStatistics"; };
struct _s1063 { constexpr static const char* value = "code_and_metadata_size"; };
struct _s1064 { constexpr static const char* value = "bytecode_and_metadata_size"; };
struct _s1065 { constexpr static const char* value = "external_script_source_size"; };
struct _s1066 { constexpr static const char* value = "JitCodeEvent"; };
struct _s1067 { constexpr static const char* value = "EventType"; };
struct _s1068 { constexpr static const char* value = "CODE_ADDED"; };
struct _s1069 { constexpr static const char* value = "CODE_MOVED"; };
struct _s1070 { constexpr static const char* value = "CODE_REMOVED"; };
struct _s1071 { constexpr static const char* value = "CODE_ADD_LINE_POS_INFO"; };
struct _s1072 { constexpr static const char* value = "CODE_START_LINE_INFO_RECORDING"; };
struct _s1073 { constexpr static const char* value = "CODE_END_LINE_INFO_RECORDING"; };
struct _s1074 { constexpr static const char* value = "PositionType"; };
struct _s1075 { constexpr static const char* value = "POSITION"; };
struct _s1076 { constexpr static const char* value = "STATEMENT_POSITION"; };
struct _s1077 { constexpr static const char* value = "CodeType"; };
struct _s1078 { constexpr static const char* value = "BYTE_CODE"; };
struct _s1079 { constexpr static const char* value = "JIT_CODE"; };
struct _s1080 { constexpr static const char* value = "code_type"; };
struct _s1081 { constexpr static const char* value = "code_start"; };
struct _s1082 { constexpr static const char* value = "code_len"; };
struct _s1083 { constexpr static const char* value = "script"; };
struct _s1084 { constexpr static const char* value = "user_data"; };
struct _s1085 { constexpr static const char* value = "name_t"; };
struct _s1086 { constexpr static const char* value = "len"; };
struct _s1087 { constexpr static const char* value = "line_info_t"; };
struct _s1088 { constexpr static const char* value = "offset"; };
struct _s1089 { constexpr static const char* value = "pos"; };
struct _s1090 { constexpr static const char* value = "position_type"; };
struct _s1091 { constexpr static const char* value = "line_info"; };
struct _s1092 { constexpr static const char* value = "new_code_start"; };
struct _s1093 { constexpr static const char* value = "RAILMode"; };
struct _s1094 { constexpr static const char* value = "PERFORMANCE_RESPONSE"; };
struct _s1095 { constexpr static const char* value = "PERFORMANCE_ANIMATION"; };
struct _s1096 { constexpr static const char* value = "PERFORMANCE_IDLE"; };
struct _s1097 { constexpr static const char* value = "PERFORMANCE_LOAD"; };
struct _s1098 { constexpr static const char* value = "JitCodeEventOptions"; };
struct _s1099 { constexpr static const char* value = "kJitCodeEventDefault"; };
struct _s1100 { constexpr static const char* value = "kJitCodeEventEnumExisting"; };
struct _s1101 { constexpr static const char* value = "JitCodeEventHandler"; };
struct _s1102 { constexpr static const char* value = "UnhandledExceptionCallback"; };
struct _s1103 { constexpr static const char* value = "_EXCEPTION_POINTERS"; };
struct _s1104 { constexpr static const char* value = "ExternalResourceVisitor"; };
struct _s1105 { constexpr static const char* value = "VisitExternalString"; };
struct _s1106 { constexpr static const char* value = "string"; };
struct _s1107 { constexpr static const char* value = "PersistentHandleVisitor"; };
struct _s1108 { constexpr static const char* value = "VisitPersistentHandle"; };
struct _s1109 { constexpr static const char* value = "MemoryPressureLevel"; };
struct _s1110 { constexpr static const char* value = "kModerate"; };
struct _s1111 { constexpr static const char* value = "kCritical"; };
struct _s1112 { constexpr static const char* value = "EmbedderHeapTracer"; };
struct _s1113 { constexpr static const char* value = "TraceFlags"; };
struct _s1114 { constexpr static const char* value = "kNoFlags"; };
struct _s1115 { constexpr static const char* value = "kReduceMemory"; };
struct _s1116 { constexpr static const char* value = "EmbedderStackState"; };
struct _s1117 { constexpr static const char* value = "kUnknown"; };
struct _s1118 { constexpr static const char* value = "kNonEmpty"; };
struct _s1119 { constexpr static const char* value = "kEmpty"; };
struct _s1120 { constexpr static const char* value = "TracedGlobalHandleVisitor"; };
struct _s1121 { constexpr static const char* value = "VisitTracedGlobalHandle"; };
struct _s1122 { constexpr static const char* value = "TraceSummary"; };
struct _s1123 { constexpr static const char* value = "allocated_size"; };
struct _s1124 { constexpr static const char* value = "IterateTracedGlobalHandles"; };
struct _s1125 { constexpr static const char* value = "visitor"; };
struct _s1126 { constexpr static const char* value = "RegisterV8References"; };
struct _s1127 { constexpr static const char* value = "vector"; };
struct _s1128 { constexpr static const char* value = "RegisterEmbedderReference"; };
struct _s1129 { constexpr static const char* value = "ref"; };
struct _s1130 { constexpr static const char* value = "TracePrologue"; };
struct _s1131 { constexpr static const char* value = "AdvanceTracing"; };
struct _s1132 { constexpr static const char* value = "deadline_in_ms"; };
struct _s1133 { constexpr static const char* value = "IsTracingDone"; };
struct _s1134 { constexpr static const char* value = "TraceEpilogue"; };
struct _s1135 { constexpr static const char* value = "trace_summary"; };
struct _s1136 { constexpr static const char* value = "EnterFinalPause"; };
struct _s1137 { constexpr static const char* value = "stack_state"; };
struct _s1138 { constexpr static const char* value = "FinalizeTracing"; };
struct _s1139 { constexpr static const char* value = "IsRootForNonTracingGC"; };
struct _s1140 { constexpr static const char* value = "GarbageCollectionForTesting"; };
struct _s1141 { constexpr static const char* value = "IncreaseAllocatedSize"; };
struct _s1142 { constexpr static const char* value = "DecreaseAllocatedSize"; };
struct _s1143 { constexpr static const char* value = "isolate_"; };
struct _s1144 { constexpr static const char* value = "SerializeInternalFieldsCallback"; };
struct _s1145 { constexpr static const char* value = "CallbackFunction"; };
struct _s1146 { constexpr static const char* value = "data_arg"; };
struct _s1147 { constexpr static const char* value = "SerializeEmbedderFieldsCallback"; };
struct _s1148 { constexpr static const char* value = "DeserializeInternalFieldsCallback"; };
struct _s1149 { constexpr static const char* value = "DeserializeEmbedderFieldsCallback"; };
struct _s1150 { constexpr static const char* value = "CreateParams"; };
struct _s1151 { constexpr static const char* value = "code_event_handler"; };
struct _s1152 { constexpr static const char* value = "constraints"; };
struct _s1153 { constexpr static const char* value = "snapshot_blob"; };
struct _s1154 { constexpr static const char* value = "counter_lookup_callback"; };
struct _s1155 { constexpr static const char* value = "create_histogram_callback"; };
struct _s1156 { constexpr static const char* value = "add_histogram_sample_callback"; };
struct _s1157 { constexpr static const char* value = "array_buffer_allocator"; };
struct _s1158 { constexpr static const char* value = "external_references"; };
struct _s1159 { constexpr static const char* value = "allow_atomics_wait"; };
struct _s1160 { constexpr static const char* value = "only_terminate_in_safe_scope"; };
struct _s1161 { constexpr static const char* value = "Scope"; };
struct _s1162 { constexpr static const char* value = "DisallowJavascriptExecutionScope"; };
struct _s1163 { constexpr static const char* value = "OnFailure"; };
struct _s1164 { constexpr static const char* value = "CRASH_ON_FAILURE"; };
struct _s1165 { constexpr static const char* value = "THROW_ON_FAILURE"; };
struct _s1166 { constexpr static const char* value = "DUMP_ON_FAILURE"; };
struct _s1167 { constexpr static const char* value = "on_failure"; };
struct _s1168 { constexpr static const char* value = "AllowJavascriptExecutionScope"; };
struct _s1169 { constexpr static const char* value = "SuppressMicrotaskExecutionScope"; };
struct _s1170 { constexpr static const char* value = "SafeForTerminationScope"; };
struct _s1171 { constexpr static const char* value = "GarbageCollectionType"; };
struct _s1172 { constexpr static const char* value = "kFullGarbageCollection"; };
struct _s1173 { constexpr static const char* value = "kMinorGarbageCollection"; };
struct _s1174 { constexpr static const char* value = "UseCounterFeature"; };
struct _s1175 { constexpr static const char* value = "kUseAsm"; };
struct _s1176 { constexpr static const char* value = "kBreakIterator"; };
struct _s1177 { constexpr static const char* value = "kLegacyConst"; };
struct _s1178 { constexpr static const char* value = "kMarkDequeOverflow"; };
struct _s1179 { constexpr static const char* value = "kStoreBufferOverflow"; };
struct _s1180 { constexpr static const char* value = "kSlotsBufferOverflow"; };
struct _s1181 { constexpr static const char* value = "kObjectObserve"; };
struct _s1182 { constexpr static const char* value = "kForcedGC"; };
struct _s1183 { constexpr static const char* value = "kSloppyMode"; };
struct _s1184 { constexpr static const char* value = "kStrictMode"; };
struct _s1185 { constexpr static const char* value = "kStrongMode"; };
struct _s1186 { constexpr static const char* value = "kRegExpPrototypeStickyGetter"; };
struct _s1187 { constexpr static const char* value = "kRegExpPrototypeToString"; };
struct _s1188 { constexpr static const char* value = "kRegExpPrototypeUnicodeGetter"; };
struct _s1189 { constexpr static const char* value = "kIntlV8Parse"; };
struct _s1190 { constexpr static const char* value = "kIntlPattern"; };
struct _s1191 { constexpr static const char* value = "kIntlResolved"; };
struct _s1192 { constexpr static const char* value = "kPromiseChain"; };
struct _s1193 { constexpr static const char* value = "kPromiseAccept"; };
struct _s1194 { constexpr static const char* value = "kPromiseDefer"; };
struct _s1195 { constexpr static const char* value = "kHtmlCommentInExternalScript"; };
struct _s1196 { constexpr static const char* value = "kHtmlComment"; };
struct _s1197 { constexpr static const char* value = "kSloppyModeBlockScopedFunctionRedefinition"; };
struct _s1198 { constexpr static const char* value = "kForInInitializer"; };
struct _s1199 { constexpr static const char* value = "kArrayProtectorDirtied"; };
struct _s1200 { constexpr static const char* value = "kArraySpeciesModified"; };
struct _s1201 { constexpr static const char* value = "kArrayPrototypeConstructorModified"; };
struct _s1202 { constexpr static const char* value = "kArrayInstanceProtoModified"; };
struct _s1203 { constexpr static const char* value = "kArrayInstanceConstructorModified"; };
struct _s1204 { constexpr static const char* value = "kLegacyFunctionDeclaration"; };
struct _s1205 { constexpr static const char* value = "kRegExpPrototypeSourceGetter"; };
struct _s1206 { constexpr static const char* value = "kRegExpPrototypeOldFlagGetter"; };
struct _s1207 { constexpr static const char* value = "kDecimalWithLeadingZeroInStrictMode"; };
struct _s1208 { constexpr static const char* value = "kLegacyDateParser"; };
struct _s1209 { constexpr static const char* value = "kDefineGetterOrSetterWouldThrow"; };
struct _s1210 { constexpr static const char* value = "kFunctionConstructorReturnedUndefined"; };
struct _s1211 { constexpr static const char* value = "kAssigmentExpressionLHSIsCallInSloppy"; };
struct _s1212 { constexpr static const char* value = "kAssigmentExpressionLHSIsCallInStrict"; };
struct _s1213 { constexpr static const char* value = "kPromiseConstructorReturnedUndefined"; };
struct _s1214 { constexpr static const char* value = "kConstructorNonUndefinedPrimitiveReturn"; };
struct _s1215 { constexpr static const char* value = "kLabeledExpressionStatement"; };
struct _s1216 { constexpr static const char* value = "kLineOrParagraphSeparatorAsLineTerminator"; };
struct _s1217 { constexpr static const char* value = "kIndexAccessor"; };
struct _s1218 { constexpr static const char* value = "kErrorCaptureStackTrace"; };
struct _s1219 { constexpr static const char* value = "kErrorPrepareStackTrace"; };
struct _s1220 { constexpr static const char* value = "kErrorStackTraceLimit"; };
struct _s1221 { constexpr static const char* value = "kWebAssemblyInstantiation"; };
struct _s1222 { constexpr static const char* value = "kDeoptimizerDisableSpeculation"; };
struct _s1223 { constexpr static const char* value = "kArrayPrototypeSortJSArrayModifiedPrototype"; };
struct _s1224 { constexpr static const char* value = "kFunctionTokenOffsetTooLongForToString"; };
struct _s1225 { constexpr static const char* value = "kWasmSharedMemory"; };
struct _s1226 { constexpr static const char* value = "kWasmThreadOpcodes"; };
struct _s1227 { constexpr static const char* value = "kAtomicsNotify"; };
struct _s1228 { constexpr static const char* value = "kAtomicsWake"; };
struct _s1229 { constexpr static const char* value = "kCollator"; };
struct _s1230 { constexpr static const char* value = "kNumberFormat"; };
struct _s1231 { constexpr static const char* value = "kDateTimeFormat"; };
struct _s1232 { constexpr static const char* value = "kPluralRules"; };
struct _s1233 { constexpr static const char* value = "kRelativeTimeFormat"; };
struct _s1234 { constexpr static const char* value = "kLocale"; };
struct _s1235 { constexpr static const char* value = "kListFormat"; };
struct _s1236 { constexpr static const char* value = "kSegmenter"; };
struct _s1237 { constexpr static const char* value = "kStringLocaleCompare"; };
struct _s1238 { constexpr static const char* value = "kStringToLocaleUpperCase"; };
struct _s1239 { constexpr static const char* value = "kStringToLocaleLowerCase"; };
struct _s1240 { constexpr static const char* value = "kNumberToLocaleString"; };
struct _s1241 { constexpr static const char* value = "kDateToLocaleString"; };
struct _s1242 { constexpr static const char* value = "kDateToLocaleDateString"; };
struct _s1243 { constexpr static const char* value = "kDateToLocaleTimeString"; };
struct _s1244 { constexpr static const char* value = "kAttemptOverrideReadOnlyOnPrototypeSloppy"; };
struct _s1245 { constexpr static const char* value = "kAttemptOverrideReadOnlyOnPrototypeStrict"; };
struct _s1246 { constexpr static const char* value = "kOptimizedFunctionWithOneShotBytecode"; };
struct _s1247 { constexpr static const char* value = "kRegExpMatchIsTrueishOnNonJSRegExp"; };
struct _s1248 { constexpr static const char* value = "kRegExpMatchIsFalseishOnJSRegExp"; };
struct _s1249 { constexpr static const char* value = "kDateGetTimezoneOffset"; };
struct _s1250 { constexpr static const char* value = "kStringNormalize"; };
struct _s1251 { constexpr static const char* value = "kUseCounterFeatureCount"; };
struct _s1252 { constexpr static const char* value = "MessageErrorLevel"; };
struct _s1253 { constexpr static const char* value = "kMessageLog"; };
struct _s1254 { constexpr static const char* value = "kMessageDebug"; };
struct _s1255 { constexpr static const char* value = "kMessageInfo"; };
struct _s1256 { constexpr static const char* value = "kMessageError"; };
struct _s1257 { constexpr static const char* value = "kMessageWarning"; };
struct _s1258 { constexpr static const char* value = "kMessageAll"; };
struct _s1259 { constexpr static const char* value = "UseCounterCallback"; };
struct _s1260 { constexpr static const char* value = "params"; };
struct _s1261 { constexpr static const char* value = "GetCurrent"; };
struct _s1262 { constexpr static const char* value = "AbortOnUncaughtExceptionCallback"; };
struct _s1263 { constexpr static const char* value = "SetAbortOnUncaughtExceptionCallback"; };
struct _s1264 { constexpr static const char* value = "SetHostImportModuleDynamicallyCallback"; };
struct _s1265 { constexpr static const char* value = "SetHostInitializeImportMetaObjectCallback"; };
struct _s1266 { constexpr static const char* value = "SetPrepareStackTraceCallback"; };
struct _s1267 { constexpr static const char* value = "MemoryPressureNotification"; };
struct _s1268 { constexpr static const char* value = "Enter"; };
struct _s1269 { constexpr static const char* value = "Exit"; };
struct _s1270 { constexpr static const char* value = "DumpAndResetStats"; };
struct _s1271 { constexpr static const char* value = "DiscardThreadSpecificMetadata"; };
struct _s1272 { constexpr static const char* value = "SetData"; };
struct _s1273 { constexpr static const char* value = "slot"; };
struct _s1274 { constexpr static const char* value = "GetData"; };
struct _s1275 { constexpr static const char* value = "GetNumberOfDataSlots"; };
struct _s1276 { constexpr static const char* value = "GetDataFromSnapshotOnce"; };
struct _s1277 { constexpr static const char* value = "GetHeapStatistics"; };
struct _s1278 { constexpr static const char* value = "heap_statistics"; };
struct _s1279 { constexpr static const char* value = "NumberOfHeapSpaces"; };
struct _s1280 { constexpr static const char* value = "GetHeapSpaceStatistics"; };
struct _s1281 { constexpr static const char* value = "space_statistics"; };
struct _s1282 { constexpr static const char* value = "NumberOfTrackedHeapObjectTypes"; };
struct _s1283 { constexpr static const char* value = "GetHeapObjectStatisticsAtLastGC"; };
struct _s1284 { constexpr static const char* value = "object_statistics"; };
struct _s1285 { constexpr static const char* value = "type_index"; };
struct _s1286 { constexpr static const char* value = "GetHeapCodeAndMetadataStatistics"; };
struct _s1287 { constexpr static const char* value = "GetStackSample"; };
struct _s1288 { constexpr static const char* value = "state"; };
struct _s1289 { constexpr static const char* value = "frames"; };
struct _s1290 { constexpr static const char* value = "frames_limit"; };
struct _s1291 { constexpr static const char* value = "sample_info"; };
struct _s1292 { constexpr static const char* value = "AdjustAmountOfExternalAllocatedMemory"; };
struct _s1293 { constexpr static const char* value = "change_in_bytes"; };
struct _s1294 { constexpr static const char* value = "NumberOfPhantomHandleResetsSinceLastCall"; };
struct _s1295 { constexpr static const char* value = "GetHeapProfiler"; };
struct _s1296 { constexpr static const char* value = "SetIdle"; };
struct _s1297 { constexpr static const char* value = "is_idle"; };
struct _s1298 { constexpr static const char* value = "GetArrayBufferAllocator"; };
struct _s1299 { constexpr static const char* value = "InContext"; };
struct _s1300 { constexpr static const char* value = "GetCurrentContext"; };
struct _s1301 { constexpr static const char* value = "GetEnteredContext"; };
struct _s1302 { constexpr static const char* value = "GetEnteredOrMicrotaskContext"; };
struct _s1303 { constexpr static const char* value = "GetIncumbentContext"; };
struct _s1304 { constexpr static const char* value = "ThrowException"; };
struct _s1305 { constexpr static const char* value = "GCCallbackWithData"; };
struct _s1306 { constexpr static const char* value = "AddGCPrologueCallback"; };
struct _s1307 { constexpr static const char* value = "gc_type_filter"; };
struct _s1308 { constexpr static const char* value = "RemoveGCPrologueCallback"; };
struct _s1309 { constexpr static const char* value = "SetEmbedderHeapTracer"; };
struct _s1310 { constexpr static const char* value = "tracer"; };
struct _s1311 { constexpr static const char* value = "GetEmbedderHeapTracer"; };
struct _s1312 { constexpr static const char* value = "AtomicsWaitEvent"; };
struct _s1313 { constexpr static const char* value = "kStartWait"; };
struct _s1314 { constexpr static const char* value = "kWokenUp"; };
struct _s1315 { constexpr static const char* value = "kTimedOut"; };
struct _s1316 { constexpr static const char* value = "kTerminatedExecution"; };
struct _s1317 { constexpr static const char* value = "kAPIStopped"; };
struct _s1318 { constexpr static const char* value = "kNotEqual"; };
struct _s1319 { constexpr static const char* value = "AtomicsWaitWakeHandle"; };
struct _s1320 { constexpr static const char* value = "Wake"; };
struct _s1321 { constexpr static const char* value = "AtomicsWaitCallback"; };
struct _s1322 { constexpr static const char* value = "SetAtomicsWaitCallback"; };
struct _s1323 { constexpr static const char* value = "AddGCEpilogueCallback"; };
struct _s1324 { constexpr static const char* value = "RemoveGCEpilogueCallback"; };
struct _s1325 { constexpr static const char* value = "GetExternallyAllocatedMemoryInBytesCallback"; };
struct _s1326 { constexpr static const char* value = "SetGetExternallyAllocatedMemoryInBytesCallback"; };
struct _s1327 { constexpr static const char* value = "TerminateExecution"; };
struct _s1328 { constexpr static const char* value = "IsExecutionTerminating"; };
struct _s1329 { constexpr static const char* value = "CancelTerminateExecution"; };
struct _s1330 { constexpr static const char* value = "RequestInterrupt"; };
struct _s1331 { constexpr static const char* value = "RequestGarbageCollectionForTesting"; };
struct _s1332 { constexpr static const char* value = "SetEventLogger"; };
struct _s1333 { constexpr static const char* value = "AddBeforeCallEnteredCallback"; };
struct _s1334 { constexpr static const char* value = "RemoveBeforeCallEnteredCallback"; };
struct _s1335 { constexpr static const char* value = "AddCallCompletedCallback"; };
struct _s1336 { constexpr static const char* value = "RemoveCallCompletedCallback"; };
struct _s1337 { constexpr static const char* value = "SetPromiseHook"; };
struct _s1338 { constexpr static const char* value = "hook"; };
struct _s1339 { constexpr static const char* value = "SetPromiseRejectCallback"; };
struct _s1340 { constexpr static const char* value = "RunMicrotasks"; };
struct _s1341 { constexpr static const char* value = "SetMicrotasksPolicy"; };
struct _s1342 { constexpr static const char* value = "GetMicrotasksPolicy"; };
struct _s1343 { constexpr static const char* value = "SetUseCounterCallback"; };
struct _s1344 { constexpr static const char* value = "SetCounterFunction"; };
struct _s1345 { constexpr static const char* value = "SetCreateHistogramFunction"; };
struct _s1346 { constexpr static const char* value = "SetAddHistogramSampleFunction"; };
struct _s1347 { constexpr static const char* value = "IdleNotificationDeadline"; };
struct _s1348 { constexpr static const char* value = "deadline_in_seconds"; };
struct _s1349 { constexpr static const char* value = "LowMemoryNotification"; };
struct _s1350 { constexpr static const char* value = "ContextDisposedNotification"; };
struct _s1351 { constexpr static const char* value = "dependant_context"; };
struct _s1352 { constexpr static const char* value = "IsolateInForegroundNotification"; };
struct _s1353 { constexpr static const char* value = "IsolateInBackgroundNotification"; };
struct _s1354 { constexpr static const char* value = "EnableMemorySavingsMode"; };
struct _s1355 { constexpr static const char* value = "DisableMemorySavingsMode"; };
struct _s1356 { constexpr static const char* value = "SetRAILMode"; };
struct _s1357 { constexpr static const char* value = "rail_mode"; };
struct _s1358 { constexpr static const char* value = "IncreaseHeapLimitForDebugging"; };
struct _s1359 { constexpr static const char* value = "RestoreOriginalHeapLimit"; };
struct _s1360 { constexpr static const char* value = "IsHeapLimitIncreasedForDebugging"; };
struct _s1361 { constexpr static const char* value = "SetJitCodeEventHandler"; };
struct _s1362 { constexpr static const char* value = "event_handler"; };
struct _s1363 { constexpr static const char* value = "SetStackLimit"; };
struct _s1364 { constexpr static const char* value = "GetCodeRange"; };
struct _s1365 { constexpr static const char* value = "GetUnwindState"; };
struct _s1366 { constexpr static const char* value = "SetFatalErrorHandler"; };
struct _s1367 { constexpr static const char* value = "SetOOMErrorHandler"; };
struct _s1368 { constexpr static const char* value = "AddNearHeapLimitCallback"; };
struct _s1369 { constexpr static const char* value = "RemoveNearHeapLimitCallback"; };
struct _s1370 { constexpr static const char* value = "heap_limit"; };
struct _s1371 { constexpr static const char* value = "AutomaticallyRestoreInitialHeapLimit"; };
struct _s1372 { constexpr static const char* value = "threshold_percent"; };
struct _s1373 { constexpr static const char* value = "SetAllowCodeGenerationFromStringsCallback"; };
struct _s1374 { constexpr static const char* value = "SetAllowWasmCodeGenerationCallback"; };
struct _s1375 { constexpr static const char* value = "SetWasmModuleCallback"; };
struct _s1376 { constexpr static const char* value = "SetWasmInstanceCallback"; };
struct _s1377 { constexpr static const char* value = "SetWasmStreamingCallback"; };
struct _s1378 { constexpr static const char* value = "SetWasmThreadsEnabledCallback"; };
struct _s1379 { constexpr static const char* value = "IsDead"; };
struct _s1380 { constexpr static const char* value = "AddMessageListener"; };
struct _s1381 { constexpr static const char* value = "AddMessageListenerWithErrorLevel"; };
struct _s1382 { constexpr static const char* value = "message_levels"; };
struct _s1383 { constexpr static const char* value = "RemoveMessageListeners"; };
struct _s1384 { constexpr static const char* value = "SetFailedAccessCheckCallbackFunction"; };
struct _s1385 { constexpr static const char* value = "SetCaptureStackTraceForUncaughtExceptions"; };
struct _s1386 { constexpr static const char* value = "capture"; };
struct _s1387 { constexpr static const char* value = "VisitExternalResources"; };
struct _s1388 { constexpr static const char* value = "VisitHandlesWithClassIds"; };
struct _s1389 { constexpr static const char* value = "VisitWeakHandles"; };
struct _s1390 { constexpr static const char* value = "IsInUse"; };
struct _s1391 { constexpr static const char* value = "SetAllowAtomicsWait"; };
struct _s1392 { constexpr static const char* value = "allow"; };
struct _s1393 { constexpr static const char* value = "TimeZoneDetection"; };
struct _s1394 { constexpr static const char* value = "kSkip"; };
struct _s1395 { constexpr static const char* value = "kRedetect"; };
struct _s1396 { constexpr static const char* value = "DateTimeConfigurationChangeNotification"; };
struct _s1397 { constexpr static const char* value = "time_zone_detection"; };
struct _s1398 { constexpr static const char* value = "LocaleConfigurationChangeNotification"; };
struct _s1399 { constexpr static const char* value = "operator new"; };
struct _s1400 { constexpr static const char* value = "operator new[]"; };
struct _s1401 { constexpr static const char* value = "operator delete"; };
struct _s1402 { constexpr static const char* value = "operator delete[]"; };
struct _s1403 { constexpr static const char* value = "CanBeRehashed"; };
struct _s1404 { constexpr static const char* value = "raw_size"; };
struct _s1405 { constexpr static const char* value = "EntropySource"; };
struct _s1406 { constexpr static const char* value = "ReturnAddressLocationResolver"; };
struct _s1407 { constexpr static const char* value = "V8"; };
struct _s1408 { constexpr static const char* value = "SetNativesDataBlob"; };
struct _s1409 { constexpr static const char* value = "startup_blob"; };
struct _s1410 { constexpr static const char* value = "SetSnapshotDataBlob"; };
struct _s1411 { constexpr static const char* value = "SetDcheckErrorHandler"; };
struct _s1412 { constexpr static const char* value = "SetFlagsFromString"; };
struct _s1413 { constexpr static const char* value = "SetFlagsFromCommandLine"; };
struct _s1414 { constexpr static const char* value = "remove_flags"; };
struct _s1415 { constexpr static const char* value = "GetVersion"; };
struct _s1416 { constexpr static const char* value = "SetEntropySource"; };
struct _s1417 { constexpr static const char* value = "SetReturnAddressLocationResolver"; };
struct _s1418 { constexpr static const char* value = "return_address_resolver"; };
struct _s1419 { constexpr static const char* value = "InitializeICU"; };
struct _s1420 { constexpr static const char* value = "icu_data_file"; };
struct _s1421 { constexpr static const char* value = "InitializeICUDefaultLocation"; };
struct _s1422 { constexpr static const char* value = "exec_path"; };
struct _s1423 { constexpr static const char* value = "InitializeExternalStartupData"; };
struct _s1424 { constexpr static const char* value = "directory_path"; };
struct _s1425 { constexpr static const char* value = "natives_blob"; };
struct _s1426 { constexpr static const char* value = "InitializePlatform"; };
struct _s1427 { constexpr static const char* value = "platform"; };
struct _s1428 { constexpr static const char* value = "ShutdownPlatform"; };
struct _s1429 { constexpr static const char* value = "EnableWebAssemblyTrapHandler"; };
struct _s1430 { constexpr static const char* value = "use_v8_signal_handler"; };
struct _s1431 { constexpr static const char* value = "SetUnhandledExceptionCallback"; };
struct _s1432 { constexpr static const char* value = "unhandled_exception_callback"; };
struct _s1433 { constexpr static const char* value = "SnapshotCreator"; };
struct _s1434 { constexpr static const char* value = "FunctionCodeHandling"; };
struct _s1435 { constexpr static const char* value = "kClear"; };
struct _s1436 { constexpr static const char* value = "kKeep"; };
struct _s1437 { constexpr static const char* value = "existing_blob"; };
struct _s1438 { constexpr static const char* value = "SetDefaultContext"; };
struct _s1439 { constexpr static const char* value = "AddContext"; };
struct _s1440 { constexpr static const char* value = "AddTemplate"; };
struct _s1441 { constexpr static const char* value = "template_obj"; };
struct _s1442 { constexpr static const char* value = "AddData"; };
struct _s1443 { constexpr static const char* value = "CreateBlob"; };
struct _s1444 { constexpr static const char* value = "function_code_handling"; };
struct _s1445 { constexpr static const char* value = "IsNothing"; };
struct _s1446 { constexpr static const char* value = "IsJust"; };
struct _s1447 { constexpr static const char* value = "ToChecked"; };
struct _s1448 { constexpr static const char* value = "Check"; };
struct _s1449 { constexpr static const char* value = "To"; };
struct _s1450 { constexpr static const char* value = "FromJust"; };
struct _s1451 { constexpr static const char* value = "Nothing"; };
struct _s1452 { constexpr static const char* value = "Just"; };
struct _s1453 { constexpr static const char* value = "t"; };
struct _s1454 { constexpr static const char* value = "JustVoid"; };
struct _s1455 { constexpr static const char* value = "TryCatch"; };
struct _s1456 { constexpr static const char* value = "HasCaught"; };
struct _s1457 { constexpr static const char* value = "CanContinue"; };
struct _s1458 { constexpr static const char* value = "HasTerminated"; };
struct _s1459 { constexpr static const char* value = "ReThrow"; };
struct _s1460 { constexpr static const char* value = "SetVerbose"; };
struct _s1461 { constexpr static const char* value = "IsVerbose"; };
struct _s1462 { constexpr static const char* value = "SetCaptureMessage"; };
struct _s1463 { constexpr static const char* value = "JSStackComparableAddress"; };
struct _s1464 { constexpr static const char* value = "ExtensionConfiguration"; };
struct _s1465 { constexpr static const char* value = "name_count"; };
struct _s1466 { constexpr static const char* value = "begin"; };
struct _s1467 { constexpr static const char* value = "end"; };
struct _s1468 { constexpr static const char* value = "DetachGlobal"; };
struct _s1469 { constexpr static const char* value = "extensions"; };
struct _s1470 { constexpr static const char* value = "global_template"; };
struct _s1471 { constexpr static const char* value = "global_object"; };
struct _s1472 { constexpr static const char* value = "internal_fields_deserializer"; };
struct _s1473 { constexpr static const char* value = "context_snapshot_index"; };
struct _s1474 { constexpr static const char* value = "embedder_fields_deserializer"; };
struct _s1475 { constexpr static const char* value = "NewRemoteContext"; };
struct _s1476 { constexpr static const char* value = "SetSecurityToken"; };
struct _s1477 { constexpr static const char* value = "token"; };
struct _s1478 { constexpr static const char* value = "UseDefaultSecurityToken"; };
struct _s1479 { constexpr static const char* value = "GetSecurityToken"; };
struct _s1480 { constexpr static const char* value = "EmbedderDataFields"; };
struct _s1481 { constexpr static const char* value = "kDebugIdIndex"; };
struct _s1482 { constexpr static const char* value = "GetNumberOfEmbedderDataFields"; };
struct _s1483 { constexpr static const char* value = "GetEmbedderData"; };
struct _s1484 { constexpr static const char* value = "GetExtrasBindingObject"; };
struct _s1485 { constexpr static const char* value = "SetEmbedderData"; };
struct _s1486 { constexpr static const char* value = "GetAlignedPointerFromEmbedderData"; };
struct _s1487 { constexpr static const char* value = "SetAlignedPointerInEmbedderData"; };
struct _s1488 { constexpr static const char* value = "AllowCodeGenerationFromStrings"; };
struct _s1489 { constexpr static const char* value = "IsCodeGenerationFromStringsAllowed"; };
struct _s1490 { constexpr static const char* value = "SetErrorMessageForCodeGenerationFromStrings"; };
struct _s1491 { constexpr static const char* value = "AbortScriptExecutionCallback"; };
struct _s1492 { constexpr static const char* value = "SetAbortScriptExecution"; };
struct _s1493 { constexpr static const char* value = "BackupIncumbentScope"; };
struct _s1494 { constexpr static const char* value = "backup_incumbent_context"; };
struct _s1495 { constexpr static const char* value = "Unlocker"; };
struct _s1496 { constexpr static const char* value = "Locker"; };
struct _s1497 { constexpr static const char* value = "IsLocked"; };
struct _s1498 { constexpr static const char* value = "IsActive"; };
struct _s1499 { constexpr static const char* value = "Unwinder"; };
struct _s1500 { constexpr static const char* value = "TryUnwindV8Frames"; };
struct _s1501 { constexpr static const char* value = "unwind_state"; };
struct _s1502 { constexpr static const char* value = "register_state"; };
struct _s1503 { constexpr static const char* value = "stack_base"; };
struct _s1504 { constexpr static const char* value = "PCIsInV8"; };
struct _ty1;  // Record v8::Context
struct _ty2;  // Record v8::Data
struct _ty3;  // Record v8::Isolate
struct _ty4;  // Record v8::AccessorSignature
struct _ty5;  // Record v8::Array
struct _ty6;  // Record v8::ArrayBuffer
struct _ty7;  // Record v8::BigInt
struct _ty8;  // Record v8::BigIntObject
struct _ty9;  // Record v8::Boolean
struct _ty10;  // Record v8::BooleanObject
struct _ty11;  // Record v8::Date
struct _ty12;  // Record v8::External
struct _ty13;  // Record v8::Function
struct _ty14;  // Record v8::FunctionTemplate
struct _ty15;  // Record v8::HeapProfiler
struct _ty16;  // Record v8::ImplementationUtilities
struct _ty17;  // Record v8::Int32
struct _ty18;  // Record v8::Integer
struct _ty19;  // TemplateTypeParm T
struct _ty20;  // InjectedClassName Maybe<T>
struct _ty21;  // Record v8::Maybe<bool>
struct _ty22;  // Record v8::Maybe<int>
struct _ty23;  // Record v8::Maybe<unsigned int>
struct _ty24;  // Record v8::Maybe<double>
struct _ty25;  // Record v8::Maybe<long long>
struct _ty26;  // Record v8::Maybe<v8::PropertyAttribute>
struct _ty27;  // Record v8::MicrotaskQueue
struct _ty28;  // Record v8::Name
struct _ty29;  // Record v8::Number
struct _ty30;  // Record v8::NumberObject
struct _ty31;  // Record v8::Object
struct _ty32;  // Record v8::ObjectOperationDescriptor
struct _ty33;  // Record v8::ObjectTemplate
struct _ty34;  // Record v8::Platform
struct _ty35;  // Record v8::Primitive
struct _ty36;  // Record v8::Promise
struct _ty37;  // Record v8::PropertyDescriptor
struct _ty38;  // Record v8::Proxy
struct _ty39;  // Record v8::RawOperationDescriptor
struct _ty40;  // Record v8::Script
struct _ty41;  // Record v8::SharedArrayBuffer
struct _ty42;  // Record v8::Signature
struct _ty43;  // Record v8::StartupData
struct _ty44;  // Record v8::StackFrame
struct _ty45;  // Record v8::StackTrace
struct _ty46;  // Record v8::String
struct _ty47;  // Record v8::StringObject
struct _ty48;  // Record v8::Symbol
struct _ty49;  // Record v8::SymbolObject
struct _ty50;  // Record v8::PrimitiveArray
struct _ty51;  // Record v8::Private
struct _ty52;  // Record v8::Uint32
struct _ty53;  // Record v8::Utils
struct _ty54;  // Record v8::Value
struct _ty55;  // Record v8::WasmModuleObject
struct _ty56;  // TemplateTypeParm T
struct _ty57;  // InjectedClassName Local<T>
struct _ty58;  // Record v8::Local<v8::Primitive>
struct _ty59;  // FunctionProto void ()
struct _ty60;  // Builtin void
struct _ty61;  // Pointer v8::Local<v8::Primitive> *
struct _ty62;  // TemplateTypeParm S
struct _ty63;  // TemplateSpecialization Local<S>
struct _ty64;  // FunctionProto void (Local<S>)
struct _ty65;  // TemplateSpecialization Local<v8::Primitive>
struct _ty66;  // FunctionProto void (Local<v8::Primitive>)
struct _ty67;  // FunctionProto bool () const
struct _ty68;  // Builtin bool
struct _ty69;  // Pointer const v8::Local<v8::Primitive> *
struct _ty70;  // FunctionProto v8::Primitive *() const
struct _ty71;  // Pointer v8::Primitive *
struct _ty72;  // SubstTemplateTypeParm v8::Primitive
struct _ty73;  // TemplateTypeParm S
struct _ty74;  // LValueReference const Local<S> &
struct _ty75;  // TemplateSpecialization Local<S>
struct _ty76;  // FunctionProto bool (const Local<S> &) const
struct _ty77;  // TemplateTypeParm S
struct _ty78;  // LValueReference const PersistentBase<S> &
struct _ty79;  // TemplateSpecialization PersistentBase<S>
struct _ty80;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty81;  // TemplateTypeParm S
struct _ty82;  // LValueReference const Local<S> &
struct _ty83;  // TemplateSpecialization Local<S>
struct _ty84;  // FunctionProto bool (const Local<S> &) const
struct _ty85;  // TemplateTypeParm S
struct _ty86;  // LValueReference const Persistent<S> &
struct _ty87;  // TemplateSpecialization Persistent<S>
struct _ty88;  // FunctionProto bool (const Persistent<S> &) const
struct _ty89;  // TemplateTypeParm S
struct _ty90;  // TemplateSpecialization Local<S>
struct _ty91;  // FunctionProto Local<v8::Primitive> (Local<S>)
struct _ty92;  // TemplateSpecialization Local<v8::Primitive>
struct _ty93;  // TemplateTypeParm S
struct _ty94;  // FunctionProto Local<S> () const
struct _ty95;  // TemplateSpecialization Local<S>
struct _ty96;  // Pointer v8::Isolate *
struct _ty97;  // TemplateSpecialization Local<v8::Primitive>
struct _ty98;  // FunctionProto Local<v8::Primitive> (v8::Isolate *, Local<v8::Primitive>)
struct _ty99;  // TemplateSpecialization Local<v8::Primitive>
struct _ty100;  // LValueReference const PersistentBase<v8::Primitive> &
struct _ty101;  // TemplateSpecialization PersistentBase<v8::Primitive>
struct _ty102;  // Record v8::PersistentBase<v8::Primitive>
struct _ty103;  // FunctionProto Local<v8::Primitive> (v8::Isolate *, const PersistentBase<v8::Primitive> &)
struct _ty104;  // TemplateSpecialization Local<v8::Primitive>
struct _ty105;  // LValueReference const TracedGlobal<v8::Primitive> &
struct _ty106;  // TemplateSpecialization TracedGlobal<v8::Primitive>
struct _ty107;  // Record v8::TracedGlobal<v8::Primitive>
struct _ty108;  // FunctionProto Local<v8::Primitive> (v8::Isolate *, const TracedGlobal<v8::Primitive> &)
struct _ty109;  // TemplateSpecialization Local<v8::Primitive>
struct _ty110;  // LValueReference const v8::Local<v8::Primitive> &
struct _ty111;  // FunctionProto void (const v8::Local<v8::Primitive> &)
struct _ty112;  // RValueReference v8::Local<v8::Primitive> &&
struct _ty113;  // FunctionProto void (v8::Local<v8::Primitive> &&) noexcept
struct _ty114;  // FunctionProto void () noexcept
struct _ty115;  // Record v8::Local<v8::Boolean>
struct _ty116;  // Pointer v8::Local<v8::Boolean> *
struct _ty117;  // TemplateTypeParm S
struct _ty118;  // TemplateSpecialization Local<S>
struct _ty119;  // FunctionProto void (Local<S>)
struct _ty120;  // TemplateSpecialization Local<v8::Boolean>
struct _ty121;  // FunctionProto void (Local<v8::Boolean>)
struct _ty122;  // Pointer const v8::Local<v8::Boolean> *
struct _ty123;  // FunctionProto v8::Boolean *() const
struct _ty124;  // Pointer v8::Boolean *
struct _ty125;  // SubstTemplateTypeParm v8::Boolean
struct _ty126;  // TemplateTypeParm S
struct _ty127;  // LValueReference const Local<S> &
struct _ty128;  // TemplateSpecialization Local<S>
struct _ty129;  // FunctionProto bool (const Local<S> &) const
struct _ty130;  // TemplateTypeParm S
struct _ty131;  // LValueReference const PersistentBase<S> &
struct _ty132;  // TemplateSpecialization PersistentBase<S>
struct _ty133;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty134;  // TemplateTypeParm S
struct _ty135;  // LValueReference const Local<S> &
struct _ty136;  // TemplateSpecialization Local<S>
struct _ty137;  // FunctionProto bool (const Local<S> &) const
struct _ty138;  // TemplateTypeParm S
struct _ty139;  // LValueReference const Persistent<S> &
struct _ty140;  // TemplateSpecialization Persistent<S>
struct _ty141;  // FunctionProto bool (const Persistent<S> &) const
struct _ty142;  // TemplateTypeParm S
struct _ty143;  // TemplateSpecialization Local<S>
struct _ty144;  // FunctionProto Local<v8::Boolean> (Local<S>)
struct _ty145;  // TemplateSpecialization Local<v8::Boolean>
struct _ty146;  // TemplateTypeParm S
struct _ty147;  // FunctionProto Local<S> () const
struct _ty148;  // TemplateSpecialization Local<S>
struct _ty149;  // TemplateSpecialization Local<v8::Boolean>
struct _ty150;  // FunctionProto Local<v8::Boolean> (v8::Isolate *, Local<v8::Boolean>)
struct _ty151;  // TemplateSpecialization Local<v8::Boolean>
struct _ty152;  // LValueReference const PersistentBase<v8::Boolean> &
struct _ty153;  // TemplateSpecialization PersistentBase<v8::Boolean>
struct _ty154;  // Record v8::PersistentBase<v8::Boolean>
struct _ty155;  // FunctionProto Local<v8::Boolean> (v8::Isolate *, const PersistentBase<v8::Boolean> &)
struct _ty156;  // TemplateSpecialization Local<v8::Boolean>
struct _ty157;  // LValueReference const TracedGlobal<v8::Boolean> &
struct _ty158;  // TemplateSpecialization TracedGlobal<v8::Boolean>
struct _ty159;  // Record v8::TracedGlobal<v8::Boolean>
struct _ty160;  // FunctionProto Local<v8::Boolean> (v8::Isolate *, const TracedGlobal<v8::Boolean> &)
struct _ty161;  // TemplateSpecialization Local<v8::Boolean>
struct _ty162;  // LValueReference const v8::Local<v8::Boolean> &
struct _ty163;  // FunctionProto void (const v8::Local<v8::Boolean> &)
struct _ty164;  // RValueReference v8::Local<v8::Boolean> &&
struct _ty165;  // FunctionProto void (v8::Local<v8::Boolean> &&) noexcept
struct _ty166;  // Record v8::Local<v8::Value>
struct _ty167;  // Pointer v8::Local<v8::Value> *
struct _ty168;  // TemplateTypeParm S
struct _ty169;  // TemplateSpecialization Local<S>
struct _ty170;  // FunctionProto void (Local<S>)
struct _ty171;  // TemplateSpecialization Local<v8::Value>
struct _ty172;  // FunctionProto void (Local<v8::Value>)
struct _ty173;  // Pointer const v8::Local<v8::Value> *
struct _ty174;  // FunctionProto v8::Value *() const
struct _ty175;  // Pointer v8::Value *
struct _ty176;  // SubstTemplateTypeParm v8::Value
struct _ty177;  // TemplateTypeParm S
struct _ty178;  // LValueReference const Local<S> &
struct _ty179;  // TemplateSpecialization Local<S>
struct _ty180;  // FunctionProto bool (const Local<S> &) const
struct _ty181;  // TemplateTypeParm S
struct _ty182;  // LValueReference const PersistentBase<S> &
struct _ty183;  // TemplateSpecialization PersistentBase<S>
struct _ty184;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty185;  // TemplateTypeParm S
struct _ty186;  // LValueReference const Local<S> &
struct _ty187;  // TemplateSpecialization Local<S>
struct _ty188;  // FunctionProto bool (const Local<S> &) const
struct _ty189;  // TemplateTypeParm S
struct _ty190;  // LValueReference const Persistent<S> &
struct _ty191;  // TemplateSpecialization Persistent<S>
struct _ty192;  // FunctionProto bool (const Persistent<S> &) const
struct _ty193;  // TemplateTypeParm S
struct _ty194;  // TemplateSpecialization Local<S>
struct _ty195;  // FunctionProto Local<v8::Value> (Local<S>)
struct _ty196;  // TemplateSpecialization Local<v8::Value>
struct _ty197;  // TemplateTypeParm S
struct _ty198;  // FunctionProto Local<S> () const
struct _ty199;  // TemplateSpecialization Local<S>
struct _ty200;  // TemplateSpecialization Local<v8::Value>
struct _ty201;  // FunctionProto Local<v8::Value> (v8::Isolate *, Local<v8::Value>)
struct _ty202;  // TemplateSpecialization Local<v8::Value>
struct _ty203;  // LValueReference const PersistentBase<v8::Value> &
struct _ty204;  // TemplateSpecialization PersistentBase<v8::Value>
struct _ty205;  // Record v8::PersistentBase<v8::Value>
struct _ty206;  // FunctionProto Local<v8::Value> (v8::Isolate *, const PersistentBase<v8::Value> &)
struct _ty207;  // TemplateSpecialization Local<v8::Value>
struct _ty208;  // LValueReference const TracedGlobal<v8::Value> &
struct _ty209;  // TemplateSpecialization TracedGlobal<v8::Value>
struct _ty210;  // Record v8::TracedGlobal<v8::Value>
struct _ty211;  // FunctionProto Local<v8::Value> (v8::Isolate *, const TracedGlobal<v8::Value> &)
struct _ty212;  // TemplateSpecialization Local<v8::Value>
struct _ty213;  // LValueReference const v8::Local<v8::Value> &
struct _ty214;  // FunctionProto void (const v8::Local<v8::Value> &) noexcept
struct _ty215;  // RValueReference v8::Local<v8::Value> &&
struct _ty216;  // FunctionProto void (v8::Local<v8::Value> &&) noexcept
struct _ty217;  // FunctionProto v8::Local<v8::Value> &(const v8::Local<v8::Value> &)
struct _ty218;  // LValueReference v8::Local<v8::Value> &
struct _ty219;  // FunctionProto v8::Local<v8::Value> &(v8::Local<v8::Value> &&)
struct _ty220;  // Record v8::Local<v8::PrimitiveArray>
struct _ty221;  // Pointer v8::Local<v8::PrimitiveArray> *
struct _ty222;  // TemplateTypeParm S
struct _ty223;  // TemplateSpecialization Local<S>
struct _ty224;  // FunctionProto void (Local<S>)
struct _ty225;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty226;  // FunctionProto void (Local<v8::PrimitiveArray>)
struct _ty227;  // Pointer const v8::Local<v8::PrimitiveArray> *
struct _ty228;  // FunctionProto v8::PrimitiveArray *() const
struct _ty229;  // Pointer v8::PrimitiveArray *
struct _ty230;  // SubstTemplateTypeParm v8::PrimitiveArray
struct _ty231;  // TemplateTypeParm S
struct _ty232;  // LValueReference const Local<S> &
struct _ty233;  // TemplateSpecialization Local<S>
struct _ty234;  // FunctionProto bool (const Local<S> &) const
struct _ty235;  // TemplateTypeParm S
struct _ty236;  // LValueReference const PersistentBase<S> &
struct _ty237;  // TemplateSpecialization PersistentBase<S>
struct _ty238;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty239;  // TemplateTypeParm S
struct _ty240;  // LValueReference const Local<S> &
struct _ty241;  // TemplateSpecialization Local<S>
struct _ty242;  // FunctionProto bool (const Local<S> &) const
struct _ty243;  // TemplateTypeParm S
struct _ty244;  // LValueReference const Persistent<S> &
struct _ty245;  // TemplateSpecialization Persistent<S>
struct _ty246;  // FunctionProto bool (const Persistent<S> &) const
struct _ty247;  // TemplateTypeParm S
struct _ty248;  // TemplateSpecialization Local<S>
struct _ty249;  // FunctionProto Local<v8::PrimitiveArray> (Local<S>)
struct _ty250;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty251;  // TemplateTypeParm S
struct _ty252;  // FunctionProto Local<S> () const
struct _ty253;  // TemplateSpecialization Local<S>
struct _ty254;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty255;  // FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, Local<v8::PrimitiveArray>)
struct _ty256;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty257;  // LValueReference const PersistentBase<v8::PrimitiveArray> &
struct _ty258;  // TemplateSpecialization PersistentBase<v8::PrimitiveArray>
struct _ty259;  // Record v8::PersistentBase<v8::PrimitiveArray>
struct _ty260;  // FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, const PersistentBase<v8::PrimitiveArray> &)
struct _ty261;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty262;  // LValueReference const TracedGlobal<v8::PrimitiveArray> &
struct _ty263;  // TemplateSpecialization TracedGlobal<v8::PrimitiveArray>
struct _ty264;  // Record v8::TracedGlobal<v8::PrimitiveArray>
struct _ty265;  // FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, const TracedGlobal<v8::PrimitiveArray> &)
struct _ty266;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty267;  // LValueReference const v8::Local<v8::PrimitiveArray> &
struct _ty268;  // FunctionProto void (const v8::Local<v8::PrimitiveArray> &) noexcept
struct _ty269;  // RValueReference v8::Local<v8::PrimitiveArray> &&
struct _ty270;  // FunctionProto void (v8::Local<v8::PrimitiveArray> &&) noexcept
struct _ty271;  // FunctionProto v8::Local<v8::PrimitiveArray> &(const v8::Local<v8::PrimitiveArray> &)
struct _ty272;  // LValueReference v8::Local<v8::PrimitiveArray> &
struct _ty273;  // FunctionProto v8::Local<v8::PrimitiveArray> &(v8::Local<v8::PrimitiveArray> &&)
struct _ty274;  // Record v8::Local<v8::Integer>
struct _ty275;  // Pointer v8::Local<v8::Integer> *
struct _ty276;  // TemplateTypeParm S
struct _ty277;  // TemplateSpecialization Local<S>
struct _ty278;  // FunctionProto void (Local<S>)
struct _ty279;  // TemplateSpecialization Local<v8::Integer>
struct _ty280;  // FunctionProto void (Local<v8::Integer>)
struct _ty281;  // Pointer const v8::Local<v8::Integer> *
struct _ty282;  // FunctionProto v8::Integer *() const
struct _ty283;  // Pointer v8::Integer *
struct _ty284;  // SubstTemplateTypeParm v8::Integer
struct _ty285;  // TemplateTypeParm S
struct _ty286;  // LValueReference const Local<S> &
struct _ty287;  // TemplateSpecialization Local<S>
struct _ty288;  // FunctionProto bool (const Local<S> &) const
struct _ty289;  // TemplateTypeParm S
struct _ty290;  // LValueReference const PersistentBase<S> &
struct _ty291;  // TemplateSpecialization PersistentBase<S>
struct _ty292;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty293;  // TemplateTypeParm S
struct _ty294;  // LValueReference const Local<S> &
struct _ty295;  // TemplateSpecialization Local<S>
struct _ty296;  // FunctionProto bool (const Local<S> &) const
struct _ty297;  // TemplateTypeParm S
struct _ty298;  // LValueReference const Persistent<S> &
struct _ty299;  // TemplateSpecialization Persistent<S>
struct _ty300;  // FunctionProto bool (const Persistent<S> &) const
struct _ty301;  // TemplateTypeParm S
struct _ty302;  // TemplateSpecialization Local<S>
struct _ty303;  // FunctionProto Local<v8::Integer> (Local<S>)
struct _ty304;  // TemplateSpecialization Local<v8::Integer>
struct _ty305;  // TemplateTypeParm S
struct _ty306;  // FunctionProto Local<S> () const
struct _ty307;  // TemplateSpecialization Local<S>
struct _ty308;  // TemplateSpecialization Local<v8::Integer>
struct _ty309;  // FunctionProto Local<v8::Integer> (v8::Isolate *, Local<v8::Integer>)
struct _ty310;  // TemplateSpecialization Local<v8::Integer>
struct _ty311;  // LValueReference const PersistentBase<v8::Integer> &
struct _ty312;  // TemplateSpecialization PersistentBase<v8::Integer>
struct _ty313;  // Record v8::PersistentBase<v8::Integer>
struct _ty314;  // FunctionProto Local<v8::Integer> (v8::Isolate *, const PersistentBase<v8::Integer> &)
struct _ty315;  // TemplateSpecialization Local<v8::Integer>
struct _ty316;  // LValueReference const TracedGlobal<v8::Integer> &
struct _ty317;  // TemplateSpecialization TracedGlobal<v8::Integer>
struct _ty318;  // Record v8::TracedGlobal<v8::Integer>
struct _ty319;  // FunctionProto Local<v8::Integer> (v8::Isolate *, const TracedGlobal<v8::Integer> &)
struct _ty320;  // TemplateSpecialization Local<v8::Integer>
struct _ty321;  // LValueReference const v8::Local<v8::Integer> &
struct _ty322;  // FunctionProto void (const v8::Local<v8::Integer> &) noexcept
struct _ty323;  // RValueReference v8::Local<v8::Integer> &&
struct _ty324;  // FunctionProto void (v8::Local<v8::Integer> &&) noexcept
struct _ty325;  // FunctionProto v8::Local<v8::Integer> &(const v8::Local<v8::Integer> &)
struct _ty326;  // LValueReference v8::Local<v8::Integer> &
struct _ty327;  // FunctionProto v8::Local<v8::Integer> &(v8::Local<v8::Integer> &&)
struct _ty328;  // Record v8::Local<v8::Script>
struct _ty329;  // Record v8::Local<v8::String>
struct _ty330;  // Pointer v8::Local<v8::String> *
struct _ty331;  // TemplateTypeParm S
struct _ty332;  // TemplateSpecialization Local<S>
struct _ty333;  // FunctionProto void (Local<S>)
struct _ty334;  // TemplateSpecialization Local<v8::String>
struct _ty335;  // FunctionProto void (Local<v8::String>)
struct _ty336;  // Pointer const v8::Local<v8::String> *
struct _ty337;  // FunctionProto v8::String *() const
struct _ty338;  // Pointer v8::String *
struct _ty339;  // SubstTemplateTypeParm v8::String
struct _ty340;  // TemplateTypeParm S
struct _ty341;  // LValueReference const Local<S> &
struct _ty342;  // TemplateSpecialization Local<S>
struct _ty343;  // FunctionProto bool (const Local<S> &) const
struct _ty344;  // TemplateTypeParm S
struct _ty345;  // LValueReference const PersistentBase<S> &
struct _ty346;  // TemplateSpecialization PersistentBase<S>
struct _ty347;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty348;  // TemplateTypeParm S
struct _ty349;  // LValueReference const Local<S> &
struct _ty350;  // TemplateSpecialization Local<S>
struct _ty351;  // FunctionProto bool (const Local<S> &) const
struct _ty352;  // TemplateTypeParm S
struct _ty353;  // LValueReference const Persistent<S> &
struct _ty354;  // TemplateSpecialization Persistent<S>
struct _ty355;  // FunctionProto bool (const Persistent<S> &) const
struct _ty356;  // TemplateTypeParm S
struct _ty357;  // TemplateSpecialization Local<S>
struct _ty358;  // FunctionProto Local<v8::String> (Local<S>)
struct _ty359;  // TemplateSpecialization Local<v8::String>
struct _ty360;  // TemplateTypeParm S
struct _ty361;  // FunctionProto Local<S> () const
struct _ty362;  // TemplateSpecialization Local<S>
struct _ty363;  // TemplateSpecialization Local<v8::String>
struct _ty364;  // FunctionProto Local<v8::String> (v8::Isolate *, Local<v8::String>)
struct _ty365;  // TemplateSpecialization Local<v8::String>
struct _ty366;  // LValueReference const PersistentBase<v8::String> &
struct _ty367;  // TemplateSpecialization PersistentBase<v8::String>
struct _ty368;  // Record v8::PersistentBase<v8::String>
struct _ty369;  // FunctionProto Local<v8::String> (v8::Isolate *, const PersistentBase<v8::String> &)
struct _ty370;  // TemplateSpecialization Local<v8::String>
struct _ty371;  // LValueReference const TracedGlobal<v8::String> &
struct _ty372;  // TemplateSpecialization TracedGlobal<v8::String>
struct _ty373;  // Record v8::TracedGlobal<v8::String>
struct _ty374;  // FunctionProto Local<v8::String> (v8::Isolate *, const TracedGlobal<v8::String> &)
struct _ty375;  // TemplateSpecialization Local<v8::String>
struct _ty376;  // LValueReference const v8::Local<v8::String> &
struct _ty377;  // FunctionProto void (const v8::Local<v8::String> &) noexcept
struct _ty378;  // RValueReference v8::Local<v8::String> &&
struct _ty379;  // FunctionProto void (v8::Local<v8::String> &&) noexcept
struct _ty380;  // FunctionProto v8::Local<v8::String> &(const v8::Local<v8::String> &)
struct _ty381;  // LValueReference v8::Local<v8::String> &
struct _ty382;  // FunctionProto v8::Local<v8::String> &(v8::Local<v8::String> &&)
struct _ty383;  // Record v8::Local<v8::Context>
struct _ty384;  // Pointer v8::Local<v8::Context> *
struct _ty385;  // TemplateTypeParm S
struct _ty386;  // TemplateSpecialization Local<S>
struct _ty387;  // FunctionProto void (Local<S>)
struct _ty388;  // TemplateSpecialization Local<v8::Context>
struct _ty389;  // FunctionProto void (Local<v8::Context>)
struct _ty390;  // Pointer const v8::Local<v8::Context> *
struct _ty391;  // FunctionProto v8::Context *() const
struct _ty392;  // Pointer v8::Context *
struct _ty393;  // SubstTemplateTypeParm v8::Context
struct _ty394;  // TemplateTypeParm S
struct _ty395;  // LValueReference const Local<S> &
struct _ty396;  // TemplateSpecialization Local<S>
struct _ty397;  // FunctionProto bool (const Local<S> &) const
struct _ty398;  // TemplateTypeParm S
struct _ty399;  // LValueReference const PersistentBase<S> &
struct _ty400;  // TemplateSpecialization PersistentBase<S>
struct _ty401;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty402;  // TemplateTypeParm S
struct _ty403;  // LValueReference const Local<S> &
struct _ty404;  // TemplateSpecialization Local<S>
struct _ty405;  // FunctionProto bool (const Local<S> &) const
struct _ty406;  // TemplateTypeParm S
struct _ty407;  // LValueReference const Persistent<S> &
struct _ty408;  // TemplateSpecialization Persistent<S>
struct _ty409;  // FunctionProto bool (const Persistent<S> &) const
struct _ty410;  // TemplateTypeParm S
struct _ty411;  // TemplateSpecialization Local<S>
struct _ty412;  // FunctionProto Local<v8::Context> (Local<S>)
struct _ty413;  // TemplateSpecialization Local<v8::Context>
struct _ty414;  // TemplateTypeParm S
struct _ty415;  // FunctionProto Local<S> () const
struct _ty416;  // TemplateSpecialization Local<S>
struct _ty417;  // TemplateSpecialization Local<v8::Context>
struct _ty418;  // FunctionProto Local<v8::Context> (v8::Isolate *, Local<v8::Context>)
struct _ty419;  // TemplateSpecialization Local<v8::Context>
struct _ty420;  // LValueReference const PersistentBase<v8::Context> &
struct _ty421;  // TemplateSpecialization PersistentBase<v8::Context>
struct _ty422;  // Record v8::PersistentBase<v8::Context>
struct _ty423;  // FunctionProto Local<v8::Context> (v8::Isolate *, const PersistentBase<v8::Context> &)
struct _ty424;  // TemplateSpecialization Local<v8::Context>
struct _ty425;  // LValueReference const TracedGlobal<v8::Context> &
struct _ty426;  // TemplateSpecialization TracedGlobal<v8::Context>
struct _ty427;  // Record v8::TracedGlobal<v8::Context>
struct _ty428;  // FunctionProto Local<v8::Context> (v8::Isolate *, const TracedGlobal<v8::Context> &)
struct _ty429;  // TemplateSpecialization Local<v8::Context>
struct _ty430;  // LValueReference const v8::Local<v8::Context> &
struct _ty431;  // FunctionProto void (const v8::Local<v8::Context> &) noexcept
struct _ty432;  // RValueReference v8::Local<v8::Context> &&
struct _ty433;  // FunctionProto void (v8::Local<v8::Context> &&) noexcept
struct _ty434;  // Record v8::Local<v8::Module>
struct _ty435;  // Record v8::Local<v8::UnboundModuleScript>
struct _ty436;  // Record v8::Local<v8::UnboundScript>
struct _ty437;  // Pointer v8::Local<v8::UnboundScript> *
struct _ty438;  // TemplateTypeParm S
struct _ty439;  // TemplateSpecialization Local<S>
struct _ty440;  // FunctionProto void (Local<S>)
struct _ty441;  // Pointer const v8::Local<v8::UnboundScript> *
struct _ty442;  // FunctionProto v8::UnboundScript *() const
struct _ty443;  // Pointer v8::UnboundScript *
struct _ty444;  // SubstTemplateTypeParm v8::UnboundScript
struct _ty445;  // Record v8::UnboundScript
struct _ty446;  // TemplateTypeParm S
struct _ty447;  // LValueReference const Local<S> &
struct _ty448;  // TemplateSpecialization Local<S>
struct _ty449;  // FunctionProto bool (const Local<S> &) const
struct _ty450;  // TemplateTypeParm S
struct _ty451;  // LValueReference const PersistentBase<S> &
struct _ty452;  // TemplateSpecialization PersistentBase<S>
struct _ty453;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty454;  // TemplateTypeParm S
struct _ty455;  // LValueReference const Local<S> &
struct _ty456;  // TemplateSpecialization Local<S>
struct _ty457;  // FunctionProto bool (const Local<S> &) const
struct _ty458;  // TemplateTypeParm S
struct _ty459;  // LValueReference const Persistent<S> &
struct _ty460;  // TemplateSpecialization Persistent<S>
struct _ty461;  // FunctionProto bool (const Persistent<S> &) const
struct _ty462;  // TemplateTypeParm S
struct _ty463;  // TemplateSpecialization Local<S>
struct _ty464;  // FunctionProto Local<v8::UnboundScript> (Local<S>)
struct _ty465;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty466;  // TemplateTypeParm S
struct _ty467;  // FunctionProto Local<S> () const
struct _ty468;  // TemplateSpecialization Local<S>
struct _ty469;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty470;  // FunctionProto Local<v8::UnboundScript> (v8::Isolate *, Local<v8::UnboundScript>)
struct _ty471;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty472;  // LValueReference const PersistentBase<v8::UnboundScript> &
struct _ty473;  // TemplateSpecialization PersistentBase<v8::UnboundScript>
struct _ty474;  // Record v8::PersistentBase<v8::UnboundScript>
struct _ty475;  // FunctionProto Local<v8::UnboundScript> (v8::Isolate *, const PersistentBase<v8::UnboundScript> &)
struct _ty476;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty477;  // LValueReference const TracedGlobal<v8::UnboundScript> &
struct _ty478;  // TemplateSpecialization TracedGlobal<v8::UnboundScript>
struct _ty479;  // Record v8::TracedGlobal<v8::UnboundScript>
struct _ty480;  // FunctionProto Local<v8::UnboundScript> (v8::Isolate *, const TracedGlobal<v8::UnboundScript> &)
struct _ty481;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty482;  // Record v8::Local<v8::Object>
struct _ty483;  // Record v8::Local<v8::Function>
struct _ty484;  // Pointer v8::Local<v8::Function> *
struct _ty485;  // TemplateTypeParm S
struct _ty486;  // TemplateSpecialization Local<S>
struct _ty487;  // FunctionProto void (Local<S>)
struct _ty488;  // TemplateSpecialization Local<v8::Function>
struct _ty489;  // FunctionProto void (Local<v8::Function>)
struct _ty490;  // Pointer const v8::Local<v8::Function> *
struct _ty491;  // FunctionProto v8::Function *() const
struct _ty492;  // Pointer v8::Function *
struct _ty493;  // SubstTemplateTypeParm v8::Function
struct _ty494;  // TemplateTypeParm S
struct _ty495;  // LValueReference const Local<S> &
struct _ty496;  // TemplateSpecialization Local<S>
struct _ty497;  // FunctionProto bool (const Local<S> &) const
struct _ty498;  // TemplateTypeParm S
struct _ty499;  // LValueReference const PersistentBase<S> &
struct _ty500;  // TemplateSpecialization PersistentBase<S>
struct _ty501;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty502;  // TemplateTypeParm S
struct _ty503;  // LValueReference const Local<S> &
struct _ty504;  // TemplateSpecialization Local<S>
struct _ty505;  // FunctionProto bool (const Local<S> &) const
struct _ty506;  // TemplateTypeParm S
struct _ty507;  // LValueReference const Persistent<S> &
struct _ty508;  // TemplateSpecialization Persistent<S>
struct _ty509;  // FunctionProto bool (const Persistent<S> &) const
struct _ty510;  // TemplateTypeParm S
struct _ty511;  // TemplateSpecialization Local<S>
struct _ty512;  // FunctionProto Local<v8::Function> (Local<S>)
struct _ty513;  // TemplateSpecialization Local<v8::Function>
struct _ty514;  // TemplateTypeParm S
struct _ty515;  // FunctionProto Local<S> () const
struct _ty516;  // TemplateSpecialization Local<S>
struct _ty517;  // TemplateSpecialization Local<v8::Function>
struct _ty518;  // FunctionProto Local<v8::Function> (v8::Isolate *, Local<v8::Function>)
struct _ty519;  // TemplateSpecialization Local<v8::Function>
struct _ty520;  // LValueReference const PersistentBase<v8::Function> &
struct _ty521;  // TemplateSpecialization PersistentBase<v8::Function>
struct _ty522;  // Record v8::PersistentBase<v8::Function>
struct _ty523;  // FunctionProto Local<v8::Function> (v8::Isolate *, const PersistentBase<v8::Function> &)
struct _ty524;  // TemplateSpecialization Local<v8::Function>
struct _ty525;  // LValueReference const TracedGlobal<v8::Function> &
struct _ty526;  // TemplateSpecialization TracedGlobal<v8::Function>
struct _ty527;  // Record v8::TracedGlobal<v8::Function>
struct _ty528;  // FunctionProto Local<v8::Function> (v8::Isolate *, const TracedGlobal<v8::Function> &)
struct _ty529;  // TemplateSpecialization Local<v8::Function>
struct _ty530;  // LValueReference const v8::Local<v8::Function> &
struct _ty531;  // FunctionProto void (const v8::Local<v8::Function> &)
struct _ty532;  // RValueReference v8::Local<v8::Function> &&
struct _ty533;  // FunctionProto void (v8::Local<v8::Function> &&) noexcept
struct _ty534;  // Record v8::Local<v8::StackTrace>
struct _ty535;  // Record v8::Local<v8::StackFrame>
struct _ty536;  // Record v8::Local<v8::SharedArrayBuffer>
struct _ty537;  // Record v8::Local<v8::WasmModuleObject>
struct _ty538;  // Record v8::Local<v8::ArrayBuffer>
struct _ty539;  // Record v8::Local<v8::Symbol>
struct _ty540;  // Record v8::Local<v8::Private>
struct _ty541;  // Record v8::Local<v8::Number>
struct _ty542;  // Record v8::Local<v8::BigInt>
struct _ty543;  // Record v8::Local<v8::Name>
struct _ty544;  // Pointer v8::Local<v8::Name> *
struct _ty545;  // TemplateTypeParm S
struct _ty546;  // TemplateSpecialization Local<S>
struct _ty547;  // FunctionProto void (Local<S>)
struct _ty548;  // TemplateSpecialization Local<v8::String>
struct _ty549;  // FunctionProto void (Local<v8::String>)
struct _ty550;  // TemplateSpecialization Local<v8::Name>
struct _ty551;  // FunctionProto void (Local<v8::Name>)
struct _ty552;  // Pointer const v8::Local<v8::Name> *
struct _ty553;  // FunctionProto v8::Name *() const
struct _ty554;  // Pointer v8::Name *
struct _ty555;  // SubstTemplateTypeParm v8::Name
struct _ty556;  // TemplateTypeParm S
struct _ty557;  // LValueReference const Local<S> &
struct _ty558;  // TemplateSpecialization Local<S>
struct _ty559;  // FunctionProto bool (const Local<S> &) const
struct _ty560;  // TemplateTypeParm S
struct _ty561;  // LValueReference const PersistentBase<S> &
struct _ty562;  // TemplateSpecialization PersistentBase<S>
struct _ty563;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty564;  // TemplateTypeParm S
struct _ty565;  // LValueReference const Local<S> &
struct _ty566;  // TemplateSpecialization Local<S>
struct _ty567;  // FunctionProto bool (const Local<S> &) const
struct _ty568;  // TemplateTypeParm S
struct _ty569;  // LValueReference const Persistent<S> &
struct _ty570;  // TemplateSpecialization Persistent<S>
struct _ty571;  // FunctionProto bool (const Persistent<S> &) const
struct _ty572;  // TemplateTypeParm S
struct _ty573;  // TemplateSpecialization Local<S>
struct _ty574;  // FunctionProto Local<v8::Name> (Local<S>)
struct _ty575;  // TemplateSpecialization Local<v8::Name>
struct _ty576;  // TemplateTypeParm S
struct _ty577;  // FunctionProto Local<S> () const
struct _ty578;  // TemplateSpecialization Local<S>
struct _ty579;  // TemplateSpecialization Local<v8::Name>
struct _ty580;  // FunctionProto Local<v8::Name> (v8::Isolate *, Local<v8::Name>)
struct _ty581;  // TemplateSpecialization Local<v8::Name>
struct _ty582;  // LValueReference const PersistentBase<v8::Name> &
struct _ty583;  // TemplateSpecialization PersistentBase<v8::Name>
struct _ty584;  // Record v8::PersistentBase<v8::Name>
struct _ty585;  // FunctionProto Local<v8::Name> (v8::Isolate *, const PersistentBase<v8::Name> &)
struct _ty586;  // TemplateSpecialization Local<v8::Name>
struct _ty587;  // LValueReference const TracedGlobal<v8::Name> &
struct _ty588;  // TemplateSpecialization TracedGlobal<v8::Name>
struct _ty589;  // Record v8::TracedGlobal<v8::Name>
struct _ty590;  // FunctionProto Local<v8::Name> (v8::Isolate *, const TracedGlobal<v8::Name> &)
struct _ty591;  // TemplateSpecialization Local<v8::Name>
struct _ty592;  // LValueReference const v8::Local<v8::Name> &
struct _ty593;  // FunctionProto void (const v8::Local<v8::Name> &)
struct _ty594;  // RValueReference v8::Local<v8::Name> &&
struct _ty595;  // FunctionProto void (v8::Local<v8::Name> &&) noexcept
struct _ty596;  // Record v8::Local<v8::FunctionTemplate>
struct _ty597;  // Pointer v8::Local<v8::FunctionTemplate> *
struct _ty598;  // TemplateTypeParm S
struct _ty599;  // TemplateSpecialization Local<S>
struct _ty600;  // FunctionProto void (Local<S>)
struct _ty601;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty602;  // FunctionProto void (Local<v8::FunctionTemplate>)
struct _ty603;  // Pointer const v8::Local<v8::FunctionTemplate> *
struct _ty604;  // FunctionProto v8::FunctionTemplate *() const
struct _ty605;  // Pointer v8::FunctionTemplate *
struct _ty606;  // SubstTemplateTypeParm v8::FunctionTemplate
struct _ty607;  // TemplateTypeParm S
struct _ty608;  // LValueReference const Local<S> &
struct _ty609;  // TemplateSpecialization Local<S>
struct _ty610;  // FunctionProto bool (const Local<S> &) const
struct _ty611;  // TemplateTypeParm S
struct _ty612;  // LValueReference const PersistentBase<S> &
struct _ty613;  // TemplateSpecialization PersistentBase<S>
struct _ty614;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty615;  // TemplateTypeParm S
struct _ty616;  // LValueReference const Local<S> &
struct _ty617;  // TemplateSpecialization Local<S>
struct _ty618;  // FunctionProto bool (const Local<S> &) const
struct _ty619;  // TemplateTypeParm S
struct _ty620;  // LValueReference const Persistent<S> &
struct _ty621;  // TemplateSpecialization Persistent<S>
struct _ty622;  // FunctionProto bool (const Persistent<S> &) const
struct _ty623;  // TemplateTypeParm S
struct _ty624;  // TemplateSpecialization Local<S>
struct _ty625;  // FunctionProto Local<v8::FunctionTemplate> (Local<S>)
struct _ty626;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty627;  // TemplateTypeParm S
struct _ty628;  // FunctionProto Local<S> () const
struct _ty629;  // TemplateSpecialization Local<S>
struct _ty630;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty631;  // FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _ty632;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty633;  // LValueReference const PersistentBase<v8::FunctionTemplate> &
struct _ty634;  // TemplateSpecialization PersistentBase<v8::FunctionTemplate>
struct _ty635;  // Record v8::PersistentBase<v8::FunctionTemplate>
struct _ty636;  // FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, const PersistentBase<v8::FunctionTemplate> &)
struct _ty637;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty638;  // LValueReference const TracedGlobal<v8::FunctionTemplate> &
struct _ty639;  // TemplateSpecialization TracedGlobal<v8::FunctionTemplate>
struct _ty640;  // Record v8::TracedGlobal<v8::FunctionTemplate>
struct _ty641;  // FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, const TracedGlobal<v8::FunctionTemplate> &)
struct _ty642;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty643;  // LValueReference const v8::Local<v8::FunctionTemplate> &
struct _ty644;  // FunctionProto void (const v8::Local<v8::FunctionTemplate> &)
struct _ty645;  // RValueReference v8::Local<v8::FunctionTemplate> &&
struct _ty646;  // FunctionProto void (v8::Local<v8::FunctionTemplate> &&) noexcept
struct _ty647;  // Record v8::Local<v8::Array>
struct _ty648;  // Record v8::Local<v8::Map>
struct _ty649;  // Record v8::Local<v8::Set>
struct _ty650;  // Record v8::Local<v8::Promise>
struct _ty651;  // Pointer v8::Local<v8::Promise> *
struct _ty652;  // TemplateTypeParm S
struct _ty653;  // TemplateSpecialization Local<S>
struct _ty654;  // FunctionProto void (Local<S>)
struct _ty655;  // TemplateSpecialization Local<v8::Promise>
struct _ty656;  // FunctionProto void (Local<v8::Promise>)
struct _ty657;  // Pointer const v8::Local<v8::Promise> *
struct _ty658;  // FunctionProto v8::Promise *() const
struct _ty659;  // Pointer v8::Promise *
struct _ty660;  // SubstTemplateTypeParm v8::Promise
struct _ty661;  // TemplateTypeParm S
struct _ty662;  // LValueReference const Local<S> &
struct _ty663;  // TemplateSpecialization Local<S>
struct _ty664;  // FunctionProto bool (const Local<S> &) const
struct _ty665;  // TemplateTypeParm S
struct _ty666;  // LValueReference const PersistentBase<S> &
struct _ty667;  // TemplateSpecialization PersistentBase<S>
struct _ty668;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty669;  // TemplateTypeParm S
struct _ty670;  // LValueReference const Local<S> &
struct _ty671;  // TemplateSpecialization Local<S>
struct _ty672;  // FunctionProto bool (const Local<S> &) const
struct _ty673;  // TemplateTypeParm S
struct _ty674;  // LValueReference const Persistent<S> &
struct _ty675;  // TemplateSpecialization Persistent<S>
struct _ty676;  // FunctionProto bool (const Persistent<S> &) const
struct _ty677;  // TemplateTypeParm S
struct _ty678;  // TemplateSpecialization Local<S>
struct _ty679;  // FunctionProto Local<v8::Promise> (Local<S>)
struct _ty680;  // TemplateSpecialization Local<v8::Promise>
struct _ty681;  // TemplateTypeParm S
struct _ty682;  // FunctionProto Local<S> () const
struct _ty683;  // TemplateSpecialization Local<S>
struct _ty684;  // TemplateSpecialization Local<v8::Promise>
struct _ty685;  // FunctionProto Local<v8::Promise> (v8::Isolate *, Local<v8::Promise>)
struct _ty686;  // TemplateSpecialization Local<v8::Promise>
struct _ty687;  // LValueReference const PersistentBase<v8::Promise> &
struct _ty688;  // TemplateSpecialization PersistentBase<v8::Promise>
struct _ty689;  // Record v8::PersistentBase<v8::Promise>
struct _ty690;  // FunctionProto Local<v8::Promise> (v8::Isolate *, const PersistentBase<v8::Promise> &)
struct _ty691;  // TemplateSpecialization Local<v8::Promise>
struct _ty692;  // LValueReference const TracedGlobal<v8::Promise> &
struct _ty693;  // TemplateSpecialization TracedGlobal<v8::Promise>
struct _ty694;  // Record v8::TracedGlobal<v8::Promise>
struct _ty695;  // FunctionProto Local<v8::Promise> (v8::Isolate *, const TracedGlobal<v8::Promise> &)
struct _ty696;  // TemplateSpecialization Local<v8::Promise>
struct _ty697;  // LValueReference const v8::Local<v8::Promise> &
struct _ty698;  // FunctionProto void (const v8::Local<v8::Promise> &) noexcept
struct _ty699;  // RValueReference v8::Local<v8::Promise> &&
struct _ty700;  // FunctionProto void (v8::Local<v8::Promise> &&)
struct _ty701;  // Record v8::Local<v8::Uint8Array>
struct _ty702;  // Record v8::Local<v8::Uint8ClampedArray>
struct _ty703;  // Record v8::Local<v8::Int8Array>
struct _ty704;  // Record v8::Local<v8::Uint16Array>
struct _ty705;  // Record v8::Local<v8::Int16Array>
struct _ty706;  // Record v8::Local<v8::Uint32Array>
struct _ty707;  // Record v8::Local<v8::Int32Array>
struct _ty708;  // Record v8::Local<v8::Float32Array>
struct _ty709;  // Record v8::Local<v8::Float64Array>
struct _ty710;  // Record v8::Local<v8::BigInt64Array>
struct _ty711;  // Record v8::Local<v8::BigUint64Array>
struct _ty712;  // Record v8::Local<v8::DataView>
struct _ty713;  // Record v8::Local<v8::External>
struct _ty714;  // Record v8::Local<v8::Data>
struct _ty715;  // Pointer v8::Local<v8::Data> *
struct _ty716;  // TemplateTypeParm S
struct _ty717;  // TemplateSpecialization Local<S>
struct _ty718;  // FunctionProto void (Local<S>)
struct _ty719;  // TemplateSpecialization Local<v8::Data>
struct _ty720;  // FunctionProto void (Local<v8::Data>)
struct _ty721;  // Pointer const v8::Local<v8::Data> *
struct _ty722;  // FunctionProto v8::Data *() const
struct _ty723;  // Pointer v8::Data *
struct _ty724;  // SubstTemplateTypeParm v8::Data
struct _ty725;  // TemplateTypeParm S
struct _ty726;  // LValueReference const Local<S> &
struct _ty727;  // TemplateSpecialization Local<S>
struct _ty728;  // FunctionProto bool (const Local<S> &) const
struct _ty729;  // TemplateTypeParm S
struct _ty730;  // LValueReference const PersistentBase<S> &
struct _ty731;  // TemplateSpecialization PersistentBase<S>
struct _ty732;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty733;  // TemplateTypeParm S
struct _ty734;  // LValueReference const Local<S> &
struct _ty735;  // TemplateSpecialization Local<S>
struct _ty736;  // FunctionProto bool (const Local<S> &) const
struct _ty737;  // TemplateTypeParm S
struct _ty738;  // LValueReference const Persistent<S> &
struct _ty739;  // TemplateSpecialization Persistent<S>
struct _ty740;  // FunctionProto bool (const Persistent<S> &) const
struct _ty741;  // TemplateTypeParm S
struct _ty742;  // TemplateSpecialization Local<S>
struct _ty743;  // FunctionProto Local<v8::Data> (Local<S>)
struct _ty744;  // TemplateSpecialization Local<v8::Data>
struct _ty745;  // TemplateTypeParm S
struct _ty746;  // FunctionProto Local<S> () const
struct _ty747;  // TemplateSpecialization Local<S>
struct _ty748;  // TemplateSpecialization Local<v8::Data>
struct _ty749;  // FunctionProto Local<v8::Data> (v8::Isolate *, Local<v8::Data>)
struct _ty750;  // TemplateSpecialization Local<v8::Data>
struct _ty751;  // LValueReference const PersistentBase<v8::Data> &
struct _ty752;  // TemplateSpecialization PersistentBase<v8::Data>
struct _ty753;  // Record v8::PersistentBase<v8::Data>
struct _ty754;  // FunctionProto Local<v8::Data> (v8::Isolate *, const PersistentBase<v8::Data> &)
struct _ty755;  // TemplateSpecialization Local<v8::Data>
struct _ty756;  // LValueReference const TracedGlobal<v8::Data> &
struct _ty757;  // TemplateSpecialization TracedGlobal<v8::Data>
struct _ty758;  // Record v8::TracedGlobal<v8::Data>
struct _ty759;  // FunctionProto Local<v8::Data> (v8::Isolate *, const TracedGlobal<v8::Data> &)
struct _ty760;  // TemplateSpecialization Local<v8::Data>
struct _ty761;  // LValueReference const v8::Local<v8::Data> &
struct _ty762;  // FunctionProto void (const v8::Local<v8::Data> &) noexcept
struct _ty763;  // RValueReference v8::Local<v8::Data> &&
struct _ty764;  // FunctionProto void (v8::Local<v8::Data> &&)
struct _ty765;  // Record v8::Local<v8::AccessorSignature>
struct _ty766;  // Pointer v8::Local<v8::AccessorSignature> *
struct _ty767;  // TemplateTypeParm S
struct _ty768;  // TemplateSpecialization Local<S>
struct _ty769;  // FunctionProto void (Local<S>)
struct _ty770;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty771;  // FunctionProto void (Local<v8::AccessorSignature>)
struct _ty772;  // Pointer const v8::Local<v8::AccessorSignature> *
struct _ty773;  // FunctionProto v8::AccessorSignature *() const
struct _ty774;  // Pointer v8::AccessorSignature *
struct _ty775;  // SubstTemplateTypeParm v8::AccessorSignature
struct _ty776;  // TemplateTypeParm S
struct _ty777;  // LValueReference const Local<S> &
struct _ty778;  // TemplateSpecialization Local<S>
struct _ty779;  // FunctionProto bool (const Local<S> &) const
struct _ty780;  // TemplateTypeParm S
struct _ty781;  // LValueReference const PersistentBase<S> &
struct _ty782;  // TemplateSpecialization PersistentBase<S>
struct _ty783;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty784;  // TemplateTypeParm S
struct _ty785;  // LValueReference const Local<S> &
struct _ty786;  // TemplateSpecialization Local<S>
struct _ty787;  // FunctionProto bool (const Local<S> &) const
struct _ty788;  // TemplateTypeParm S
struct _ty789;  // LValueReference const Persistent<S> &
struct _ty790;  // TemplateSpecialization Persistent<S>
struct _ty791;  // FunctionProto bool (const Persistent<S> &) const
struct _ty792;  // TemplateTypeParm S
struct _ty793;  // TemplateSpecialization Local<S>
struct _ty794;  // FunctionProto Local<v8::AccessorSignature> (Local<S>)
struct _ty795;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty796;  // TemplateTypeParm S
struct _ty797;  // FunctionProto Local<S> () const
struct _ty798;  // TemplateSpecialization Local<S>
struct _ty799;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty800;  // FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, Local<v8::AccessorSignature>)
struct _ty801;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty802;  // LValueReference const PersistentBase<v8::AccessorSignature> &
struct _ty803;  // TemplateSpecialization PersistentBase<v8::AccessorSignature>
struct _ty804;  // Record v8::PersistentBase<v8::AccessorSignature>
struct _ty805;  // FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, const PersistentBase<v8::AccessorSignature> &)
struct _ty806;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty807;  // LValueReference const TracedGlobal<v8::AccessorSignature> &
struct _ty808;  // TemplateSpecialization TracedGlobal<v8::AccessorSignature>
struct _ty809;  // Record v8::TracedGlobal<v8::AccessorSignature>
struct _ty810;  // FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, const TracedGlobal<v8::AccessorSignature> &)
struct _ty811;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty812;  // LValueReference const v8::Local<v8::AccessorSignature> &
struct _ty813;  // FunctionProto void (const v8::Local<v8::AccessorSignature> &)
struct _ty814;  // RValueReference v8::Local<v8::AccessorSignature> &&
struct _ty815;  // FunctionProto void (v8::Local<v8::AccessorSignature> &&) noexcept
struct _ty816;  // Record v8::Local<v8::Signature>
struct _ty817;  // Pointer v8::Local<v8::Signature> *
struct _ty818;  // TemplateTypeParm S
struct _ty819;  // TemplateSpecialization Local<S>
struct _ty820;  // FunctionProto void (Local<S>)
struct _ty821;  // TemplateSpecialization Local<v8::Signature>
struct _ty822;  // FunctionProto void (Local<v8::Signature>)
struct _ty823;  // Pointer const v8::Local<v8::Signature> *
struct _ty824;  // FunctionProto v8::Signature *() const
struct _ty825;  // Pointer v8::Signature *
struct _ty826;  // SubstTemplateTypeParm v8::Signature
struct _ty827;  // TemplateTypeParm S
struct _ty828;  // LValueReference const Local<S> &
struct _ty829;  // TemplateSpecialization Local<S>
struct _ty830;  // FunctionProto bool (const Local<S> &) const
struct _ty831;  // TemplateTypeParm S
struct _ty832;  // LValueReference const PersistentBase<S> &
struct _ty833;  // TemplateSpecialization PersistentBase<S>
struct _ty834;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty835;  // TemplateTypeParm S
struct _ty836;  // LValueReference const Local<S> &
struct _ty837;  // TemplateSpecialization Local<S>
struct _ty838;  // FunctionProto bool (const Local<S> &) const
struct _ty839;  // TemplateTypeParm S
struct _ty840;  // LValueReference const Persistent<S> &
struct _ty841;  // TemplateSpecialization Persistent<S>
struct _ty842;  // FunctionProto bool (const Persistent<S> &) const
struct _ty843;  // TemplateTypeParm S
struct _ty844;  // TemplateSpecialization Local<S>
struct _ty845;  // FunctionProto Local<v8::Signature> (Local<S>)
struct _ty846;  // TemplateSpecialization Local<v8::Signature>
struct _ty847;  // TemplateTypeParm S
struct _ty848;  // FunctionProto Local<S> () const
struct _ty849;  // TemplateSpecialization Local<S>
struct _ty850;  // TemplateSpecialization Local<v8::Signature>
struct _ty851;  // FunctionProto Local<v8::Signature> (v8::Isolate *, Local<v8::Signature>)
struct _ty852;  // TemplateSpecialization Local<v8::Signature>
struct _ty853;  // LValueReference const PersistentBase<v8::Signature> &
struct _ty854;  // TemplateSpecialization PersistentBase<v8::Signature>
struct _ty855;  // Record v8::PersistentBase<v8::Signature>
struct _ty856;  // FunctionProto Local<v8::Signature> (v8::Isolate *, const PersistentBase<v8::Signature> &)
struct _ty857;  // TemplateSpecialization Local<v8::Signature>
struct _ty858;  // LValueReference const TracedGlobal<v8::Signature> &
struct _ty859;  // TemplateSpecialization TracedGlobal<v8::Signature>
struct _ty860;  // Record v8::TracedGlobal<v8::Signature>
struct _ty861;  // FunctionProto Local<v8::Signature> (v8::Isolate *, const TracedGlobal<v8::Signature> &)
struct _ty862;  // TemplateSpecialization Local<v8::Signature>
struct _ty863;  // LValueReference const v8::Local<v8::Signature> &
struct _ty864;  // FunctionProto void (const v8::Local<v8::Signature> &)
struct _ty865;  // RValueReference v8::Local<v8::Signature> &&
struct _ty866;  // FunctionProto void (v8::Local<v8::Signature> &&) noexcept
struct _ty867;  // Record v8::Local<v8::ObjectTemplate>
struct _ty868;  // Record v8::Local<v8::Message>
struct _ty869;  // Record v8::Local<v8::ScriptOrModule>
struct _ty870;  // Record v8::Local<v8::Template>
struct _ty871;  // TemplateTypeParm T
struct _ty872;  // InjectedClassName MaybeLocal<T>
struct _ty873;  // Record v8::MaybeLocal<v8::Module>
struct _ty874;  // Record v8::MaybeLocal<v8::Value>
struct _ty875;  // Pointer v8::MaybeLocal<v8::Value> *
struct _ty876;  // TemplateTypeParm S
struct _ty877;  // TemplateSpecialization Local<S>
struct _ty878;  // FunctionProto void (Local<S>)
struct _ty879;  // Pointer const v8::MaybeLocal<v8::Value> *
struct _ty880;  // TemplateTypeParm S
struct _ty881;  // Pointer Local<S> *
struct _ty882;  // TemplateSpecialization Local<S>
struct _ty883;  // FunctionProto bool (Local<S> *) const
struct _ty884;  // FunctionProto Local<v8::Value> ()
struct _ty885;  // TemplateSpecialization Local<v8::Value>
struct _ty886;  // TemplateTypeParm S
struct _ty887;  // TemplateSpecialization Local<S>
struct _ty888;  // FunctionProto Local<S> (Local<S>) const
struct _ty889;  // TemplateSpecialization Local<S>
struct _ty890;  // LValueReference const v8::MaybeLocal<v8::Value> &
struct _ty891;  // FunctionProto void (const v8::MaybeLocal<v8::Value> &)
struct _ty892;  // RValueReference v8::MaybeLocal<v8::Value> &&
struct _ty893;  // FunctionProto void (v8::MaybeLocal<v8::Value> &&) noexcept
struct _ty894;  // Record v8::MaybeLocal<v8::Script>
struct _ty895;  // Record v8::MaybeLocal<v8::UnboundScript>
struct _ty896;  // Record v8::MaybeLocal<v8::Function>
struct _ty897;  // Record v8::MaybeLocal<v8::String>
struct _ty898;  // Pointer v8::MaybeLocal<v8::String> *
struct _ty899;  // TemplateTypeParm S
struct _ty900;  // TemplateSpecialization Local<S>
struct _ty901;  // FunctionProto void (Local<S>)
struct _ty902;  // Pointer const v8::MaybeLocal<v8::String> *
struct _ty903;  // TemplateTypeParm S
struct _ty904;  // Pointer Local<S> *
struct _ty905;  // TemplateSpecialization Local<S>
struct _ty906;  // FunctionProto bool (Local<S> *) const
struct _ty907;  // FunctionProto Local<v8::String> ()
struct _ty908;  // TemplateSpecialization Local<v8::String>
struct _ty909;  // TemplateTypeParm S
struct _ty910;  // TemplateSpecialization Local<S>
struct _ty911;  // FunctionProto Local<S> (Local<S>) const
struct _ty912;  // TemplateSpecialization Local<S>
struct _ty913;  // Record v8::MaybeLocal<v8::Object>
struct _ty914;  // Pointer v8::MaybeLocal<v8::Object> *
struct _ty915;  // TemplateTypeParm S
struct _ty916;  // TemplateSpecialization Local<S>
struct _ty917;  // FunctionProto void (Local<S>)
struct _ty918;  // Pointer const v8::MaybeLocal<v8::Object> *
struct _ty919;  // TemplateTypeParm S
struct _ty920;  // Pointer Local<S> *
struct _ty921;  // TemplateSpecialization Local<S>
struct _ty922;  // FunctionProto bool (Local<S> *) const
struct _ty923;  // FunctionProto Local<v8::Object> ()
struct _ty924;  // TemplateSpecialization Local<v8::Object>
struct _ty925;  // TemplateTypeParm S
struct _ty926;  // TemplateSpecialization Local<S>
struct _ty927;  // FunctionProto Local<S> (Local<S>) const
struct _ty928;  // TemplateSpecialization Local<S>
struct _ty929;  // LValueReference const v8::MaybeLocal<v8::Object> &
struct _ty930;  // FunctionProto void (const v8::MaybeLocal<v8::Object> &)
struct _ty931;  // RValueReference v8::MaybeLocal<v8::Object> &&
struct _ty932;  // FunctionProto void (v8::MaybeLocal<v8::Object> &&) noexcept
struct _ty933;  // Record v8::MaybeLocal<v8::WasmModuleObject>
struct _ty934;  // Record v8::MaybeLocal<v8::SharedArrayBuffer>
struct _ty935;  // Record v8::MaybeLocal<v8::BigInt>
struct _ty936;  // Record v8::MaybeLocal<v8::Number>
struct _ty937;  // Record v8::MaybeLocal<v8::Integer>
struct _ty938;  // Record v8::MaybeLocal<v8::Uint32>
struct _ty939;  // Record v8::MaybeLocal<v8::Int32>
struct _ty940;  // Record v8::MaybeLocal<v8::Array>
struct _ty941;  // Record v8::MaybeLocal<v8::Map>
struct _ty942;  // Record v8::MaybeLocal<v8::Set>
struct _ty943;  // Record v8::MaybeLocal<v8::Promise::Resolver>
struct _ty944;  // Record v8::MaybeLocal<v8::Promise>
struct _ty945;  // Record v8::MaybeLocal<v8::Proxy>
struct _ty946;  // Record v8::MaybeLocal<v8::RegExp>
struct _ty947;  // Record v8::MaybeLocal<v8::FunctionTemplate>
struct _ty948;  // Record v8::MaybeLocal<v8::ObjectTemplate>
struct _ty949;  // Pointer v8::MaybeLocal<v8::ObjectTemplate> *
struct _ty950;  // TemplateTypeParm S
struct _ty951;  // TemplateSpecialization Local<S>
struct _ty952;  // FunctionProto void (Local<S>)
struct _ty953;  // Pointer const v8::MaybeLocal<v8::ObjectTemplate> *
struct _ty954;  // TemplateTypeParm S
struct _ty955;  // Pointer Local<S> *
struct _ty956;  // TemplateSpecialization Local<S>
struct _ty957;  // FunctionProto bool (Local<S> *) const
struct _ty958;  // FunctionProto Local<v8::ObjectTemplate> ()
struct _ty959;  // TemplateSpecialization Local<v8::ObjectTemplate>
struct _ty960;  // TemplateTypeParm S
struct _ty961;  // TemplateSpecialization Local<S>
struct _ty962;  // FunctionProto Local<S> (Local<S>) const
struct _ty963;  // TemplateSpecialization Local<S>
struct _ty964;  // LValueReference const v8::MaybeLocal<v8::ObjectTemplate> &
struct _ty965;  // FunctionProto void (const v8::MaybeLocal<v8::ObjectTemplate> &)
struct _ty966;  // RValueReference v8::MaybeLocal<v8::ObjectTemplate> &&
struct _ty967;  // FunctionProto void (v8::MaybeLocal<v8::ObjectTemplate> &&) noexcept
struct _ty968;  // Record v8::MaybeLocal<v8::Context>
struct _ty969;  // TemplateTypeParm T
struct _ty970;  // InjectedClassName Eternal<T>
struct _ty971;  // TemplateTypeParm T
struct _ty972;  // InjectedClassName NonCopyablePersistentTraits<T>
struct _ty973;  // Record v8::NonCopyablePersistentTraits<v8::Promise>
struct _ty974;  // Record v8::NonCopyablePersistentTraits<v8::Value>
struct _ty975;  // TemplateTypeParm T
struct _ty976;  // InjectedClassName PersistentBase<T>
struct _ty977;  // Record v8::PersistentBase<v8::Object>
struct _ty978;  // Pointer v8::PersistentBase<v8::Object> *
struct _ty979;  // TemplateTypeParm S
struct _ty980;  // LValueReference const Local<S> &
struct _ty981;  // TemplateSpecialization Local<S>
struct _ty982;  // FunctionProto void (v8::Isolate *, const Local<S> &)
struct _ty983;  // TemplateTypeParm S
struct _ty984;  // LValueReference const PersistentBase<S> &
struct _ty985;  // TemplateSpecialization PersistentBase<S>
struct _ty986;  // FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _ty987;  // Pointer const v8::PersistentBase<v8::Object> *
struct _ty988;  // FunctionProto Local<v8::Object> (v8::Isolate *) const
struct _ty989;  // TemplateSpecialization Local<v8::Object>
struct _ty990;  // TemplateTypeParm S
struct _ty991;  // LValueReference const PersistentBase<S> &
struct _ty992;  // TemplateSpecialization PersistentBase<S>
struct _ty993;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty994;  // TemplateTypeParm S
struct _ty995;  // LValueReference const Local<S> &
struct _ty996;  // TemplateSpecialization Local<S>
struct _ty997;  // FunctionProto bool (const Local<S> &) const
struct _ty998;  // TemplateTypeParm S
struct _ty999;  // LValueReference const PersistentBase<S> &
struct _ty1000;  // TemplateSpecialization PersistentBase<S>
struct _ty1001;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty1002;  // TemplateTypeParm S
struct _ty1003;  // LValueReference const Local<S> &
struct _ty1004;  // TemplateSpecialization Local<S>
struct _ty1005;  // FunctionProto bool (const Local<S> &) const
struct _ty1006;  // TemplateTypeParm P
struct _ty1007;  // Pointer P *
struct _ty1008;  // DependentName typename WeakCallbackInfo<P>::Callback
struct _ty1009;  // Enum v8::WeakCallbackType
struct _ty1010;  // FunctionProto void (P *, typename WeakCallbackInfo<P>::Callback, v8::WeakCallbackType)
struct _ty1011;  // TemplateTypeParm P
struct _ty1012;  // FunctionProto P *()
struct _ty1013;  // Pointer P *
struct _ty1014;  // Pointer const char *
struct _ty1015;  // Builtin char
struct _ty1016;  // FunctionProto void (const char *)
struct _ty1017;  // Typedef uint16_t
struct _ty1018;  // Builtin unsigned short
struct _ty1019;  // FunctionProto void (uint16_t)
struct _ty1020;  // FunctionProto uint16_t () const
struct _ty1021;  // LValueReference const v8::PersistentBase<v8::Object> &
struct _ty1022;  // FunctionProto void (const v8::PersistentBase<v8::Object> &)
struct _ty1023;  // Pointer v8::PersistentBase<v8::Promise> *
struct _ty1024;  // TemplateTypeParm S
struct _ty1025;  // LValueReference const Local<S> &
struct _ty1026;  // TemplateSpecialization Local<S>
struct _ty1027;  // FunctionProto void (v8::Isolate *, const Local<S> &)
struct _ty1028;  // TemplateTypeParm S
struct _ty1029;  // LValueReference const PersistentBase<S> &
struct _ty1030;  // TemplateSpecialization PersistentBase<S>
struct _ty1031;  // FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _ty1032;  // Pointer const v8::PersistentBase<v8::Promise> *
struct _ty1033;  // FunctionProto Local<v8::Promise> (v8::Isolate *) const
struct _ty1034;  // TemplateSpecialization Local<v8::Promise>
struct _ty1035;  // TemplateTypeParm S
struct _ty1036;  // LValueReference const PersistentBase<S> &
struct _ty1037;  // TemplateSpecialization PersistentBase<S>
struct _ty1038;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty1039;  // TemplateTypeParm S
struct _ty1040;  // LValueReference const Local<S> &
struct _ty1041;  // TemplateSpecialization Local<S>
struct _ty1042;  // FunctionProto bool (const Local<S> &) const
struct _ty1043;  // TemplateTypeParm S
struct _ty1044;  // LValueReference const PersistentBase<S> &
struct _ty1045;  // TemplateSpecialization PersistentBase<S>
struct _ty1046;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty1047;  // TemplateTypeParm S
struct _ty1048;  // LValueReference const Local<S> &
struct _ty1049;  // TemplateSpecialization Local<S>
struct _ty1050;  // FunctionProto bool (const Local<S> &) const
struct _ty1051;  // TemplateTypeParm P
struct _ty1052;  // Pointer P *
struct _ty1053;  // DependentName typename WeakCallbackInfo<P>::Callback
struct _ty1054;  // FunctionProto void (P *, typename WeakCallbackInfo<P>::Callback, v8::WeakCallbackType)
struct _ty1055;  // TemplateTypeParm P
struct _ty1056;  // FunctionProto P *()
struct _ty1057;  // Pointer P *
struct _ty1058;  // LValueReference const v8::PersistentBase<v8::Promise> &
struct _ty1059;  // FunctionProto void (const v8::PersistentBase<v8::Promise> &)
struct _ty1060;  // TemplateTypeParm T
struct _ty1061;  // TemplateTypeParm M
struct _ty1062;  // InjectedClassName Persistent<T, M>
struct _ty1063;  // Record v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >
struct _ty1064;  // Pointer v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > *
struct _ty1065;  // TemplateTypeParm S
struct _ty1066;  // TemplateSpecialization Local<S>
struct _ty1067;  // FunctionProto void (v8::Isolate *, Local<S>)
struct _ty1068;  // TemplateTypeParm S
struct _ty1069;  // TemplateTypeParm M2
struct _ty1070;  // LValueReference const Persistent<S, M2> &
struct _ty1071;  // TemplateSpecialization Persistent<S, M2>
struct _ty1072;  // FunctionProto void (v8::Isolate *, const Persistent<S, M2> &)
struct _ty1073;  // LValueReference const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _ty1074;  // FunctionProto void (const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _ty1075;  // TemplateTypeParm S
struct _ty1076;  // TemplateTypeParm M2
struct _ty1077;  // LValueReference const Persistent<S, M2> &
struct _ty1078;  // TemplateSpecialization Persistent<S, M2>
struct _ty1079;  // FunctionProto void (const Persistent<S, M2> &)
struct _ty1080;  // LValueReference const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _ty1081;  // TemplateSpecialization Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >
struct _ty1082;  // FunctionProto void (const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _ty1083;  // FunctionProto v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _ty1084;  // LValueReference v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _ty1085;  // TemplateTypeParm S
struct _ty1086;  // TemplateTypeParm M2
struct _ty1087;  // LValueReference const Persistent<S, M2> &
struct _ty1088;  // TemplateSpecialization Persistent<S, M2>
struct _ty1089;  // FunctionProto v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(const Persistent<S, M2> &)
struct _ty1090;  // LValueReference const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _ty1091;  // TemplateSpecialization Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >
struct _ty1092;  // FunctionProto v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _ty1093;  // FunctionProto void ()
struct _ty1094;  // TemplateTypeParm S
struct _ty1095;  // LValueReference const Persistent<S> &
struct _ty1096;  // TemplateSpecialization Persistent<S>
struct _ty1097;  // FunctionProto Persistent<v8::Promise> &(const Persistent<S> &)
struct _ty1098;  // LValueReference Persistent<v8::Promise> &
struct _ty1099;  // TemplateSpecialization Persistent<v8::Promise>
struct _ty1100;  // Record v8::Persistent<v8::Promise, v8::NonCopyablePersistentTraits<v8::Promise> >
struct _ty1101;  // TemplateTypeParm S
struct _ty1102;  // FunctionProto Persistent<S> &() const
struct _ty1103;  // LValueReference Persistent<S> &
struct _ty1104;  // TemplateSpecialization Persistent<S>
struct _ty1105;  // Pointer const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > *
struct _ty1106;  // Record v8::Persistent<v8::Value, v8::NonCopyablePersistentTraits<v8::Value> >
struct _ty1107;  // TemplateTypeParm T
struct _ty1108;  // InjectedClassName Global<T>
struct _ty1109;  // TemplateTypeParm T
struct _ty1110;  // InjectedClassName TracedGlobal<T>
struct _ty1111;  // Record v8::TracedGlobal<v8::Object>
struct _ty1112;  // FunctionProto void ()
struct _ty1113;  // Pointer v8::TracedGlobal<v8::Object> *
struct _ty1114;  // FunctionProto void ()
struct _ty1115;  // TemplateTypeParm S
struct _ty1116;  // TemplateSpecialization Local<S>
struct _ty1117;  // FunctionProto void (v8::Isolate *, Local<S>)
struct _ty1118;  // RValueReference v8::TracedGlobal<v8::Object> &&
struct _ty1119;  // FunctionProto void (v8::TracedGlobal<v8::Object> &&)
struct _ty1120;  // TemplateTypeParm S
struct _ty1121;  // RValueReference TracedGlobal<S> &&
struct _ty1122;  // TemplateSpecialization TracedGlobal<S>
struct _ty1123;  // FunctionProto v8::TracedGlobal<v8::Object> &(TracedGlobal<S> &&)
struct _ty1124;  // LValueReference v8::TracedGlobal<v8::Object> &
struct _ty1125;  // LValueReference const v8::TracedGlobal<v8::Object> &
struct _ty1126;  // FunctionProto void (const v8::TracedGlobal<v8::Object> &)
struct _ty1127;  // Pointer const v8::TracedGlobal<v8::Object> *
struct _ty1128;  // TemplateTypeParm S
struct _ty1129;  // LValueReference const Local<S> &
struct _ty1130;  // TemplateSpecialization Local<S>
struct _ty1131;  // FunctionProto void (v8::Isolate *, const Local<S> &)
struct _ty1132;  // FunctionProto Local<v8::Object> (v8::Isolate *) const
struct _ty1133;  // TemplateSpecialization Local<v8::Object>
struct _ty1134;  // TemplateTypeParm S
struct _ty1135;  // FunctionProto TracedGlobal<S> &() const
struct _ty1136;  // LValueReference TracedGlobal<S> &
struct _ty1137;  // TemplateSpecialization TracedGlobal<S>
struct _ty1138;  // TemplateTypeParm S
struct _ty1139;  // LValueReference const TracedGlobal<S> &
struct _ty1140;  // TemplateSpecialization TracedGlobal<S>
struct _ty1141;  // FunctionProto bool (const TracedGlobal<S> &) const
struct _ty1142;  // TemplateTypeParm S
struct _ty1143;  // LValueReference const Local<S> &
struct _ty1144;  // TemplateSpecialization Local<S>
struct _ty1145;  // FunctionProto bool (const Local<S> &) const
struct _ty1146;  // TemplateTypeParm S
struct _ty1147;  // LValueReference const TracedGlobal<S> &
struct _ty1148;  // TemplateSpecialization TracedGlobal<S>
struct _ty1149;  // FunctionProto bool (const TracedGlobal<S> &) const
struct _ty1150;  // TemplateTypeParm S
struct _ty1151;  // LValueReference const Local<S> &
struct _ty1152;  // TemplateSpecialization Local<S>
struct _ty1153;  // FunctionProto bool (const Local<S> &) const
struct _ty1154;  // Pointer void *
struct _ty1155;  // Elaborated WeakCallbackInfo<void>::Callback
struct _ty1156;  // Paren void (const WeakCallbackInfo<void> &)
struct _ty1157;  // LValueReference const WeakCallbackInfo<void> &
struct _ty1158;  // TemplateSpecialization WeakCallbackInfo<void>
struct _ty1159;  // Record v8::WeakCallbackInfo<void>
struct _ty1160;  // FunctionProto void (const WeakCallbackInfo<void> &)
struct _ty1161;  // Typedef v8::WeakCallbackInfo<void>::Callback
struct _ty1162;  // Pointer void (*)(const WeakCallbackInfo<void> &)
struct _ty1163;  // FunctionProto void (void *, WeakCallbackInfo<void>::Callback)
struct _ty1164;  // TemplateTypeParm K
struct _ty1165;  // TemplateTypeParm V
struct _ty1166;  // TemplateTypeParm T
struct _ty1167;  // InjectedClassName PersistentValueMap<K, V, T>
struct _ty1168;  // TemplateTypeParm K
struct _ty1169;  // TemplateTypeParm V
struct _ty1170;  // TemplateTypeParm T
struct _ty1171;  // InjectedClassName PersistentValueMapBase<K, V, T>
struct _ty1172;  // TemplateTypeParm K
struct _ty1173;  // TemplateTypeParm V
struct _ty1174;  // TemplateTypeParm T
struct _ty1175;  // InjectedClassName GlobalValueMap<K, V, T>
struct _ty1176;  // TemplateTypeParm V
struct _ty1177;  // TemplateTypeParm T
struct _ty1178;  // InjectedClassName PersistentValueVector<V, T>
struct _ty1179;  // TemplateTypeParm T
struct _ty1180;  // TemplateTypeParm P
struct _ty1181;  // InjectedClassName WeakCallbackObject<T, P>
struct _ty1182;  // TemplateTypeParm T
struct _ty1183;  // InjectedClassName FunctionCallbackInfo<T>
struct _ty1184;  // Record v8::FunctionCallbackInfo<v8::Value>
struct _ty1185;  // TemplateTypeParm T
struct _ty1186;  // InjectedClassName PropertyCallbackInfo<T>
struct _ty1187;  // Record v8::PropertyCallbackInfo<v8::Value>
struct _ty1188;  // Record v8::PropertyCallbackInfo<void>
struct _ty1189;  // Record v8::PropertyCallbackInfo<v8::Integer>
struct _ty1190;  // Record v8::PropertyCallbackInfo<v8::Boolean>
struct _ty1191;  // Record v8::PropertyCallbackInfo<v8::Array>
struct _ty1192;  // Record v8::CallHandlerHelper
struct _ty1193;  // Record v8::EscapableHandleScope
struct _ty1194;  // TemplateTypeParm T
struct _ty1195;  // InjectedClassName ReturnValue<T>
struct _ty1196;  // Record v8::debug::ConsoleCallArguments
struct _ty1197;  // TemplateTypeParm T
struct _ty1198;  // Pointer Local<T> *
struct _ty1199;  // TemplateTypeParm S
struct _ty1200;  // TemplateSpecialization Local<S>
struct _ty1201;  // FunctionProto void (Local<S>)
struct _ty1202;  // Pointer const Local<T> *
struct _ty1203;  // FunctionProto T *() const
struct _ty1204;  // Pointer T *
struct _ty1205;  // TemplateTypeParm S
struct _ty1206;  // LValueReference const Local<S> &
struct _ty1207;  // TemplateSpecialization Local<S>
struct _ty1208;  // FunctionProto bool (const Local<S> &) const
struct _ty1209;  // TemplateTypeParm S
struct _ty1210;  // LValueReference const PersistentBase<S> &
struct _ty1211;  // TemplateSpecialization PersistentBase<S>
struct _ty1212;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty1213;  // TemplateTypeParm S
struct _ty1214;  // LValueReference const Local<S> &
struct _ty1215;  // TemplateSpecialization Local<S>
struct _ty1216;  // FunctionProto bool (const Local<S> &) const
struct _ty1217;  // TemplateTypeParm S
struct _ty1218;  // LValueReference const Persistent<S> &
struct _ty1219;  // TemplateSpecialization Persistent<S>
struct _ty1220;  // FunctionProto bool (const Persistent<S> &) const
struct _ty1221;  // TemplateTypeParm S
struct _ty1222;  // TemplateSpecialization Local<S>
struct _ty1223;  // FunctionProto Local<T> (Local<S>)
struct _ty1224;  // TemplateSpecialization Local<T>
struct _ty1225;  // TemplateTypeParm S
struct _ty1226;  // FunctionProto Local<S> () const
struct _ty1227;  // TemplateSpecialization Local<S>
struct _ty1228;  // TemplateSpecialization Local<T>
struct _ty1229;  // FunctionProto Local<T> (v8::Isolate *, Local<T>)
struct _ty1230;  // TemplateSpecialization Local<T>
struct _ty1231;  // LValueReference const PersistentBase<T> &
struct _ty1232;  // TemplateSpecialization PersistentBase<T>
struct _ty1233;  // FunctionProto Local<T> (v8::Isolate *, const PersistentBase<T> &)
struct _ty1234;  // TemplateSpecialization Local<T>
struct _ty1235;  // LValueReference const TracedGlobal<T> &
struct _ty1236;  // TemplateSpecialization TracedGlobal<T>
struct _ty1237;  // FunctionProto Local<T> (v8::Isolate *, const TracedGlobal<T> &)
struct _ty1238;  // TemplateSpecialization Local<T>
struct _ty1239;  // Typedef v8::Handle
struct _ty1240;  // TemplateSpecialization Local<T>
struct _ty1241;  // TemplateTypeParm T
struct _ty1242;  // TemplateTypeParm T
struct _ty1243;  // Pointer MaybeLocal<T> *
struct _ty1244;  // TemplateTypeParm S
struct _ty1245;  // TemplateSpecialization Local<S>
struct _ty1246;  // FunctionProto void (Local<S>)
struct _ty1247;  // Pointer const MaybeLocal<T> *
struct _ty1248;  // TemplateTypeParm S
struct _ty1249;  // Pointer Local<S> *
struct _ty1250;  // TemplateSpecialization Local<S>
struct _ty1251;  // FunctionProto bool (Local<S> *) const
struct _ty1252;  // FunctionProto Local<T> ()
struct _ty1253;  // TemplateSpecialization Local<T>
struct _ty1254;  // TemplateTypeParm S
struct _ty1255;  // TemplateSpecialization Local<S>
struct _ty1256;  // FunctionProto Local<S> (Local<S>) const
struct _ty1257;  // TemplateSpecialization Local<S>
struct _ty1258;  // TemplateTypeParm T
struct _ty1259;  // Pointer Eternal<T> *
struct _ty1260;  // TemplateTypeParm S
struct _ty1261;  // TemplateSpecialization Local<S>
struct _ty1262;  // FunctionProto void (v8::Isolate *, Local<S>)
struct _ty1263;  // FunctionProto Local<T> (v8::Isolate *) const
struct _ty1264;  // TemplateSpecialization Local<T>
struct _ty1265;  // Pointer const Eternal<T> *
struct _ty1266;  // TemplateTypeParm S
struct _ty1267;  // TemplateSpecialization Local<S>
struct _ty1268;  // FunctionProto void (v8::Isolate *, Local<S>)
struct _ty1269;  // Builtin int
struct _ty1270;  // TemplateTypeParm T
struct _ty1271;  // InjectedClassName WeakCallbackInfo<T>
struct _ty1272;  // Typedef v8::WeakCallbackInfo::Callback
struct _ty1273;  // Paren void (const WeakCallbackInfo<T> &)
struct _ty1274;  // LValueReference const WeakCallbackInfo<T> &
struct _ty1275;  // TemplateSpecialization WeakCallbackInfo<T>
struct _ty1276;  // FunctionProto void (const WeakCallbackInfo<T> &)
struct _ty1277;  // Pointer void (*)(const WeakCallbackInfo<T> &)
struct _ty1278;  // Pointer T *
struct _ty1279;  // Decayed void **
struct _ty1280;  // Pointer void **
struct _ty1281;  // Pointer v8::WeakCallbackInfo::Callback *
struct _ty1282;  // FunctionProto void (v8::Isolate *, T *, void **, v8::WeakCallbackInfo::Callback *)
struct _ty1283;  // Pointer WeakCallbackInfo<T> *
struct _ty1284;  // FunctionProto v8::Isolate *() const
struct _ty1285;  // Pointer const WeakCallbackInfo<T> *
struct _ty1286;  // FunctionProto T *() const
struct _ty1287;  // FunctionProto void *(int) const
struct _ty1288;  // FunctionProto void (v8::WeakCallbackInfo::Callback) const
struct _ty1289;  // Pointer void *
struct _ty1290;  // SubstTemplateTypeParm void
struct _ty1291;  // Pointer v8::WeakCallbackInfo<void>::Callback *
struct _ty1292;  // FunctionProto void (v8::Isolate *, void *, void **, v8::WeakCallbackInfo<void>::Callback *)
struct _ty1293;  // Pointer v8::WeakCallbackInfo<void> *
struct _ty1294;  // Pointer const v8::WeakCallbackInfo<void> *
struct _ty1295;  // FunctionProto void *() const
struct _ty1296;  // FunctionProto void (v8::WeakCallbackInfo<void>::Callback) const
struct _ty1297;  // TemplateTypeParm T
struct _ty1298;  // Pointer PersistentBase<T> *
struct _ty1299;  // TemplateTypeParm S
struct _ty1300;  // LValueReference const Local<S> &
struct _ty1301;  // TemplateSpecialization Local<S>
struct _ty1302;  // FunctionProto void (v8::Isolate *, const Local<S> &)
struct _ty1303;  // TemplateTypeParm S
struct _ty1304;  // LValueReference const PersistentBase<S> &
struct _ty1305;  // TemplateSpecialization PersistentBase<S>
struct _ty1306;  // FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _ty1307;  // Pointer const PersistentBase<T> *
struct _ty1308;  // FunctionProto Local<T> (v8::Isolate *) const
struct _ty1309;  // TemplateSpecialization Local<T>
struct _ty1310;  // TemplateTypeParm S
struct _ty1311;  // LValueReference const PersistentBase<S> &
struct _ty1312;  // TemplateSpecialization PersistentBase<S>
struct _ty1313;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty1314;  // TemplateTypeParm S
struct _ty1315;  // LValueReference const Local<S> &
struct _ty1316;  // TemplateSpecialization Local<S>
struct _ty1317;  // FunctionProto bool (const Local<S> &) const
struct _ty1318;  // TemplateTypeParm S
struct _ty1319;  // LValueReference const PersistentBase<S> &
struct _ty1320;  // TemplateSpecialization PersistentBase<S>
struct _ty1321;  // FunctionProto bool (const PersistentBase<S> &) const
struct _ty1322;  // TemplateTypeParm S
struct _ty1323;  // LValueReference const Local<S> &
struct _ty1324;  // TemplateSpecialization Local<S>
struct _ty1325;  // FunctionProto bool (const Local<S> &) const
struct _ty1326;  // TemplateTypeParm P
struct _ty1327;  // Pointer P *
struct _ty1328;  // DependentName typename WeakCallbackInfo<P>::Callback
struct _ty1329;  // FunctionProto void (P *, typename WeakCallbackInfo<P>::Callback, v8::WeakCallbackType)
struct _ty1330;  // TemplateTypeParm P
struct _ty1331;  // FunctionProto P *()
struct _ty1332;  // Pointer P *
struct _ty1333;  // LValueReference const PersistentBase<T> &
struct _ty1334;  // FunctionProto void (const PersistentBase<T> &)
struct _ty1335;  // TemplateTypeParm T
struct _ty1336;  // Typedef v8::NonCopyablePersistentTraits::NonCopyablePersistent
struct _ty1337;  // TemplateSpecialization Persistent<T, NonCopyablePersistentTraits<T> >
struct _ty1338;  // TemplateTypeParm S
struct _ty1339;  // TemplateTypeParm M
struct _ty1340;  // LValueReference const Persistent<S, M> &
struct _ty1341;  // TemplateSpecialization Persistent<S, M>
struct _ty1342;  // Pointer v8::NonCopyablePersistentTraits::NonCopyablePersistent *
struct _ty1343;  // FunctionProto void (const Persistent<S, M> &, v8::NonCopyablePersistentTraits::NonCopyablePersistent *)
struct _ty1344;  // TemplateTypeParm O
struct _ty1345;  // TemplateTypeParm T
struct _ty1346;  // InjectedClassName CopyablePersistentTraits<T>
struct _ty1347;  // Typedef v8::CopyablePersistentTraits::CopyablePersistent
struct _ty1348;  // TemplateSpecialization Persistent<T, CopyablePersistentTraits<T> >
struct _ty1349;  // TemplateTypeParm S
struct _ty1350;  // TemplateTypeParm M
struct _ty1351;  // LValueReference const Persistent<S, M> &
struct _ty1352;  // TemplateSpecialization Persistent<S, M>
struct _ty1353;  // Pointer v8::CopyablePersistentTraits::CopyablePersistent *
struct _ty1354;  // FunctionProto void (const Persistent<S, M> &, v8::CopyablePersistentTraits::CopyablePersistent *)
struct _ty1355;  // Record v8::CopyablePersistentTraits<v8::Promise>
struct _ty1356;  // TemplateTypeParm T
struct _ty1357;  // TemplateTypeParm M
struct _ty1358;  // Pointer Persistent<T, M> *
struct _ty1359;  // TemplateTypeParm S
struct _ty1360;  // TemplateSpecialization Local<S>
struct _ty1361;  // FunctionProto void (v8::Isolate *, Local<S>)
struct _ty1362;  // TemplateTypeParm S
struct _ty1363;  // TemplateTypeParm M2
struct _ty1364;  // LValueReference const Persistent<S, M2> &
struct _ty1365;  // TemplateSpecialization Persistent<S, M2>
struct _ty1366;  // FunctionProto void (v8::Isolate *, const Persistent<S, M2> &)
struct _ty1367;  // LValueReference const Persistent<T, M> &
struct _ty1368;  // FunctionProto void (const Persistent<T, M> &)
struct _ty1369;  // TemplateTypeParm S
struct _ty1370;  // TemplateTypeParm M2
struct _ty1371;  // LValueReference const Persistent<S, M2> &
struct _ty1372;  // TemplateSpecialization Persistent<S, M2>
struct _ty1373;  // FunctionProto void (const Persistent<S, M2> &)
struct _ty1374;  // FunctionProto Persistent<T, M> &(const Persistent<T, M> &)
struct _ty1375;  // LValueReference Persistent<T, M> &
struct _ty1376;  // TemplateTypeParm S
struct _ty1377;  // TemplateTypeParm M2
struct _ty1378;  // LValueReference const Persistent<S, M2> &
struct _ty1379;  // TemplateSpecialization Persistent<S, M2>
struct _ty1380;  // FunctionProto Persistent<T, M> &(const Persistent<S, M2> &)
struct _ty1381;  // TemplateTypeParm S
struct _ty1382;  // LValueReference const Persistent<S> &
struct _ty1383;  // TemplateSpecialization Persistent<S>
struct _ty1384;  // FunctionProto Persistent<T> &(const Persistent<S> &)
struct _ty1385;  // LValueReference Persistent<T> &
struct _ty1386;  // TemplateSpecialization Persistent<T>
struct _ty1387;  // TemplateTypeParm S
struct _ty1388;  // FunctionProto Persistent<S> &() const
struct _ty1389;  // LValueReference Persistent<S> &
struct _ty1390;  // TemplateSpecialization Persistent<S>
struct _ty1391;  // Pointer const Persistent<T, M> *
struct _ty1392;  // TemplateTypeParm T
struct _ty1393;  // Pointer Global<T> *
struct _ty1394;  // TemplateTypeParm S
struct _ty1395;  // TemplateSpecialization Local<S>
struct _ty1396;  // FunctionProto void (v8::Isolate *, Local<S>)
struct _ty1397;  // TemplateTypeParm S
struct _ty1398;  // LValueReference const PersistentBase<S> &
struct _ty1399;  // TemplateSpecialization PersistentBase<S>
struct _ty1400;  // FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _ty1401;  // RValueReference Global<T> &&
struct _ty1402;  // FunctionProto void (Global<T> &&)
struct _ty1403;  // TemplateTypeParm S
struct _ty1404;  // RValueReference Global<S> &&
struct _ty1405;  // TemplateSpecialization Global<S>
struct _ty1406;  // FunctionProto Global<T> &(Global<S> &&)
struct _ty1407;  // LValueReference Global<T> &
struct _ty1408;  // FunctionProto Global<T> ()
struct _ty1409;  // Typedef v8::Global::MoveOnlyTypeForCPP03
struct _ty1410;  // LValueReference const Global<T> &
struct _ty1411;  // FunctionProto void (const Global<T> &)
struct _ty1412;  // Typedef v8::UniquePersistent
struct _ty1413;  // TemplateSpecialization Global<T>
struct _ty1414;  // TemplateTypeParm T
struct _ty1415;  // TemplateTypeParm T
struct _ty1416;  // Pointer TracedGlobal<T> *
struct _ty1417;  // TemplateTypeParm S
struct _ty1418;  // TemplateSpecialization Local<S>
struct _ty1419;  // FunctionProto void (v8::Isolate *, Local<S>)
struct _ty1420;  // RValueReference TracedGlobal<T> &&
struct _ty1421;  // FunctionProto void (TracedGlobal<T> &&)
struct _ty1422;  // TemplateTypeParm S
struct _ty1423;  // RValueReference TracedGlobal<S> &&
struct _ty1424;  // TemplateSpecialization TracedGlobal<S>
struct _ty1425;  // FunctionProto TracedGlobal<T> &(TracedGlobal<S> &&)
struct _ty1426;  // LValueReference TracedGlobal<T> &
struct _ty1427;  // LValueReference const TracedGlobal<T> &
struct _ty1428;  // FunctionProto void (const TracedGlobal<T> &)
struct _ty1429;  // Pointer const TracedGlobal<T> *
struct _ty1430;  // TemplateTypeParm S
struct _ty1431;  // LValueReference const Local<S> &
struct _ty1432;  // TemplateSpecialization Local<S>
struct _ty1433;  // FunctionProto void (v8::Isolate *, const Local<S> &)
struct _ty1434;  // FunctionProto Local<T> (v8::Isolate *) const
struct _ty1435;  // TemplateSpecialization Local<T>
struct _ty1436;  // TemplateTypeParm S
struct _ty1437;  // FunctionProto TracedGlobal<S> &() const
struct _ty1438;  // LValueReference TracedGlobal<S> &
struct _ty1439;  // TemplateSpecialization TracedGlobal<S>
struct _ty1440;  // TemplateTypeParm S
struct _ty1441;  // LValueReference const TracedGlobal<S> &
struct _ty1442;  // TemplateSpecialization TracedGlobal<S>
struct _ty1443;  // FunctionProto bool (const TracedGlobal<S> &) const
struct _ty1444;  // TemplateTypeParm S
struct _ty1445;  // LValueReference const Local<S> &
struct _ty1446;  // TemplateSpecialization Local<S>
struct _ty1447;  // FunctionProto bool (const Local<S> &) const
struct _ty1448;  // TemplateTypeParm S
struct _ty1449;  // LValueReference const TracedGlobal<S> &
struct _ty1450;  // TemplateSpecialization TracedGlobal<S>
struct _ty1451;  // FunctionProto bool (const TracedGlobal<S> &) const
struct _ty1452;  // TemplateTypeParm S
struct _ty1453;  // LValueReference const Local<S> &
struct _ty1454;  // TemplateSpecialization Local<S>
struct _ty1455;  // FunctionProto bool (const Local<S> &) const
struct _ty1456;  // Record v8::HandleScope
struct _ty1457;  // FunctionProto void (v8::Isolate *)
struct _ty1458;  // Pointer v8::HandleScope *
struct _ty1459;  // FunctionProto void ()
struct _ty1460;  // FunctionProto int (v8::Isolate *)
struct _ty1461;  // Pointer const v8::HandleScope *
struct _ty1462;  // LValueReference const v8::HandleScope &
struct _ty1463;  // FunctionProto void (const v8::HandleScope &)
struct _ty1464;  // FunctionProto void ()
struct _ty1465;  // Pointer internal::Isolate *
struct _ty1466;  // Elaborated internal::Isolate
struct _ty1467;  // Record v8::internal::Isolate
struct _ty1468;  // Elaborated internal::Address
struct _ty1469;  // Typedef v8::internal::Address
struct _ty1470;  // Typedef uintptr_t
struct _ty1471;  // Builtin unsigned long long
struct _ty1472;  // FunctionProto internal::Address *(internal::Isolate *, internal::Address)
struct _ty1473;  // Pointer internal::Address *
struct _ty1474;  // Pointer v8::EscapableHandleScope *
struct _ty1475;  // FunctionProto void ()
struct _ty1476;  // TemplateTypeParm T
struct _ty1477;  // TemplateSpecialization Local<T>
struct _ty1478;  // FunctionProto Local<T> (Local<T>)
struct _ty1479;  // TemplateSpecialization Local<T>
struct _ty1480;  // TemplateTypeParm T
struct _ty1481;  // TemplateSpecialization MaybeLocal<T>
struct _ty1482;  // FunctionProto MaybeLocal<T> (MaybeLocal<T>)
struct _ty1483;  // TemplateSpecialization MaybeLocal<T>
struct _ty1484;  // LValueReference const v8::EscapableHandleScope &
struct _ty1485;  // FunctionProto void (const v8::EscapableHandleScope &)
struct _ty1486;  // Record v8::SealHandleScope
struct _ty1487;  // Pointer v8::SealHandleScope *
struct _ty1488;  // FunctionProto void ()
struct _ty1489;  // LValueReference const v8::SealHandleScope &
struct _ty1490;  // FunctionProto void (const v8::SealHandleScope &)
struct _ty1491;  // Record v8::ScriptOrModule
struct _ty1492;  // FunctionProto Local<v8::Value> ()
struct _ty1493;  // TemplateSpecialization Local<v8::Value>
struct _ty1494;  // Pointer v8::ScriptOrModule *
struct _ty1495;  // FunctionProto Local<v8::PrimitiveArray> ()
struct _ty1496;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty1497;  // FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, int)
struct _ty1498;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty1499;  // FunctionProto int () const
struct _ty1500;  // Pointer const v8::PrimitiveArray *
struct _ty1501;  // TemplateSpecialization Local<v8::Primitive>
struct _ty1502;  // FunctionProto void (v8::Isolate *, int, Local<v8::Primitive>)
struct _ty1503;  // Pointer v8::PrimitiveArray *
struct _ty1504;  // FunctionProto Local<v8::Primitive> (v8::Isolate *, int)
struct _ty1505;  // TemplateSpecialization Local<v8::Primitive>
struct _ty1506;  // Record v8::ScriptOriginOptions
struct _ty1507;  // FunctionProto void (bool, bool, bool, bool)
struct _ty1508;  // Pointer v8::ScriptOriginOptions *
struct _ty1509;  // FunctionProto void (int)
struct _ty1510;  // Pointer const v8::ScriptOriginOptions *
struct _ty1511;  // LValueReference const v8::ScriptOriginOptions &
struct _ty1512;  // FunctionProto void (const v8::ScriptOriginOptions &) noexcept
struct _ty1513;  // RValueReference v8::ScriptOriginOptions &&
struct _ty1514;  // FunctionProto void (v8::ScriptOriginOptions &&) noexcept
struct _ty1515;  // FunctionProto v8::ScriptOriginOptions &(const v8::ScriptOriginOptions &)
struct _ty1516;  // LValueReference v8::ScriptOriginOptions &
struct _ty1517;  // FunctionProto v8::ScriptOriginOptions &(v8::ScriptOriginOptions &&)
struct _ty1518;  // Record v8::ScriptOrigin
struct _ty1519;  // TemplateSpecialization Local<v8::Value>
struct _ty1520;  // TemplateSpecialization Local<v8::Integer>
struct _ty1521;  // TemplateSpecialization Local<v8::Integer>
struct _ty1522;  // TemplateSpecialization Local<v8::Boolean>
struct _ty1523;  // TemplateSpecialization Local<v8::Integer>
struct _ty1524;  // TemplateSpecialization Local<v8::Value>
struct _ty1525;  // TemplateSpecialization Local<v8::Boolean>
struct _ty1526;  // TemplateSpecialization Local<v8::Boolean>
struct _ty1527;  // TemplateSpecialization Local<v8::Boolean>
struct _ty1528;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty1529;  // FunctionProto void (Local<v8::Value>, Local<v8::Integer>, Local<v8::Integer>, Local<v8::Boolean>, Local<v8::Integer>, Local<v8::Value>, Local<v8::Boolean>, Local<v8::Boolean>, Local<v8::Boolean>, Local<v8::PrimitiveArray>)
struct _ty1530;  // Pointer v8::ScriptOrigin *
struct _ty1531;  // FunctionProto Local<v8::Value> () const
struct _ty1532;  // TemplateSpecialization Local<v8::Value>
struct _ty1533;  // Pointer const v8::ScriptOrigin *
struct _ty1534;  // FunctionProto Local<v8::Integer> () const
struct _ty1535;  // TemplateSpecialization Local<v8::Integer>
struct _ty1536;  // FunctionProto Local<v8::Integer> () const
struct _ty1537;  // TemplateSpecialization Local<v8::Integer>
struct _ty1538;  // FunctionProto Local<v8::Integer> () const
struct _ty1539;  // TemplateSpecialization Local<v8::Integer>
struct _ty1540;  // FunctionProto Local<v8::Value> () const
struct _ty1541;  // TemplateSpecialization Local<v8::Value>
struct _ty1542;  // FunctionProto Local<v8::PrimitiveArray> () const
struct _ty1543;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty1544;  // FunctionProto v8::ScriptOriginOptions () const
struct _ty1545;  // LValueReference const v8::ScriptOrigin &
struct _ty1546;  // FunctionProto void (const v8::ScriptOrigin &)
struct _ty1547;  // RValueReference v8::ScriptOrigin &&
struct _ty1548;  // FunctionProto v8::ScriptOrigin &(v8::ScriptOrigin &&)
struct _ty1549;  // LValueReference v8::ScriptOrigin &
struct _ty1550;  // FunctionProto void (v8::ScriptOrigin &&)
struct _ty1551;  // FunctionProto Local<v8::Script> ()
struct _ty1552;  // TemplateSpecialization Local<v8::Script>
struct _ty1553;  // Pointer v8::UnboundScript *
struct _ty1554;  // FunctionProto int ()
struct _ty1555;  // FunctionProto Local<v8::Value> ()
struct _ty1556;  // TemplateSpecialization Local<v8::Value>
struct _ty1557;  // FunctionProto Local<v8::Value> ()
struct _ty1558;  // TemplateSpecialization Local<v8::Value>
struct _ty1559;  // FunctionProto Local<v8::Value> ()
struct _ty1560;  // TemplateSpecialization Local<v8::Value>
struct _ty1561;  // FunctionProto int (int)
struct _ty1562;  // Record v8::UnboundModuleScript
struct _ty1563;  // Record v8::Location
struct _ty1564;  // Pointer v8::Location *
struct _ty1565;  // FunctionProto void (int, int)
struct _ty1566;  // Record v8::Module
struct _ty1567;  // Enum v8::Module::Status
struct _ty1568;  // FunctionProto v8::Module::Status () const
struct _ty1569;  // Pointer const v8::Module *
struct _ty1570;  // FunctionProto Local<v8::Value> () const
struct _ty1571;  // TemplateSpecialization Local<v8::Value>
struct _ty1572;  // FunctionProto Local<v8::String> (int) const
struct _ty1573;  // TemplateSpecialization Local<v8::String>
struct _ty1574;  // FunctionProto v8::Location (int) const
struct _ty1575;  // Typedef v8::Module::ResolveCallback
struct _ty1576;  // Paren MaybeLocal<v8::Module> (Local<v8::Context>, Local<v8::String>, Local<v8::Module>)
struct _ty1577;  // TemplateSpecialization MaybeLocal<v8::Module>
struct _ty1578;  // TemplateSpecialization Local<v8::Context>
struct _ty1579;  // TemplateSpecialization Local<v8::String>
struct _ty1580;  // TemplateSpecialization Local<v8::Module>
struct _ty1581;  // FunctionProto MaybeLocal<v8::Module> (Local<v8::Context>, Local<v8::String>, Local<v8::Module>)
struct _ty1582;  // Pointer MaybeLocal<v8::Module> (*)(Local<v8::Context>, Local<v8::String>, Local<v8::Module>)
struct _ty1583;  // TemplateSpecialization Local<v8::Context>
struct _ty1584;  // FunctionProto Maybe<bool> (Local<v8::Context>, v8::Module::ResolveCallback)
struct _ty1585;  // TemplateSpecialization Maybe<bool>
struct _ty1586;  // Pointer v8::Module *
struct _ty1587;  // TemplateSpecialization Local<v8::Context>
struct _ty1588;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>)
struct _ty1589;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty1590;  // FunctionProto Local<v8::Value> ()
struct _ty1591;  // TemplateSpecialization Local<v8::Value>
struct _ty1592;  // FunctionProto Local<v8::UnboundModuleScript> ()
struct _ty1593;  // TemplateSpecialization Local<v8::UnboundModuleScript>
struct _ty1594;  // TemplateSpecialization Local<v8::Context>
struct _ty1595;  // TemplateSpecialization Local<v8::String>
struct _ty1596;  // FunctionProto MaybeLocal<v8::Script> (Local<v8::Context>, Local<v8::String>, v8::ScriptOrigin *)
struct _ty1597;  // TemplateSpecialization MaybeLocal<v8::Script>
struct _ty1598;  // TemplateSpecialization Local<v8::Context>
struct _ty1599;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>)
struct _ty1600;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty1601;  // Pointer v8::Script *
struct _ty1602;  // FunctionProto Local<v8::UnboundScript> ()
struct _ty1603;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty1604;  // Record v8::ScriptCompiler
struct _ty1605;  // Record v8::ScriptCompiler::CachedData
struct _ty1606;  // Enum v8::ScriptCompiler::CachedData::BufferPolicy
struct _ty1607;  // Pointer v8::ScriptCompiler::CachedData *
struct _ty1608;  // Pointer const uint8_t *
struct _ty1609;  // Typedef uint8_t
struct _ty1610;  // Builtin unsigned char
struct _ty1611;  // FunctionProto void (const uint8_t *, int, v8::ScriptCompiler::CachedData::BufferPolicy)
struct _ty1612;  // LValueReference const v8::ScriptCompiler::CachedData &
struct _ty1613;  // FunctionProto void (const v8::ScriptCompiler::CachedData &)
struct _ty1614;  // FunctionProto v8::ScriptCompiler::CachedData &(const v8::ScriptCompiler::CachedData &)
struct _ty1615;  // LValueReference v8::ScriptCompiler::CachedData &
struct _ty1616;  // Record v8::ScriptCompiler::Source
struct _ty1617;  // TemplateSpecialization Local<v8::String>
struct _ty1618;  // FunctionProto void (Local<v8::String>, const v8::ScriptOrigin &, v8::ScriptCompiler::CachedData *)
struct _ty1619;  // Pointer v8::ScriptCompiler::Source *
struct _ty1620;  // TemplateSpecialization Local<v8::String>
struct _ty1621;  // FunctionProto void (Local<v8::String>, v8::ScriptCompiler::CachedData *)
struct _ty1622;  // FunctionProto const v8::ScriptCompiler::CachedData *() const
struct _ty1623;  // Pointer const v8::ScriptCompiler::CachedData *
struct _ty1624;  // Pointer const v8::ScriptCompiler::Source *
struct _ty1625;  // FunctionProto const v8::ScriptOriginOptions &() const
struct _ty1626;  // LValueReference const v8::ScriptCompiler::Source &
struct _ty1627;  // FunctionProto void (const v8::ScriptCompiler::Source &)
struct _ty1628;  // FunctionProto v8::ScriptCompiler::Source &(const v8::ScriptCompiler::Source &)
struct _ty1629;  // LValueReference v8::ScriptCompiler::Source &
struct _ty1630;  // Record v8::ScriptCompiler::ExternalSourceStream
struct _ty1631;  // FunctionProto void ()
struct _ty1632;  // Pointer v8::ScriptCompiler::ExternalSourceStream *
struct _ty1633;  // Pointer const uint8_t **
struct _ty1634;  // FunctionProto size_t (const uint8_t **)
struct _ty1635;  // Typedef size_t
struct _ty1636;  // FunctionProto bool ()
struct _ty1637;  // LValueReference const v8::ScriptCompiler::ExternalSourceStream &
struct _ty1638;  // FunctionProto v8::ScriptCompiler::ExternalSourceStream &(const v8::ScriptCompiler::ExternalSourceStream &)
struct _ty1639;  // LValueReference v8::ScriptCompiler::ExternalSourceStream &
struct _ty1640;  // Record v8::ScriptCompiler::StreamedSource
struct _ty1641;  // Enum v8::ScriptCompiler::StreamedSource::Encoding
struct _ty1642;  // FunctionProto void (v8::ScriptCompiler::ExternalSourceStream *, v8::ScriptCompiler::StreamedSource::Encoding)
struct _ty1643;  // Pointer v8::ScriptCompiler::StreamedSource *
struct _ty1644;  // Elaborated std::unique_ptr<ExternalSourceStream>
struct _ty1645;  // TemplateSpecialization unique_ptr<v8::ScriptCompiler::ExternalSourceStream>
struct _ty1646;  // Record std::unique_ptr<v8::ScriptCompiler::ExternalSourceStream, std::default_delete<v8::ScriptCompiler::ExternalSourceStream> >
struct _ty1647;  // FunctionProto void (std::unique_ptr<ExternalSourceStream>, v8::ScriptCompiler::StreamedSource::Encoding)
struct _ty1648;  // FunctionProto void ()
struct _ty1649;  // FunctionProto internal::ScriptStreamingData *() const
struct _ty1650;  // Pointer internal::ScriptStreamingData *
struct _ty1651;  // Elaborated internal::ScriptStreamingData
struct _ty1652;  // Record v8::internal::ScriptStreamingData
struct _ty1653;  // Pointer const v8::ScriptCompiler::StreamedSource *
struct _ty1654;  // LValueReference const v8::ScriptCompiler::StreamedSource &
struct _ty1655;  // FunctionProto void (const v8::ScriptCompiler::StreamedSource &)
struct _ty1656;  // FunctionProto v8::ScriptCompiler::StreamedSource &(const v8::ScriptCompiler::StreamedSource &)
struct _ty1657;  // LValueReference v8::ScriptCompiler::StreamedSource &
struct _ty1658;  // Record v8::ScriptCompiler::ScriptStreamingTask
struct _ty1659;  // Pointer v8::ScriptCompiler::ScriptStreamingTask *
struct _ty1660;  // Enum v8::ScriptCompiler::CompileOptions
struct _ty1661;  // Enum v8::ScriptCompiler::NoCacheReason
struct _ty1662;  // FunctionProto MaybeLocal<v8::UnboundScript> (v8::Isolate *, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _ty1663;  // TemplateSpecialization MaybeLocal<v8::UnboundScript>
struct _ty1664;  // TemplateSpecialization Local<v8::Context>
struct _ty1665;  // FunctionProto MaybeLocal<v8::Script> (Local<v8::Context>, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _ty1666;  // TemplateSpecialization MaybeLocal<v8::Script>
struct _ty1667;  // FunctionProto v8::ScriptCompiler::ScriptStreamingTask *(v8::Isolate *, v8::ScriptCompiler::StreamedSource *, v8::ScriptCompiler::CompileOptions)
struct _ty1668;  // TemplateSpecialization Local<v8::Context>
struct _ty1669;  // TemplateSpecialization Local<v8::String>
struct _ty1670;  // FunctionProto MaybeLocal<v8::Script> (Local<v8::Context>, v8::ScriptCompiler::StreamedSource *, Local<v8::String>, const v8::ScriptOrigin &)
struct _ty1671;  // TemplateSpecialization MaybeLocal<v8::Script>
struct _ty1672;  // FunctionProto uint32_t ()
struct _ty1673;  // Typedef uint32_t
struct _ty1674;  // Builtin unsigned int
struct _ty1675;  // FunctionProto MaybeLocal<v8::Module> (v8::Isolate *, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _ty1676;  // TemplateSpecialization MaybeLocal<v8::Module>
struct _ty1677;  // TemplateSpecialization Local<v8::Context>
struct _ty1678;  // Decayed Local<v8::String> *
struct _ty1679;  // TemplateSpecialization Local<v8::String>
struct _ty1680;  // Pointer Local<v8::String> *
struct _ty1681;  // Decayed Local<v8::Object> *
struct _ty1682;  // TemplateSpecialization Local<v8::Object>
struct _ty1683;  // Pointer Local<v8::Object> *
struct _ty1684;  // FunctionProto MaybeLocal<v8::Function> (Local<v8::Context>, v8::ScriptCompiler::Source *, size_t, Local<v8::String> *, size_t, Local<v8::Object> *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _ty1685;  // TemplateSpecialization MaybeLocal<v8::Function>
struct _ty1686;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty1687;  // FunctionProto v8::ScriptCompiler::CachedData *(Local<v8::UnboundScript>)
struct _ty1688;  // TemplateSpecialization Local<v8::UnboundModuleScript>
struct _ty1689;  // FunctionProto v8::ScriptCompiler::CachedData *(Local<v8::UnboundModuleScript>)
struct _ty1690;  // TemplateSpecialization Local<v8::Function>
struct _ty1691;  // FunctionProto v8::ScriptCompiler::CachedData *(Local<v8::Function>)
struct _ty1692;  // Record v8::Message
struct _ty1693;  // FunctionProto Local<v8::String> () const
struct _ty1694;  // TemplateSpecialization Local<v8::String>
struct _ty1695;  // Pointer const v8::Message *
struct _ty1696;  // TemplateSpecialization Local<v8::Context>
struct _ty1697;  // FunctionProto MaybeLocal<v8::String> (Local<v8::Context>) const
struct _ty1698;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1699;  // FunctionProto v8::ScriptOrigin () const
struct _ty1700;  // FunctionProto Local<v8::Value> () const
struct _ty1701;  // TemplateSpecialization Local<v8::Value>
struct _ty1702;  // FunctionProto Local<v8::StackTrace> () const
struct _ty1703;  // TemplateSpecialization Local<v8::StackTrace>
struct _ty1704;  // TemplateSpecialization Local<v8::Context>
struct _ty1705;  // FunctionProto Maybe<int> (Local<v8::Context>) const
struct _ty1706;  // TemplateSpecialization Maybe<int>
struct _ty1707;  // TemplateSpecialization Local<v8::Context>
struct _ty1708;  // FunctionProto Maybe<int> (Local<v8::Context>) const
struct _ty1709;  // TemplateSpecialization Maybe<int>
struct _ty1710;  // TemplateSpecialization Local<v8::Context>
struct _ty1711;  // FunctionProto Maybe<int> (Local<v8::Context>) const
struct _ty1712;  // TemplateSpecialization Maybe<int>
struct _ty1713;  // Pointer FILE *
struct _ty1714;  // Typedef FILE
struct _ty1715;  // Elaborated struct _iobuf
struct _ty1716;  // Record _iobuf
struct _ty1717;  // FunctionProto void (v8::Isolate *, FILE *)
struct _ty1718;  // Enum v8::StackTrace::StackTraceOptions
struct _ty1719;  // FunctionProto Local<v8::StackFrame> (v8::Isolate *, uint32_t) const
struct _ty1720;  // TemplateSpecialization Local<v8::StackFrame>
struct _ty1721;  // Pointer const v8::StackTrace *
struct _ty1722;  // FunctionProto Local<v8::StackTrace> (v8::Isolate *, int, v8::StackTrace::StackTraceOptions)
struct _ty1723;  // TemplateSpecialization Local<v8::StackTrace>
struct _ty1724;  // Pointer const v8::StackFrame *
struct _ty1725;  // FunctionProto Local<v8::String> () const
struct _ty1726;  // TemplateSpecialization Local<v8::String>
struct _ty1727;  // FunctionProto Local<v8::String> () const
struct _ty1728;  // TemplateSpecialization Local<v8::String>
struct _ty1729;  // FunctionProto Local<v8::String> () const
struct _ty1730;  // TemplateSpecialization Local<v8::String>
struct _ty1731;  // Enum v8::StateTag
struct _ty1732;  // Record v8::RegisterState
struct _ty1733;  // Pointer v8::RegisterState *
struct _ty1734;  // Record v8::SampleInfo
struct _ty1735;  // Record v8::MemoryRange
struct _ty1736;  // Pointer const void *
struct _ty1737;  // Record v8::JSEntryStub
struct _ty1738;  // Record v8::UnwindState
struct _ty1739;  // Record v8::JSON
struct _ty1740;  // TemplateSpecialization Local<v8::Context>
struct _ty1741;  // TemplateSpecialization Local<v8::String>
struct _ty1742;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::String>)
struct _ty1743;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty1744;  // TemplateSpecialization Local<v8::Context>
struct _ty1745;  // TemplateSpecialization Local<v8::Value>
struct _ty1746;  // TemplateSpecialization Local<v8::String>
struct _ty1747;  // FunctionProto MaybeLocal<v8::String> (Local<v8::Context>, Local<v8::Value>, Local<v8::String>)
struct _ty1748;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1749;  // Record v8::ValueSerializer
struct _ty1750;  // Record v8::ValueSerializer::Delegate
struct _ty1751;  // FunctionProto void ()
struct _ty1752;  // Pointer v8::ValueSerializer::Delegate *
struct _ty1753;  // TemplateSpecialization Local<v8::String>
struct _ty1754;  // FunctionProto void (Local<v8::String>)
struct _ty1755;  // TemplateSpecialization Local<v8::Object>
struct _ty1756;  // FunctionProto Maybe<bool> (v8::Isolate *, Local<v8::Object>)
struct _ty1757;  // TemplateSpecialization Maybe<bool>
struct _ty1758;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty1759;  // FunctionProto Maybe<uint32_t> (v8::Isolate *, Local<v8::SharedArrayBuffer>)
struct _ty1760;  // TemplateSpecialization Maybe<uint32_t>
struct _ty1761;  // TemplateSpecialization Local<v8::WasmModuleObject>
struct _ty1762;  // FunctionProto Maybe<uint32_t> (v8::Isolate *, Local<v8::WasmModuleObject>)
struct _ty1763;  // TemplateSpecialization Maybe<uint32_t>
struct _ty1764;  // Pointer size_t *
struct _ty1765;  // FunctionProto void *(void *, size_t, size_t *)
struct _ty1766;  // FunctionProto void (void *)
struct _ty1767;  // LValueReference const v8::ValueSerializer::Delegate &
struct _ty1768;  // FunctionProto v8::ValueSerializer::Delegate &(const v8::ValueSerializer::Delegate &)
struct _ty1769;  // LValueReference v8::ValueSerializer::Delegate &
struct _ty1770;  // Pointer v8::ValueSerializer *
struct _ty1771;  // FunctionProto void (v8::Isolate *, v8::ValueSerializer::Delegate *)
struct _ty1772;  // FunctionProto void ()
struct _ty1773;  // TemplateSpecialization Local<v8::Context>
struct _ty1774;  // TemplateSpecialization Local<v8::Value>
struct _ty1775;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty1776;  // TemplateSpecialization Maybe<bool>
struct _ty1777;  // FunctionProto std::pair<uint8_t *, size_t> ()
struct _ty1778;  // Elaborated std::pair<uint8_t *, size_t>
struct _ty1779;  // TemplateSpecialization pair<uint8_t *, size_t>
struct _ty1780;  // Record std::pair<unsigned char *, unsigned long long>
struct _ty1781;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty1782;  // FunctionProto void (uint32_t, Local<v8::ArrayBuffer>)
struct _ty1783;  // FunctionProto void (bool)
struct _ty1784;  // FunctionProto void (uint32_t)
struct _ty1785;  // Typedef uint64_t
struct _ty1786;  // FunctionProto void (uint64_t)
struct _ty1787;  // Builtin double
struct _ty1788;  // FunctionProto void (double)
struct _ty1789;  // FunctionProto void (const void *, size_t)
struct _ty1790;  // LValueReference const v8::ValueSerializer &
struct _ty1791;  // FunctionProto void (const v8::ValueSerializer &)
struct _ty1792;  // Record v8::ValueDeserializer
struct _ty1793;  // Record v8::ValueDeserializer::Delegate
struct _ty1794;  // FunctionProto void ()
struct _ty1795;  // Pointer v8::ValueDeserializer::Delegate *
struct _ty1796;  // FunctionProto MaybeLocal<v8::Object> (v8::Isolate *)
struct _ty1797;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty1798;  // FunctionProto MaybeLocal<v8::WasmModuleObject> (v8::Isolate *, uint32_t)
struct _ty1799;  // TemplateSpecialization MaybeLocal<v8::WasmModuleObject>
struct _ty1800;  // FunctionProto MaybeLocal<v8::SharedArrayBuffer> (v8::Isolate *, uint32_t)
struct _ty1801;  // TemplateSpecialization MaybeLocal<v8::SharedArrayBuffer>
struct _ty1802;  // LValueReference const v8::ValueDeserializer::Delegate &
struct _ty1803;  // FunctionProto v8::ValueDeserializer::Delegate &(const v8::ValueDeserializer::Delegate &)
struct _ty1804;  // LValueReference v8::ValueDeserializer::Delegate &
struct _ty1805;  // FunctionProto void (v8::Isolate *, const uint8_t *, size_t)
struct _ty1806;  // Pointer v8::ValueDeserializer *
struct _ty1807;  // FunctionProto void (v8::Isolate *, const uint8_t *, size_t, v8::ValueDeserializer::Delegate *)
struct _ty1808;  // FunctionProto void ()
struct _ty1809;  // TemplateSpecialization Local<v8::Context>
struct _ty1810;  // FunctionProto Maybe<bool> (Local<v8::Context>)
struct _ty1811;  // TemplateSpecialization Maybe<bool>
struct _ty1812;  // TemplateSpecialization Local<v8::Context>
struct _ty1813;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>)
struct _ty1814;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty1815;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty1816;  // FunctionProto void (uint32_t, Local<v8::ArrayBuffer>)
struct _ty1817;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty1818;  // FunctionProto void (uint32_t, Local<v8::SharedArrayBuffer>)
struct _ty1819;  // FunctionProto uint32_t () const
struct _ty1820;  // Pointer const v8::ValueDeserializer *
struct _ty1821;  // Pointer uint32_t *
struct _ty1822;  // FunctionProto bool (uint32_t *)
struct _ty1823;  // Pointer uint64_t *
struct _ty1824;  // FunctionProto bool (uint64_t *)
struct _ty1825;  // Pointer double *
struct _ty1826;  // FunctionProto bool (double *)
struct _ty1827;  // Pointer const void **
struct _ty1828;  // FunctionProto bool (size_t, const void **)
struct _ty1829;  // LValueReference const v8::ValueDeserializer &
struct _ty1830;  // FunctionProto void (const v8::ValueDeserializer &)
struct _ty1831;  // Pointer const v8::Value *
struct _ty1832;  // TemplateSpecialization Local<v8::Context>
struct _ty1833;  // FunctionProto MaybeLocal<v8::BigInt> (Local<v8::Context>) const
struct _ty1834;  // TemplateSpecialization MaybeLocal<v8::BigInt>
struct _ty1835;  // TemplateSpecialization Local<v8::Context>
struct _ty1836;  // FunctionProto MaybeLocal<v8::Number> (Local<v8::Context>) const
struct _ty1837;  // TemplateSpecialization MaybeLocal<v8::Number>
struct _ty1838;  // TemplateSpecialization Local<v8::Context>
struct _ty1839;  // FunctionProto MaybeLocal<v8::String> (Local<v8::Context>) const
struct _ty1840;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1841;  // TemplateSpecialization Local<v8::Context>
struct _ty1842;  // FunctionProto MaybeLocal<v8::String> (Local<v8::Context>) const
struct _ty1843;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1844;  // TemplateSpecialization Local<v8::Context>
struct _ty1845;  // FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>) const
struct _ty1846;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty1847;  // TemplateSpecialization Local<v8::Context>
struct _ty1848;  // FunctionProto MaybeLocal<v8::Integer> (Local<v8::Context>) const
struct _ty1849;  // TemplateSpecialization MaybeLocal<v8::Integer>
struct _ty1850;  // TemplateSpecialization Local<v8::Context>
struct _ty1851;  // FunctionProto MaybeLocal<v8::Uint32> (Local<v8::Context>) const
struct _ty1852;  // TemplateSpecialization MaybeLocal<v8::Uint32>
struct _ty1853;  // TemplateSpecialization Local<v8::Context>
struct _ty1854;  // FunctionProto MaybeLocal<v8::Int32> (Local<v8::Context>) const
struct _ty1855;  // TemplateSpecialization MaybeLocal<v8::Int32>
struct _ty1856;  // FunctionProto Local<v8::Boolean> (v8::Isolate *) const
struct _ty1857;  // TemplateSpecialization Local<v8::Boolean>
struct _ty1858;  // TemplateSpecialization Local<v8::Context>
struct _ty1859;  // FunctionProto MaybeLocal<v8::Uint32> (Local<v8::Context>) const
struct _ty1860;  // TemplateSpecialization MaybeLocal<v8::Uint32>
struct _ty1861;  // FunctionProto bool (v8::Isolate *) const
struct _ty1862;  // TemplateSpecialization Local<v8::Context>
struct _ty1863;  // FunctionProto Maybe<double> (Local<v8::Context>) const
struct _ty1864;  // TemplateSpecialization Maybe<double>
struct _ty1865;  // TemplateSpecialization Local<v8::Context>
struct _ty1866;  // FunctionProto Maybe<int64_t> (Local<v8::Context>) const
struct _ty1867;  // TemplateSpecialization Maybe<int64_t>
struct _ty1868;  // TemplateSpecialization Local<v8::Context>
struct _ty1869;  // FunctionProto Maybe<uint32_t> (Local<v8::Context>) const
struct _ty1870;  // TemplateSpecialization Maybe<uint32_t>
struct _ty1871;  // TemplateSpecialization Local<v8::Context>
struct _ty1872;  // FunctionProto Maybe<int32_t> (Local<v8::Context>) const
struct _ty1873;  // TemplateSpecialization Maybe<int32_t>
struct _ty1874;  // TemplateSpecialization Local<v8::Context>
struct _ty1875;  // TemplateSpecialization Local<v8::Value>
struct _ty1876;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>) const
struct _ty1877;  // TemplateSpecialization Maybe<bool>
struct _ty1878;  // TemplateSpecialization Local<v8::Value>
struct _ty1879;  // FunctionProto bool (Local<v8::Value>) const
struct _ty1880;  // TemplateSpecialization Local<v8::Value>
struct _ty1881;  // FunctionProto bool (Local<v8::Value>) const
struct _ty1882;  // TemplateTypeParm T
struct _ty1883;  // Pointer T *
struct _ty1884;  // FunctionProto v8::Value *(T *)
struct _ty1885;  // Pointer v8::Value *
struct _ty1886;  // FunctionProto Local<v8::String> (v8::Isolate *)
struct _ty1887;  // TemplateSpecialization Local<v8::String>
struct _ty1888;  // TemplateSpecialization Local<v8::Context>
struct _ty1889;  // TemplateSpecialization Local<v8::Object>
struct _ty1890;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Object>)
struct _ty1891;  // TemplateSpecialization Maybe<bool>
struct _ty1892;  // Pointer const v8::Boolean *
struct _ty1893;  // Pointer v8::Value *
struct _ty1894;  // Elaborated v8::Value
struct _ty1895;  // FunctionProto v8::Boolean *(v8::Value *)
struct _ty1896;  // Pointer v8::Boolean *
struct _ty1897;  // FunctionProto Local<v8::Boolean> (v8::Isolate *, bool)
struct _ty1898;  // TemplateSpecialization Local<v8::Boolean>
struct _ty1899;  // Pointer v8::Name *
struct _ty1900;  // FunctionProto v8::Name *(v8::Value *)
struct _ty1901;  // Enum v8::NewStringType
struct _ty1902;  // Enum v8::String::Encoding
struct _ty1903;  // Pointer const v8::String *
struct _ty1904;  // FunctionProto int (v8::Isolate *) const
struct _ty1905;  // Enum v8::String::WriteOptions
struct _ty1906;  // Pointer uint16_t *
struct _ty1907;  // FunctionProto int (v8::Isolate *, uint16_t *, int, int, int) const
struct _ty1908;  // Pointer uint8_t *
struct _ty1909;  // FunctionProto int (v8::Isolate *, uint8_t *, int, int, int) const
struct _ty1910;  // Pointer char *
struct _ty1911;  // Pointer int *
struct _ty1912;  // FunctionProto int (v8::Isolate *, char *, int, int *, int) const
struct _ty1913;  // FunctionProto Local<v8::String> (v8::Isolate *)
struct _ty1914;  // TemplateSpecialization Local<v8::String>
struct _ty1915;  // Record v8::String::ExternalStringResourceBase
struct _ty1916;  // Pointer v8::String::ExternalStringResourceBase *
struct _ty1917;  // Pointer const v8::String::ExternalStringResourceBase *
struct _ty1918;  // LValueReference const v8::String::ExternalStringResourceBase &
struct _ty1919;  // FunctionProto void (const v8::String::ExternalStringResourceBase &)
struct _ty1920;  // FunctionProto void ()
struct _ty1921;  // FunctionProto void () const
struct _ty1922;  // Record v8::String::ExternalStringResource
struct _ty1923;  // Pointer v8::String::ExternalStringResource *
struct _ty1924;  // FunctionProto const uint16_t *() const
struct _ty1925;  // Pointer const uint16_t *
struct _ty1926;  // Pointer const v8::String::ExternalStringResource *
struct _ty1927;  // FunctionProto size_t () const
struct _ty1928;  // FunctionProto void ()
struct _ty1929;  // LValueReference const v8::String::ExternalStringResource &
struct _ty1930;  // FunctionProto void (const v8::String::ExternalStringResource &)
struct _ty1931;  // FunctionProto v8::String::ExternalStringResource &(const v8::String::ExternalStringResource &)
struct _ty1932;  // LValueReference v8::String::ExternalStringResource &
struct _ty1933;  // Record v8::String::ExternalOneByteStringResource
struct _ty1934;  // Pointer v8::String::ExternalOneByteStringResource *
struct _ty1935;  // FunctionProto const char *() const
struct _ty1936;  // Pointer const v8::String::ExternalOneByteStringResource *
struct _ty1937;  // FunctionProto void ()
struct _ty1938;  // LValueReference const v8::String::ExternalOneByteStringResource &
struct _ty1939;  // FunctionProto void (const v8::String::ExternalOneByteStringResource &)
struct _ty1940;  // FunctionProto v8::String::ExternalOneByteStringResource &(const v8::String::ExternalOneByteStringResource &)
struct _ty1941;  // LValueReference v8::String::ExternalOneByteStringResource &
struct _ty1942;  // Pointer v8::String::Encoding *
struct _ty1943;  // FunctionProto v8::String::ExternalStringResourceBase *(v8::String::Encoding *) const
struct _ty1944;  // FunctionProto v8::String::ExternalStringResource *() const
struct _ty1945;  // FunctionProto const v8::String::ExternalOneByteStringResource *() const
struct _ty1946;  // FunctionProto v8::String *(v8::Value *)
struct _ty1947;  // Pointer v8::String *
struct _ty1948;  // FunctionProto MaybeLocal<v8::String> (v8::Isolate *, const char *, v8::NewStringType, int)
struct _ty1949;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1950;  // FunctionProto MaybeLocal<v8::String> (v8::Isolate *, const uint8_t *, v8::NewStringType, int)
struct _ty1951;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1952;  // FunctionProto MaybeLocal<v8::String> (v8::Isolate *, const uint16_t *, v8::NewStringType, int)
struct _ty1953;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1954;  // TemplateSpecialization Local<v8::String>
struct _ty1955;  // TemplateSpecialization Local<v8::String>
struct _ty1956;  // FunctionProto Local<v8::String> (v8::Isolate *, Local<v8::String>, Local<v8::String>)
struct _ty1957;  // TemplateSpecialization Local<v8::String>
struct _ty1958;  // FunctionProto MaybeLocal<v8::String> (v8::Isolate *, v8::String::ExternalStringResource *)
struct _ty1959;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1960;  // FunctionProto bool (v8::String::ExternalStringResource *)
struct _ty1961;  // FunctionProto MaybeLocal<v8::String> (v8::Isolate *, v8::String::ExternalOneByteStringResource *)
struct _ty1962;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty1963;  // FunctionProto bool (v8::String::ExternalOneByteStringResource *)
struct _ty1964;  // TemplateSpecialization Local<v8::String>
struct _ty1965;  // FunctionProto bool (Local<v8::String>)
struct _ty1966;  // Record v8::String::Utf8Value
struct _ty1967;  // TemplateSpecialization Local<v8::Value>
struct _ty1968;  // FunctionProto void (v8::Isolate *, Local<v8::Value>)
struct _ty1969;  // Pointer v8::String::Utf8Value *
struct _ty1970;  // FunctionProto void ()
struct _ty1971;  // FunctionProto char *()
struct _ty1972;  // Pointer const v8::String::Utf8Value *
struct _ty1973;  // LValueReference const v8::String::Utf8Value &
struct _ty1974;  // FunctionProto void (const v8::String::Utf8Value &)
struct _ty1975;  // Record v8::String::Value
struct _ty1976;  // TemplateSpecialization Local<v8::Value>
struct _ty1977;  // FunctionProto void (v8::Isolate *, Local<v8::Value>)
struct _ty1978;  // Pointer v8::String::Value *
struct _ty1979;  // FunctionProto void ()
struct _ty1980;  // FunctionProto uint16_t *()
struct _ty1981;  // Pointer const v8::String::Value *
struct _ty1982;  // LValueReference const v8::String::Value &
struct _ty1983;  // FunctionProto void (const v8::String::Value &)
struct _ty1984;  // FunctionProto Local<v8::Value> () const
struct _ty1985;  // TemplateSpecialization Local<v8::Value>
struct _ty1986;  // Pointer const v8::Symbol *
struct _ty1987;  // TemplateSpecialization Local<v8::String>
struct _ty1988;  // FunctionProto Local<v8::Symbol> (v8::Isolate *, Local<v8::String>)
struct _ty1989;  // TemplateSpecialization Local<v8::Symbol>
struct _ty1990;  // TemplateSpecialization Local<v8::String>
struct _ty1991;  // FunctionProto Local<v8::Symbol> (v8::Isolate *, Local<v8::String>)
struct _ty1992;  // TemplateSpecialization Local<v8::Symbol>
struct _ty1993;  // TemplateSpecialization Local<v8::String>
struct _ty1994;  // FunctionProto Local<v8::Symbol> (v8::Isolate *, Local<v8::String>)
struct _ty1995;  // TemplateSpecialization Local<v8::Symbol>
struct _ty1996;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty1997;  // TemplateSpecialization Local<v8::Symbol>
struct _ty1998;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty1999;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2000;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2001;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2002;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2003;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2004;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2005;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2006;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2007;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2008;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2009;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2010;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2011;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2012;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2013;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2014;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2015;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2016;  // FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _ty2017;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2018;  // FunctionProto v8::Symbol *(v8::Value *)
struct _ty2019;  // Pointer v8::Symbol *
struct _ty2020;  // FunctionProto Local<v8::Value> () const
struct _ty2021;  // TemplateSpecialization Local<v8::Value>
struct _ty2022;  // Pointer const v8::Private *
struct _ty2023;  // TemplateSpecialization Local<v8::String>
struct _ty2024;  // FunctionProto Local<v8::Private> (v8::Isolate *, Local<v8::String>)
struct _ty2025;  // TemplateSpecialization Local<v8::Private>
struct _ty2026;  // TemplateSpecialization Local<v8::String>
struct _ty2027;  // FunctionProto Local<v8::Private> (v8::Isolate *, Local<v8::String>)
struct _ty2028;  // TemplateSpecialization Local<v8::Private>
struct _ty2029;  // Pointer v8::Data *
struct _ty2030;  // FunctionProto v8::Private *(v8::Data *)
struct _ty2031;  // Pointer v8::Private *
struct _ty2032;  // FunctionProto double () const
struct _ty2033;  // Pointer const v8::Number *
struct _ty2034;  // FunctionProto Local<v8::Number> (v8::Isolate *, double)
struct _ty2035;  // TemplateSpecialization Local<v8::Number>
struct _ty2036;  // FunctionProto v8::Number *(v8::Value *)
struct _ty2037;  // Pointer v8::Number *
struct _ty2038;  // Typedef int32_t
struct _ty2039;  // FunctionProto Local<v8::Integer> (v8::Isolate *, int32_t)
struct _ty2040;  // TemplateSpecialization Local<v8::Integer>
struct _ty2041;  // FunctionProto Local<v8::Integer> (v8::Isolate *, uint32_t)
struct _ty2042;  // TemplateSpecialization Local<v8::Integer>
struct _ty2043;  // FunctionProto int64_t () const
struct _ty2044;  // Typedef int64_t
struct _ty2045;  // Builtin long long
struct _ty2046;  // Pointer const v8::Integer *
struct _ty2047;  // FunctionProto v8::Integer *(v8::Value *)
struct _ty2048;  // Pointer v8::Integer *
struct _ty2049;  // FunctionProto int32_t () const
struct _ty2050;  // Pointer const v8::Int32 *
struct _ty2051;  // FunctionProto v8::Int32 *(v8::Value *)
struct _ty2052;  // Pointer v8::Int32 *
struct _ty2053;  // Pointer const v8::Uint32 *
struct _ty2054;  // FunctionProto v8::Uint32 *(v8::Value *)
struct _ty2055;  // Pointer v8::Uint32 *
struct _ty2056;  // FunctionProto Local<v8::BigInt> (v8::Isolate *, int64_t)
struct _ty2057;  // TemplateSpecialization Local<v8::BigInt>
struct _ty2058;  // FunctionProto Local<v8::BigInt> (v8::Isolate *, uint64_t)
struct _ty2059;  // TemplateSpecialization Local<v8::BigInt>
struct _ty2060;  // TemplateSpecialization Local<v8::Context>
struct _ty2061;  // Pointer const uint64_t *
struct _ty2062;  // FunctionProto MaybeLocal<v8::BigInt> (Local<v8::Context>, int, int, const uint64_t *)
struct _ty2063;  // TemplateSpecialization MaybeLocal<v8::BigInt>
struct _ty2064;  // Pointer bool *
struct _ty2065;  // FunctionProto uint64_t (bool *) const
struct _ty2066;  // Pointer const v8::BigInt *
struct _ty2067;  // FunctionProto int64_t (bool *) const
struct _ty2068;  // FunctionProto void (int *, int *, uint64_t *) const
struct _ty2069;  // FunctionProto v8::BigInt *(v8::Value *)
struct _ty2070;  // Pointer v8::BigInt *
struct _ty2071;  // Enum v8::PropertyAttribute
struct _ty2072;  // Typedef v8::AccessorGetterCallback
struct _ty2073;  // Paren void (Local<v8::String>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2074;  // TemplateSpecialization Local<v8::String>
struct _ty2075;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2076;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2077;  // FunctionProto void (Local<v8::String>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2078;  // Pointer void (*)(Local<v8::String>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2079;  // Typedef v8::AccessorNameGetterCallback
struct _ty2080;  // Paren void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2081;  // TemplateSpecialization Local<v8::Name>
struct _ty2082;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2083;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2084;  // FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2085;  // Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2086;  // Typedef v8::AccessorSetterCallback
struct _ty2087;  // Paren void (Local<v8::String>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _ty2088;  // TemplateSpecialization Local<v8::String>
struct _ty2089;  // TemplateSpecialization Local<v8::Value>
struct _ty2090;  // LValueReference const PropertyCallbackInfo<void> &
struct _ty2091;  // TemplateSpecialization PropertyCallbackInfo<void>
struct _ty2092;  // FunctionProto void (Local<v8::String>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _ty2093;  // Pointer void (*)(Local<v8::String>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _ty2094;  // Typedef v8::AccessorNameSetterCallback
struct _ty2095;  // Paren void (Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _ty2096;  // TemplateSpecialization Local<v8::Name>
struct _ty2097;  // TemplateSpecialization Local<v8::Value>
struct _ty2098;  // LValueReference const PropertyCallbackInfo<void> &
struct _ty2099;  // TemplateSpecialization PropertyCallbackInfo<void>
struct _ty2100;  // FunctionProto void (Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _ty2101;  // Pointer void (*)(Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _ty2102;  // Enum v8::AccessControl
struct _ty2103;  // Enum v8::PropertyFilter
struct _ty2104;  // Enum v8::SideEffectType
struct _ty2105;  // Enum v8::KeyCollectionMode
struct _ty2106;  // Enum v8::IndexFilter
struct _ty2107;  // Enum v8::KeyConversionMode
struct _ty2108;  // Enum v8::IntegrityLevel
struct _ty2109;  // TemplateSpecialization Local<v8::Value>
struct _ty2110;  // TemplateSpecialization Local<v8::Value>
struct _ty2111;  // FunctionProto bool (Local<v8::Value>, Local<v8::Value>)
struct _ty2112;  // Pointer v8::Object *
struct _ty2113;  // TemplateSpecialization Local<v8::Context>
struct _ty2114;  // TemplateSpecialization Local<v8::Value>
struct _ty2115;  // TemplateSpecialization Local<v8::Value>
struct _ty2116;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>, Local<v8::Value>)
struct _ty2117;  // TemplateSpecialization Maybe<bool>
struct _ty2118;  // TemplateSpecialization Local<v8::Value>
struct _ty2119;  // FunctionProto bool (uint32_t, Local<v8::Value>)
struct _ty2120;  // TemplateSpecialization Local<v8::Context>
struct _ty2121;  // TemplateSpecialization Local<v8::Value>
struct _ty2122;  // FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t, Local<v8::Value>)
struct _ty2123;  // TemplateSpecialization Maybe<bool>
struct _ty2124;  // TemplateSpecialization Local<v8::Context>
struct _ty2125;  // TemplateSpecialization Local<v8::Name>
struct _ty2126;  // TemplateSpecialization Local<v8::Value>
struct _ty2127;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, Local<v8::Value>)
struct _ty2128;  // TemplateSpecialization Maybe<bool>
struct _ty2129;  // TemplateSpecialization Local<v8::Context>
struct _ty2130;  // TemplateSpecialization Local<v8::Value>
struct _ty2131;  // FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t, Local<v8::Value>)
struct _ty2132;  // TemplateSpecialization Maybe<bool>
struct _ty2133;  // TemplateSpecialization Local<v8::Context>
struct _ty2134;  // TemplateSpecialization Local<v8::Name>
struct _ty2135;  // TemplateSpecialization Local<v8::Value>
struct _ty2136;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, Local<v8::Value>, v8::PropertyAttribute)
struct _ty2137;  // TemplateSpecialization Maybe<bool>
struct _ty2138;  // TemplateSpecialization Local<v8::Context>
struct _ty2139;  // TemplateSpecialization Local<v8::Name>
struct _ty2140;  // LValueReference v8::PropertyDescriptor &
struct _ty2141;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::PropertyDescriptor &)
struct _ty2142;  // TemplateSpecialization Maybe<bool>
struct _ty2143;  // TemplateSpecialization Local<v8::Value>
struct _ty2144;  // FunctionProto Local<v8::Value> (Local<v8::Value>)
struct _ty2145;  // TemplateSpecialization Local<v8::Value>
struct _ty2146;  // TemplateSpecialization Local<v8::Context>
struct _ty2147;  // TemplateSpecialization Local<v8::Value>
struct _ty2148;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>)
struct _ty2149;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2150;  // FunctionProto Local<v8::Value> (uint32_t)
struct _ty2151;  // TemplateSpecialization Local<v8::Value>
struct _ty2152;  // TemplateSpecialization Local<v8::Context>
struct _ty2153;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, uint32_t)
struct _ty2154;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2155;  // TemplateSpecialization Local<v8::Context>
struct _ty2156;  // TemplateSpecialization Local<v8::Value>
struct _ty2157;  // FunctionProto Maybe<v8::PropertyAttribute> (Local<v8::Context>, Local<v8::Value>)
struct _ty2158;  // TemplateSpecialization Maybe<v8::PropertyAttribute>
struct _ty2159;  // TemplateSpecialization Local<v8::Context>
struct _ty2160;  // TemplateSpecialization Local<v8::Name>
struct _ty2161;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Name>)
struct _ty2162;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2163;  // TemplateSpecialization Local<v8::Context>
struct _ty2164;  // TemplateSpecialization Local<v8::Value>
struct _ty2165;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2166;  // TemplateSpecialization Maybe<bool>
struct _ty2167;  // TemplateSpecialization Local<v8::Context>
struct _ty2168;  // TemplateSpecialization Local<v8::Value>
struct _ty2169;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2170;  // TemplateSpecialization Maybe<bool>
struct _ty2171;  // TemplateSpecialization Local<v8::Context>
struct _ty2172;  // FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _ty2173;  // TemplateSpecialization Maybe<bool>
struct _ty2174;  // TemplateSpecialization Local<v8::Context>
struct _ty2175;  // FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _ty2176;  // TemplateSpecialization Maybe<bool>
struct _ty2177;  // TemplateSpecialization Local<v8::Context>
struct _ty2178;  // TemplateSpecialization Local<v8::Name>
struct _ty2179;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2180;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, MaybeLocal<v8::Value>, v8::AccessControl, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _ty2181;  // TemplateSpecialization Maybe<bool>
struct _ty2182;  // TemplateSpecialization Local<v8::Name>
struct _ty2183;  // TemplateSpecialization Local<v8::Function>
struct _ty2184;  // TemplateSpecialization Local<v8::Function>
struct _ty2185;  // FunctionProto void (Local<v8::Name>, Local<v8::Function>, Local<v8::Function>, v8::PropertyAttribute, v8::AccessControl)
struct _ty2186;  // TemplateSpecialization Local<v8::Context>
struct _ty2187;  // TemplateSpecialization Local<v8::Name>
struct _ty2188;  // TemplateSpecialization Local<v8::Value>
struct _ty2189;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _ty2190;  // TemplateSpecialization Maybe<bool>
struct _ty2191;  // TemplateSpecialization Local<v8::Context>
struct _ty2192;  // TemplateSpecialization Local<v8::Name>
struct _ty2193;  // TemplateSpecialization Local<v8::Value>
struct _ty2194;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::AccessorNameGetterCallback, Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _ty2195;  // TemplateSpecialization Maybe<bool>
struct _ty2196;  // TemplateSpecialization Local<v8::Context>
struct _ty2197;  // TemplateSpecialization Local<v8::Private>
struct _ty2198;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Private>)
struct _ty2199;  // TemplateSpecialization Maybe<bool>
struct _ty2200;  // TemplateSpecialization Local<v8::Context>
struct _ty2201;  // TemplateSpecialization Local<v8::Private>
struct _ty2202;  // TemplateSpecialization Local<v8::Value>
struct _ty2203;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Private>, Local<v8::Value>)
struct _ty2204;  // TemplateSpecialization Maybe<bool>
struct _ty2205;  // TemplateSpecialization Local<v8::Context>
struct _ty2206;  // TemplateSpecialization Local<v8::Private>
struct _ty2207;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Private>)
struct _ty2208;  // TemplateSpecialization Maybe<bool>
struct _ty2209;  // TemplateSpecialization Local<v8::Context>
struct _ty2210;  // TemplateSpecialization Local<v8::Private>
struct _ty2211;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Private>)
struct _ty2212;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2213;  // TemplateSpecialization Local<v8::Context>
struct _ty2214;  // FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>)
struct _ty2215;  // TemplateSpecialization MaybeLocal<v8::Array>
struct _ty2216;  // TemplateSpecialization Local<v8::Context>
struct _ty2217;  // FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>, v8::KeyCollectionMode, v8::PropertyFilter, v8::IndexFilter, v8::KeyConversionMode)
struct _ty2218;  // TemplateSpecialization MaybeLocal<v8::Array>
struct _ty2219;  // TemplateSpecialization Local<v8::Context>
struct _ty2220;  // FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>)
struct _ty2221;  // TemplateSpecialization MaybeLocal<v8::Array>
struct _ty2222;  // TemplateSpecialization Local<v8::Context>
struct _ty2223;  // FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>, v8::PropertyFilter, v8::KeyConversionMode)
struct _ty2224;  // TemplateSpecialization MaybeLocal<v8::Array>
struct _ty2225;  // FunctionProto Local<v8::Value> ()
struct _ty2226;  // TemplateSpecialization Local<v8::Value>
struct _ty2227;  // TemplateSpecialization Local<v8::Context>
struct _ty2228;  // TemplateSpecialization Local<v8::Value>
struct _ty2229;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2230;  // TemplateSpecialization Maybe<bool>
struct _ty2231;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty2232;  // FunctionProto Local<v8::Object> (Local<v8::FunctionTemplate>)
struct _ty2233;  // TemplateSpecialization Local<v8::Object>
struct _ty2234;  // TemplateSpecialization Local<v8::Context>
struct _ty2235;  // FunctionProto MaybeLocal<v8::String> (Local<v8::Context>)
struct _ty2236;  // TemplateSpecialization MaybeLocal<v8::String>
struct _ty2237;  // FunctionProto Local<v8::String> ()
struct _ty2238;  // TemplateSpecialization Local<v8::String>
struct _ty2239;  // TemplateSpecialization Local<v8::Context>
struct _ty2240;  // FunctionProto Maybe<bool> (Local<v8::Context>, v8::IntegrityLevel)
struct _ty2241;  // TemplateSpecialization Maybe<bool>
struct _ty2242;  // LValueReference const PersistentBase<v8::Object> &
struct _ty2243;  // TemplateSpecialization PersistentBase<v8::Object>
struct _ty2244;  // FunctionProto int (const PersistentBase<v8::Object> &)
struct _ty2245;  // LValueReference const TracedGlobal<v8::Object> &
struct _ty2246;  // TemplateSpecialization TracedGlobal<v8::Object>
struct _ty2247;  // FunctionProto int (const TracedGlobal<v8::Object> &)
struct _ty2248;  // FunctionProto Local<v8::Value> (int)
struct _ty2249;  // TemplateSpecialization Local<v8::Value>
struct _ty2250;  // TemplateSpecialization Local<v8::Value>
struct _ty2251;  // FunctionProto void (int, Local<v8::Value>)
struct _ty2252;  // FunctionProto void *(int)
struct _ty2253;  // LValueReference const PersistentBase<v8::Object> &
struct _ty2254;  // TemplateSpecialization PersistentBase<v8::Object>
struct _ty2255;  // FunctionProto void *(const PersistentBase<v8::Object> &, int)
struct _ty2256;  // LValueReference const TracedGlobal<v8::Object> &
struct _ty2257;  // TemplateSpecialization TracedGlobal<v8::Object>
struct _ty2258;  // FunctionProto void *(const TracedGlobal<v8::Object> &, int)
struct _ty2259;  // FunctionProto void (int, void *)
struct _ty2260;  // Decayed int *
struct _ty2261;  // Decayed void **
struct _ty2262;  // FunctionProto void (int, int *, void **)
struct _ty2263;  // TemplateSpecialization Local<v8::Context>
struct _ty2264;  // TemplateSpecialization Local<v8::Name>
struct _ty2265;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>)
struct _ty2266;  // TemplateSpecialization Maybe<bool>
struct _ty2267;  // TemplateSpecialization Local<v8::Context>
struct _ty2268;  // FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _ty2269;  // TemplateSpecialization Maybe<bool>
struct _ty2270;  // TemplateSpecialization Local<v8::Context>
struct _ty2271;  // TemplateSpecialization Local<v8::Name>
struct _ty2272;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>)
struct _ty2273;  // TemplateSpecialization Maybe<bool>
struct _ty2274;  // TemplateSpecialization Local<v8::Context>
struct _ty2275;  // FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _ty2276;  // TemplateSpecialization Maybe<bool>
struct _ty2277;  // TemplateSpecialization Local<v8::Context>
struct _ty2278;  // TemplateSpecialization Local<v8::Name>
struct _ty2279;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>)
struct _ty2280;  // TemplateSpecialization Maybe<bool>
struct _ty2281;  // TemplateSpecialization Local<v8::Context>
struct _ty2282;  // TemplateSpecialization Local<v8::Name>
struct _ty2283;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Name>)
struct _ty2284;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2285;  // TemplateSpecialization Local<v8::Context>
struct _ty2286;  // TemplateSpecialization Local<v8::Name>
struct _ty2287;  // FunctionProto Maybe<v8::PropertyAttribute> (Local<v8::Context>, Local<v8::Name>)
struct _ty2288;  // TemplateSpecialization Maybe<v8::PropertyAttribute>
struct _ty2289;  // TemplateSpecialization Local<v8::Context>
struct _ty2290;  // TemplateSpecialization Local<v8::Name>
struct _ty2291;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Name>)
struct _ty2292;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2293;  // TemplateSpecialization Local<v8::Context>
struct _ty2294;  // TemplateSpecialization Local<v8::Name>
struct _ty2295;  // FunctionProto Maybe<v8::PropertyAttribute> (Local<v8::Context>, Local<v8::Name>)
struct _ty2296;  // TemplateSpecialization Maybe<v8::PropertyAttribute>
struct _ty2297;  // FunctionProto Local<v8::Object> ()
struct _ty2298;  // TemplateSpecialization Local<v8::Object>
struct _ty2299;  // FunctionProto Local<v8::Context> ()
struct _ty2300;  // TemplateSpecialization Local<v8::Context>
struct _ty2301;  // LValueReference const PersistentBase<v8::Object> &
struct _ty2302;  // TemplateSpecialization PersistentBase<v8::Object>
struct _ty2303;  // FunctionProto Local<v8::Context> (const PersistentBase<v8::Object> &)
struct _ty2304;  // TemplateSpecialization Local<v8::Context>
struct _ty2305;  // TemplateSpecialization Local<v8::Context>
struct _ty2306;  // TemplateSpecialization Local<v8::Value>
struct _ty2307;  // Decayed Local<v8::Value> *
struct _ty2308;  // TemplateSpecialization Local<v8::Value>
struct _ty2309;  // Pointer Local<v8::Value> *
struct _ty2310;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>, int, Local<v8::Value> *)
struct _ty2311;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2312;  // TemplateSpecialization Local<v8::Context>
struct _ty2313;  // Decayed Local<v8::Value> *
struct _ty2314;  // TemplateSpecialization Local<v8::Value>
struct _ty2315;  // Pointer Local<v8::Value> *
struct _ty2316;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, int, Local<v8::Value> *)
struct _ty2317;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2318;  // FunctionProto v8::Isolate *()
struct _ty2319;  // FunctionProto MaybeLocal<v8::Array> (bool *)
struct _ty2320;  // TemplateSpecialization MaybeLocal<v8::Array>
struct _ty2321;  // FunctionProto Local<v8::Object> (v8::Isolate *)
struct _ty2322;  // TemplateSpecialization Local<v8::Object>
struct _ty2323;  // TemplateSpecialization Local<v8::Value>
struct _ty2324;  // Pointer Local<v8::Name> *
struct _ty2325;  // TemplateSpecialization Local<v8::Name>
struct _ty2326;  // Pointer Local<v8::Value> *
struct _ty2327;  // TemplateSpecialization Local<v8::Value>
struct _ty2328;  // FunctionProto Local<v8::Object> (v8::Isolate *, Local<v8::Value>, Local<v8::Name> *, Local<v8::Value> *, size_t)
struct _ty2329;  // TemplateSpecialization Local<v8::Object>
struct _ty2330;  // FunctionProto v8::Object *(v8::Value *)
struct _ty2331;  // Pointer const v8::Array *
struct _ty2332;  // FunctionProto Local<v8::Array> (v8::Isolate *, int)
struct _ty2333;  // TemplateSpecialization Local<v8::Array>
struct _ty2334;  // Pointer Local<v8::Value> *
struct _ty2335;  // TemplateSpecialization Local<v8::Value>
struct _ty2336;  // FunctionProto Local<v8::Array> (v8::Isolate *, Local<v8::Value> *, size_t)
struct _ty2337;  // TemplateSpecialization Local<v8::Array>
struct _ty2338;  // FunctionProto v8::Array *(v8::Value *)
struct _ty2339;  // Pointer v8::Array *
struct _ty2340;  // Record v8::Map
struct _ty2341;  // Pointer const v8::Map *
struct _ty2342;  // Pointer v8::Map *
struct _ty2343;  // TemplateSpecialization Local<v8::Context>
struct _ty2344;  // TemplateSpecialization Local<v8::Value>
struct _ty2345;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>)
struct _ty2346;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2347;  // TemplateSpecialization Local<v8::Context>
struct _ty2348;  // TemplateSpecialization Local<v8::Value>
struct _ty2349;  // TemplateSpecialization Local<v8::Value>
struct _ty2350;  // FunctionProto MaybeLocal<v8::Map> (Local<v8::Context>, Local<v8::Value>, Local<v8::Value>)
struct _ty2351;  // TemplateSpecialization MaybeLocal<v8::Map>
struct _ty2352;  // TemplateSpecialization Local<v8::Context>
struct _ty2353;  // TemplateSpecialization Local<v8::Value>
struct _ty2354;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2355;  // TemplateSpecialization Maybe<bool>
struct _ty2356;  // TemplateSpecialization Local<v8::Context>
struct _ty2357;  // TemplateSpecialization Local<v8::Value>
struct _ty2358;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2359;  // TemplateSpecialization Maybe<bool>
struct _ty2360;  // FunctionProto Local<v8::Array> () const
struct _ty2361;  // TemplateSpecialization Local<v8::Array>
struct _ty2362;  // FunctionProto Local<v8::Map> (v8::Isolate *)
struct _ty2363;  // TemplateSpecialization Local<v8::Map>
struct _ty2364;  // FunctionProto v8::Map *(v8::Value *)
struct _ty2365;  // Record v8::Set
struct _ty2366;  // Pointer const v8::Set *
struct _ty2367;  // Pointer v8::Set *
struct _ty2368;  // TemplateSpecialization Local<v8::Context>
struct _ty2369;  // TemplateSpecialization Local<v8::Value>
struct _ty2370;  // FunctionProto MaybeLocal<v8::Set> (Local<v8::Context>, Local<v8::Value>)
struct _ty2371;  // TemplateSpecialization MaybeLocal<v8::Set>
struct _ty2372;  // TemplateSpecialization Local<v8::Context>
struct _ty2373;  // TemplateSpecialization Local<v8::Value>
struct _ty2374;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2375;  // TemplateSpecialization Maybe<bool>
struct _ty2376;  // TemplateSpecialization Local<v8::Context>
struct _ty2377;  // TemplateSpecialization Local<v8::Value>
struct _ty2378;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2379;  // TemplateSpecialization Maybe<bool>
struct _ty2380;  // FunctionProto Local<v8::Array> () const
struct _ty2381;  // TemplateSpecialization Local<v8::Array>
struct _ty2382;  // FunctionProto Local<v8::Set> (v8::Isolate *)
struct _ty2383;  // TemplateSpecialization Local<v8::Set>
struct _ty2384;  // FunctionProto v8::Set *(v8::Value *)
struct _ty2385;  // TemplateTypeParm T
struct _ty2386;  // TemplateTypeParm S
struct _ty2387;  // LValueReference const ReturnValue<S> &
struct _ty2388;  // TemplateSpecialization ReturnValue<S>
struct _ty2389;  // FunctionProto void (const ReturnValue<S> &)
struct _ty2390;  // Pointer ReturnValue<T> *
struct _ty2391;  // TemplateTypeParm S
struct _ty2392;  // LValueReference const Global<S> &
struct _ty2393;  // TemplateSpecialization Global<S>
struct _ty2394;  // FunctionProto void (const Global<S> &)
struct _ty2395;  // TemplateTypeParm S
struct _ty2396;  // LValueReference const TracedGlobal<S> &
struct _ty2397;  // TemplateSpecialization TracedGlobal<S>
struct _ty2398;  // FunctionProto void (const TracedGlobal<S> &)
struct _ty2399;  // TemplateTypeParm S
struct _ty2400;  // TemplateSpecialization Local<S>
struct _ty2401;  // FunctionProto void (const Local<S>)
struct _ty2402;  // FunctionProto void (int32_t)
struct _ty2403;  // Pointer const ReturnValue<T> *
struct _ty2404;  // TemplateTypeParm S
struct _ty2405;  // Pointer S *
struct _ty2406;  // FunctionProto void (S *)
struct _ty2407;  // FunctionProto Local<v8::Value> () const
struct _ty2408;  // TemplateSpecialization Local<v8::Value>
struct _ty2409;  // TemplateTypeParm T
struct _ty2410;  // Pointer const FunctionCallbackInfo<T> *
struct _ty2411;  // FunctionProto Local<v8::Value> (int) const
struct _ty2412;  // TemplateSpecialization Local<v8::Value>
struct _ty2413;  // FunctionProto Local<v8::Object> () const
struct _ty2414;  // TemplateSpecialization Local<v8::Object>
struct _ty2415;  // FunctionProto Local<v8::Object> () const
struct _ty2416;  // TemplateSpecialization Local<v8::Object>
struct _ty2417;  // FunctionProto Local<v8::Value> () const
struct _ty2418;  // TemplateSpecialization Local<v8::Value>
struct _ty2419;  // FunctionProto Local<v8::Value> () const
struct _ty2420;  // TemplateSpecialization Local<v8::Value>
struct _ty2421;  // FunctionProto ReturnValue<T> () const
struct _ty2422;  // TemplateSpecialization ReturnValue<T>
struct _ty2423;  // FunctionProto void (internal::Address *, internal::Address *, int)
struct _ty2424;  // Pointer FunctionCallbackInfo<T> *
struct _ty2425;  // TemplateTypeParm T
struct _ty2426;  // Pointer const PropertyCallbackInfo<T> *
struct _ty2427;  // FunctionProto Local<v8::Value> () const
struct _ty2428;  // TemplateSpecialization Local<v8::Value>
struct _ty2429;  // FunctionProto Local<v8::Object> () const
struct _ty2430;  // TemplateSpecialization Local<v8::Object>
struct _ty2431;  // FunctionProto Local<v8::Object> () const
struct _ty2432;  // TemplateSpecialization Local<v8::Object>
struct _ty2433;  // FunctionProto ReturnValue<T> () const
struct _ty2434;  // TemplateSpecialization ReturnValue<T>
struct _ty2435;  // FunctionProto void (internal::Address *)
struct _ty2436;  // Pointer PropertyCallbackInfo<T> *
struct _ty2437;  // Typedef v8::FunctionCallback
struct _ty2438;  // Paren void (const FunctionCallbackInfo<v8::Value> &)
struct _ty2439;  // LValueReference const FunctionCallbackInfo<v8::Value> &
struct _ty2440;  // TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _ty2441;  // FunctionProto void (const FunctionCallbackInfo<v8::Value> &)
struct _ty2442;  // Pointer void (*)(const FunctionCallbackInfo<v8::Value> &)
struct _ty2443;  // Enum v8::ConstructorBehavior
struct _ty2444;  // TemplateSpecialization Local<v8::Context>
struct _ty2445;  // TemplateSpecialization Local<v8::Value>
struct _ty2446;  // FunctionProto MaybeLocal<v8::Function> (Local<v8::Context>, v8::FunctionCallback, Local<v8::Value>, int, v8::ConstructorBehavior, v8::SideEffectType)
struct _ty2447;  // TemplateSpecialization MaybeLocal<v8::Function>
struct _ty2448;  // TemplateSpecialization Local<v8::Context>
struct _ty2449;  // Decayed Local<v8::Value> *
struct _ty2450;  // TemplateSpecialization Local<v8::Value>
struct _ty2451;  // Pointer Local<v8::Value> *
struct _ty2452;  // FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>, int, Local<v8::Value> *) const
struct _ty2453;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty2454;  // Pointer const v8::Function *
struct _ty2455;  // TemplateSpecialization Local<v8::Context>
struct _ty2456;  // FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>) const
struct _ty2457;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty2458;  // TemplateSpecialization Local<v8::Context>
struct _ty2459;  // Decayed Local<v8::Value> *
struct _ty2460;  // TemplateSpecialization Local<v8::Value>
struct _ty2461;  // Pointer Local<v8::Value> *
struct _ty2462;  // FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>, int, Local<v8::Value> *, v8::SideEffectType) const
struct _ty2463;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty2464;  // TemplateSpecialization Local<v8::Context>
struct _ty2465;  // TemplateSpecialization Local<v8::Value>
struct _ty2466;  // Decayed Local<v8::Value> *
struct _ty2467;  // TemplateSpecialization Local<v8::Value>
struct _ty2468;  // Pointer Local<v8::Value> *
struct _ty2469;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>, int, Local<v8::Value> *)
struct _ty2470;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2471;  // Pointer v8::Function *
struct _ty2472;  // TemplateSpecialization Local<v8::String>
struct _ty2473;  // FunctionProto void (Local<v8::String>)
struct _ty2474;  // FunctionProto Local<v8::Value> () const
struct _ty2475;  // TemplateSpecialization Local<v8::Value>
struct _ty2476;  // FunctionProto Local<v8::Value> () const
struct _ty2477;  // TemplateSpecialization Local<v8::Value>
struct _ty2478;  // FunctionProto Local<v8::Value> () const
struct _ty2479;  // TemplateSpecialization Local<v8::Value>
struct _ty2480;  // FunctionProto Local<v8::Value> () const
struct _ty2481;  // TemplateSpecialization Local<v8::Value>
struct _ty2482;  // FunctionProto Local<v8::Value> () const
struct _ty2483;  // TemplateSpecialization Local<v8::Value>
struct _ty2484;  // FunctionProto v8::Function *(v8::Value *)
struct _ty2485;  // Enum v8::Promise::PromiseState
struct _ty2486;  // Record v8::Promise::Resolver
struct _ty2487;  // TemplateSpecialization Local<v8::Context>
struct _ty2488;  // FunctionProto MaybeLocal<v8::Promise::Resolver> (Local<v8::Context>)
struct _ty2489;  // TemplateSpecialization MaybeLocal<v8::Promise::Resolver>
struct _ty2490;  // FunctionProto Local<v8::Promise> ()
struct _ty2491;  // TemplateSpecialization Local<v8::Promise>
struct _ty2492;  // Pointer v8::Promise::Resolver *
struct _ty2493;  // TemplateSpecialization Local<v8::Context>
struct _ty2494;  // TemplateSpecialization Local<v8::Value>
struct _ty2495;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2496;  // TemplateSpecialization Maybe<bool>
struct _ty2497;  // TemplateSpecialization Local<v8::Context>
struct _ty2498;  // TemplateSpecialization Local<v8::Value>
struct _ty2499;  // FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _ty2500;  // TemplateSpecialization Maybe<bool>
struct _ty2501;  // FunctionProto v8::Promise::Resolver *(v8::Value *)
struct _ty2502;  // TemplateSpecialization Local<v8::Context>
struct _ty2503;  // TemplateSpecialization Local<v8::Function>
struct _ty2504;  // FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::Function>)
struct _ty2505;  // TemplateSpecialization MaybeLocal<v8::Promise>
struct _ty2506;  // Pointer v8::Promise *
struct _ty2507;  // TemplateSpecialization Local<v8::Context>
struct _ty2508;  // TemplateSpecialization Local<v8::Function>
struct _ty2509;  // FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::Function>)
struct _ty2510;  // TemplateSpecialization MaybeLocal<v8::Promise>
struct _ty2511;  // TemplateSpecialization Local<v8::Context>
struct _ty2512;  // TemplateSpecialization Local<v8::Function>
struct _ty2513;  // TemplateSpecialization Local<v8::Function>
struct _ty2514;  // FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::Function>, Local<v8::Function>)
struct _ty2515;  // TemplateSpecialization MaybeLocal<v8::Promise>
struct _ty2516;  // FunctionProto Local<v8::Value> ()
struct _ty2517;  // TemplateSpecialization Local<v8::Value>
struct _ty2518;  // FunctionProto v8::Promise::PromiseState ()
struct _ty2519;  // FunctionProto v8::Promise *(v8::Value *)
struct _ty2520;  // Pointer v8::PropertyDescriptor *
struct _ty2521;  // TemplateSpecialization Local<v8::Value>
struct _ty2522;  // FunctionProto void (Local<v8::Value>)
struct _ty2523;  // TemplateSpecialization Local<v8::Value>
struct _ty2524;  // FunctionProto void (Local<v8::Value>, bool)
struct _ty2525;  // TemplateSpecialization Local<v8::Value>
struct _ty2526;  // TemplateSpecialization Local<v8::Value>
struct _ty2527;  // FunctionProto void (Local<v8::Value>, Local<v8::Value>)
struct _ty2528;  // FunctionProto void ()
struct _ty2529;  // FunctionProto Local<v8::Value> () const
struct _ty2530;  // TemplateSpecialization Local<v8::Value>
struct _ty2531;  // Pointer const v8::PropertyDescriptor *
struct _ty2532;  // FunctionProto Local<v8::Value> () const
struct _ty2533;  // TemplateSpecialization Local<v8::Value>
struct _ty2534;  // FunctionProto Local<v8::Value> () const
struct _ty2535;  // TemplateSpecialization Local<v8::Value>
struct _ty2536;  // Record v8::PropertyDescriptor::PrivateData
struct _ty2537;  // FunctionProto v8::PropertyDescriptor::PrivateData *() const
struct _ty2538;  // Pointer v8::PropertyDescriptor::PrivateData *
struct _ty2539;  // LValueReference const v8::PropertyDescriptor &
struct _ty2540;  // FunctionProto void (const v8::PropertyDescriptor &)
struct _ty2541;  // FunctionProto Local<v8::Value> ()
struct _ty2542;  // TemplateSpecialization Local<v8::Value>
struct _ty2543;  // Pointer v8::Proxy *
struct _ty2544;  // FunctionProto Local<v8::Value> ()
struct _ty2545;  // TemplateSpecialization Local<v8::Value>
struct _ty2546;  // TemplateSpecialization Local<v8::Context>
struct _ty2547;  // TemplateSpecialization Local<v8::Object>
struct _ty2548;  // TemplateSpecialization Local<v8::Object>
struct _ty2549;  // FunctionProto MaybeLocal<v8::Proxy> (Local<v8::Context>, Local<v8::Object>, Local<v8::Object>)
struct _ty2550;  // TemplateSpecialization MaybeLocal<v8::Proxy>
struct _ty2551;  // FunctionProto v8::Proxy *(v8::Value *)
struct _ty2552;  // TemplateTypeParm T
struct _ty2553;  // InjectedClassName MemorySpan<T>
struct _ty2554;  // Pointer MemorySpan<T> *
struct _ty2555;  // Pointer T *
struct _ty2556;  // FunctionProto void (T *, size_t)
struct _ty2557;  // FunctionProto T *() const
struct _ty2558;  // Pointer const MemorySpan<T> *
struct _ty2559;  // Record v8::MemorySpan<const unsigned char>
struct _ty2560;  // FunctionProto void ()
struct _ty2561;  // Pointer v8::MemorySpan<const unsigned char> *
struct _ty2562;  // Pointer const unsigned char *
struct _ty2563;  // SubstTemplateTypeParm const unsigned char
struct _ty2564;  // FunctionProto void (const unsigned char *, size_t)
struct _ty2565;  // FunctionProto const unsigned char *() const
struct _ty2566;  // Pointer const v8::MemorySpan<const unsigned char> *
struct _ty2567;  // LValueReference const v8::MemorySpan<const unsigned char> &
struct _ty2568;  // FunctionProto void (const v8::MemorySpan<const unsigned char> &)
struct _ty2569;  // RValueReference v8::MemorySpan<const unsigned char> &&
struct _ty2570;  // FunctionProto void (v8::MemorySpan<const unsigned char> &&)
struct _ty2571;  // Record v8::OwnedBuffer
struct _ty2572;  // Elaborated std::unique_ptr<const uint8_t []>
struct _ty2573;  // TemplateSpecialization unique_ptr<const uint8_t []>
struct _ty2574;  // Record std::unique_ptr<unsigned char const[], std::default_delete<unsigned char const[]> >
struct _ty2575;  // Elaborated std::unique_ptr<const uint8_t []>
struct _ty2576;  // TemplateSpecialization unique_ptr<const uint8_t []>
struct _ty2577;  // FunctionProto void (std::unique_ptr<const uint8_t []>, size_t)
struct _ty2578;  // Pointer v8::OwnedBuffer *
struct _ty2579;  // FunctionProto void ()
struct _ty2580;  // LValueReference const v8::OwnedBuffer &
struct _ty2581;  // FunctionProto void (const v8::OwnedBuffer &)
struct _ty2582;  // RValueReference v8::OwnedBuffer &&
struct _ty2583;  // FunctionProto void (v8::OwnedBuffer &&) noexcept
struct _ty2584;  // FunctionProto v8::OwnedBuffer &(v8::OwnedBuffer &&)
struct _ty2585;  // LValueReference v8::OwnedBuffer &
struct _ty2586;  // FunctionProto v8::OwnedBuffer &(const v8::OwnedBuffer &)
struct _ty2587;  // Record v8::CompiledWasmModule
struct _ty2588;  // FunctionProto v8::OwnedBuffer ()
struct _ty2589;  // Pointer v8::CompiledWasmModule *
struct _ty2590;  // FunctionProto MemorySpan<const uint8_t> ()
struct _ty2591;  // TemplateSpecialization MemorySpan<const uint8_t>
struct _ty2592;  // LValueReference const v8::CompiledWasmModule &
struct _ty2593;  // FunctionProto void (const v8::CompiledWasmModule &)
struct _ty2594;  // RValueReference v8::CompiledWasmModule &&
struct _ty2595;  // FunctionProto void (v8::CompiledWasmModule &&)
struct _ty2596;  // FunctionProto v8::CompiledWasmModule &(v8::CompiledWasmModule &&)
struct _ty2597;  // LValueReference v8::CompiledWasmModule &
struct _ty2598;  // FunctionProto void ()
struct _ty2599;  // Record v8::WasmModuleObject::TransferrableModule
struct _ty2600;  // RValueReference v8::WasmModuleObject::TransferrableModule &&
struct _ty2601;  // FunctionProto void (v8::WasmModuleObject::TransferrableModule &&)
struct _ty2602;  // Pointer v8::WasmModuleObject::TransferrableModule *
struct _ty2603;  // LValueReference const v8::WasmModuleObject::TransferrableModule &
struct _ty2604;  // FunctionProto void (const v8::WasmModuleObject::TransferrableModule &)
struct _ty2605;  // FunctionProto v8::WasmModuleObject::TransferrableModule &(v8::WasmModuleObject::TransferrableModule &&)
struct _ty2606;  // LValueReference v8::WasmModuleObject::TransferrableModule &
struct _ty2607;  // FunctionProto v8::WasmModuleObject::TransferrableModule &(const v8::WasmModuleObject::TransferrableModule &)
struct _ty2608;  // FunctionProto void ()
struct _ty2609;  // FunctionProto v8::WasmModuleObject::TransferrableModule ()
struct _ty2610;  // Pointer v8::WasmModuleObject *
struct _ty2611;  // FunctionProto MaybeLocal<v8::WasmModuleObject> (v8::Isolate *, const v8::WasmModuleObject::TransferrableModule &)
struct _ty2612;  // TemplateSpecialization MaybeLocal<v8::WasmModuleObject>
struct _ty2613;  // FunctionProto v8::CompiledWasmModule ()
struct _ty2614;  // TemplateSpecialization MemorySpan<const uint8_t>
struct _ty2615;  // TemplateSpecialization MemorySpan<const uint8_t>
struct _ty2616;  // FunctionProto MaybeLocal<v8::WasmModuleObject> (v8::Isolate *, MemorySpan<const uint8_t>, MemorySpan<const uint8_t>)
struct _ty2617;  // TemplateSpecialization MaybeLocal<v8::WasmModuleObject>
struct _ty2618;  // FunctionProto v8::WasmModuleObject *(v8::Value *)
struct _ty2619;  // Record v8::WasmStreaming
struct _ty2620;  // Record v8::WasmStreaming::WasmStreamingImpl
struct _ty2621;  // Record v8::WasmStreaming::Client
struct _ty2622;  // FunctionProto void ()
struct _ty2623;  // Pointer v8::WasmStreaming::Client *
struct _ty2624;  // FunctionProto void (v8::CompiledWasmModule)
struct _ty2625;  // LValueReference const v8::WasmStreaming::Client &
struct _ty2626;  // FunctionProto v8::WasmStreaming::Client &(const v8::WasmStreaming::Client &)
struct _ty2627;  // LValueReference v8::WasmStreaming::Client &
struct _ty2628;  // Elaborated std::unique_ptr<WasmStreamingImpl>
struct _ty2629;  // TemplateSpecialization unique_ptr<v8::WasmStreaming::WasmStreamingImpl>
struct _ty2630;  // Record std::unique_ptr<v8::WasmStreaming::WasmStreamingImpl, std::default_delete<v8::WasmStreaming::WasmStreamingImpl> >
struct _ty2631;  // FunctionProto void (std::unique_ptr<WasmStreamingImpl>)
struct _ty2632;  // Pointer v8::WasmStreaming *
struct _ty2633;  // FunctionProto void ()
struct _ty2634;  // FunctionProto void (const uint8_t *, size_t)
struct _ty2635;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2636;  // FunctionProto void (MaybeLocal<v8::Value>)
struct _ty2637;  // FunctionProto bool (const uint8_t *, size_t)
struct _ty2638;  // Elaborated std::shared_ptr<Client>
struct _ty2639;  // TemplateSpecialization shared_ptr<v8::WasmStreaming::Client>
struct _ty2640;  // Record std::shared_ptr<v8::WasmStreaming::Client>
struct _ty2641;  // FunctionProto void (std::shared_ptr<Client>)
struct _ty2642;  // TemplateSpecialization Local<v8::Value>
struct _ty2643;  // FunctionProto std::shared_ptr<WasmStreaming> (v8::Isolate *, Local<v8::Value>)
struct _ty2644;  // Elaborated std::shared_ptr<WasmStreaming>
struct _ty2645;  // TemplateSpecialization shared_ptr<v8::WasmStreaming>
struct _ty2646;  // Record std::shared_ptr<v8::WasmStreaming>
struct _ty2647;  // LValueReference const v8::WasmStreaming &
struct _ty2648;  // FunctionProto void (const v8::WasmStreaming &)
struct _ty2649;  // Record v8::WasmModuleObjectBuilderStreaming
struct _ty2650;  // Pointer v8::WasmModuleObjectBuilderStreaming *
struct _ty2651;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2652;  // FunctionProto void (MaybeLocal<v8::Value>)
struct _ty2653;  // FunctionProto Local<v8::Promise> ()
struct _ty2654;  // TemplateSpecialization Local<v8::Promise>
struct _ty2655;  // FunctionProto void ()
struct _ty2656;  // Enum v8::ArrayBufferCreationMode
struct _ty2657;  // Record v8::ArrayBuffer::Allocator
struct _ty2658;  // FunctionProto void ()
struct _ty2659;  // Pointer v8::ArrayBuffer::Allocator *
struct _ty2660;  // FunctionProto void *(size_t)
struct _ty2661;  // FunctionProto void (void *, size_t)
struct _ty2662;  // Enum v8::ArrayBuffer::Allocator::AllocationMode
struct _ty2663;  // FunctionProto v8::ArrayBuffer::Allocator *()
struct _ty2664;  // LValueReference const v8::ArrayBuffer::Allocator &
struct _ty2665;  // FunctionProto v8::ArrayBuffer::Allocator &(const v8::ArrayBuffer::Allocator &)
struct _ty2666;  // LValueReference v8::ArrayBuffer::Allocator &
struct _ty2667;  // Record v8::ArrayBuffer::Contents
struct _ty2668;  // Typedef v8::ArrayBuffer::Contents::DeleterCallback
struct _ty2669;  // Paren void (void *, size_t, void *)
struct _ty2670;  // FunctionProto void (void *, size_t, void *)
struct _ty2671;  // Pointer void (*)(void *, size_t, void *)
struct _ty2672;  // Pointer v8::ArrayBuffer::Contents *
struct _ty2673;  // FunctionProto void *() const
struct _ty2674;  // Pointer const v8::ArrayBuffer::Contents *
struct _ty2675;  // FunctionProto Allocator::AllocationMode () const
struct _ty2676;  // Elaborated Allocator::AllocationMode
struct _ty2677;  // FunctionProto v8::ArrayBuffer::Contents::DeleterCallback () const
struct _ty2678;  // Pointer const v8::ArrayBuffer *
struct _ty2679;  // FunctionProto Local<v8::ArrayBuffer> (v8::Isolate *, size_t)
struct _ty2680;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2681;  // FunctionProto Local<v8::ArrayBuffer> (v8::Isolate *, void *, size_t, v8::ArrayBufferCreationMode)
struct _ty2682;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2683;  // Pointer v8::ArrayBuffer *
struct _ty2684;  // FunctionProto v8::ArrayBuffer::Contents ()
struct _ty2685;  // FunctionProto v8::ArrayBuffer *(v8::Value *)
struct _ty2686;  // Record v8::ArrayBufferView
struct _ty2687;  // FunctionProto Local<v8::ArrayBuffer> ()
struct _ty2688;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2689;  // Pointer v8::ArrayBufferView *
struct _ty2690;  // FunctionProto size_t ()
struct _ty2691;  // FunctionProto size_t (void *, size_t)
struct _ty2692;  // Pointer const v8::ArrayBufferView *
struct _ty2693;  // FunctionProto v8::ArrayBufferView *(v8::Value *)
struct _ty2694;  // Record v8::TypedArray
struct _ty2695;  // Pointer v8::TypedArray *
struct _ty2696;  // FunctionProto v8::TypedArray *(v8::Value *)
struct _ty2697;  // Record v8::Uint8Array
struct _ty2698;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2699;  // FunctionProto Local<v8::Uint8Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2700;  // TemplateSpecialization Local<v8::Uint8Array>
struct _ty2701;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2702;  // FunctionProto Local<v8::Uint8Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2703;  // TemplateSpecialization Local<v8::Uint8Array>
struct _ty2704;  // FunctionProto v8::Uint8Array *(v8::Value *)
struct _ty2705;  // Pointer v8::Uint8Array *
struct _ty2706;  // Record v8::Uint8ClampedArray
struct _ty2707;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2708;  // FunctionProto Local<v8::Uint8ClampedArray> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2709;  // TemplateSpecialization Local<v8::Uint8ClampedArray>
struct _ty2710;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2711;  // FunctionProto Local<v8::Uint8ClampedArray> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2712;  // TemplateSpecialization Local<v8::Uint8ClampedArray>
struct _ty2713;  // FunctionProto v8::Uint8ClampedArray *(v8::Value *)
struct _ty2714;  // Pointer v8::Uint8ClampedArray *
struct _ty2715;  // Record v8::Int8Array
struct _ty2716;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2717;  // FunctionProto Local<v8::Int8Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2718;  // TemplateSpecialization Local<v8::Int8Array>
struct _ty2719;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2720;  // FunctionProto Local<v8::Int8Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2721;  // TemplateSpecialization Local<v8::Int8Array>
struct _ty2722;  // FunctionProto v8::Int8Array *(v8::Value *)
struct _ty2723;  // Pointer v8::Int8Array *
struct _ty2724;  // Record v8::Uint16Array
struct _ty2725;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2726;  // FunctionProto Local<v8::Uint16Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2727;  // TemplateSpecialization Local<v8::Uint16Array>
struct _ty2728;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2729;  // FunctionProto Local<v8::Uint16Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2730;  // TemplateSpecialization Local<v8::Uint16Array>
struct _ty2731;  // FunctionProto v8::Uint16Array *(v8::Value *)
struct _ty2732;  // Pointer v8::Uint16Array *
struct _ty2733;  // Record v8::Int16Array
struct _ty2734;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2735;  // FunctionProto Local<v8::Int16Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2736;  // TemplateSpecialization Local<v8::Int16Array>
struct _ty2737;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2738;  // FunctionProto Local<v8::Int16Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2739;  // TemplateSpecialization Local<v8::Int16Array>
struct _ty2740;  // FunctionProto v8::Int16Array *(v8::Value *)
struct _ty2741;  // Pointer v8::Int16Array *
struct _ty2742;  // Record v8::Uint32Array
struct _ty2743;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2744;  // FunctionProto Local<v8::Uint32Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2745;  // TemplateSpecialization Local<v8::Uint32Array>
struct _ty2746;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2747;  // FunctionProto Local<v8::Uint32Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2748;  // TemplateSpecialization Local<v8::Uint32Array>
struct _ty2749;  // FunctionProto v8::Uint32Array *(v8::Value *)
struct _ty2750;  // Pointer v8::Uint32Array *
struct _ty2751;  // Record v8::Int32Array
struct _ty2752;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2753;  // FunctionProto Local<v8::Int32Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2754;  // TemplateSpecialization Local<v8::Int32Array>
struct _ty2755;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2756;  // FunctionProto Local<v8::Int32Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2757;  // TemplateSpecialization Local<v8::Int32Array>
struct _ty2758;  // FunctionProto v8::Int32Array *(v8::Value *)
struct _ty2759;  // Pointer v8::Int32Array *
struct _ty2760;  // Record v8::Float32Array
struct _ty2761;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2762;  // FunctionProto Local<v8::Float32Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2763;  // TemplateSpecialization Local<v8::Float32Array>
struct _ty2764;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2765;  // FunctionProto Local<v8::Float32Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2766;  // TemplateSpecialization Local<v8::Float32Array>
struct _ty2767;  // FunctionProto v8::Float32Array *(v8::Value *)
struct _ty2768;  // Pointer v8::Float32Array *
struct _ty2769;  // Record v8::Float64Array
struct _ty2770;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2771;  // FunctionProto Local<v8::Float64Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2772;  // TemplateSpecialization Local<v8::Float64Array>
struct _ty2773;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2774;  // FunctionProto Local<v8::Float64Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2775;  // TemplateSpecialization Local<v8::Float64Array>
struct _ty2776;  // FunctionProto v8::Float64Array *(v8::Value *)
struct _ty2777;  // Pointer v8::Float64Array *
struct _ty2778;  // Record v8::BigInt64Array
struct _ty2779;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2780;  // FunctionProto Local<v8::BigInt64Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2781;  // TemplateSpecialization Local<v8::BigInt64Array>
struct _ty2782;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2783;  // FunctionProto Local<v8::BigInt64Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2784;  // TemplateSpecialization Local<v8::BigInt64Array>
struct _ty2785;  // FunctionProto v8::BigInt64Array *(v8::Value *)
struct _ty2786;  // Pointer v8::BigInt64Array *
struct _ty2787;  // Record v8::BigUint64Array
struct _ty2788;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2789;  // FunctionProto Local<v8::BigUint64Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2790;  // TemplateSpecialization Local<v8::BigUint64Array>
struct _ty2791;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2792;  // FunctionProto Local<v8::BigUint64Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2793;  // TemplateSpecialization Local<v8::BigUint64Array>
struct _ty2794;  // FunctionProto v8::BigUint64Array *(v8::Value *)
struct _ty2795;  // Pointer v8::BigUint64Array *
struct _ty2796;  // Record v8::DataView
struct _ty2797;  // TemplateSpecialization Local<v8::ArrayBuffer>
struct _ty2798;  // FunctionProto Local<v8::DataView> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _ty2799;  // TemplateSpecialization Local<v8::DataView>
struct _ty2800;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2801;  // FunctionProto Local<v8::DataView> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _ty2802;  // TemplateSpecialization Local<v8::DataView>
struct _ty2803;  // FunctionProto v8::DataView *(v8::Value *)
struct _ty2804;  // Pointer v8::DataView *
struct _ty2805;  // Record v8::SharedArrayBuffer::Contents
struct _ty2806;  // Typedef v8::SharedArrayBuffer::Contents::Allocator
struct _ty2807;  // Elaborated v8::ArrayBuffer::Allocator
struct _ty2808;  // Typedef v8::SharedArrayBuffer::Contents::DeleterCallback
struct _ty2809;  // Pointer v8::SharedArrayBuffer::Contents *
struct _ty2810;  // Pointer const v8::SharedArrayBuffer::Contents *
struct _ty2811;  // FunctionProto Allocator::AllocationMode () const
struct _ty2812;  // Elaborated Allocator::AllocationMode
struct _ty2813;  // FunctionProto v8::SharedArrayBuffer::Contents::DeleterCallback () const
struct _ty2814;  // Pointer const v8::SharedArrayBuffer *
struct _ty2815;  // FunctionProto Local<v8::SharedArrayBuffer> (v8::Isolate *, size_t)
struct _ty2816;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2817;  // FunctionProto Local<v8::SharedArrayBuffer> (v8::Isolate *, void *, size_t, v8::ArrayBufferCreationMode)
struct _ty2818;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2819;  // LValueReference const SharedArrayBuffer::Contents &
struct _ty2820;  // Elaborated SharedArrayBuffer::Contents
struct _ty2821;  // FunctionProto Local<v8::SharedArrayBuffer> (v8::Isolate *, const SharedArrayBuffer::Contents &, v8::ArrayBufferCreationMode)
struct _ty2822;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty2823;  // FunctionProto v8::SharedArrayBuffer::Contents ()
struct _ty2824;  // Pointer v8::SharedArrayBuffer *
struct _ty2825;  // FunctionProto v8::SharedArrayBuffer *(v8::Value *)
struct _ty2826;  // TemplateSpecialization Local<v8::Context>
struct _ty2827;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, double)
struct _ty2828;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty2829;  // Pointer const v8::Date *
struct _ty2830;  // FunctionProto v8::Date *(v8::Value *)
struct _ty2831;  // Pointer v8::Date *
struct _ty2832;  // FunctionProto Local<v8::Value> (v8::Isolate *, double)
struct _ty2833;  // TemplateSpecialization Local<v8::Value>
struct _ty2834;  // Pointer const v8::NumberObject *
struct _ty2835;  // FunctionProto v8::NumberObject *(v8::Value *)
struct _ty2836;  // Pointer v8::NumberObject *
struct _ty2837;  // FunctionProto Local<v8::Value> (v8::Isolate *, int64_t)
struct _ty2838;  // TemplateSpecialization Local<v8::Value>
struct _ty2839;  // FunctionProto Local<v8::BigInt> () const
struct _ty2840;  // TemplateSpecialization Local<v8::BigInt>
struct _ty2841;  // Pointer const v8::BigIntObject *
struct _ty2842;  // FunctionProto v8::BigIntObject *(v8::Value *)
struct _ty2843;  // Pointer v8::BigIntObject *
struct _ty2844;  // FunctionProto Local<v8::Value> (v8::Isolate *, bool)
struct _ty2845;  // TemplateSpecialization Local<v8::Value>
struct _ty2846;  // Pointer const v8::BooleanObject *
struct _ty2847;  // FunctionProto v8::BooleanObject *(v8::Value *)
struct _ty2848;  // Pointer v8::BooleanObject *
struct _ty2849;  // TemplateSpecialization Local<v8::String>
struct _ty2850;  // FunctionProto Local<v8::Value> (v8::Isolate *, Local<v8::String>)
struct _ty2851;  // TemplateSpecialization Local<v8::Value>
struct _ty2852;  // FunctionProto Local<v8::String> () const
struct _ty2853;  // TemplateSpecialization Local<v8::String>
struct _ty2854;  // Pointer const v8::StringObject *
struct _ty2855;  // FunctionProto v8::StringObject *(v8::Value *)
struct _ty2856;  // Pointer v8::StringObject *
struct _ty2857;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2858;  // FunctionProto Local<v8::Value> (v8::Isolate *, Local<v8::Symbol>)
struct _ty2859;  // TemplateSpecialization Local<v8::Value>
struct _ty2860;  // FunctionProto Local<v8::Symbol> () const
struct _ty2861;  // TemplateSpecialization Local<v8::Symbol>
struct _ty2862;  // Pointer const v8::SymbolObject *
struct _ty2863;  // FunctionProto v8::SymbolObject *(v8::Value *)
struct _ty2864;  // Pointer v8::SymbolObject *
struct _ty2865;  // Record v8::RegExp
struct _ty2866;  // Enum v8::RegExp::Flags
struct _ty2867;  // TemplateSpecialization Local<v8::Context>
struct _ty2868;  // TemplateSpecialization Local<v8::String>
struct _ty2869;  // FunctionProto MaybeLocal<v8::RegExp> (Local<v8::Context>, Local<v8::String>, v8::RegExp::Flags)
struct _ty2870;  // TemplateSpecialization MaybeLocal<v8::RegExp>
struct _ty2871;  // FunctionProto Local<v8::String> () const
struct _ty2872;  // TemplateSpecialization Local<v8::String>
struct _ty2873;  // Pointer const v8::RegExp *
struct _ty2874;  // FunctionProto v8::RegExp::Flags () const
struct _ty2875;  // FunctionProto v8::RegExp *(v8::Value *)
struct _ty2876;  // Pointer v8::RegExp *
struct _ty2877;  // FunctionProto Local<v8::External> (v8::Isolate *, void *)
struct _ty2878;  // TemplateSpecialization Local<v8::External>
struct _ty2879;  // FunctionProto v8::External *(v8::Value *)
struct _ty2880;  // Pointer v8::External *
struct _ty2881;  // Pointer const v8::External *
struct _ty2882;  // Enum v8::Intrinsic
struct _ty2883;  // Record v8::Template
struct _ty2884;  // TemplateSpecialization Local<v8::Name>
struct _ty2885;  // TemplateSpecialization Local<v8::Data>
struct _ty2886;  // FunctionProto void (Local<v8::Name>, Local<v8::Data>, v8::PropertyAttribute)
struct _ty2887;  // Pointer v8::Template *
struct _ty2888;  // TemplateSpecialization Local<v8::Private>
struct _ty2889;  // TemplateSpecialization Local<v8::Data>
struct _ty2890;  // FunctionProto void (Local<v8::Private>, Local<v8::Data>, v8::PropertyAttribute)
struct _ty2891;  // TemplateSpecialization Local<v8::Data>
struct _ty2892;  // FunctionProto void (v8::Isolate *, const char *, Local<v8::Data>)
struct _ty2893;  // TemplateSpecialization Local<v8::Name>
struct _ty2894;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty2895;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty2896;  // FunctionProto void (Local<v8::Name>, Local<v8::FunctionTemplate>, Local<v8::FunctionTemplate>, v8::PropertyAttribute, v8::AccessControl)
struct _ty2897;  // TemplateSpecialization Local<v8::String>
struct _ty2898;  // TemplateSpecialization Local<v8::Value>
struct _ty2899;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty2900;  // FunctionProto void (Local<v8::String>, v8::AccessorGetterCallback, v8::AccessorSetterCallback, Local<v8::Value>, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::AccessControl, v8::SideEffectType, v8::SideEffectType)
struct _ty2901;  // TemplateSpecialization Local<v8::Name>
struct _ty2902;  // TemplateSpecialization Local<v8::Value>
struct _ty2903;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty2904;  // FunctionProto void (Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, Local<v8::Value>, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::AccessControl, v8::SideEffectType, v8::SideEffectType)
struct _ty2905;  // TemplateSpecialization Local<v8::Name>
struct _ty2906;  // TemplateSpecialization Local<v8::Value>
struct _ty2907;  // FunctionProto void (Local<v8::Name>, v8::AccessorNameGetterCallback, Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _ty2908;  // TemplateSpecialization Local<v8::Name>
struct _ty2909;  // FunctionProto void (Local<v8::Name>, v8::Intrinsic, v8::PropertyAttribute)
struct _ty2910;  // Typedef v8::GenericNamedPropertyGetterCallback
struct _ty2911;  // Paren void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2912;  // TemplateSpecialization Local<v8::Name>
struct _ty2913;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2914;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2915;  // FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2916;  // Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2917;  // Typedef v8::GenericNamedPropertySetterCallback
struct _ty2918;  // Paren void (Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2919;  // TemplateSpecialization Local<v8::Name>
struct _ty2920;  // TemplateSpecialization Local<v8::Value>
struct _ty2921;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2922;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2923;  // FunctionProto void (Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2924;  // Pointer void (*)(Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2925;  // Typedef v8::GenericNamedPropertyQueryCallback
struct _ty2926;  // Paren void (Local<v8::Name>, const PropertyCallbackInfo<v8::Integer> &)
struct _ty2927;  // TemplateSpecialization Local<v8::Name>
struct _ty2928;  // LValueReference const PropertyCallbackInfo<v8::Integer> &
struct _ty2929;  // TemplateSpecialization PropertyCallbackInfo<v8::Integer>
struct _ty2930;  // FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Integer> &)
struct _ty2931;  // Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Integer> &)
struct _ty2932;  // Typedef v8::GenericNamedPropertyDeleterCallback
struct _ty2933;  // Paren void (Local<v8::Name>, const PropertyCallbackInfo<v8::Boolean> &)
struct _ty2934;  // TemplateSpecialization Local<v8::Name>
struct _ty2935;  // LValueReference const PropertyCallbackInfo<v8::Boolean> &
struct _ty2936;  // TemplateSpecialization PropertyCallbackInfo<v8::Boolean>
struct _ty2937;  // FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Boolean> &)
struct _ty2938;  // Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Boolean> &)
struct _ty2939;  // Typedef v8::GenericNamedPropertyEnumeratorCallback
struct _ty2940;  // Paren void (const PropertyCallbackInfo<v8::Array> &)
struct _ty2941;  // LValueReference const PropertyCallbackInfo<v8::Array> &
struct _ty2942;  // TemplateSpecialization PropertyCallbackInfo<v8::Array>
struct _ty2943;  // FunctionProto void (const PropertyCallbackInfo<v8::Array> &)
struct _ty2944;  // Pointer void (*)(const PropertyCallbackInfo<v8::Array> &)
struct _ty2945;  // Typedef v8::GenericNamedPropertyDefinerCallback
struct _ty2946;  // Paren void (Local<v8::Name>, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _ty2947;  // TemplateSpecialization Local<v8::Name>
struct _ty2948;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2949;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2950;  // FunctionProto void (Local<v8::Name>, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _ty2951;  // Pointer void (*)(Local<v8::Name>, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _ty2952;  // Typedef v8::GenericNamedPropertyDescriptorCallback
struct _ty2953;  // Paren void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2954;  // TemplateSpecialization Local<v8::Name>
struct _ty2955;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2956;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2957;  // FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2958;  // Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2959;  // Typedef v8::IndexedPropertyGetterCallback
struct _ty2960;  // Paren void (uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _ty2961;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2962;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2963;  // FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _ty2964;  // Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _ty2965;  // Typedef v8::IndexedPropertySetterCallback
struct _ty2966;  // Paren void (uint32_t, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2967;  // TemplateSpecialization Local<v8::Value>
struct _ty2968;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2969;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2970;  // FunctionProto void (uint32_t, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2971;  // Pointer void (*)(uint32_t, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _ty2972;  // Typedef v8::IndexedPropertyQueryCallback
struct _ty2973;  // Paren void (uint32_t, const PropertyCallbackInfo<v8::Integer> &)
struct _ty2974;  // LValueReference const PropertyCallbackInfo<v8::Integer> &
struct _ty2975;  // TemplateSpecialization PropertyCallbackInfo<v8::Integer>
struct _ty2976;  // FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Integer> &)
struct _ty2977;  // Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Integer> &)
struct _ty2978;  // Typedef v8::IndexedPropertyDeleterCallback
struct _ty2979;  // Paren void (uint32_t, const PropertyCallbackInfo<v8::Boolean> &)
struct _ty2980;  // LValueReference const PropertyCallbackInfo<v8::Boolean> &
struct _ty2981;  // TemplateSpecialization PropertyCallbackInfo<v8::Boolean>
struct _ty2982;  // FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Boolean> &)
struct _ty2983;  // Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Boolean> &)
struct _ty2984;  // Typedef v8::IndexedPropertyEnumeratorCallback
struct _ty2985;  // Paren void (const PropertyCallbackInfo<v8::Array> &)
struct _ty2986;  // LValueReference const PropertyCallbackInfo<v8::Array> &
struct _ty2987;  // TemplateSpecialization PropertyCallbackInfo<v8::Array>
struct _ty2988;  // FunctionProto void (const PropertyCallbackInfo<v8::Array> &)
struct _ty2989;  // Pointer void (*)(const PropertyCallbackInfo<v8::Array> &)
struct _ty2990;  // Typedef v8::IndexedPropertyDefinerCallback
struct _ty2991;  // Paren void (uint32_t, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _ty2992;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2993;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty2994;  // FunctionProto void (uint32_t, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _ty2995;  // Pointer void (*)(uint32_t, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _ty2996;  // Typedef v8::IndexedPropertyDescriptorCallback
struct _ty2997;  // Paren void (uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _ty2998;  // LValueReference const PropertyCallbackInfo<v8::Value> &
struct _ty2999;  // TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _ty3000;  // FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _ty3001;  // Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _ty3002;  // Enum v8::AccessType
struct _ty3003;  // Typedef v8::AccessCheckCallback
struct _ty3004;  // Paren bool (Local<v8::Context>, Local<v8::Object>, Local<v8::Value>)
struct _ty3005;  // TemplateSpecialization Local<v8::Context>
struct _ty3006;  // TemplateSpecialization Local<v8::Object>
struct _ty3007;  // TemplateSpecialization Local<v8::Value>
struct _ty3008;  // FunctionProto bool (Local<v8::Context>, Local<v8::Object>, Local<v8::Value>)
struct _ty3009;  // Pointer bool (*)(Local<v8::Context>, Local<v8::Object>, Local<v8::Value>)
struct _ty3010;  // TemplateSpecialization Local<v8::Value>
struct _ty3011;  // TemplateSpecialization Local<v8::Signature>
struct _ty3012;  // FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, v8::FunctionCallback, Local<v8::Value>, Local<v8::Signature>, int, v8::ConstructorBehavior, v8::SideEffectType)
struct _ty3013;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3014;  // FunctionProto MaybeLocal<v8::FunctionTemplate> (v8::Isolate *, size_t)
struct _ty3015;  // TemplateSpecialization MaybeLocal<v8::FunctionTemplate>
struct _ty3016;  // TemplateSpecialization Local<v8::Private>
struct _ty3017;  // TemplateSpecialization Local<v8::Value>
struct _ty3018;  // TemplateSpecialization Local<v8::Signature>
struct _ty3019;  // FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, v8::FunctionCallback, Local<v8::Private>, Local<v8::Value>, Local<v8::Signature>, int, v8::SideEffectType)
struct _ty3020;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3021;  // TemplateSpecialization Local<v8::Context>
struct _ty3022;  // FunctionProto MaybeLocal<v8::Function> (Local<v8::Context>)
struct _ty3023;  // TemplateSpecialization MaybeLocal<v8::Function>
struct _ty3024;  // Pointer v8::FunctionTemplate *
struct _ty3025;  // FunctionProto MaybeLocal<v8::Object> ()
struct _ty3026;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty3027;  // TemplateSpecialization Local<v8::Value>
struct _ty3028;  // FunctionProto void (v8::FunctionCallback, Local<v8::Value>, v8::SideEffectType)
struct _ty3029;  // FunctionProto Local<v8::ObjectTemplate> ()
struct _ty3030;  // TemplateSpecialization Local<v8::ObjectTemplate>
struct _ty3031;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3032;  // FunctionProto void (Local<v8::FunctionTemplate>)
struct _ty3033;  // FunctionProto Local<v8::ObjectTemplate> ()
struct _ty3034;  // TemplateSpecialization Local<v8::ObjectTemplate>
struct _ty3035;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3036;  // FunctionProto void (Local<v8::FunctionTemplate>)
struct _ty3037;  // TemplateSpecialization Local<v8::String>
struct _ty3038;  // FunctionProto void (Local<v8::String>)
struct _ty3039;  // TemplateSpecialization Local<v8::Value>
struct _ty3040;  // FunctionProto bool (Local<v8::Value>)
struct _ty3041;  // FunctionProto v8::FunctionTemplate *(v8::Data *)
struct _ty3042;  // Enum v8::PropertyHandlerFlags
struct _ty3043;  // Record v8::NamedPropertyHandlerConfiguration
struct _ty3044;  // TemplateSpecialization Local<v8::Value>
struct _ty3045;  // FunctionProto void (v8::GenericNamedPropertyGetterCallback, v8::GenericNamedPropertySetterCallback, v8::GenericNamedPropertyQueryCallback, v8::GenericNamedPropertyDeleterCallback, v8::GenericNamedPropertyEnumeratorCallback, v8::GenericNamedPropertyDefinerCallback, v8::GenericNamedPropertyDescriptorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _ty3046;  // Pointer v8::NamedPropertyHandlerConfiguration *
struct _ty3047;  // TemplateSpecialization Local<v8::Value>
struct _ty3048;  // FunctionProto void (v8::GenericNamedPropertyGetterCallback, v8::GenericNamedPropertySetterCallback, v8::GenericNamedPropertyQueryCallback, v8::GenericNamedPropertyDeleterCallback, v8::GenericNamedPropertyEnumeratorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _ty3049;  // TemplateSpecialization Local<v8::Value>
struct _ty3050;  // FunctionProto void (v8::GenericNamedPropertyGetterCallback, v8::GenericNamedPropertySetterCallback, v8::GenericNamedPropertyDescriptorCallback, v8::GenericNamedPropertyDeleterCallback, v8::GenericNamedPropertyEnumeratorCallback, v8::GenericNamedPropertyDefinerCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _ty3051;  // TemplateSpecialization Local<v8::Value>
struct _ty3052;  // LValueReference const v8::NamedPropertyHandlerConfiguration &
struct _ty3053;  // FunctionProto void (const v8::NamedPropertyHandlerConfiguration &)
struct _ty3054;  // RValueReference v8::NamedPropertyHandlerConfiguration &&
struct _ty3055;  // FunctionProto void (v8::NamedPropertyHandlerConfiguration &&)
struct _ty3056;  // Record v8::IndexedPropertyHandlerConfiguration
struct _ty3057;  // TemplateSpecialization Local<v8::Value>
struct _ty3058;  // FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyQueryCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, v8::IndexedPropertyDefinerCallback, v8::IndexedPropertyDescriptorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _ty3059;  // Pointer v8::IndexedPropertyHandlerConfiguration *
struct _ty3060;  // TemplateSpecialization Local<v8::Value>
struct _ty3061;  // FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyQueryCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _ty3062;  // TemplateSpecialization Local<v8::Value>
struct _ty3063;  // FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyDescriptorCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, v8::IndexedPropertyDefinerCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _ty3064;  // TemplateSpecialization Local<v8::Value>
struct _ty3065;  // LValueReference const v8::IndexedPropertyHandlerConfiguration &
struct _ty3066;  // FunctionProto void (const v8::IndexedPropertyHandlerConfiguration &)
struct _ty3067;  // RValueReference v8::IndexedPropertyHandlerConfiguration &&
struct _ty3068;  // FunctionProto void (v8::IndexedPropertyHandlerConfiguration &&)
struct _ty3069;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3070;  // FunctionProto Local<v8::ObjectTemplate> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _ty3071;  // TemplateSpecialization Local<v8::ObjectTemplate>
struct _ty3072;  // FunctionProto MaybeLocal<v8::ObjectTemplate> (v8::Isolate *, size_t)
struct _ty3073;  // TemplateSpecialization MaybeLocal<v8::ObjectTemplate>
struct _ty3074;  // TemplateSpecialization Local<v8::Context>
struct _ty3075;  // FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>)
struct _ty3076;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty3077;  // Pointer v8::ObjectTemplate *
struct _ty3078;  // TemplateSpecialization Local<v8::String>
struct _ty3079;  // TemplateSpecialization Local<v8::Value>
struct _ty3080;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty3081;  // FunctionProto void (Local<v8::String>, v8::AccessorGetterCallback, v8::AccessorSetterCallback, Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::SideEffectType, v8::SideEffectType)
struct _ty3082;  // TemplateSpecialization Local<v8::Name>
struct _ty3083;  // TemplateSpecialization Local<v8::Value>
struct _ty3084;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty3085;  // FunctionProto void (Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::SideEffectType, v8::SideEffectType)
struct _ty3086;  // FunctionProto void (const v8::NamedPropertyHandlerConfiguration &)
struct _ty3087;  // TemplateSpecialization Local<v8::Value>
struct _ty3088;  // FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyQueryCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, Local<v8::Value>)
struct _ty3089;  // FunctionProto void (const v8::IndexedPropertyHandlerConfiguration &)
struct _ty3090;  // TemplateSpecialization Local<v8::Value>
struct _ty3091;  // FunctionProto void (v8::FunctionCallback, Local<v8::Value>)
struct _ty3092;  // TemplateSpecialization Local<v8::Value>
struct _ty3093;  // FunctionProto void (v8::AccessCheckCallback, Local<v8::Value>)
struct _ty3094;  // TemplateSpecialization Local<v8::Value>
struct _ty3095;  // FunctionProto void (v8::AccessCheckCallback, const v8::NamedPropertyHandlerConfiguration &, const v8::IndexedPropertyHandlerConfiguration &, Local<v8::Value>)
struct _ty3096;  // FunctionProto v8::ObjectTemplate *(v8::Data *)
struct _ty3097;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3098;  // FunctionProto Local<v8::Signature> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _ty3099;  // TemplateSpecialization Local<v8::Signature>
struct _ty3100;  // FunctionProto v8::Signature *(v8::Data *)
struct _ty3101;  // Pointer v8::Signature *
struct _ty3102;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3103;  // FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _ty3104;  // TemplateSpecialization Local<v8::AccessorSignature>
struct _ty3105;  // FunctionProto v8::AccessorSignature *(v8::Data *)
struct _ty3106;  // Pointer v8::AccessorSignature *
struct _ty3107;  // Record v8::Extension
struct _ty3108;  // Pointer const char **
struct _ty3109;  // FunctionProto void (const char *, const char *, int, const char **, int)
struct _ty3110;  // Pointer v8::Extension *
struct _ty3111;  // TemplateSpecialization Local<v8::String>
struct _ty3112;  // FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, Local<v8::String>)
struct _ty3113;  // TemplateSpecialization Local<v8::FunctionTemplate>
struct _ty3114;  // Pointer const v8::Extension *
struct _ty3115;  // FunctionProto const String::ExternalOneByteStringResource *() const
struct _ty3116;  // Pointer const String::ExternalOneByteStringResource *
struct _ty3117;  // Elaborated String::ExternalOneByteStringResource
struct _ty3118;  // FunctionProto const char **() const
struct _ty3119;  // LValueReference const v8::Extension &
struct _ty3120;  // FunctionProto void (const v8::Extension &)
struct _ty3121;  // Elaborated std::unique_ptr<Extension>
struct _ty3122;  // TemplateSpecialization unique_ptr<v8::Extension>
struct _ty3123;  // Record std::unique_ptr<v8::Extension, std::default_delete<v8::Extension> >
struct _ty3124;  // FunctionProto void (std::unique_ptr<Extension>)
struct _ty3125;  // FunctionProto Local<v8::Primitive> (v8::Isolate *)
struct _ty3126;  // TemplateSpecialization Local<v8::Primitive>
struct _ty3127;  // FunctionProto Local<v8::Primitive> (v8::Isolate *)
struct _ty3128;  // TemplateSpecialization Local<v8::Primitive>
struct _ty3129;  // FunctionProto Local<v8::Boolean> (v8::Isolate *)
struct _ty3130;  // TemplateSpecialization Local<v8::Boolean>
struct _ty3131;  // FunctionProto Local<v8::Boolean> (v8::Isolate *)
struct _ty3132;  // TemplateSpecialization Local<v8::Boolean>
struct _ty3133;  // Record v8::ResourceConstraints
struct _ty3134;  // FunctionProto void (size_t, size_t)
struct _ty3135;  // Pointer v8::ResourceConstraints *
struct _ty3136;  // FunctionProto void (uint64_t, uint64_t)
struct _ty3137;  // FunctionProto uint32_t *() const
struct _ty3138;  // Pointer const v8::ResourceConstraints *
struct _ty3139;  // FunctionProto void (uint32_t *)
struct _ty3140;  // FunctionProto void (size_t)
struct _ty3141;  // LValueReference const v8::ResourceConstraints &
struct _ty3142;  // FunctionProto void (const v8::ResourceConstraints &)
struct _ty3143;  // RValueReference v8::ResourceConstraints &&
struct _ty3144;  // FunctionProto void (v8::ResourceConstraints &&)
struct _ty3145;  // Typedef v8::FatalErrorCallback
struct _ty3146;  // Paren void (const char *, const char *)
struct _ty3147;  // FunctionProto void (const char *, const char *)
struct _ty3148;  // Pointer void (*)(const char *, const char *)
struct _ty3149;  // Typedef v8::OOMErrorCallback
struct _ty3150;  // Paren void (const char *, bool)
struct _ty3151;  // FunctionProto void (const char *, bool)
struct _ty3152;  // Pointer void (*)(const char *, bool)
struct _ty3153;  // Typedef v8::DcheckErrorCallback
struct _ty3154;  // Paren void (const char *, int, const char *)
struct _ty3155;  // FunctionProto void (const char *, int, const char *)
struct _ty3156;  // Pointer void (*)(const char *, int, const char *)
struct _ty3157;  // Typedef v8::MessageCallback
struct _ty3158;  // Paren void (Local<v8::Message>, Local<v8::Value>)
struct _ty3159;  // TemplateSpecialization Local<v8::Message>
struct _ty3160;  // TemplateSpecialization Local<v8::Value>
struct _ty3161;  // FunctionProto void (Local<v8::Message>, Local<v8::Value>)
struct _ty3162;  // Pointer void (*)(Local<v8::Message>, Local<v8::Value>)
struct _ty3163;  // Typedef v8::LogEventCallback
struct _ty3164;  // Paren void (const char *, int)
struct _ty3165;  // FunctionProto void (const char *, int)
struct _ty3166;  // Pointer void (*)(const char *, int)
struct _ty3167;  // Record v8::Exception
struct _ty3168;  // TemplateSpecialization Local<v8::String>
struct _ty3169;  // FunctionProto Local<v8::Value> (Local<v8::String>)
struct _ty3170;  // TemplateSpecialization Local<v8::Value>
struct _ty3171;  // TemplateSpecialization Local<v8::String>
struct _ty3172;  // FunctionProto Local<v8::Value> (Local<v8::String>)
struct _ty3173;  // TemplateSpecialization Local<v8::Value>
struct _ty3174;  // TemplateSpecialization Local<v8::String>
struct _ty3175;  // FunctionProto Local<v8::Value> (Local<v8::String>)
struct _ty3176;  // TemplateSpecialization Local<v8::Value>
struct _ty3177;  // TemplateSpecialization Local<v8::String>
struct _ty3178;  // FunctionProto Local<v8::Value> (Local<v8::String>)
struct _ty3179;  // TemplateSpecialization Local<v8::Value>
struct _ty3180;  // TemplateSpecialization Local<v8::String>
struct _ty3181;  // FunctionProto Local<v8::Value> (Local<v8::String>)
struct _ty3182;  // TemplateSpecialization Local<v8::Value>
struct _ty3183;  // TemplateSpecialization Local<v8::Value>
struct _ty3184;  // FunctionProto Local<v8::Message> (v8::Isolate *, Local<v8::Value>)
struct _ty3185;  // TemplateSpecialization Local<v8::Message>
struct _ty3186;  // TemplateSpecialization Local<v8::Value>
struct _ty3187;  // FunctionProto Local<v8::StackTrace> (Local<v8::Value>)
struct _ty3188;  // TemplateSpecialization Local<v8::StackTrace>
struct _ty3189;  // Typedef v8::CounterLookupCallback
struct _ty3190;  // Paren int *(const char *)
struct _ty3191;  // FunctionProto int *(const char *)
struct _ty3192;  // Pointer int *(*)(const char *)
struct _ty3193;  // Typedef v8::CreateHistogramCallback
struct _ty3194;  // Paren void *(const char *, int, int, size_t)
struct _ty3195;  // FunctionProto void *(const char *, int, int, size_t)
struct _ty3196;  // Pointer void *(*)(const char *, int, int, size_t)
struct _ty3197;  // Typedef v8::AddHistogramSampleCallback
struct _ty3198;  // Paren void (void *, int)
struct _ty3199;  // FunctionProto void (void *, int)
struct _ty3200;  // Pointer void (*)(void *, int)
struct _ty3201;  // Typedef v8::BeforeCallEnteredCallback
struct _ty3202;  // Paren void (v8::Isolate *)
struct _ty3203;  // Pointer void (*)(v8::Isolate *)
struct _ty3204;  // Typedef v8::CallCompletedCallback
struct _ty3205;  // Typedef v8::HostImportModuleDynamicallyCallback
struct _ty3206;  // Paren MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::ScriptOrModule>, Local<v8::String>)
struct _ty3207;  // TemplateSpecialization MaybeLocal<v8::Promise>
struct _ty3208;  // TemplateSpecialization Local<v8::Context>
struct _ty3209;  // TemplateSpecialization Local<v8::ScriptOrModule>
struct _ty3210;  // TemplateSpecialization Local<v8::String>
struct _ty3211;  // FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::ScriptOrModule>, Local<v8::String>)
struct _ty3212;  // Pointer MaybeLocal<v8::Promise> (*)(Local<v8::Context>, Local<v8::ScriptOrModule>, Local<v8::String>)
struct _ty3213;  // Typedef v8::HostInitializeImportMetaObjectCallback
struct _ty3214;  // Paren void (Local<v8::Context>, Local<v8::Module>, Local<v8::Object>)
struct _ty3215;  // TemplateSpecialization Local<v8::Context>
struct _ty3216;  // TemplateSpecialization Local<v8::Module>
struct _ty3217;  // TemplateSpecialization Local<v8::Object>
struct _ty3218;  // FunctionProto void (Local<v8::Context>, Local<v8::Module>, Local<v8::Object>)
struct _ty3219;  // Pointer void (*)(Local<v8::Context>, Local<v8::Module>, Local<v8::Object>)
struct _ty3220;  // Typedef v8::PrepareStackTraceCallback
struct _ty3221;  // Paren MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>, Local<v8::Array>)
struct _ty3222;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty3223;  // TemplateSpecialization Local<v8::Context>
struct _ty3224;  // TemplateSpecialization Local<v8::Value>
struct _ty3225;  // TemplateSpecialization Local<v8::Array>
struct _ty3226;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>, Local<v8::Array>)
struct _ty3227;  // Pointer MaybeLocal<v8::Value> (*)(Local<v8::Context>, Local<v8::Value>, Local<v8::Array>)
struct _ty3228;  // Enum v8::PromiseHookType
struct _ty3229;  // Typedef v8::PromiseHook
struct _ty3230;  // Paren void (v8::PromiseHookType, Local<v8::Promise>, Local<v8::Value>)
struct _ty3231;  // TemplateSpecialization Local<v8::Promise>
struct _ty3232;  // TemplateSpecialization Local<v8::Value>
struct _ty3233;  // FunctionProto void (v8::PromiseHookType, Local<v8::Promise>, Local<v8::Value>)
struct _ty3234;  // Pointer void (*)(v8::PromiseHookType, Local<v8::Promise>, Local<v8::Value>)
struct _ty3235;  // Enum v8::PromiseRejectEvent
struct _ty3236;  // Record v8::PromiseRejectMessage
struct _ty3237;  // TemplateSpecialization Local<v8::Promise>
struct _ty3238;  // TemplateSpecialization Local<v8::Value>
struct _ty3239;  // FunctionProto void (Local<v8::Promise>, v8::PromiseRejectEvent, Local<v8::Value>)
struct _ty3240;  // Pointer v8::PromiseRejectMessage *
struct _ty3241;  // FunctionProto Local<v8::Promise> () const
struct _ty3242;  // TemplateSpecialization Local<v8::Promise>
struct _ty3243;  // Pointer const v8::PromiseRejectMessage *
struct _ty3244;  // FunctionProto v8::PromiseRejectEvent () const
struct _ty3245;  // FunctionProto Local<v8::Value> () const
struct _ty3246;  // TemplateSpecialization Local<v8::Value>
struct _ty3247;  // Typedef v8::PromiseRejectCallback
struct _ty3248;  // Paren void (v8::PromiseRejectMessage)
struct _ty3249;  // FunctionProto void (v8::PromiseRejectMessage)
struct _ty3250;  // Pointer void (*)(v8::PromiseRejectMessage)
struct _ty3251;  // Typedef v8::MicrotasksCompletedCallback
struct _ty3252;  // Typedef v8::MicrotasksCompletedCallbackWithData
struct _ty3253;  // Paren void (v8::Isolate *, void *)
struct _ty3254;  // FunctionProto void (v8::Isolate *, void *)
struct _ty3255;  // Pointer void (*)(v8::Isolate *, void *)
struct _ty3256;  // Typedef v8::MicrotaskCallback
struct _ty3257;  // Paren void (void *)
struct _ty3258;  // Pointer void (*)(void *)
struct _ty3259;  // Enum v8::MicrotasksPolicy
struct _ty3260;  // FunctionProto std::unique_ptr<MicrotaskQueue> (v8::Isolate *, v8::MicrotasksPolicy)
struct _ty3261;  // Elaborated std::unique_ptr<MicrotaskQueue>
struct _ty3262;  // TemplateSpecialization unique_ptr<v8::MicrotaskQueue>
struct _ty3263;  // Record std::unique_ptr<v8::MicrotaskQueue, std::default_delete<v8::MicrotaskQueue> >
struct _ty3264;  // FunctionProto void ()
struct _ty3265;  // Pointer v8::MicrotaskQueue *
struct _ty3266;  // TemplateSpecialization Local<v8::Function>
struct _ty3267;  // FunctionProto void (v8::Isolate *, Local<v8::Function>)
struct _ty3268;  // Pointer v8::Isolate *
struct _ty3269;  // Elaborated v8::Isolate
struct _ty3270;  // FunctionProto void (v8::Isolate *, v8::MicrotaskCallback, void *)
struct _ty3271;  // FunctionProto void (v8::MicrotasksCompletedCallbackWithData, void *)
struct _ty3272;  // Pointer const v8::MicrotaskQueue *
struct _ty3273;  // LValueReference const v8::MicrotaskQueue &
struct _ty3274;  // FunctionProto void (const v8::MicrotaskQueue &)
struct _ty3275;  // FunctionProto v8::MicrotaskQueue &(const v8::MicrotaskQueue &)
struct _ty3276;  // LValueReference v8::MicrotaskQueue &
struct _ty3277;  // Record v8::MicrotasksScope
struct _ty3278;  // Enum v8::MicrotasksScope::Type
struct _ty3279;  // FunctionProto void (v8::Isolate *, v8::MicrotasksScope::Type)
struct _ty3280;  // Pointer v8::MicrotasksScope *
struct _ty3281;  // FunctionProto void (v8::Isolate *, v8::MicrotaskQueue *, v8::MicrotasksScope::Type)
struct _ty3282;  // FunctionProto void ()
struct _ty3283;  // FunctionProto bool (v8::Isolate *)
struct _ty3284;  // LValueReference const v8::MicrotasksScope &
struct _ty3285;  // FunctionProto void (const v8::MicrotasksScope &)
struct _ty3286;  // FunctionProto v8::MicrotasksScope &(const v8::MicrotasksScope &)
struct _ty3287;  // LValueReference v8::MicrotasksScope &
struct _ty3288;  // Typedef v8::FailedAccessCheckCallback
struct _ty3289;  // Paren void (Local<v8::Object>, v8::AccessType, Local<v8::Value>)
struct _ty3290;  // TemplateSpecialization Local<v8::Object>
struct _ty3291;  // TemplateSpecialization Local<v8::Value>
struct _ty3292;  // FunctionProto void (Local<v8::Object>, v8::AccessType, Local<v8::Value>)
struct _ty3293;  // Pointer void (*)(Local<v8::Object>, v8::AccessType, Local<v8::Value>)
struct _ty3294;  // Typedef v8::AllowCodeGenerationFromStringsCallback
struct _ty3295;  // Paren bool (Local<v8::Context>, Local<v8::String>)
struct _ty3296;  // TemplateSpecialization Local<v8::Context>
struct _ty3297;  // TemplateSpecialization Local<v8::String>
struct _ty3298;  // FunctionProto bool (Local<v8::Context>, Local<v8::String>)
struct _ty3299;  // Pointer bool (*)(Local<v8::Context>, Local<v8::String>)
struct _ty3300;  // Typedef v8::ExtensionCallback
struct _ty3301;  // Paren bool (const FunctionCallbackInfo<v8::Value> &)
struct _ty3302;  // LValueReference const FunctionCallbackInfo<v8::Value> &
struct _ty3303;  // TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _ty3304;  // FunctionProto bool (const FunctionCallbackInfo<v8::Value> &)
struct _ty3305;  // Pointer bool (*)(const FunctionCallbackInfo<v8::Value> &)
struct _ty3306;  // Typedef v8::AllowWasmCodeGenerationCallback
struct _ty3307;  // Paren bool (Local<v8::Context>, Local<v8::String>)
struct _ty3308;  // TemplateSpecialization Local<v8::Context>
struct _ty3309;  // TemplateSpecialization Local<v8::String>
struct _ty3310;  // FunctionProto bool (Local<v8::Context>, Local<v8::String>)
struct _ty3311;  // Pointer bool (*)(Local<v8::Context>, Local<v8::String>)
struct _ty3312;  // Typedef v8::ApiImplementationCallback
struct _ty3313;  // Paren void (const FunctionCallbackInfo<v8::Value> &)
struct _ty3314;  // LValueReference const FunctionCallbackInfo<v8::Value> &
struct _ty3315;  // TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _ty3316;  // FunctionProto void (const FunctionCallbackInfo<v8::Value> &)
struct _ty3317;  // Pointer void (*)(const FunctionCallbackInfo<v8::Value> &)
struct _ty3318;  // Typedef v8::WasmStreamingCallback
struct _ty3319;  // Paren void (const FunctionCallbackInfo<v8::Value> &)
struct _ty3320;  // LValueReference const FunctionCallbackInfo<v8::Value> &
struct _ty3321;  // TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _ty3322;  // FunctionProto void (const FunctionCallbackInfo<v8::Value> &)
struct _ty3323;  // Pointer void (*)(const FunctionCallbackInfo<v8::Value> &)
struct _ty3324;  // Typedef v8::WasmThreadsEnabledCallback
struct _ty3325;  // Paren bool (Local<v8::Context>)
struct _ty3326;  // TemplateSpecialization Local<v8::Context>
struct _ty3327;  // FunctionProto bool (Local<v8::Context>)
struct _ty3328;  // Pointer bool (*)(Local<v8::Context>)
struct _ty3329;  // Enum v8::GCType
struct _ty3330;  // Enum v8::GCCallbackFlags
struct _ty3331;  // Typedef v8::GCCallback
struct _ty3332;  // Paren void (v8::GCType, v8::GCCallbackFlags)
struct _ty3333;  // FunctionProto void (v8::GCType, v8::GCCallbackFlags)
struct _ty3334;  // Pointer void (*)(v8::GCType, v8::GCCallbackFlags)
struct _ty3335;  // Typedef v8::InterruptCallback
struct _ty3336;  // Typedef v8::NearHeapLimitCallback
struct _ty3337;  // Paren size_t (void *, size_t, size_t)
struct _ty3338;  // FunctionProto size_t (void *, size_t, size_t)
struct _ty3339;  // Pointer size_t (*)(void *, size_t, size_t)
struct _ty3340;  // Record v8::HeapStatistics
struct _ty3341;  // Pointer v8::HeapStatistics *
struct _ty3342;  // Record v8::HeapSpaceStatistics
struct _ty3343;  // Pointer v8::HeapSpaceStatistics *
struct _ty3344;  // FunctionProto const char *()
struct _ty3345;  // Record v8::HeapObjectStatistics
struct _ty3346;  // Pointer v8::HeapObjectStatistics *
struct _ty3347;  // Record v8::HeapCodeStatistics
struct _ty3348;  // Pointer v8::HeapCodeStatistics *
struct _ty3349;  // Record v8::JitCodeEvent
struct _ty3350;  // Enum v8::JitCodeEvent::EventType
struct _ty3351;  // Enum v8::JitCodeEvent::PositionType
struct _ty3352;  // Enum v8::JitCodeEvent::CodeType
struct _ty3353;  // TemplateSpecialization Local<v8::UnboundScript>
struct _ty3354;  // Record v8::JitCodeEvent::name_t
struct _ty3355;  // Record v8::JitCodeEvent::line_info_t
struct _ty3356;  // Record v8::JitCodeEvent::(anonymous union at D:\gen8/v8/include/v8.h:7072:3)
struct _ty3357;  // Elaborated struct name_t
struct _ty3358;  // Elaborated struct line_info_t
struct _ty3359;  // Enum v8::RAILMode
struct _ty3360;  // Enum v8::JitCodeEventOptions
struct _ty3361;  // Typedef v8::JitCodeEventHandler
struct _ty3362;  // Paren void (const v8::JitCodeEvent *)
struct _ty3363;  // Pointer const v8::JitCodeEvent *
struct _ty3364;  // FunctionProto void (const v8::JitCodeEvent *)
struct _ty3365;  // Pointer void (*)(const v8::JitCodeEvent *)
struct _ty3366;  // Typedef v8::UnhandledExceptionCallback
struct _ty3367;  // Paren int (_EXCEPTION_POINTERS *)
struct _ty3368;  // Pointer _EXCEPTION_POINTERS *
struct _ty3369;  // Record _EXCEPTION_POINTERS
struct _ty3370;  // FunctionProto int (_EXCEPTION_POINTERS *)
struct _ty3371;  // Pointer int (*)(_EXCEPTION_POINTERS *)
struct _ty3372;  // Record v8::ExternalResourceVisitor
struct _ty3373;  // FunctionProto void ()
struct _ty3374;  // Pointer v8::ExternalResourceVisitor *
struct _ty3375;  // TemplateSpecialization Local<v8::String>
struct _ty3376;  // FunctionProto void (Local<v8::String>)
struct _ty3377;  // LValueReference const v8::ExternalResourceVisitor &
struct _ty3378;  // FunctionProto v8::ExternalResourceVisitor &(const v8::ExternalResourceVisitor &)
struct _ty3379;  // LValueReference v8::ExternalResourceVisitor &
struct _ty3380;  // Record v8::PersistentHandleVisitor
struct _ty3381;  // FunctionProto void ()
struct _ty3382;  // Pointer v8::PersistentHandleVisitor *
struct _ty3383;  // Pointer Persistent<v8::Value> *
struct _ty3384;  // TemplateSpecialization Persistent<v8::Value>
struct _ty3385;  // FunctionProto void (Persistent<v8::Value> *, uint16_t)
struct _ty3386;  // LValueReference const v8::PersistentHandleVisitor &
struct _ty3387;  // FunctionProto v8::PersistentHandleVisitor &(const v8::PersistentHandleVisitor &)
struct _ty3388;  // LValueReference v8::PersistentHandleVisitor &
struct _ty3389;  // Enum v8::MemoryPressureLevel
struct _ty3390;  // Record v8::EmbedderHeapTracer
struct _ty3391;  // Enum v8::EmbedderHeapTracer::TraceFlags
struct _ty3392;  // Enum v8::EmbedderHeapTracer::EmbedderStackState
struct _ty3393;  // Record v8::EmbedderHeapTracer::TracedGlobalHandleVisitor
struct _ty3394;  // FunctionProto void ()
struct _ty3395;  // Pointer v8::EmbedderHeapTracer::TracedGlobalHandleVisitor *
struct _ty3396;  // LValueReference const TracedGlobal<v8::Value> &
struct _ty3397;  // TemplateSpecialization TracedGlobal<v8::Value>
struct _ty3398;  // FunctionProto void (const TracedGlobal<v8::Value> &)
struct _ty3399;  // LValueReference const v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &
struct _ty3400;  // FunctionProto v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &(const v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &)
struct _ty3401;  // LValueReference v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &
struct _ty3402;  // Record v8::EmbedderHeapTracer::TraceSummary
struct _ty3403;  // FunctionProto void ()
struct _ty3404;  // Pointer v8::EmbedderHeapTracer *
struct _ty3405;  // FunctionProto void (v8::EmbedderHeapTracer::TracedGlobalHandleVisitor *)
struct _ty3406;  // LValueReference const std::vector<std::pair<void *, void *> > &
struct _ty3407;  // Elaborated std::vector<std::pair<void *, void *> >
struct _ty3408;  // TemplateSpecialization vector<std::pair<void *, void *> >
struct _ty3409;  // Record std::vector<std::pair<void *, void *>, std::allocator<std::pair<void *, void *> > >
struct _ty3410;  // FunctionProto void (const std::vector<std::pair<void *, void *> > &)
struct _ty3411;  // LValueReference const TracedGlobal<v8::Value> &
struct _ty3412;  // TemplateSpecialization TracedGlobal<v8::Value>
struct _ty3413;  // FunctionProto void (const TracedGlobal<v8::Value> &)
struct _ty3414;  // FunctionProto void (v8::EmbedderHeapTracer::TraceFlags)
struct _ty3415;  // FunctionProto bool (double)
struct _ty3416;  // Pointer v8::EmbedderHeapTracer::TraceSummary *
struct _ty3417;  // FunctionProto void (v8::EmbedderHeapTracer::TraceSummary *)
struct _ty3418;  // FunctionProto void (v8::EmbedderHeapTracer::EmbedderStackState)
struct _ty3419;  // LValueReference const v8::TracedGlobal<v8::Value> &
struct _ty3420;  // Elaborated v8::TracedGlobal<v8::Value>
struct _ty3421;  // TemplateSpecialization TracedGlobal<v8::Value>
struct _ty3422;  // FunctionProto bool (const v8::TracedGlobal<v8::Value> &)
struct _ty3423;  // FunctionProto v8::Isolate *() const
struct _ty3424;  // Pointer const v8::EmbedderHeapTracer *
struct _ty3425;  // LValueReference const v8::EmbedderHeapTracer &
struct _ty3426;  // FunctionProto v8::EmbedderHeapTracer &(const v8::EmbedderHeapTracer &)
struct _ty3427;  // LValueReference v8::EmbedderHeapTracer &
struct _ty3428;  // Record v8::SerializeInternalFieldsCallback
struct _ty3429;  // Typedef v8::SerializeInternalFieldsCallback::CallbackFunction
struct _ty3430;  // Paren v8::StartupData (Local<v8::Object>, int, void *)
struct _ty3431;  // TemplateSpecialization Local<v8::Object>
struct _ty3432;  // FunctionProto v8::StartupData (Local<v8::Object>, int, void *)
struct _ty3433;  // Pointer v8::StartupData (*)(Local<v8::Object>, int, void *)
struct _ty3434;  // FunctionProto void (v8::SerializeInternalFieldsCallback::CallbackFunction, void *)
struct _ty3435;  // Pointer v8::SerializeInternalFieldsCallback *
struct _ty3436;  // LValueReference const v8::SerializeInternalFieldsCallback &
struct _ty3437;  // FunctionProto void (const v8::SerializeInternalFieldsCallback &)
struct _ty3438;  // RValueReference v8::SerializeInternalFieldsCallback &&
struct _ty3439;  // FunctionProto void (v8::SerializeInternalFieldsCallback &&) noexcept
struct _ty3440;  // Typedef v8::SerializeEmbedderFieldsCallback
struct _ty3441;  // Record v8::DeserializeInternalFieldsCallback
struct _ty3442;  // Typedef v8::DeserializeInternalFieldsCallback::CallbackFunction
struct _ty3443;  // Paren void (Local<v8::Object>, int, v8::StartupData, void *)
struct _ty3444;  // TemplateSpecialization Local<v8::Object>
struct _ty3445;  // FunctionProto void (Local<v8::Object>, int, v8::StartupData, void *)
struct _ty3446;  // Pointer void (*)(Local<v8::Object>, int, v8::StartupData, void *)
struct _ty3447;  // FunctionProto void (v8::DeserializeInternalFieldsCallback::CallbackFunction, void *)
struct _ty3448;  // Pointer v8::DeserializeInternalFieldsCallback *
struct _ty3449;  // Pointer void (*)(Local<v8::Object>, int, v8::StartupData, void *)
struct _ty3450;  // Paren void (Local<v8::Object>, int, v8::StartupData, void *)
struct _ty3451;  // TemplateSpecialization Local<v8::Object>
struct _ty3452;  // FunctionProto void (Local<v8::Object>, int, v8::StartupData, void *)
struct _ty3453;  // LValueReference const v8::DeserializeInternalFieldsCallback &
struct _ty3454;  // FunctionProto void (const v8::DeserializeInternalFieldsCallback &)
struct _ty3455;  // RValueReference v8::DeserializeInternalFieldsCallback &&
struct _ty3456;  // FunctionProto void (v8::DeserializeInternalFieldsCallback &&) noexcept
struct _ty3457;  // Typedef v8::DeserializeEmbedderFieldsCallback
struct _ty3458;  // Record v8::Isolate::CreateParams
struct _ty3459;  // Pointer v8::Isolate::CreateParams *
struct _ty3460;  // Pointer v8::StartupData *
struct _ty3461;  // Pointer ArrayBuffer::Allocator *
struct _ty3462;  // Elaborated ArrayBuffer::Allocator
struct _ty3463;  // Pointer const intptr_t *
struct _ty3464;  // Typedef intptr_t
struct _ty3465;  // Record v8::Isolate::Scope
struct _ty3466;  // Pointer v8::Isolate::Scope *
struct _ty3467;  // LValueReference const v8::Isolate::Scope &
struct _ty3468;  // FunctionProto void (const v8::Isolate::Scope &)
struct _ty3469;  // FunctionProto v8::Isolate::Scope &(const v8::Isolate::Scope &)
struct _ty3470;  // LValueReference v8::Isolate::Scope &
struct _ty3471;  // Record v8::Isolate::DisallowJavascriptExecutionScope
struct _ty3472;  // Enum v8::Isolate::DisallowJavascriptExecutionScope::OnFailure
struct _ty3473;  // FunctionProto void (v8::Isolate *, v8::Isolate::DisallowJavascriptExecutionScope::OnFailure)
struct _ty3474;  // Pointer v8::Isolate::DisallowJavascriptExecutionScope *
struct _ty3475;  // FunctionProto void ()
struct _ty3476;  // LValueReference const v8::Isolate::DisallowJavascriptExecutionScope &
struct _ty3477;  // FunctionProto void (const v8::Isolate::DisallowJavascriptExecutionScope &)
struct _ty3478;  // FunctionProto v8::Isolate::DisallowJavascriptExecutionScope &(const v8::Isolate::DisallowJavascriptExecutionScope &)
struct _ty3479;  // LValueReference v8::Isolate::DisallowJavascriptExecutionScope &
struct _ty3480;  // Record v8::Isolate::AllowJavascriptExecutionScope
struct _ty3481;  // Pointer v8::Isolate::AllowJavascriptExecutionScope *
struct _ty3482;  // FunctionProto void ()
struct _ty3483;  // LValueReference const v8::Isolate::AllowJavascriptExecutionScope &
struct _ty3484;  // FunctionProto void (const v8::Isolate::AllowJavascriptExecutionScope &)
struct _ty3485;  // FunctionProto v8::Isolate::AllowJavascriptExecutionScope &(const v8::Isolate::AllowJavascriptExecutionScope &)
struct _ty3486;  // LValueReference v8::Isolate::AllowJavascriptExecutionScope &
struct _ty3487;  // Record v8::Isolate::SuppressMicrotaskExecutionScope
struct _ty3488;  // Pointer v8::Isolate::SuppressMicrotaskExecutionScope *
struct _ty3489;  // FunctionProto void (v8::MicrotaskQueue *)
struct _ty3490;  // FunctionProto void ()
struct _ty3491;  // LValueReference const v8::Isolate::SuppressMicrotaskExecutionScope &
struct _ty3492;  // FunctionProto void (const v8::Isolate::SuppressMicrotaskExecutionScope &)
struct _ty3493;  // FunctionProto v8::Isolate::SuppressMicrotaskExecutionScope &(const v8::Isolate::SuppressMicrotaskExecutionScope &)
struct _ty3494;  // LValueReference v8::Isolate::SuppressMicrotaskExecutionScope &
struct _ty3495;  // Record v8::Isolate::SafeForTerminationScope
struct _ty3496;  // FunctionProto void (v8::Isolate *)
struct _ty3497;  // Pointer v8::Isolate::SafeForTerminationScope *
struct _ty3498;  // FunctionProto void ()
struct _ty3499;  // LValueReference const v8::Isolate::SafeForTerminationScope &
struct _ty3500;  // FunctionProto void (const v8::Isolate::SafeForTerminationScope &)
struct _ty3501;  // FunctionProto v8::Isolate::SafeForTerminationScope &(const v8::Isolate::SafeForTerminationScope &)
struct _ty3502;  // LValueReference v8::Isolate::SafeForTerminationScope &
struct _ty3503;  // Enum v8::Isolate::GarbageCollectionType
struct _ty3504;  // Enum v8::Isolate::UseCounterFeature
struct _ty3505;  // Enum v8::Isolate::MessageErrorLevel
struct _ty3506;  // Typedef v8::Isolate::UseCounterCallback
struct _ty3507;  // Paren void (v8::Isolate *, v8::Isolate::UseCounterFeature)
struct _ty3508;  // FunctionProto void (v8::Isolate *, v8::Isolate::UseCounterFeature)
struct _ty3509;  // Pointer void (*)(v8::Isolate *, v8::Isolate::UseCounterFeature)
struct _ty3510;  // LValueReference const v8::Isolate::CreateParams &
struct _ty3511;  // FunctionProto void (v8::Isolate *, const v8::Isolate::CreateParams &)
struct _ty3512;  // FunctionProto v8::Isolate *(const v8::Isolate::CreateParams &)
struct _ty3513;  // Typedef v8::Isolate::AbortOnUncaughtExceptionCallback
struct _ty3514;  // Paren bool (v8::Isolate *)
struct _ty3515;  // Pointer bool (*)(v8::Isolate *)
struct _ty3516;  // FunctionProto void (v8::Isolate::AbortOnUncaughtExceptionCallback)
struct _ty3517;  // FunctionProto void (v8::HostImportModuleDynamicallyCallback)
struct _ty3518;  // FunctionProto void (v8::HostInitializeImportMetaObjectCallback)
struct _ty3519;  // FunctionProto void (v8::PrepareStackTraceCallback)
struct _ty3520;  // FunctionProto void (v8::MemoryPressureLevel)
struct _ty3521;  // FunctionProto void (uint32_t, void *)
struct _ty3522;  // FunctionProto void *(uint32_t)
struct _ty3523;  // TemplateTypeParm T
struct _ty3524;  // FunctionProto MaybeLocal<T> (size_t)
struct _ty3525;  // TemplateSpecialization MaybeLocal<T>
struct _ty3526;  // FunctionProto void (v8::HeapStatistics *)
struct _ty3527;  // FunctionProto bool (v8::HeapSpaceStatistics *, size_t)
struct _ty3528;  // FunctionProto bool (v8::HeapObjectStatistics *, size_t)
struct _ty3529;  // FunctionProto bool (v8::HeapCodeStatistics *)
struct _ty3530;  // LValueReference const v8::RegisterState &
struct _ty3531;  // Pointer v8::SampleInfo *
struct _ty3532;  // FunctionProto void (const v8::RegisterState &, void **, size_t, v8::SampleInfo *)
struct _ty3533;  // FunctionProto int64_t (int64_t)
struct _ty3534;  // FunctionProto v8::HeapProfiler *()
struct _ty3535;  // Pointer v8::HeapProfiler *
struct _ty3536;  // FunctionProto ArrayBuffer::Allocator *()
struct _ty3537;  // FunctionProto Local<v8::Context> ()
struct _ty3538;  // TemplateSpecialization Local<v8::Context>
struct _ty3539;  // FunctionProto Local<v8::Context> ()
struct _ty3540;  // TemplateSpecialization Local<v8::Context>
struct _ty3541;  // FunctionProto Local<v8::Context> ()
struct _ty3542;  // TemplateSpecialization Local<v8::Context>
struct _ty3543;  // FunctionProto Local<v8::Context> ()
struct _ty3544;  // TemplateSpecialization Local<v8::Context>
struct _ty3545;  // TemplateSpecialization Local<v8::Value>
struct _ty3546;  // FunctionProto Local<v8::Value> (Local<v8::Value>)
struct _ty3547;  // TemplateSpecialization Local<v8::Value>
struct _ty3548;  // Typedef v8::Isolate::GCCallback
struct _ty3549;  // Paren void (v8::Isolate *, v8::GCType, v8::GCCallbackFlags)
struct _ty3550;  // FunctionProto void (v8::Isolate *, v8::GCType, v8::GCCallbackFlags)
struct _ty3551;  // Pointer void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags)
struct _ty3552;  // Typedef v8::Isolate::GCCallbackWithData
struct _ty3553;  // Paren void (v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *)
struct _ty3554;  // FunctionProto void (v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *)
struct _ty3555;  // Pointer void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *)
struct _ty3556;  // FunctionProto void (v8::Isolate::GCCallbackWithData, void *, v8::GCType)
struct _ty3557;  // FunctionProto void (v8::Isolate::GCCallback, v8::GCType)
struct _ty3558;  // FunctionProto void (v8::Isolate::GCCallbackWithData, void *)
struct _ty3559;  // FunctionProto void (v8::Isolate::GCCallback)
struct _ty3560;  // FunctionProto void (v8::EmbedderHeapTracer *)
struct _ty3561;  // FunctionProto v8::EmbedderHeapTracer *()
struct _ty3562;  // Enum v8::Isolate::AtomicsWaitEvent
struct _ty3563;  // Record v8::Isolate::AtomicsWaitWakeHandle
struct _ty3564;  // Pointer v8::Isolate::AtomicsWaitWakeHandle *
struct _ty3565;  // Typedef v8::Isolate::AtomicsWaitCallback
struct _ty3566;  // Paren void (v8::Isolate::AtomicsWaitEvent, Local<v8::SharedArrayBuffer>, size_t, int64_t, double, v8::Isolate::AtomicsWaitWakeHandle *, void *)
struct _ty3567;  // TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _ty3568;  // FunctionProto void (v8::Isolate::AtomicsWaitEvent, Local<v8::SharedArrayBuffer>, size_t, int64_t, double, v8::Isolate::AtomicsWaitWakeHandle *, void *)
struct _ty3569;  // Pointer void (*)(v8::Isolate::AtomicsWaitEvent, Local<v8::SharedArrayBuffer>, size_t, int64_t, double, v8::Isolate::AtomicsWaitWakeHandle *, void *)
struct _ty3570;  // FunctionProto void (v8::Isolate::AtomicsWaitCallback, void *)
struct _ty3571;  // Typedef v8::Isolate::GetExternallyAllocatedMemoryInBytesCallback
struct _ty3572;  // Paren size_t ()
struct _ty3573;  // Pointer size_t (*)()
struct _ty3574;  // FunctionProto void (v8::Isolate::GetExternallyAllocatedMemoryInBytesCallback)
struct _ty3575;  // FunctionProto void (v8::InterruptCallback, void *)
struct _ty3576;  // FunctionProto void (v8::Isolate::GarbageCollectionType)
struct _ty3577;  // FunctionProto void (v8::LogEventCallback)
struct _ty3578;  // FunctionProto void (v8::BeforeCallEnteredCallback)
struct _ty3579;  // FunctionProto void (v8::CallCompletedCallback)
struct _ty3580;  // FunctionProto void (v8::PromiseHook)
struct _ty3581;  // FunctionProto void (v8::PromiseRejectCallback)
struct _ty3582;  // TemplateSpecialization Local<v8::Function>
struct _ty3583;  // FunctionProto void (Local<v8::Function>)
struct _ty3584;  // FunctionProto void (v8::MicrotaskCallback, void *)
struct _ty3585;  // FunctionProto void (v8::MicrotasksPolicy)
struct _ty3586;  // FunctionProto v8::MicrotasksPolicy () const
struct _ty3587;  // Pointer const v8::Isolate *
struct _ty3588;  // FunctionProto void (v8::MicrotasksCompletedCallback)
struct _ty3589;  // FunctionProto void (v8::Isolate::UseCounterCallback)
struct _ty3590;  // FunctionProto void (v8::CounterLookupCallback)
struct _ty3591;  // FunctionProto void (v8::CreateHistogramCallback)
struct _ty3592;  // FunctionProto void (v8::AddHistogramSampleCallback)
struct _ty3593;  // FunctionProto int (bool)
struct _ty3594;  // FunctionProto void (v8::RAILMode)
struct _ty3595;  // FunctionProto void (v8::JitCodeEventOptions, v8::JitCodeEventHandler)
struct _ty3596;  // FunctionProto void (uintptr_t)
struct _ty3597;  // FunctionProto void (void **, size_t *)
struct _ty3598;  // FunctionProto v8::UnwindState ()
struct _ty3599;  // FunctionProto void (v8::FatalErrorCallback)
struct _ty3600;  // FunctionProto void (v8::OOMErrorCallback)
struct _ty3601;  // FunctionProto void (v8::NearHeapLimitCallback, void *)
struct _ty3602;  // FunctionProto void (v8::NearHeapLimitCallback, size_t)
struct _ty3603;  // FunctionProto void (v8::AllowCodeGenerationFromStringsCallback)
struct _ty3604;  // FunctionProto void (v8::AllowWasmCodeGenerationCallback)
struct _ty3605;  // FunctionProto void (v8::ExtensionCallback)
struct _ty3606;  // FunctionProto void (v8::WasmStreamingCallback)
struct _ty3607;  // FunctionProto void (v8::WasmThreadsEnabledCallback)
struct _ty3608;  // TemplateSpecialization Local<v8::Value>
struct _ty3609;  // FunctionProto bool (v8::MessageCallback, Local<v8::Value>)
struct _ty3610;  // TemplateSpecialization Local<v8::Value>
struct _ty3611;  // FunctionProto bool (v8::MessageCallback, int, Local<v8::Value>)
struct _ty3612;  // FunctionProto void (v8::MessageCallback)
struct _ty3613;  // FunctionProto void (v8::FailedAccessCheckCallback)
struct _ty3614;  // Elaborated StackTrace::StackTraceOptions
struct _ty3615;  // FunctionProto void (bool, int, StackTrace::StackTraceOptions)
struct _ty3616;  // FunctionProto void (v8::ExternalResourceVisitor *)
struct _ty3617;  // FunctionProto void (v8::PersistentHandleVisitor *)
struct _ty3618;  // Enum v8::Isolate::TimeZoneDetection
struct _ty3619;  // FunctionProto void (v8::Isolate::TimeZoneDetection)
struct _ty3620;  // FunctionProto void ()
struct _ty3621;  // LValueReference const v8::Isolate &
struct _ty3622;  // FunctionProto void (const v8::Isolate &)
struct _ty3623;  // FunctionProto v8::Isolate &(const v8::Isolate &)
struct _ty3624;  // LValueReference v8::Isolate &
struct _ty3625;  // FunctionProto void (void *, size_t) noexcept
struct _ty3626;  // Pointer const v8::StartupData *
struct _ty3627;  // Typedef v8::EntropySource
struct _ty3628;  // Paren bool (unsigned char *, size_t)
struct _ty3629;  // Pointer unsigned char *
struct _ty3630;  // FunctionProto bool (unsigned char *, size_t)
struct _ty3631;  // Pointer bool (*)(unsigned char *, size_t)
struct _ty3632;  // Typedef v8::ReturnAddressLocationResolver
struct _ty3633;  // Paren uintptr_t (uintptr_t)
struct _ty3634;  // FunctionProto uintptr_t (uintptr_t)
struct _ty3635;  // Pointer uintptr_t (*)(uintptr_t)
struct _ty3636;  // Record v8::V8
struct _ty3637;  // FunctionProto void (v8::StartupData *)
struct _ty3638;  // FunctionProto void (v8::DcheckErrorCallback)
struct _ty3639;  // FunctionProto void (const char *, size_t)
struct _ty3640;  // Pointer char **
struct _ty3641;  // FunctionProto void (int *, char **, bool)
struct _ty3642;  // FunctionProto void (v8::EntropySource)
struct _ty3643;  // FunctionProto void (v8::ReturnAddressLocationResolver)
struct _ty3644;  // FunctionProto bool (const char *)
struct _ty3645;  // FunctionProto bool (const char *, const char *)
struct _ty3646;  // Pointer v8::Platform *
struct _ty3647;  // FunctionProto void (v8::Platform *)
struct _ty3648;  // FunctionProto bool (bool)
struct _ty3649;  // FunctionProto void (v8::UnhandledExceptionCallback)
struct _ty3650;  // Record v8::SnapshotCreator
struct _ty3651;  // Enum v8::SnapshotCreator::FunctionCodeHandling
struct _ty3652;  // FunctionProto void (v8::Isolate *, const intptr_t *, v8::StartupData *)
struct _ty3653;  // Pointer v8::SnapshotCreator *
struct _ty3654;  // FunctionProto void (const intptr_t *, v8::StartupData *)
struct _ty3655;  // FunctionProto void ()
struct _ty3656;  // TemplateSpecialization Local<v8::Context>
struct _ty3657;  // FunctionProto void (Local<v8::Context>, v8::SerializeInternalFieldsCallback)
struct _ty3658;  // TemplateSpecialization Local<v8::Context>
struct _ty3659;  // FunctionProto size_t (Local<v8::Context>, v8::SerializeInternalFieldsCallback)
struct _ty3660;  // TemplateSpecialization Local<v8::Template>
struct _ty3661;  // FunctionProto size_t (Local<v8::Template>)
struct _ty3662;  // TemplateTypeParm T
struct _ty3663;  // TemplateSpecialization Local<v8::Context>
struct _ty3664;  // TemplateSpecialization Local<T>
struct _ty3665;  // FunctionProto size_t (Local<v8::Context>, Local<T>)
struct _ty3666;  // TemplateTypeParm T
struct _ty3667;  // TemplateSpecialization Local<T>
struct _ty3668;  // FunctionProto size_t (Local<T>)
struct _ty3669;  // FunctionProto v8::StartupData (v8::SnapshotCreator::FunctionCodeHandling)
struct _ty3670;  // LValueReference const v8::SnapshotCreator &
struct _ty3671;  // FunctionProto void (const v8::SnapshotCreator &)
struct _ty3672;  // TemplateTypeParm T
struct _ty3673;  // Pointer const Maybe<T> *
struct _ty3674;  // FunctionProto T () const
struct _ty3675;  // Pointer T *
struct _ty3676;  // FunctionProto bool (T *) const
struct _ty3677;  // LValueReference const T &
struct _ty3678;  // FunctionProto T (const T &) const
struct _ty3679;  // LValueReference const Maybe<T> &
struct _ty3680;  // FunctionProto bool (const Maybe<T> &) const
struct _ty3681;  // TemplateTypeParm T
struct _ty3682;  // FunctionProto Maybe<T> ()
struct _ty3683;  // TemplateSpecialization Maybe<T>
struct _ty3684;  // TemplateTypeParm T
struct _ty3685;  // LValueReference const T &
struct _ty3686;  // FunctionProto Maybe<T> (const T &)
struct _ty3687;  // TemplateSpecialization Maybe<T>
struct _ty3688;  // Record v8::Maybe<void>
struct _ty3689;  // Pointer const v8::Maybe<void> *
struct _ty3690;  // LValueReference const v8::Maybe<void> &
struct _ty3691;  // FunctionProto bool (const v8::Maybe<void> &) const
struct _ty3692;  // FunctionProto void (const v8::Maybe<void> &)
struct _ty3693;  // Pointer v8::Maybe<void> *
struct _ty3694;  // RValueReference v8::Maybe<void> &&
struct _ty3695;  // FunctionProto void (v8::Maybe<void> &&) noexcept
struct _ty3696;  // FunctionProto Maybe<void> ()
struct _ty3697;  // TemplateSpecialization Maybe<void>
struct _ty3698;  // Record v8::TryCatch
struct _ty3699;  // Pointer v8::TryCatch *
struct _ty3700;  // FunctionProto void ()
struct _ty3701;  // Pointer const v8::TryCatch *
struct _ty3702;  // FunctionProto Local<v8::Value> ()
struct _ty3703;  // TemplateSpecialization Local<v8::Value>
struct _ty3704;  // FunctionProto Local<v8::Value> () const
struct _ty3705;  // TemplateSpecialization Local<v8::Value>
struct _ty3706;  // TemplateSpecialization Local<v8::Context>
struct _ty3707;  // FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>) const
struct _ty3708;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty3709;  // FunctionProto Local<v8::Message> () const
struct _ty3710;  // TemplateSpecialization Local<v8::Message>
struct _ty3711;  // FunctionProto void *(v8::TryCatch *)
struct _ty3712;  // LValueReference const v8::TryCatch &
struct _ty3713;  // FunctionProto void (const v8::TryCatch &)
struct _ty3714;  // Record v8::ExtensionConfiguration
struct _ty3715;  // Pointer v8::ExtensionConfiguration *
struct _ty3716;  // Decayed const char **
struct _ty3717;  // FunctionProto void (int, const char **)
struct _ty3718;  // Pointer const v8::ExtensionConfiguration *
struct _ty3719;  // FunctionProto Local<v8::Object> ()
struct _ty3720;  // TemplateSpecialization Local<v8::Object>
struct _ty3721;  // Pointer v8::Context *
struct _ty3722;  // TemplateSpecialization MaybeLocal<v8::ObjectTemplate>
struct _ty3723;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty3724;  // FunctionProto Local<v8::Context> (v8::Isolate *, v8::ExtensionConfiguration *, MaybeLocal<v8::ObjectTemplate>, MaybeLocal<v8::Value>, v8::DeserializeInternalFieldsCallback, v8::MicrotaskQueue *)
struct _ty3725;  // TemplateSpecialization Local<v8::Context>
struct _ty3726;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty3727;  // FunctionProto MaybeLocal<v8::Context> (v8::Isolate *, size_t, v8::DeserializeInternalFieldsCallback, v8::ExtensionConfiguration *, MaybeLocal<v8::Value>, v8::MicrotaskQueue *)
struct _ty3728;  // TemplateSpecialization MaybeLocal<v8::Context>
struct _ty3729;  // TemplateSpecialization Local<v8::ObjectTemplate>
struct _ty3730;  // TemplateSpecialization MaybeLocal<v8::Value>
struct _ty3731;  // FunctionProto MaybeLocal<v8::Object> (v8::Isolate *, Local<v8::ObjectTemplate>, MaybeLocal<v8::Value>)
struct _ty3732;  // TemplateSpecialization MaybeLocal<v8::Object>
struct _ty3733;  // TemplateSpecialization Local<v8::Value>
struct _ty3734;  // FunctionProto void (Local<v8::Value>)
struct _ty3735;  // FunctionProto Local<v8::Value> ()
struct _ty3736;  // TemplateSpecialization Local<v8::Value>
struct _ty3737;  // Enum v8::Context::EmbedderDataFields
struct _ty3738;  // FunctionProto Local<v8::Value> (int)
struct _ty3739;  // TemplateSpecialization Local<v8::Value>
struct _ty3740;  // FunctionProto Local<v8::Object> ()
struct _ty3741;  // TemplateSpecialization Local<v8::Object>
struct _ty3742;  // TemplateSpecialization Local<v8::Value>
struct _ty3743;  // FunctionProto void (int, Local<v8::Value>)
struct _ty3744;  // TemplateSpecialization Local<v8::String>
struct _ty3745;  // FunctionProto void (Local<v8::String>)
struct _ty3746;  // TemplateTypeParm T
struct _ty3747;  // FunctionProto MaybeLocal<T> (size_t)
struct _ty3748;  // TemplateSpecialization MaybeLocal<T>
struct _ty3749;  // Typedef v8::Context::AbortScriptExecutionCallback
struct _ty3750;  // Paren void (v8::Isolate *, Local<v8::Context>)
struct _ty3751;  // TemplateSpecialization Local<v8::Context>
struct _ty3752;  // FunctionProto void (v8::Isolate *, Local<v8::Context>)
struct _ty3753;  // Pointer void (*)(v8::Isolate *, Local<v8::Context>)
struct _ty3754;  // FunctionProto void (v8::Context::AbortScriptExecutionCallback)
struct _ty3755;  // Record v8::Context::Scope
struct _ty3756;  // TemplateSpecialization Local<v8::Context>
struct _ty3757;  // FunctionProto void (Local<v8::Context>)
struct _ty3758;  // Pointer v8::Context::Scope *
struct _ty3759;  // Record v8::Context::BackupIncumbentScope
struct _ty3760;  // TemplateSpecialization Local<v8::Context>
struct _ty3761;  // FunctionProto void (Local<v8::Context>)
struct _ty3762;  // Pointer v8::Context::BackupIncumbentScope *
struct _ty3763;  // FunctionProto void ()
struct _ty3764;  // FunctionProto uintptr_t () const
struct _ty3765;  // Pointer const v8::Context::BackupIncumbentScope *
struct _ty3766;  // Record v8::Unlocker
struct _ty3767;  // Pointer v8::Unlocker *
struct _ty3768;  // FunctionProto void ()
struct _ty3769;  // Record v8::Locker
struct _ty3770;  // Pointer v8::Locker *
struct _ty3771;  // FunctionProto void ()
struct _ty3772;  // LValueReference const v8::Locker &
struct _ty3773;  // FunctionProto void (const v8::Locker &)
struct _ty3774;  // Record v8::Unwinder
struct _ty3775;  // LValueReference const v8::UnwindState &
struct _ty3776;  // FunctionProto bool (const v8::UnwindState &, v8::RegisterState *, const void *)
struct _ty3777;  // FunctionProto bool (const v8::UnwindState &, void *)
struct _ty3778;  // TemplateSpecialization Local<T>
struct _ty3779;  // LValueReference const PersistentBase<T> &
struct _ty3780;  // TemplateSpecialization PersistentBase<T>
struct _ty3781;  // LValueReference const TracedGlobal<T> &
struct _ty3782;  // TemplateSpecialization TracedGlobal<T>
struct _ty3783;  // TemplateTypeParm S
struct _ty3784;  // TemplateSpecialization Local<S>
struct _ty3785;  // TemplateTypeParm S
struct _ty3786;  // LValueReference const Local<S> &
struct _ty3787;  // TemplateSpecialization Local<S>
struct _ty3788;  // TemplateTypeParm S
struct _ty3789;  // LValueReference const PersistentBase<S> &
struct _ty3790;  // TemplateSpecialization PersistentBase<S>
struct _ty3791;  // TemplateTypeParm P
struct _ty3792;  // Pointer P *
struct _ty3793;  // DependentName typename WeakCallbackInfo<P>::Callback
struct _ty3794;  // TemplateTypeParm P
struct _ty3795;  // TemplateTypeParm S
struct _ty3796;  // RValueReference Global<S> &&
struct _ty3797;  // TemplateSpecialization Global<S>
struct _ty3798;  // TemplateTypeParm S
struct _ty3799;  // LValueReference const Local<S> &
struct _ty3800;  // TemplateSpecialization Local<S>
struct _ty3801;  // TemplateTypeParm S
struct _ty3802;  // RValueReference TracedGlobal<S> &&
struct _ty3803;  // TemplateSpecialization TracedGlobal<S>
struct _ty3804;  // Elaborated typename WeakCallbackInfo<void>::Callback
struct _ty3805;  // TemplateTypeParm S
struct _ty3806;  // LValueReference const Global<S> &
struct _ty3807;  // TemplateSpecialization Global<S>
struct _ty3808;  // TemplateTypeParm S
struct _ty3809;  // LValueReference const TracedGlobal<S> &
struct _ty3810;  // TemplateSpecialization TracedGlobal<S>
struct _ty3811;  // TemplateTypeParm S
struct _ty3812;  // TemplateSpecialization Local<S>
struct _ty3813;  // TemplateTypeParm S
struct _ty3814;  // Pointer S *
struct _ty3815;  // TemplateSpecialization Local<v8::Value>
struct _ty3816;  // TemplateSpecialization Local<v8::Integer>
struct _ty3817;  // TemplateSpecialization Local<v8::Integer>
struct _ty3818;  // TemplateSpecialization Local<v8::Boolean>
struct _ty3819;  // TemplateSpecialization Local<v8::Integer>
struct _ty3820;  // TemplateSpecialization Local<v8::Value>
struct _ty3821;  // TemplateSpecialization Local<v8::Boolean>
struct _ty3822;  // TemplateSpecialization Local<v8::Boolean>
struct _ty3823;  // TemplateSpecialization Local<v8::Boolean>
struct _ty3824;  // TemplateSpecialization Local<v8::PrimitiveArray>
struct _ty3825;  // TemplateSpecialization Local<v8::String>
struct _ty3826;  // TemplateSpecialization Local<v8::String>
struct _ty3827;  // TemplateSpecialization Local<v8::Data>
struct _ty3828;  // Pointer String::Encoding *
struct _ty3829;  // Elaborated String::Encoding
struct _ty3830;  // TemplateTypeParm T
struct _ty3831;  // Pointer T *
struct _ty3832;  // TemplateTypeParm T
struct _ty3833;  // TemplateTypeParm T
struct _ty3834;  // TemplateTypeParm T
struct _ty3835;  // TemplateSpecialization Local<v8::Context>
struct _ty3836;  // TemplateSpecialization Local<T>
struct _ty3837;  // TemplateTypeParm T
struct _ty3838;  // TemplateSpecialization Local<T>
struct _qty1;  // mut Record v8::Context
struct _qty2;  // mut Record v8::Data
struct _qty3;  // mut Record v8::Isolate
struct _qty4;  // mut Record v8::AccessorSignature
struct _qty5;  // mut Record v8::Array
struct _qty6;  // mut Record v8::ArrayBuffer
struct _qty7;  // mut Record v8::BigInt
struct _qty8;  // mut Record v8::BigIntObject
struct _qty9;  // mut Record v8::Boolean
struct _qty10;  // mut Record v8::BooleanObject
struct _qty11;  // mut Record v8::Date
struct _qty12;  // mut Record v8::External
struct _qty13;  // mut Record v8::Function
struct _qty14;  // mut Record v8::FunctionTemplate
struct _qty15;  // mut Record v8::HeapProfiler
struct _qty16;  // mut Record v8::ImplementationUtilities
struct _qty17;  // mut Record v8::Int32
struct _qty18;  // mut Record v8::Integer
struct _qty19;  // mut TemplateTypeParm T
struct _qty20;  // mut InjectedClassName Maybe<T>
struct _qty21;  // mut Record v8::Maybe<bool>
struct _qty22;  // mut Record v8::Maybe<int>
struct _qty23;  // mut Record v8::Maybe<unsigned int>
struct _qty24;  // mut Record v8::Maybe<double>
struct _qty25;  // mut Record v8::Maybe<long long>
struct _qty26;  // mut Record v8::Maybe<v8::PropertyAttribute>
struct _qty27;  // mut Record v8::MicrotaskQueue
struct _qty28;  // mut Record v8::Name
struct _qty29;  // mut Record v8::Number
struct _qty30;  // mut Record v8::NumberObject
struct _qty31;  // mut Record v8::Object
struct _qty32;  // mut Record v8::ObjectOperationDescriptor
struct _qty33;  // mut Record v8::ObjectTemplate
struct _qty34;  // mut Record v8::Platform
struct _qty35;  // mut Record v8::Primitive
struct _qty36;  // mut Record v8::Promise
struct _qty37;  // mut Record v8::PropertyDescriptor
struct _qty38;  // mut Record v8::Proxy
struct _qty39;  // mut Record v8::RawOperationDescriptor
struct _qty40;  // mut Record v8::Script
struct _qty41;  // mut Record v8::SharedArrayBuffer
struct _qty42;  // mut Record v8::Signature
struct _qty43;  // mut Record v8::StartupData
struct _qty44;  // mut Record v8::StackFrame
struct _qty45;  // mut Record v8::StackTrace
struct _qty46;  // mut Record v8::String
struct _qty47;  // mut Record v8::StringObject
struct _qty48;  // mut Record v8::Symbol
struct _qty49;  // mut Record v8::SymbolObject
struct _qty50;  // mut Record v8::PrimitiveArray
struct _qty51;  // mut Record v8::Private
struct _qty52;  // mut Record v8::Uint32
struct _qty53;  // mut Record v8::Utils
struct _qty54;  // mut Record v8::Value
struct _qty55;  // mut Record v8::WasmModuleObject
struct _qty56;  // mut TemplateTypeParm T
struct _qty57;  // mut InjectedClassName Local<T>
struct _qty58;  // mut Record v8::Local<v8::Primitive>
struct _qty59;  // mut Builtin void
struct _qty60;  // mut FunctionProto void ()
struct _qty61;  // mut Pointer v8::Local<v8::Primitive> *
struct _qty62;  // mut TemplateTypeParm S
struct _qty63;  // mut TemplateSpecialization Local<S>
struct _qty64;  // mut FunctionProto void (Local<S>)
struct _qty65;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty66;  // mut FunctionProto void (Local<v8::Primitive>)
struct _qty67;  // mut Builtin bool
struct _qty68;  // mut FunctionProto bool () const
struct _qty69;  // mut Pointer const v8::Local<v8::Primitive> *
struct _qty70;  // mut Pointer v8::Primitive *
struct _qty71;  // mut FunctionProto v8::Primitive *() const
struct _qty72;  // mut TemplateTypeParm S
struct _qty73;  // mut LValueReference const Local<S> &
struct _qty74;  // const TemplateSpecialization Local<S>
struct _qty75;  // mut TemplateSpecialization Local<S>
struct _qty76;  // mut FunctionProto bool (const Local<S> &) const
struct _qty77;  // mut TemplateTypeParm S
struct _qty78;  // mut LValueReference const PersistentBase<S> &
struct _qty79;  // const TemplateSpecialization PersistentBase<S>
struct _qty80;  // mut TemplateSpecialization PersistentBase<S>
struct _qty81;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty82;  // mut TemplateTypeParm S
struct _qty83;  // mut LValueReference const Local<S> &
struct _qty84;  // const TemplateSpecialization Local<S>
struct _qty85;  // mut TemplateSpecialization Local<S>
struct _qty86;  // mut FunctionProto bool (const Local<S> &) const
struct _qty87;  // mut TemplateTypeParm S
struct _qty88;  // mut LValueReference const Persistent<S> &
struct _qty89;  // const TemplateSpecialization Persistent<S>
struct _qty90;  // mut TemplateSpecialization Persistent<S>
struct _qty91;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty92;  // mut TemplateTypeParm S
struct _qty93;  // mut TemplateSpecialization Local<S>
struct _qty94;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty95;  // mut FunctionProto Local<v8::Primitive> (Local<S>)
struct _qty96;  // mut TemplateTypeParm S
struct _qty97;  // mut TemplateSpecialization Local<S>
struct _qty98;  // mut FunctionProto Local<S> () const
struct _qty99;  // mut Pointer v8::Isolate *
struct _qty100;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty101;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty102;  // mut FunctionProto Local<v8::Primitive> (v8::Isolate *, Local<v8::Primitive>)
struct _qty103;  // mut LValueReference const PersistentBase<v8::Primitive> &
struct _qty104;  // const TemplateSpecialization PersistentBase<v8::Primitive>
struct _qty105;  // mut Record v8::PersistentBase<v8::Primitive>
struct _qty106;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty107;  // mut FunctionProto Local<v8::Primitive> (v8::Isolate *, const PersistentBase<v8::Primitive> &)
struct _qty108;  // mut LValueReference const TracedGlobal<v8::Primitive> &
struct _qty109;  // const TemplateSpecialization TracedGlobal<v8::Primitive>
struct _qty110;  // mut Record v8::TracedGlobal<v8::Primitive>
struct _qty111;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty112;  // mut FunctionProto Local<v8::Primitive> (v8::Isolate *, const TracedGlobal<v8::Primitive> &)
struct _qty113;  // mut LValueReference const v8::Local<v8::Primitive> &
struct _qty114;  // const Record v8::Local<v8::Primitive>
struct _qty115;  // mut FunctionProto void (const v8::Local<v8::Primitive> &)
struct _qty116;  // mut RValueReference v8::Local<v8::Primitive> &&
struct _qty117;  // mut FunctionProto void (v8::Local<v8::Primitive> &&) noexcept
struct _qty118;  // mut FunctionProto void () noexcept
struct _qty119;  // mut Record v8::Local<v8::Boolean>
struct _qty120;  // mut Pointer v8::Local<v8::Boolean> *
struct _qty121;  // mut TemplateTypeParm S
struct _qty122;  // mut TemplateSpecialization Local<S>
struct _qty123;  // mut FunctionProto void (Local<S>)
struct _qty124;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty125;  // mut FunctionProto void (Local<v8::Boolean>)
struct _qty126;  // mut Pointer const v8::Local<v8::Boolean> *
struct _qty127;  // mut Pointer v8::Boolean *
struct _qty128;  // mut FunctionProto v8::Boolean *() const
struct _qty129;  // mut TemplateTypeParm S
struct _qty130;  // mut LValueReference const Local<S> &
struct _qty131;  // const TemplateSpecialization Local<S>
struct _qty132;  // mut TemplateSpecialization Local<S>
struct _qty133;  // mut FunctionProto bool (const Local<S> &) const
struct _qty134;  // mut TemplateTypeParm S
struct _qty135;  // mut LValueReference const PersistentBase<S> &
struct _qty136;  // const TemplateSpecialization PersistentBase<S>
struct _qty137;  // mut TemplateSpecialization PersistentBase<S>
struct _qty138;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty139;  // mut TemplateTypeParm S
struct _qty140;  // mut LValueReference const Local<S> &
struct _qty141;  // const TemplateSpecialization Local<S>
struct _qty142;  // mut TemplateSpecialization Local<S>
struct _qty143;  // mut FunctionProto bool (const Local<S> &) const
struct _qty144;  // mut TemplateTypeParm S
struct _qty145;  // mut LValueReference const Persistent<S> &
struct _qty146;  // const TemplateSpecialization Persistent<S>
struct _qty147;  // mut TemplateSpecialization Persistent<S>
struct _qty148;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty149;  // mut TemplateTypeParm S
struct _qty150;  // mut TemplateSpecialization Local<S>
struct _qty151;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty152;  // mut FunctionProto Local<v8::Boolean> (Local<S>)
struct _qty153;  // mut TemplateTypeParm S
struct _qty154;  // mut TemplateSpecialization Local<S>
struct _qty155;  // mut FunctionProto Local<S> () const
struct _qty156;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty157;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty158;  // mut FunctionProto Local<v8::Boolean> (v8::Isolate *, Local<v8::Boolean>)
struct _qty159;  // mut LValueReference const PersistentBase<v8::Boolean> &
struct _qty160;  // const TemplateSpecialization PersistentBase<v8::Boolean>
struct _qty161;  // mut Record v8::PersistentBase<v8::Boolean>
struct _qty162;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty163;  // mut FunctionProto Local<v8::Boolean> (v8::Isolate *, const PersistentBase<v8::Boolean> &)
struct _qty164;  // mut LValueReference const TracedGlobal<v8::Boolean> &
struct _qty165;  // const TemplateSpecialization TracedGlobal<v8::Boolean>
struct _qty166;  // mut Record v8::TracedGlobal<v8::Boolean>
struct _qty167;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty168;  // mut FunctionProto Local<v8::Boolean> (v8::Isolate *, const TracedGlobal<v8::Boolean> &)
struct _qty169;  // mut LValueReference const v8::Local<v8::Boolean> &
struct _qty170;  // const Record v8::Local<v8::Boolean>
struct _qty171;  // mut FunctionProto void (const v8::Local<v8::Boolean> &)
struct _qty172;  // mut RValueReference v8::Local<v8::Boolean> &&
struct _qty173;  // mut FunctionProto void (v8::Local<v8::Boolean> &&) noexcept
struct _qty174;  // mut Record v8::Local<v8::Value>
struct _qty175;  // mut Pointer v8::Local<v8::Value> *
struct _qty176;  // mut TemplateTypeParm S
struct _qty177;  // mut TemplateSpecialization Local<S>
struct _qty178;  // mut FunctionProto void (Local<S>)
struct _qty179;  // mut TemplateSpecialization Local<v8::Value>
struct _qty180;  // mut FunctionProto void (Local<v8::Value>)
struct _qty181;  // mut Pointer const v8::Local<v8::Value> *
struct _qty182;  // mut Pointer v8::Value *
struct _qty183;  // mut FunctionProto v8::Value *() const
struct _qty184;  // mut TemplateTypeParm S
struct _qty185;  // mut LValueReference const Local<S> &
struct _qty186;  // const TemplateSpecialization Local<S>
struct _qty187;  // mut TemplateSpecialization Local<S>
struct _qty188;  // mut FunctionProto bool (const Local<S> &) const
struct _qty189;  // mut TemplateTypeParm S
struct _qty190;  // mut LValueReference const PersistentBase<S> &
struct _qty191;  // const TemplateSpecialization PersistentBase<S>
struct _qty192;  // mut TemplateSpecialization PersistentBase<S>
struct _qty193;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty194;  // mut TemplateTypeParm S
struct _qty195;  // mut LValueReference const Local<S> &
struct _qty196;  // const TemplateSpecialization Local<S>
struct _qty197;  // mut TemplateSpecialization Local<S>
struct _qty198;  // mut FunctionProto bool (const Local<S> &) const
struct _qty199;  // mut TemplateTypeParm S
struct _qty200;  // mut LValueReference const Persistent<S> &
struct _qty201;  // const TemplateSpecialization Persistent<S>
struct _qty202;  // mut TemplateSpecialization Persistent<S>
struct _qty203;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty204;  // mut TemplateTypeParm S
struct _qty205;  // mut TemplateSpecialization Local<S>
struct _qty206;  // mut TemplateSpecialization Local<v8::Value>
struct _qty207;  // mut FunctionProto Local<v8::Value> (Local<S>)
struct _qty208;  // mut TemplateTypeParm S
struct _qty209;  // mut TemplateSpecialization Local<S>
struct _qty210;  // mut FunctionProto Local<S> () const
struct _qty211;  // mut TemplateSpecialization Local<v8::Value>
struct _qty212;  // mut TemplateSpecialization Local<v8::Value>
struct _qty213;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, Local<v8::Value>)
struct _qty214;  // mut LValueReference const PersistentBase<v8::Value> &
struct _qty215;  // const TemplateSpecialization PersistentBase<v8::Value>
struct _qty216;  // mut Record v8::PersistentBase<v8::Value>
struct _qty217;  // mut TemplateSpecialization Local<v8::Value>
struct _qty218;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, const PersistentBase<v8::Value> &)
struct _qty219;  // mut LValueReference const TracedGlobal<v8::Value> &
struct _qty220;  // const TemplateSpecialization TracedGlobal<v8::Value>
struct _qty221;  // mut Record v8::TracedGlobal<v8::Value>
struct _qty222;  // mut TemplateSpecialization Local<v8::Value>
struct _qty223;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, const TracedGlobal<v8::Value> &)
struct _qty224;  // mut LValueReference const v8::Local<v8::Value> &
struct _qty225;  // const Record v8::Local<v8::Value>
struct _qty226;  // mut FunctionProto void (const v8::Local<v8::Value> &) noexcept
struct _qty227;  // mut RValueReference v8::Local<v8::Value> &&
struct _qty228;  // mut FunctionProto void (v8::Local<v8::Value> &&) noexcept
struct _qty229;  // mut LValueReference v8::Local<v8::Value> &
struct _qty230;  // mut FunctionProto v8::Local<v8::Value> &(const v8::Local<v8::Value> &)
struct _qty231;  // mut FunctionProto v8::Local<v8::Value> &(v8::Local<v8::Value> &&)
struct _qty232;  // mut Record v8::Local<v8::PrimitiveArray>
struct _qty233;  // mut Pointer v8::Local<v8::PrimitiveArray> *
struct _qty234;  // mut TemplateTypeParm S
struct _qty235;  // mut TemplateSpecialization Local<S>
struct _qty236;  // mut FunctionProto void (Local<S>)
struct _qty237;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty238;  // mut FunctionProto void (Local<v8::PrimitiveArray>)
struct _qty239;  // mut Pointer const v8::Local<v8::PrimitiveArray> *
struct _qty240;  // mut Pointer v8::PrimitiveArray *
struct _qty241;  // mut FunctionProto v8::PrimitiveArray *() const
struct _qty242;  // mut TemplateTypeParm S
struct _qty243;  // mut LValueReference const Local<S> &
struct _qty244;  // const TemplateSpecialization Local<S>
struct _qty245;  // mut TemplateSpecialization Local<S>
struct _qty246;  // mut FunctionProto bool (const Local<S> &) const
struct _qty247;  // mut TemplateTypeParm S
struct _qty248;  // mut LValueReference const PersistentBase<S> &
struct _qty249;  // const TemplateSpecialization PersistentBase<S>
struct _qty250;  // mut TemplateSpecialization PersistentBase<S>
struct _qty251;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty252;  // mut TemplateTypeParm S
struct _qty253;  // mut LValueReference const Local<S> &
struct _qty254;  // const TemplateSpecialization Local<S>
struct _qty255;  // mut TemplateSpecialization Local<S>
struct _qty256;  // mut FunctionProto bool (const Local<S> &) const
struct _qty257;  // mut TemplateTypeParm S
struct _qty258;  // mut LValueReference const Persistent<S> &
struct _qty259;  // const TemplateSpecialization Persistent<S>
struct _qty260;  // mut TemplateSpecialization Persistent<S>
struct _qty261;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty262;  // mut TemplateTypeParm S
struct _qty263;  // mut TemplateSpecialization Local<S>
struct _qty264;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty265;  // mut FunctionProto Local<v8::PrimitiveArray> (Local<S>)
struct _qty266;  // mut TemplateTypeParm S
struct _qty267;  // mut TemplateSpecialization Local<S>
struct _qty268;  // mut FunctionProto Local<S> () const
struct _qty269;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty270;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty271;  // mut FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, Local<v8::PrimitiveArray>)
struct _qty272;  // mut LValueReference const PersistentBase<v8::PrimitiveArray> &
struct _qty273;  // const TemplateSpecialization PersistentBase<v8::PrimitiveArray>
struct _qty274;  // mut Record v8::PersistentBase<v8::PrimitiveArray>
struct _qty275;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty276;  // mut FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, const PersistentBase<v8::PrimitiveArray> &)
struct _qty277;  // mut LValueReference const TracedGlobal<v8::PrimitiveArray> &
struct _qty278;  // const TemplateSpecialization TracedGlobal<v8::PrimitiveArray>
struct _qty279;  // mut Record v8::TracedGlobal<v8::PrimitiveArray>
struct _qty280;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty281;  // mut FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, const TracedGlobal<v8::PrimitiveArray> &)
struct _qty282;  // mut LValueReference const v8::Local<v8::PrimitiveArray> &
struct _qty283;  // const Record v8::Local<v8::PrimitiveArray>
struct _qty284;  // mut FunctionProto void (const v8::Local<v8::PrimitiveArray> &) noexcept
struct _qty285;  // mut RValueReference v8::Local<v8::PrimitiveArray> &&
struct _qty286;  // mut FunctionProto void (v8::Local<v8::PrimitiveArray> &&) noexcept
struct _qty287;  // mut LValueReference v8::Local<v8::PrimitiveArray> &
struct _qty288;  // mut FunctionProto v8::Local<v8::PrimitiveArray> &(const v8::Local<v8::PrimitiveArray> &)
struct _qty289;  // mut FunctionProto v8::Local<v8::PrimitiveArray> &(v8::Local<v8::PrimitiveArray> &&)
struct _qty290;  // mut Record v8::Local<v8::Integer>
struct _qty291;  // mut Pointer v8::Local<v8::Integer> *
struct _qty292;  // mut TemplateTypeParm S
struct _qty293;  // mut TemplateSpecialization Local<S>
struct _qty294;  // mut FunctionProto void (Local<S>)
struct _qty295;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty296;  // mut FunctionProto void (Local<v8::Integer>)
struct _qty297;  // mut Pointer const v8::Local<v8::Integer> *
struct _qty298;  // mut Pointer v8::Integer *
struct _qty299;  // mut FunctionProto v8::Integer *() const
struct _qty300;  // mut TemplateTypeParm S
struct _qty301;  // mut LValueReference const Local<S> &
struct _qty302;  // const TemplateSpecialization Local<S>
struct _qty303;  // mut TemplateSpecialization Local<S>
struct _qty304;  // mut FunctionProto bool (const Local<S> &) const
struct _qty305;  // mut TemplateTypeParm S
struct _qty306;  // mut LValueReference const PersistentBase<S> &
struct _qty307;  // const TemplateSpecialization PersistentBase<S>
struct _qty308;  // mut TemplateSpecialization PersistentBase<S>
struct _qty309;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty310;  // mut TemplateTypeParm S
struct _qty311;  // mut LValueReference const Local<S> &
struct _qty312;  // const TemplateSpecialization Local<S>
struct _qty313;  // mut TemplateSpecialization Local<S>
struct _qty314;  // mut FunctionProto bool (const Local<S> &) const
struct _qty315;  // mut TemplateTypeParm S
struct _qty316;  // mut LValueReference const Persistent<S> &
struct _qty317;  // const TemplateSpecialization Persistent<S>
struct _qty318;  // mut TemplateSpecialization Persistent<S>
struct _qty319;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty320;  // mut TemplateTypeParm S
struct _qty321;  // mut TemplateSpecialization Local<S>
struct _qty322;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty323;  // mut FunctionProto Local<v8::Integer> (Local<S>)
struct _qty324;  // mut TemplateTypeParm S
struct _qty325;  // mut TemplateSpecialization Local<S>
struct _qty326;  // mut FunctionProto Local<S> () const
struct _qty327;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty328;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty329;  // mut FunctionProto Local<v8::Integer> (v8::Isolate *, Local<v8::Integer>)
struct _qty330;  // mut LValueReference const PersistentBase<v8::Integer> &
struct _qty331;  // const TemplateSpecialization PersistentBase<v8::Integer>
struct _qty332;  // mut Record v8::PersistentBase<v8::Integer>
struct _qty333;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty334;  // mut FunctionProto Local<v8::Integer> (v8::Isolate *, const PersistentBase<v8::Integer> &)
struct _qty335;  // mut LValueReference const TracedGlobal<v8::Integer> &
struct _qty336;  // const TemplateSpecialization TracedGlobal<v8::Integer>
struct _qty337;  // mut Record v8::TracedGlobal<v8::Integer>
struct _qty338;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty339;  // mut FunctionProto Local<v8::Integer> (v8::Isolate *, const TracedGlobal<v8::Integer> &)
struct _qty340;  // mut LValueReference const v8::Local<v8::Integer> &
struct _qty341;  // const Record v8::Local<v8::Integer>
struct _qty342;  // mut FunctionProto void (const v8::Local<v8::Integer> &) noexcept
struct _qty343;  // mut RValueReference v8::Local<v8::Integer> &&
struct _qty344;  // mut FunctionProto void (v8::Local<v8::Integer> &&) noexcept
struct _qty345;  // mut LValueReference v8::Local<v8::Integer> &
struct _qty346;  // mut FunctionProto v8::Local<v8::Integer> &(const v8::Local<v8::Integer> &)
struct _qty347;  // mut FunctionProto v8::Local<v8::Integer> &(v8::Local<v8::Integer> &&)
struct _qty348;  // mut Record v8::Local<v8::Script>
struct _qty349;  // mut Record v8::Local<v8::String>
struct _qty350;  // mut Pointer v8::Local<v8::String> *
struct _qty351;  // mut TemplateTypeParm S
struct _qty352;  // mut TemplateSpecialization Local<S>
struct _qty353;  // mut FunctionProto void (Local<S>)
struct _qty354;  // mut TemplateSpecialization Local<v8::String>
struct _qty355;  // mut FunctionProto void (Local<v8::String>)
struct _qty356;  // mut Pointer const v8::Local<v8::String> *
struct _qty357;  // mut Pointer v8::String *
struct _qty358;  // mut FunctionProto v8::String *() const
struct _qty359;  // mut TemplateTypeParm S
struct _qty360;  // mut LValueReference const Local<S> &
struct _qty361;  // const TemplateSpecialization Local<S>
struct _qty362;  // mut TemplateSpecialization Local<S>
struct _qty363;  // mut FunctionProto bool (const Local<S> &) const
struct _qty364;  // mut TemplateTypeParm S
struct _qty365;  // mut LValueReference const PersistentBase<S> &
struct _qty366;  // const TemplateSpecialization PersistentBase<S>
struct _qty367;  // mut TemplateSpecialization PersistentBase<S>
struct _qty368;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty369;  // mut TemplateTypeParm S
struct _qty370;  // mut LValueReference const Local<S> &
struct _qty371;  // const TemplateSpecialization Local<S>
struct _qty372;  // mut TemplateSpecialization Local<S>
struct _qty373;  // mut FunctionProto bool (const Local<S> &) const
struct _qty374;  // mut TemplateTypeParm S
struct _qty375;  // mut LValueReference const Persistent<S> &
struct _qty376;  // const TemplateSpecialization Persistent<S>
struct _qty377;  // mut TemplateSpecialization Persistent<S>
struct _qty378;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty379;  // mut TemplateTypeParm S
struct _qty380;  // mut TemplateSpecialization Local<S>
struct _qty381;  // mut TemplateSpecialization Local<v8::String>
struct _qty382;  // mut FunctionProto Local<v8::String> (Local<S>)
struct _qty383;  // mut TemplateTypeParm S
struct _qty384;  // mut TemplateSpecialization Local<S>
struct _qty385;  // mut FunctionProto Local<S> () const
struct _qty386;  // mut TemplateSpecialization Local<v8::String>
struct _qty387;  // mut TemplateSpecialization Local<v8::String>
struct _qty388;  // mut FunctionProto Local<v8::String> (v8::Isolate *, Local<v8::String>)
struct _qty389;  // mut LValueReference const PersistentBase<v8::String> &
struct _qty390;  // const TemplateSpecialization PersistentBase<v8::String>
struct _qty391;  // mut Record v8::PersistentBase<v8::String>
struct _qty392;  // mut TemplateSpecialization Local<v8::String>
struct _qty393;  // mut FunctionProto Local<v8::String> (v8::Isolate *, const PersistentBase<v8::String> &)
struct _qty394;  // mut LValueReference const TracedGlobal<v8::String> &
struct _qty395;  // const TemplateSpecialization TracedGlobal<v8::String>
struct _qty396;  // mut Record v8::TracedGlobal<v8::String>
struct _qty397;  // mut TemplateSpecialization Local<v8::String>
struct _qty398;  // mut FunctionProto Local<v8::String> (v8::Isolate *, const TracedGlobal<v8::String> &)
struct _qty399;  // mut LValueReference const v8::Local<v8::String> &
struct _qty400;  // const Record v8::Local<v8::String>
struct _qty401;  // mut FunctionProto void (const v8::Local<v8::String> &) noexcept
struct _qty402;  // mut RValueReference v8::Local<v8::String> &&
struct _qty403;  // mut FunctionProto void (v8::Local<v8::String> &&) noexcept
struct _qty404;  // mut LValueReference v8::Local<v8::String> &
struct _qty405;  // mut FunctionProto v8::Local<v8::String> &(const v8::Local<v8::String> &)
struct _qty406;  // mut FunctionProto v8::Local<v8::String> &(v8::Local<v8::String> &&)
struct _qty407;  // mut Record v8::Local<v8::Context>
struct _qty408;  // mut Pointer v8::Local<v8::Context> *
struct _qty409;  // mut TemplateTypeParm S
struct _qty410;  // mut TemplateSpecialization Local<S>
struct _qty411;  // mut FunctionProto void (Local<S>)
struct _qty412;  // mut TemplateSpecialization Local<v8::Context>
struct _qty413;  // mut FunctionProto void (Local<v8::Context>)
struct _qty414;  // mut Pointer const v8::Local<v8::Context> *
struct _qty415;  // mut Pointer v8::Context *
struct _qty416;  // mut FunctionProto v8::Context *() const
struct _qty417;  // mut TemplateTypeParm S
struct _qty418;  // mut LValueReference const Local<S> &
struct _qty419;  // const TemplateSpecialization Local<S>
struct _qty420;  // mut TemplateSpecialization Local<S>
struct _qty421;  // mut FunctionProto bool (const Local<S> &) const
struct _qty422;  // mut TemplateTypeParm S
struct _qty423;  // mut LValueReference const PersistentBase<S> &
struct _qty424;  // const TemplateSpecialization PersistentBase<S>
struct _qty425;  // mut TemplateSpecialization PersistentBase<S>
struct _qty426;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty427;  // mut TemplateTypeParm S
struct _qty428;  // mut LValueReference const Local<S> &
struct _qty429;  // const TemplateSpecialization Local<S>
struct _qty430;  // mut TemplateSpecialization Local<S>
struct _qty431;  // mut FunctionProto bool (const Local<S> &) const
struct _qty432;  // mut TemplateTypeParm S
struct _qty433;  // mut LValueReference const Persistent<S> &
struct _qty434;  // const TemplateSpecialization Persistent<S>
struct _qty435;  // mut TemplateSpecialization Persistent<S>
struct _qty436;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty437;  // mut TemplateTypeParm S
struct _qty438;  // mut TemplateSpecialization Local<S>
struct _qty439;  // mut TemplateSpecialization Local<v8::Context>
struct _qty440;  // mut FunctionProto Local<v8::Context> (Local<S>)
struct _qty441;  // mut TemplateTypeParm S
struct _qty442;  // mut TemplateSpecialization Local<S>
struct _qty443;  // mut FunctionProto Local<S> () const
struct _qty444;  // mut TemplateSpecialization Local<v8::Context>
struct _qty445;  // mut TemplateSpecialization Local<v8::Context>
struct _qty446;  // mut FunctionProto Local<v8::Context> (v8::Isolate *, Local<v8::Context>)
struct _qty447;  // mut LValueReference const PersistentBase<v8::Context> &
struct _qty448;  // const TemplateSpecialization PersistentBase<v8::Context>
struct _qty449;  // mut Record v8::PersistentBase<v8::Context>
struct _qty450;  // mut TemplateSpecialization Local<v8::Context>
struct _qty451;  // mut FunctionProto Local<v8::Context> (v8::Isolate *, const PersistentBase<v8::Context> &)
struct _qty452;  // mut LValueReference const TracedGlobal<v8::Context> &
struct _qty453;  // const TemplateSpecialization TracedGlobal<v8::Context>
struct _qty454;  // mut Record v8::TracedGlobal<v8::Context>
struct _qty455;  // mut TemplateSpecialization Local<v8::Context>
struct _qty456;  // mut FunctionProto Local<v8::Context> (v8::Isolate *, const TracedGlobal<v8::Context> &)
struct _qty457;  // mut LValueReference const v8::Local<v8::Context> &
struct _qty458;  // const Record v8::Local<v8::Context>
struct _qty459;  // mut FunctionProto void (const v8::Local<v8::Context> &) noexcept
struct _qty460;  // mut RValueReference v8::Local<v8::Context> &&
struct _qty461;  // mut FunctionProto void (v8::Local<v8::Context> &&) noexcept
struct _qty462;  // mut Record v8::Local<v8::Module>
struct _qty463;  // mut Record v8::Local<v8::UnboundModuleScript>
struct _qty464;  // mut Record v8::Local<v8::UnboundScript>
struct _qty465;  // mut Pointer v8::Local<v8::UnboundScript> *
struct _qty466;  // mut TemplateTypeParm S
struct _qty467;  // mut TemplateSpecialization Local<S>
struct _qty468;  // mut FunctionProto void (Local<S>)
struct _qty469;  // mut Pointer const v8::Local<v8::UnboundScript> *
struct _qty470;  // mut Pointer v8::UnboundScript *
struct _qty471;  // mut Record v8::UnboundScript
struct _qty472;  // mut FunctionProto v8::UnboundScript *() const
struct _qty473;  // mut TemplateTypeParm S
struct _qty474;  // mut LValueReference const Local<S> &
struct _qty475;  // const TemplateSpecialization Local<S>
struct _qty476;  // mut TemplateSpecialization Local<S>
struct _qty477;  // mut FunctionProto bool (const Local<S> &) const
struct _qty478;  // mut TemplateTypeParm S
struct _qty479;  // mut LValueReference const PersistentBase<S> &
struct _qty480;  // const TemplateSpecialization PersistentBase<S>
struct _qty481;  // mut TemplateSpecialization PersistentBase<S>
struct _qty482;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty483;  // mut TemplateTypeParm S
struct _qty484;  // mut LValueReference const Local<S> &
struct _qty485;  // const TemplateSpecialization Local<S>
struct _qty486;  // mut TemplateSpecialization Local<S>
struct _qty487;  // mut FunctionProto bool (const Local<S> &) const
struct _qty488;  // mut TemplateTypeParm S
struct _qty489;  // mut LValueReference const Persistent<S> &
struct _qty490;  // const TemplateSpecialization Persistent<S>
struct _qty491;  // mut TemplateSpecialization Persistent<S>
struct _qty492;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty493;  // mut TemplateTypeParm S
struct _qty494;  // mut TemplateSpecialization Local<S>
struct _qty495;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty496;  // mut FunctionProto Local<v8::UnboundScript> (Local<S>)
struct _qty497;  // mut TemplateTypeParm S
struct _qty498;  // mut TemplateSpecialization Local<S>
struct _qty499;  // mut FunctionProto Local<S> () const
struct _qty500;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty501;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty502;  // mut FunctionProto Local<v8::UnboundScript> (v8::Isolate *, Local<v8::UnboundScript>)
struct _qty503;  // mut LValueReference const PersistentBase<v8::UnboundScript> &
struct _qty504;  // const TemplateSpecialization PersistentBase<v8::UnboundScript>
struct _qty505;  // mut Record v8::PersistentBase<v8::UnboundScript>
struct _qty506;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty507;  // mut FunctionProto Local<v8::UnboundScript> (v8::Isolate *, const PersistentBase<v8::UnboundScript> &)
struct _qty508;  // mut LValueReference const TracedGlobal<v8::UnboundScript> &
struct _qty509;  // const TemplateSpecialization TracedGlobal<v8::UnboundScript>
struct _qty510;  // mut Record v8::TracedGlobal<v8::UnboundScript>
struct _qty511;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty512;  // mut FunctionProto Local<v8::UnboundScript> (v8::Isolate *, const TracedGlobal<v8::UnboundScript> &)
struct _qty513;  // mut Record v8::Local<v8::Object>
struct _qty514;  // mut Record v8::Local<v8::Function>
struct _qty515;  // mut Pointer v8::Local<v8::Function> *
struct _qty516;  // mut TemplateTypeParm S
struct _qty517;  // mut TemplateSpecialization Local<S>
struct _qty518;  // mut FunctionProto void (Local<S>)
struct _qty519;  // mut TemplateSpecialization Local<v8::Function>
struct _qty520;  // mut FunctionProto void (Local<v8::Function>)
struct _qty521;  // mut Pointer const v8::Local<v8::Function> *
struct _qty522;  // mut Pointer v8::Function *
struct _qty523;  // mut FunctionProto v8::Function *() const
struct _qty524;  // mut TemplateTypeParm S
struct _qty525;  // mut LValueReference const Local<S> &
struct _qty526;  // const TemplateSpecialization Local<S>
struct _qty527;  // mut TemplateSpecialization Local<S>
struct _qty528;  // mut FunctionProto bool (const Local<S> &) const
struct _qty529;  // mut TemplateTypeParm S
struct _qty530;  // mut LValueReference const PersistentBase<S> &
struct _qty531;  // const TemplateSpecialization PersistentBase<S>
struct _qty532;  // mut TemplateSpecialization PersistentBase<S>
struct _qty533;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty534;  // mut TemplateTypeParm S
struct _qty535;  // mut LValueReference const Local<S> &
struct _qty536;  // const TemplateSpecialization Local<S>
struct _qty537;  // mut TemplateSpecialization Local<S>
struct _qty538;  // mut FunctionProto bool (const Local<S> &) const
struct _qty539;  // mut TemplateTypeParm S
struct _qty540;  // mut LValueReference const Persistent<S> &
struct _qty541;  // const TemplateSpecialization Persistent<S>
struct _qty542;  // mut TemplateSpecialization Persistent<S>
struct _qty543;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty544;  // mut TemplateTypeParm S
struct _qty545;  // mut TemplateSpecialization Local<S>
struct _qty546;  // mut TemplateSpecialization Local<v8::Function>
struct _qty547;  // mut FunctionProto Local<v8::Function> (Local<S>)
struct _qty548;  // mut TemplateTypeParm S
struct _qty549;  // mut TemplateSpecialization Local<S>
struct _qty550;  // mut FunctionProto Local<S> () const
struct _qty551;  // mut TemplateSpecialization Local<v8::Function>
struct _qty552;  // mut TemplateSpecialization Local<v8::Function>
struct _qty553;  // mut FunctionProto Local<v8::Function> (v8::Isolate *, Local<v8::Function>)
struct _qty554;  // mut LValueReference const PersistentBase<v8::Function> &
struct _qty555;  // const TemplateSpecialization PersistentBase<v8::Function>
struct _qty556;  // mut Record v8::PersistentBase<v8::Function>
struct _qty557;  // mut TemplateSpecialization Local<v8::Function>
struct _qty558;  // mut FunctionProto Local<v8::Function> (v8::Isolate *, const PersistentBase<v8::Function> &)
struct _qty559;  // mut LValueReference const TracedGlobal<v8::Function> &
struct _qty560;  // const TemplateSpecialization TracedGlobal<v8::Function>
struct _qty561;  // mut Record v8::TracedGlobal<v8::Function>
struct _qty562;  // mut TemplateSpecialization Local<v8::Function>
struct _qty563;  // mut FunctionProto Local<v8::Function> (v8::Isolate *, const TracedGlobal<v8::Function> &)
struct _qty564;  // mut LValueReference const v8::Local<v8::Function> &
struct _qty565;  // const Record v8::Local<v8::Function>
struct _qty566;  // mut FunctionProto void (const v8::Local<v8::Function> &)
struct _qty567;  // mut RValueReference v8::Local<v8::Function> &&
struct _qty568;  // mut FunctionProto void (v8::Local<v8::Function> &&) noexcept
struct _qty569;  // mut Record v8::Local<v8::StackTrace>
struct _qty570;  // mut Record v8::Local<v8::StackFrame>
struct _qty571;  // mut Record v8::Local<v8::SharedArrayBuffer>
struct _qty572;  // mut Record v8::Local<v8::WasmModuleObject>
struct _qty573;  // mut Record v8::Local<v8::ArrayBuffer>
struct _qty574;  // mut Record v8::Local<v8::Symbol>
struct _qty575;  // mut Record v8::Local<v8::Private>
struct _qty576;  // mut Record v8::Local<v8::Number>
struct _qty577;  // mut Record v8::Local<v8::BigInt>
struct _qty578;  // mut Record v8::Local<v8::Name>
struct _qty579;  // mut Pointer v8::Local<v8::Name> *
struct _qty580;  // mut TemplateTypeParm S
struct _qty581;  // mut TemplateSpecialization Local<S>
struct _qty582;  // mut FunctionProto void (Local<S>)
struct _qty583;  // mut TemplateSpecialization Local<v8::String>
struct _qty584;  // mut FunctionProto void (Local<v8::String>)
struct _qty585;  // mut TemplateSpecialization Local<v8::Name>
struct _qty586;  // mut FunctionProto void (Local<v8::Name>)
struct _qty587;  // mut Pointer const v8::Local<v8::Name> *
struct _qty588;  // mut Pointer v8::Name *
struct _qty589;  // mut FunctionProto v8::Name *() const
struct _qty590;  // mut TemplateTypeParm S
struct _qty591;  // mut LValueReference const Local<S> &
struct _qty592;  // const TemplateSpecialization Local<S>
struct _qty593;  // mut TemplateSpecialization Local<S>
struct _qty594;  // mut FunctionProto bool (const Local<S> &) const
struct _qty595;  // mut TemplateTypeParm S
struct _qty596;  // mut LValueReference const PersistentBase<S> &
struct _qty597;  // const TemplateSpecialization PersistentBase<S>
struct _qty598;  // mut TemplateSpecialization PersistentBase<S>
struct _qty599;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty600;  // mut TemplateTypeParm S
struct _qty601;  // mut LValueReference const Local<S> &
struct _qty602;  // const TemplateSpecialization Local<S>
struct _qty603;  // mut TemplateSpecialization Local<S>
struct _qty604;  // mut FunctionProto bool (const Local<S> &) const
struct _qty605;  // mut TemplateTypeParm S
struct _qty606;  // mut LValueReference const Persistent<S> &
struct _qty607;  // const TemplateSpecialization Persistent<S>
struct _qty608;  // mut TemplateSpecialization Persistent<S>
struct _qty609;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty610;  // mut TemplateTypeParm S
struct _qty611;  // mut TemplateSpecialization Local<S>
struct _qty612;  // mut TemplateSpecialization Local<v8::Name>
struct _qty613;  // mut FunctionProto Local<v8::Name> (Local<S>)
struct _qty614;  // mut TemplateTypeParm S
struct _qty615;  // mut TemplateSpecialization Local<S>
struct _qty616;  // mut FunctionProto Local<S> () const
struct _qty617;  // mut TemplateSpecialization Local<v8::Name>
struct _qty618;  // mut TemplateSpecialization Local<v8::Name>
struct _qty619;  // mut FunctionProto Local<v8::Name> (v8::Isolate *, Local<v8::Name>)
struct _qty620;  // mut LValueReference const PersistentBase<v8::Name> &
struct _qty621;  // const TemplateSpecialization PersistentBase<v8::Name>
struct _qty622;  // mut Record v8::PersistentBase<v8::Name>
struct _qty623;  // mut TemplateSpecialization Local<v8::Name>
struct _qty624;  // mut FunctionProto Local<v8::Name> (v8::Isolate *, const PersistentBase<v8::Name> &)
struct _qty625;  // mut LValueReference const TracedGlobal<v8::Name> &
struct _qty626;  // const TemplateSpecialization TracedGlobal<v8::Name>
struct _qty627;  // mut Record v8::TracedGlobal<v8::Name>
struct _qty628;  // mut TemplateSpecialization Local<v8::Name>
struct _qty629;  // mut FunctionProto Local<v8::Name> (v8::Isolate *, const TracedGlobal<v8::Name> &)
struct _qty630;  // mut LValueReference const v8::Local<v8::Name> &
struct _qty631;  // const Record v8::Local<v8::Name>
struct _qty632;  // mut FunctionProto void (const v8::Local<v8::Name> &)
struct _qty633;  // mut RValueReference v8::Local<v8::Name> &&
struct _qty634;  // mut FunctionProto void (v8::Local<v8::Name> &&) noexcept
struct _qty635;  // mut Record v8::Local<v8::FunctionTemplate>
struct _qty636;  // mut Pointer v8::Local<v8::FunctionTemplate> *
struct _qty637;  // mut TemplateTypeParm S
struct _qty638;  // mut TemplateSpecialization Local<S>
struct _qty639;  // mut FunctionProto void (Local<S>)
struct _qty640;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty641;  // mut FunctionProto void (Local<v8::FunctionTemplate>)
struct _qty642;  // mut Pointer const v8::Local<v8::FunctionTemplate> *
struct _qty643;  // mut Pointer v8::FunctionTemplate *
struct _qty644;  // mut FunctionProto v8::FunctionTemplate *() const
struct _qty645;  // mut TemplateTypeParm S
struct _qty646;  // mut LValueReference const Local<S> &
struct _qty647;  // const TemplateSpecialization Local<S>
struct _qty648;  // mut TemplateSpecialization Local<S>
struct _qty649;  // mut FunctionProto bool (const Local<S> &) const
struct _qty650;  // mut TemplateTypeParm S
struct _qty651;  // mut LValueReference const PersistentBase<S> &
struct _qty652;  // const TemplateSpecialization PersistentBase<S>
struct _qty653;  // mut TemplateSpecialization PersistentBase<S>
struct _qty654;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty655;  // mut TemplateTypeParm S
struct _qty656;  // mut LValueReference const Local<S> &
struct _qty657;  // const TemplateSpecialization Local<S>
struct _qty658;  // mut TemplateSpecialization Local<S>
struct _qty659;  // mut FunctionProto bool (const Local<S> &) const
struct _qty660;  // mut TemplateTypeParm S
struct _qty661;  // mut LValueReference const Persistent<S> &
struct _qty662;  // const TemplateSpecialization Persistent<S>
struct _qty663;  // mut TemplateSpecialization Persistent<S>
struct _qty664;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty665;  // mut TemplateTypeParm S
struct _qty666;  // mut TemplateSpecialization Local<S>
struct _qty667;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty668;  // mut FunctionProto Local<v8::FunctionTemplate> (Local<S>)
struct _qty669;  // mut TemplateTypeParm S
struct _qty670;  // mut TemplateSpecialization Local<S>
struct _qty671;  // mut FunctionProto Local<S> () const
struct _qty672;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty673;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty674;  // mut FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _qty675;  // mut LValueReference const PersistentBase<v8::FunctionTemplate> &
struct _qty676;  // const TemplateSpecialization PersistentBase<v8::FunctionTemplate>
struct _qty677;  // mut Record v8::PersistentBase<v8::FunctionTemplate>
struct _qty678;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty679;  // mut FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, const PersistentBase<v8::FunctionTemplate> &)
struct _qty680;  // mut LValueReference const TracedGlobal<v8::FunctionTemplate> &
struct _qty681;  // const TemplateSpecialization TracedGlobal<v8::FunctionTemplate>
struct _qty682;  // mut Record v8::TracedGlobal<v8::FunctionTemplate>
struct _qty683;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty684;  // mut FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, const TracedGlobal<v8::FunctionTemplate> &)
struct _qty685;  // mut LValueReference const v8::Local<v8::FunctionTemplate> &
struct _qty686;  // const Record v8::Local<v8::FunctionTemplate>
struct _qty687;  // mut FunctionProto void (const v8::Local<v8::FunctionTemplate> &)
struct _qty688;  // mut RValueReference v8::Local<v8::FunctionTemplate> &&
struct _qty689;  // mut FunctionProto void (v8::Local<v8::FunctionTemplate> &&) noexcept
struct _qty690;  // mut Record v8::Local<v8::Array>
struct _qty691;  // mut Record v8::Local<v8::Map>
struct _qty692;  // mut Record v8::Local<v8::Set>
struct _qty693;  // mut Record v8::Local<v8::Promise>
struct _qty694;  // mut Pointer v8::Local<v8::Promise> *
struct _qty695;  // mut TemplateTypeParm S
struct _qty696;  // mut TemplateSpecialization Local<S>
struct _qty697;  // mut FunctionProto void (Local<S>)
struct _qty698;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty699;  // mut FunctionProto void (Local<v8::Promise>)
struct _qty700;  // mut Pointer const v8::Local<v8::Promise> *
struct _qty701;  // mut Pointer v8::Promise *
struct _qty702;  // mut FunctionProto v8::Promise *() const
struct _qty703;  // mut TemplateTypeParm S
struct _qty704;  // mut LValueReference const Local<S> &
struct _qty705;  // const TemplateSpecialization Local<S>
struct _qty706;  // mut TemplateSpecialization Local<S>
struct _qty707;  // mut FunctionProto bool (const Local<S> &) const
struct _qty708;  // mut TemplateTypeParm S
struct _qty709;  // mut LValueReference const PersistentBase<S> &
struct _qty710;  // const TemplateSpecialization PersistentBase<S>
struct _qty711;  // mut TemplateSpecialization PersistentBase<S>
struct _qty712;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty713;  // mut TemplateTypeParm S
struct _qty714;  // mut LValueReference const Local<S> &
struct _qty715;  // const TemplateSpecialization Local<S>
struct _qty716;  // mut TemplateSpecialization Local<S>
struct _qty717;  // mut FunctionProto bool (const Local<S> &) const
struct _qty718;  // mut TemplateTypeParm S
struct _qty719;  // mut LValueReference const Persistent<S> &
struct _qty720;  // const TemplateSpecialization Persistent<S>
struct _qty721;  // mut TemplateSpecialization Persistent<S>
struct _qty722;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty723;  // mut TemplateTypeParm S
struct _qty724;  // mut TemplateSpecialization Local<S>
struct _qty725;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty726;  // mut FunctionProto Local<v8::Promise> (Local<S>)
struct _qty727;  // mut TemplateTypeParm S
struct _qty728;  // mut TemplateSpecialization Local<S>
struct _qty729;  // mut FunctionProto Local<S> () const
struct _qty730;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty731;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty732;  // mut FunctionProto Local<v8::Promise> (v8::Isolate *, Local<v8::Promise>)
struct _qty733;  // mut LValueReference const PersistentBase<v8::Promise> &
struct _qty734;  // const TemplateSpecialization PersistentBase<v8::Promise>
struct _qty735;  // mut Record v8::PersistentBase<v8::Promise>
struct _qty736;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty737;  // mut FunctionProto Local<v8::Promise> (v8::Isolate *, const PersistentBase<v8::Promise> &)
struct _qty738;  // mut LValueReference const TracedGlobal<v8::Promise> &
struct _qty739;  // const TemplateSpecialization TracedGlobal<v8::Promise>
struct _qty740;  // mut Record v8::TracedGlobal<v8::Promise>
struct _qty741;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty742;  // mut FunctionProto Local<v8::Promise> (v8::Isolate *, const TracedGlobal<v8::Promise> &)
struct _qty743;  // mut LValueReference const v8::Local<v8::Promise> &
struct _qty744;  // const Record v8::Local<v8::Promise>
struct _qty745;  // mut FunctionProto void (const v8::Local<v8::Promise> &) noexcept
struct _qty746;  // mut RValueReference v8::Local<v8::Promise> &&
struct _qty747;  // mut FunctionProto void (v8::Local<v8::Promise> &&)
struct _qty748;  // mut Record v8::Local<v8::Uint8Array>
struct _qty749;  // mut Record v8::Local<v8::Uint8ClampedArray>
struct _qty750;  // mut Record v8::Local<v8::Int8Array>
struct _qty751;  // mut Record v8::Local<v8::Uint16Array>
struct _qty752;  // mut Record v8::Local<v8::Int16Array>
struct _qty753;  // mut Record v8::Local<v8::Uint32Array>
struct _qty754;  // mut Record v8::Local<v8::Int32Array>
struct _qty755;  // mut Record v8::Local<v8::Float32Array>
struct _qty756;  // mut Record v8::Local<v8::Float64Array>
struct _qty757;  // mut Record v8::Local<v8::BigInt64Array>
struct _qty758;  // mut Record v8::Local<v8::BigUint64Array>
struct _qty759;  // mut Record v8::Local<v8::DataView>
struct _qty760;  // mut Record v8::Local<v8::External>
struct _qty761;  // mut Record v8::Local<v8::Data>
struct _qty762;  // mut Pointer v8::Local<v8::Data> *
struct _qty763;  // mut TemplateTypeParm S
struct _qty764;  // mut TemplateSpecialization Local<S>
struct _qty765;  // mut FunctionProto void (Local<S>)
struct _qty766;  // mut TemplateSpecialization Local<v8::Data>
struct _qty767;  // mut FunctionProto void (Local<v8::Data>)
struct _qty768;  // mut Pointer const v8::Local<v8::Data> *
struct _qty769;  // mut Pointer v8::Data *
struct _qty770;  // mut FunctionProto v8::Data *() const
struct _qty771;  // mut TemplateTypeParm S
struct _qty772;  // mut LValueReference const Local<S> &
struct _qty773;  // const TemplateSpecialization Local<S>
struct _qty774;  // mut TemplateSpecialization Local<S>
struct _qty775;  // mut FunctionProto bool (const Local<S> &) const
struct _qty776;  // mut TemplateTypeParm S
struct _qty777;  // mut LValueReference const PersistentBase<S> &
struct _qty778;  // const TemplateSpecialization PersistentBase<S>
struct _qty779;  // mut TemplateSpecialization PersistentBase<S>
struct _qty780;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty781;  // mut TemplateTypeParm S
struct _qty782;  // mut LValueReference const Local<S> &
struct _qty783;  // const TemplateSpecialization Local<S>
struct _qty784;  // mut TemplateSpecialization Local<S>
struct _qty785;  // mut FunctionProto bool (const Local<S> &) const
struct _qty786;  // mut TemplateTypeParm S
struct _qty787;  // mut LValueReference const Persistent<S> &
struct _qty788;  // const TemplateSpecialization Persistent<S>
struct _qty789;  // mut TemplateSpecialization Persistent<S>
struct _qty790;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty791;  // mut TemplateTypeParm S
struct _qty792;  // mut TemplateSpecialization Local<S>
struct _qty793;  // mut TemplateSpecialization Local<v8::Data>
struct _qty794;  // mut FunctionProto Local<v8::Data> (Local<S>)
struct _qty795;  // mut TemplateTypeParm S
struct _qty796;  // mut TemplateSpecialization Local<S>
struct _qty797;  // mut FunctionProto Local<S> () const
struct _qty798;  // mut TemplateSpecialization Local<v8::Data>
struct _qty799;  // mut TemplateSpecialization Local<v8::Data>
struct _qty800;  // mut FunctionProto Local<v8::Data> (v8::Isolate *, Local<v8::Data>)
struct _qty801;  // mut LValueReference const PersistentBase<v8::Data> &
struct _qty802;  // const TemplateSpecialization PersistentBase<v8::Data>
struct _qty803;  // mut Record v8::PersistentBase<v8::Data>
struct _qty804;  // mut TemplateSpecialization Local<v8::Data>
struct _qty805;  // mut FunctionProto Local<v8::Data> (v8::Isolate *, const PersistentBase<v8::Data> &)
struct _qty806;  // mut LValueReference const TracedGlobal<v8::Data> &
struct _qty807;  // const TemplateSpecialization TracedGlobal<v8::Data>
struct _qty808;  // mut Record v8::TracedGlobal<v8::Data>
struct _qty809;  // mut TemplateSpecialization Local<v8::Data>
struct _qty810;  // mut FunctionProto Local<v8::Data> (v8::Isolate *, const TracedGlobal<v8::Data> &)
struct _qty811;  // mut LValueReference const v8::Local<v8::Data> &
struct _qty812;  // const Record v8::Local<v8::Data>
struct _qty813;  // mut FunctionProto void (const v8::Local<v8::Data> &) noexcept
struct _qty814;  // mut RValueReference v8::Local<v8::Data> &&
struct _qty815;  // mut FunctionProto void (v8::Local<v8::Data> &&)
struct _qty816;  // mut Record v8::Local<v8::AccessorSignature>
struct _qty817;  // mut Pointer v8::Local<v8::AccessorSignature> *
struct _qty818;  // mut TemplateTypeParm S
struct _qty819;  // mut TemplateSpecialization Local<S>
struct _qty820;  // mut FunctionProto void (Local<S>)
struct _qty821;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty822;  // mut FunctionProto void (Local<v8::AccessorSignature>)
struct _qty823;  // mut Pointer const v8::Local<v8::AccessorSignature> *
struct _qty824;  // mut Pointer v8::AccessorSignature *
struct _qty825;  // mut FunctionProto v8::AccessorSignature *() const
struct _qty826;  // mut TemplateTypeParm S
struct _qty827;  // mut LValueReference const Local<S> &
struct _qty828;  // const TemplateSpecialization Local<S>
struct _qty829;  // mut TemplateSpecialization Local<S>
struct _qty830;  // mut FunctionProto bool (const Local<S> &) const
struct _qty831;  // mut TemplateTypeParm S
struct _qty832;  // mut LValueReference const PersistentBase<S> &
struct _qty833;  // const TemplateSpecialization PersistentBase<S>
struct _qty834;  // mut TemplateSpecialization PersistentBase<S>
struct _qty835;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty836;  // mut TemplateTypeParm S
struct _qty837;  // mut LValueReference const Local<S> &
struct _qty838;  // const TemplateSpecialization Local<S>
struct _qty839;  // mut TemplateSpecialization Local<S>
struct _qty840;  // mut FunctionProto bool (const Local<S> &) const
struct _qty841;  // mut TemplateTypeParm S
struct _qty842;  // mut LValueReference const Persistent<S> &
struct _qty843;  // const TemplateSpecialization Persistent<S>
struct _qty844;  // mut TemplateSpecialization Persistent<S>
struct _qty845;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty846;  // mut TemplateTypeParm S
struct _qty847;  // mut TemplateSpecialization Local<S>
struct _qty848;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty849;  // mut FunctionProto Local<v8::AccessorSignature> (Local<S>)
struct _qty850;  // mut TemplateTypeParm S
struct _qty851;  // mut TemplateSpecialization Local<S>
struct _qty852;  // mut FunctionProto Local<S> () const
struct _qty853;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty854;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty855;  // mut FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, Local<v8::AccessorSignature>)
struct _qty856;  // mut LValueReference const PersistentBase<v8::AccessorSignature> &
struct _qty857;  // const TemplateSpecialization PersistentBase<v8::AccessorSignature>
struct _qty858;  // mut Record v8::PersistentBase<v8::AccessorSignature>
struct _qty859;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty860;  // mut FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, const PersistentBase<v8::AccessorSignature> &)
struct _qty861;  // mut LValueReference const TracedGlobal<v8::AccessorSignature> &
struct _qty862;  // const TemplateSpecialization TracedGlobal<v8::AccessorSignature>
struct _qty863;  // mut Record v8::TracedGlobal<v8::AccessorSignature>
struct _qty864;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty865;  // mut FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, const TracedGlobal<v8::AccessorSignature> &)
struct _qty866;  // mut LValueReference const v8::Local<v8::AccessorSignature> &
struct _qty867;  // const Record v8::Local<v8::AccessorSignature>
struct _qty868;  // mut FunctionProto void (const v8::Local<v8::AccessorSignature> &)
struct _qty869;  // mut RValueReference v8::Local<v8::AccessorSignature> &&
struct _qty870;  // mut FunctionProto void (v8::Local<v8::AccessorSignature> &&) noexcept
struct _qty871;  // mut Record v8::Local<v8::Signature>
struct _qty872;  // mut Pointer v8::Local<v8::Signature> *
struct _qty873;  // mut TemplateTypeParm S
struct _qty874;  // mut TemplateSpecialization Local<S>
struct _qty875;  // mut FunctionProto void (Local<S>)
struct _qty876;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty877;  // mut FunctionProto void (Local<v8::Signature>)
struct _qty878;  // mut Pointer const v8::Local<v8::Signature> *
struct _qty879;  // mut Pointer v8::Signature *
struct _qty880;  // mut FunctionProto v8::Signature *() const
struct _qty881;  // mut TemplateTypeParm S
struct _qty882;  // mut LValueReference const Local<S> &
struct _qty883;  // const TemplateSpecialization Local<S>
struct _qty884;  // mut TemplateSpecialization Local<S>
struct _qty885;  // mut FunctionProto bool (const Local<S> &) const
struct _qty886;  // mut TemplateTypeParm S
struct _qty887;  // mut LValueReference const PersistentBase<S> &
struct _qty888;  // const TemplateSpecialization PersistentBase<S>
struct _qty889;  // mut TemplateSpecialization PersistentBase<S>
struct _qty890;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty891;  // mut TemplateTypeParm S
struct _qty892;  // mut LValueReference const Local<S> &
struct _qty893;  // const TemplateSpecialization Local<S>
struct _qty894;  // mut TemplateSpecialization Local<S>
struct _qty895;  // mut FunctionProto bool (const Local<S> &) const
struct _qty896;  // mut TemplateTypeParm S
struct _qty897;  // mut LValueReference const Persistent<S> &
struct _qty898;  // const TemplateSpecialization Persistent<S>
struct _qty899;  // mut TemplateSpecialization Persistent<S>
struct _qty900;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty901;  // mut TemplateTypeParm S
struct _qty902;  // mut TemplateSpecialization Local<S>
struct _qty903;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty904;  // mut FunctionProto Local<v8::Signature> (Local<S>)
struct _qty905;  // mut TemplateTypeParm S
struct _qty906;  // mut TemplateSpecialization Local<S>
struct _qty907;  // mut FunctionProto Local<S> () const
struct _qty908;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty909;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty910;  // mut FunctionProto Local<v8::Signature> (v8::Isolate *, Local<v8::Signature>)
struct _qty911;  // mut LValueReference const PersistentBase<v8::Signature> &
struct _qty912;  // const TemplateSpecialization PersistentBase<v8::Signature>
struct _qty913;  // mut Record v8::PersistentBase<v8::Signature>
struct _qty914;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty915;  // mut FunctionProto Local<v8::Signature> (v8::Isolate *, const PersistentBase<v8::Signature> &)
struct _qty916;  // mut LValueReference const TracedGlobal<v8::Signature> &
struct _qty917;  // const TemplateSpecialization TracedGlobal<v8::Signature>
struct _qty918;  // mut Record v8::TracedGlobal<v8::Signature>
struct _qty919;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty920;  // mut FunctionProto Local<v8::Signature> (v8::Isolate *, const TracedGlobal<v8::Signature> &)
struct _qty921;  // mut LValueReference const v8::Local<v8::Signature> &
struct _qty922;  // const Record v8::Local<v8::Signature>
struct _qty923;  // mut FunctionProto void (const v8::Local<v8::Signature> &)
struct _qty924;  // mut RValueReference v8::Local<v8::Signature> &&
struct _qty925;  // mut FunctionProto void (v8::Local<v8::Signature> &&) noexcept
struct _qty926;  // mut Record v8::Local<v8::ObjectTemplate>
struct _qty927;  // mut Record v8::Local<v8::Message>
struct _qty928;  // mut Record v8::Local<v8::ScriptOrModule>
struct _qty929;  // mut Record v8::Local<v8::Template>
struct _qty930;  // mut TemplateTypeParm T
struct _qty931;  // mut InjectedClassName MaybeLocal<T>
struct _qty932;  // mut Record v8::MaybeLocal<v8::Module>
struct _qty933;  // mut Record v8::MaybeLocal<v8::Value>
struct _qty934;  // mut Pointer v8::MaybeLocal<v8::Value> *
struct _qty935;  // mut TemplateTypeParm S
struct _qty936;  // mut TemplateSpecialization Local<S>
struct _qty937;  // mut FunctionProto void (Local<S>)
struct _qty938;  // mut Pointer const v8::MaybeLocal<v8::Value> *
struct _qty939;  // mut TemplateTypeParm S
struct _qty940;  // mut Pointer Local<S> *
struct _qty941;  // mut TemplateSpecialization Local<S>
struct _qty942;  // mut FunctionProto bool (Local<S> *) const
struct _qty943;  // mut TemplateSpecialization Local<v8::Value>
struct _qty944;  // mut FunctionProto Local<v8::Value> ()
struct _qty945;  // mut TemplateTypeParm S
struct _qty946;  // mut TemplateSpecialization Local<S>
struct _qty947;  // mut TemplateSpecialization Local<S>
struct _qty948;  // mut FunctionProto Local<S> (Local<S>) const
struct _qty949;  // mut LValueReference const v8::MaybeLocal<v8::Value> &
struct _qty950;  // const Record v8::MaybeLocal<v8::Value>
struct _qty951;  // mut FunctionProto void (const v8::MaybeLocal<v8::Value> &)
struct _qty952;  // mut RValueReference v8::MaybeLocal<v8::Value> &&
struct _qty953;  // mut FunctionProto void (v8::MaybeLocal<v8::Value> &&) noexcept
struct _qty954;  // mut Record v8::MaybeLocal<v8::Script>
struct _qty955;  // mut Record v8::MaybeLocal<v8::UnboundScript>
struct _qty956;  // mut Record v8::MaybeLocal<v8::Function>
struct _qty957;  // mut Record v8::MaybeLocal<v8::String>
struct _qty958;  // mut Pointer v8::MaybeLocal<v8::String> *
struct _qty959;  // mut TemplateTypeParm S
struct _qty960;  // mut TemplateSpecialization Local<S>
struct _qty961;  // mut FunctionProto void (Local<S>)
struct _qty962;  // mut Pointer const v8::MaybeLocal<v8::String> *
struct _qty963;  // mut TemplateTypeParm S
struct _qty964;  // mut Pointer Local<S> *
struct _qty965;  // mut TemplateSpecialization Local<S>
struct _qty966;  // mut FunctionProto bool (Local<S> *) const
struct _qty967;  // mut TemplateSpecialization Local<v8::String>
struct _qty968;  // mut FunctionProto Local<v8::String> ()
struct _qty969;  // mut TemplateTypeParm S
struct _qty970;  // mut TemplateSpecialization Local<S>
struct _qty971;  // mut TemplateSpecialization Local<S>
struct _qty972;  // mut FunctionProto Local<S> (Local<S>) const
struct _qty973;  // mut Record v8::MaybeLocal<v8::Object>
struct _qty974;  // mut Pointer v8::MaybeLocal<v8::Object> *
struct _qty975;  // mut TemplateTypeParm S
struct _qty976;  // mut TemplateSpecialization Local<S>
struct _qty977;  // mut FunctionProto void (Local<S>)
struct _qty978;  // mut Pointer const v8::MaybeLocal<v8::Object> *
struct _qty979;  // mut TemplateTypeParm S
struct _qty980;  // mut Pointer Local<S> *
struct _qty981;  // mut TemplateSpecialization Local<S>
struct _qty982;  // mut FunctionProto bool (Local<S> *) const
struct _qty983;  // mut TemplateSpecialization Local<v8::Object>
struct _qty984;  // mut FunctionProto Local<v8::Object> ()
struct _qty985;  // mut TemplateTypeParm S
struct _qty986;  // mut TemplateSpecialization Local<S>
struct _qty987;  // mut TemplateSpecialization Local<S>
struct _qty988;  // mut FunctionProto Local<S> (Local<S>) const
struct _qty989;  // mut LValueReference const v8::MaybeLocal<v8::Object> &
struct _qty990;  // const Record v8::MaybeLocal<v8::Object>
struct _qty991;  // mut FunctionProto void (const v8::MaybeLocal<v8::Object> &)
struct _qty992;  // mut RValueReference v8::MaybeLocal<v8::Object> &&
struct _qty993;  // mut FunctionProto void (v8::MaybeLocal<v8::Object> &&) noexcept
struct _qty994;  // mut Record v8::MaybeLocal<v8::WasmModuleObject>
struct _qty995;  // mut Record v8::MaybeLocal<v8::SharedArrayBuffer>
struct _qty996;  // mut Record v8::MaybeLocal<v8::BigInt>
struct _qty997;  // mut Record v8::MaybeLocal<v8::Number>
struct _qty998;  // mut Record v8::MaybeLocal<v8::Integer>
struct _qty999;  // mut Record v8::MaybeLocal<v8::Uint32>
struct _qty1000;  // mut Record v8::MaybeLocal<v8::Int32>
struct _qty1001;  // mut Record v8::MaybeLocal<v8::Array>
struct _qty1002;  // mut Record v8::MaybeLocal<v8::Map>
struct _qty1003;  // mut Record v8::MaybeLocal<v8::Set>
struct _qty1004;  // mut Record v8::MaybeLocal<v8::Promise::Resolver>
struct _qty1005;  // mut Record v8::MaybeLocal<v8::Promise>
struct _qty1006;  // mut Record v8::MaybeLocal<v8::Proxy>
struct _qty1007;  // mut Record v8::MaybeLocal<v8::RegExp>
struct _qty1008;  // mut Record v8::MaybeLocal<v8::FunctionTemplate>
struct _qty1009;  // mut Record v8::MaybeLocal<v8::ObjectTemplate>
struct _qty1010;  // mut Pointer v8::MaybeLocal<v8::ObjectTemplate> *
struct _qty1011;  // mut TemplateTypeParm S
struct _qty1012;  // mut TemplateSpecialization Local<S>
struct _qty1013;  // mut FunctionProto void (Local<S>)
struct _qty1014;  // mut Pointer const v8::MaybeLocal<v8::ObjectTemplate> *
struct _qty1015;  // mut TemplateTypeParm S
struct _qty1016;  // mut Pointer Local<S> *
struct _qty1017;  // mut TemplateSpecialization Local<S>
struct _qty1018;  // mut FunctionProto bool (Local<S> *) const
struct _qty1019;  // mut TemplateSpecialization Local<v8::ObjectTemplate>
struct _qty1020;  // mut FunctionProto Local<v8::ObjectTemplate> ()
struct _qty1021;  // mut TemplateTypeParm S
struct _qty1022;  // mut TemplateSpecialization Local<S>
struct _qty1023;  // mut TemplateSpecialization Local<S>
struct _qty1024;  // mut FunctionProto Local<S> (Local<S>) const
struct _qty1025;  // mut LValueReference const v8::MaybeLocal<v8::ObjectTemplate> &
struct _qty1026;  // const Record v8::MaybeLocal<v8::ObjectTemplate>
struct _qty1027;  // mut FunctionProto void (const v8::MaybeLocal<v8::ObjectTemplate> &)
struct _qty1028;  // mut RValueReference v8::MaybeLocal<v8::ObjectTemplate> &&
struct _qty1029;  // mut FunctionProto void (v8::MaybeLocal<v8::ObjectTemplate> &&) noexcept
struct _qty1030;  // mut Record v8::MaybeLocal<v8::Context>
struct _qty1031;  // mut TemplateTypeParm T
struct _qty1032;  // mut InjectedClassName Eternal<T>
struct _qty1033;  // mut TemplateTypeParm T
struct _qty1034;  // mut InjectedClassName NonCopyablePersistentTraits<T>
struct _qty1035;  // mut Record v8::NonCopyablePersistentTraits<v8::Promise>
struct _qty1036;  // mut Record v8::NonCopyablePersistentTraits<v8::Value>
struct _qty1037;  // mut TemplateTypeParm T
struct _qty1038;  // mut InjectedClassName PersistentBase<T>
struct _qty1039;  // mut Record v8::PersistentBase<v8::Object>
struct _qty1040;  // mut Pointer v8::PersistentBase<v8::Object> *
struct _qty1041;  // mut TemplateTypeParm S
struct _qty1042;  // mut LValueReference const Local<S> &
struct _qty1043;  // const TemplateSpecialization Local<S>
struct _qty1044;  // mut TemplateSpecialization Local<S>
struct _qty1045;  // mut FunctionProto void (v8::Isolate *, const Local<S> &)
struct _qty1046;  // mut TemplateTypeParm S
struct _qty1047;  // mut LValueReference const PersistentBase<S> &
struct _qty1048;  // const TemplateSpecialization PersistentBase<S>
struct _qty1049;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1050;  // mut FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _qty1051;  // mut Pointer const v8::PersistentBase<v8::Object> *
struct _qty1052;  // mut TemplateSpecialization Local<v8::Object>
struct _qty1053;  // mut FunctionProto Local<v8::Object> (v8::Isolate *) const
struct _qty1054;  // mut TemplateTypeParm S
struct _qty1055;  // mut LValueReference const PersistentBase<S> &
struct _qty1056;  // const TemplateSpecialization PersistentBase<S>
struct _qty1057;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1058;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty1059;  // mut TemplateTypeParm S
struct _qty1060;  // mut LValueReference const Local<S> &
struct _qty1061;  // const TemplateSpecialization Local<S>
struct _qty1062;  // mut TemplateSpecialization Local<S>
struct _qty1063;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1064;  // mut TemplateTypeParm S
struct _qty1065;  // mut LValueReference const PersistentBase<S> &
struct _qty1066;  // const TemplateSpecialization PersistentBase<S>
struct _qty1067;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1068;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty1069;  // mut TemplateTypeParm S
struct _qty1070;  // mut LValueReference const Local<S> &
struct _qty1071;  // const TemplateSpecialization Local<S>
struct _qty1072;  // mut TemplateSpecialization Local<S>
struct _qty1073;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1074;  // mut TemplateTypeParm P
struct _qty1075;  // mut Pointer P *
struct _qty1076;  // mut DependentName typename WeakCallbackInfo<P>::Callback
struct _qty1077;  // mut Enum v8::WeakCallbackType
struct _qty1078;  // mut FunctionProto void (P *, typename WeakCallbackInfo<P>::Callback, v8::WeakCallbackType)
struct _qty1079;  // mut TemplateTypeParm P
struct _qty1080;  // mut Pointer P *
struct _qty1081;  // mut FunctionProto P *()
struct _qty1082;  // mut Pointer const char *
struct _qty1083;  // mut Builtin char
struct _qty1084;  // mut FunctionProto void (const char *)
struct _qty1085;  // mut Typedef uint16_t
struct _qty1086;  // mut Builtin unsigned short
struct _qty1087;  // mut FunctionProto void (uint16_t)
struct _qty1088;  // mut FunctionProto uint16_t () const
struct _qty1089;  // mut LValueReference const v8::PersistentBase<v8::Object> &
struct _qty1090;  // const Record v8::PersistentBase<v8::Object>
struct _qty1091;  // mut FunctionProto void (const v8::PersistentBase<v8::Object> &)
struct _qty1092;  // mut Pointer v8::PersistentBase<v8::Promise> *
struct _qty1093;  // mut TemplateTypeParm S
struct _qty1094;  // mut LValueReference const Local<S> &
struct _qty1095;  // const TemplateSpecialization Local<S>
struct _qty1096;  // mut TemplateSpecialization Local<S>
struct _qty1097;  // mut FunctionProto void (v8::Isolate *, const Local<S> &)
struct _qty1098;  // mut TemplateTypeParm S
struct _qty1099;  // mut LValueReference const PersistentBase<S> &
struct _qty1100;  // const TemplateSpecialization PersistentBase<S>
struct _qty1101;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1102;  // mut FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _qty1103;  // mut Pointer const v8::PersistentBase<v8::Promise> *
struct _qty1104;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty1105;  // mut FunctionProto Local<v8::Promise> (v8::Isolate *) const
struct _qty1106;  // mut TemplateTypeParm S
struct _qty1107;  // mut LValueReference const PersistentBase<S> &
struct _qty1108;  // const TemplateSpecialization PersistentBase<S>
struct _qty1109;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1110;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty1111;  // mut TemplateTypeParm S
struct _qty1112;  // mut LValueReference const Local<S> &
struct _qty1113;  // const TemplateSpecialization Local<S>
struct _qty1114;  // mut TemplateSpecialization Local<S>
struct _qty1115;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1116;  // mut TemplateTypeParm S
struct _qty1117;  // mut LValueReference const PersistentBase<S> &
struct _qty1118;  // const TemplateSpecialization PersistentBase<S>
struct _qty1119;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1120;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty1121;  // mut TemplateTypeParm S
struct _qty1122;  // mut LValueReference const Local<S> &
struct _qty1123;  // const TemplateSpecialization Local<S>
struct _qty1124;  // mut TemplateSpecialization Local<S>
struct _qty1125;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1126;  // mut TemplateTypeParm P
struct _qty1127;  // mut Pointer P *
struct _qty1128;  // mut DependentName typename WeakCallbackInfo<P>::Callback
struct _qty1129;  // mut FunctionProto void (P *, typename WeakCallbackInfo<P>::Callback, v8::WeakCallbackType)
struct _qty1130;  // mut TemplateTypeParm P
struct _qty1131;  // mut Pointer P *
struct _qty1132;  // mut FunctionProto P *()
struct _qty1133;  // mut LValueReference const v8::PersistentBase<v8::Promise> &
struct _qty1134;  // const Record v8::PersistentBase<v8::Promise>
struct _qty1135;  // mut FunctionProto void (const v8::PersistentBase<v8::Promise> &)
struct _qty1136;  // mut TemplateTypeParm T
struct _qty1137;  // mut TemplateTypeParm M
struct _qty1138;  // mut InjectedClassName Persistent<T, M>
struct _qty1139;  // mut Record v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >
struct _qty1140;  // mut Pointer v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > *
struct _qty1141;  // mut TemplateTypeParm S
struct _qty1142;  // mut TemplateSpecialization Local<S>
struct _qty1143;  // mut FunctionProto void (v8::Isolate *, Local<S>)
struct _qty1144;  // mut TemplateTypeParm S
struct _qty1145;  // mut TemplateTypeParm M2
struct _qty1146;  // mut LValueReference const Persistent<S, M2> &
struct _qty1147;  // const TemplateSpecialization Persistent<S, M2>
struct _qty1148;  // mut TemplateSpecialization Persistent<S, M2>
struct _qty1149;  // mut FunctionProto void (v8::Isolate *, const Persistent<S, M2> &)
struct _qty1150;  // mut LValueReference const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _qty1151;  // const Record v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >
struct _qty1152;  // mut FunctionProto void (const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _qty1153;  // mut TemplateTypeParm S
struct _qty1154;  // mut TemplateTypeParm M2
struct _qty1155;  // mut LValueReference const Persistent<S, M2> &
struct _qty1156;  // const TemplateSpecialization Persistent<S, M2>
struct _qty1157;  // mut TemplateSpecialization Persistent<S, M2>
struct _qty1158;  // mut FunctionProto void (const Persistent<S, M2> &)
struct _qty1159;  // mut LValueReference const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _qty1160;  // const TemplateSpecialization Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >
struct _qty1161;  // mut FunctionProto void (const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _qty1162;  // mut LValueReference v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _qty1163;  // mut FunctionProto v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _qty1164;  // mut TemplateTypeParm S
struct _qty1165;  // mut TemplateTypeParm M2
struct _qty1166;  // mut LValueReference const Persistent<S, M2> &
struct _qty1167;  // const TemplateSpecialization Persistent<S, M2>
struct _qty1168;  // mut TemplateSpecialization Persistent<S, M2>
struct _qty1169;  // mut FunctionProto v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(const Persistent<S, M2> &)
struct _qty1170;  // mut LValueReference const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &
struct _qty1171;  // const TemplateSpecialization Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >
struct _qty1172;  // mut FunctionProto v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(const Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &)
struct _qty1173;  // mut FunctionProto void ()
struct _qty1174;  // mut TemplateTypeParm S
struct _qty1175;  // mut LValueReference const Persistent<S> &
struct _qty1176;  // const TemplateSpecialization Persistent<S>
struct _qty1177;  // mut TemplateSpecialization Persistent<S>
struct _qty1178;  // mut LValueReference Persistent<v8::Promise> &
struct _qty1179;  // mut TemplateSpecialization Persistent<v8::Promise>
struct _qty1180;  // mut Record v8::Persistent<v8::Promise, v8::NonCopyablePersistentTraits<v8::Promise> >
struct _qty1181;  // mut FunctionProto Persistent<v8::Promise> &(const Persistent<S> &)
struct _qty1182;  // mut TemplateTypeParm S
struct _qty1183;  // mut LValueReference Persistent<S> &
struct _qty1184;  // mut TemplateSpecialization Persistent<S>
struct _qty1185;  // mut FunctionProto Persistent<S> &() const
struct _qty1186;  // mut Pointer const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > *
struct _qty1187;  // mut Record v8::Persistent<v8::Value, v8::NonCopyablePersistentTraits<v8::Value> >
struct _qty1188;  // mut TemplateTypeParm T
struct _qty1189;  // mut InjectedClassName Global<T>
struct _qty1190;  // mut TemplateTypeParm T
struct _qty1191;  // mut InjectedClassName TracedGlobal<T>
struct _qty1192;  // mut Record v8::TracedGlobal<v8::Object>
struct _qty1193;  // mut FunctionProto void ()
struct _qty1194;  // mut Pointer v8::TracedGlobal<v8::Object> *
struct _qty1195;  // mut FunctionProto void ()
struct _qty1196;  // mut TemplateTypeParm S
struct _qty1197;  // mut TemplateSpecialization Local<S>
struct _qty1198;  // mut FunctionProto void (v8::Isolate *, Local<S>)
struct _qty1199;  // mut RValueReference v8::TracedGlobal<v8::Object> &&
struct _qty1200;  // mut FunctionProto void (v8::TracedGlobal<v8::Object> &&)
struct _qty1201;  // mut TemplateTypeParm S
struct _qty1202;  // mut RValueReference TracedGlobal<S> &&
struct _qty1203;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1204;  // mut LValueReference v8::TracedGlobal<v8::Object> &
struct _qty1205;  // mut FunctionProto v8::TracedGlobal<v8::Object> &(TracedGlobal<S> &&)
struct _qty1206;  // mut LValueReference const v8::TracedGlobal<v8::Object> &
struct _qty1207;  // const Record v8::TracedGlobal<v8::Object>
struct _qty1208;  // mut FunctionProto void (const v8::TracedGlobal<v8::Object> &)
struct _qty1209;  // mut Pointer const v8::TracedGlobal<v8::Object> *
struct _qty1210;  // mut TemplateTypeParm S
struct _qty1211;  // mut LValueReference const Local<S> &
struct _qty1212;  // const TemplateSpecialization Local<S>
struct _qty1213;  // mut TemplateSpecialization Local<S>
struct _qty1214;  // mut FunctionProto void (v8::Isolate *, const Local<S> &)
struct _qty1215;  // mut TemplateSpecialization Local<v8::Object>
struct _qty1216;  // mut FunctionProto Local<v8::Object> (v8::Isolate *) const
struct _qty1217;  // mut TemplateTypeParm S
struct _qty1218;  // mut LValueReference TracedGlobal<S> &
struct _qty1219;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1220;  // mut FunctionProto TracedGlobal<S> &() const
struct _qty1221;  // mut TemplateTypeParm S
struct _qty1222;  // mut LValueReference const TracedGlobal<S> &
struct _qty1223;  // const TemplateSpecialization TracedGlobal<S>
struct _qty1224;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1225;  // mut FunctionProto bool (const TracedGlobal<S> &) const
struct _qty1226;  // mut TemplateTypeParm S
struct _qty1227;  // mut LValueReference const Local<S> &
struct _qty1228;  // const TemplateSpecialization Local<S>
struct _qty1229;  // mut TemplateSpecialization Local<S>
struct _qty1230;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1231;  // mut TemplateTypeParm S
struct _qty1232;  // mut LValueReference const TracedGlobal<S> &
struct _qty1233;  // const TemplateSpecialization TracedGlobal<S>
struct _qty1234;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1235;  // mut FunctionProto bool (const TracedGlobal<S> &) const
struct _qty1236;  // mut TemplateTypeParm S
struct _qty1237;  // mut LValueReference const Local<S> &
struct _qty1238;  // const TemplateSpecialization Local<S>
struct _qty1239;  // mut TemplateSpecialization Local<S>
struct _qty1240;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1241;  // mut Pointer void *
struct _qty1242;  // mut Elaborated WeakCallbackInfo<void>::Callback
struct _qty1243;  // mut LValueReference const WeakCallbackInfo<void> &
struct _qty1244;  // const TemplateSpecialization WeakCallbackInfo<void>
struct _qty1245;  // mut Record v8::WeakCallbackInfo<void>
struct _qty1246;  // mut FunctionProto void (const WeakCallbackInfo<void> &)
struct _qty1247;  // mut Typedef v8::WeakCallbackInfo<void>::Callback
struct _qty1248;  // mut Pointer void (*)(const WeakCallbackInfo<void> &)
struct _qty1249;  // mut FunctionProto void (void *, WeakCallbackInfo<void>::Callback)
struct _qty1250;  // mut TemplateTypeParm K
struct _qty1251;  // mut TemplateTypeParm V
struct _qty1252;  // mut TemplateTypeParm T
struct _qty1253;  // mut InjectedClassName PersistentValueMap<K, V, T>
struct _qty1254;  // mut TemplateTypeParm K
struct _qty1255;  // mut TemplateTypeParm V
struct _qty1256;  // mut TemplateTypeParm T
struct _qty1257;  // mut InjectedClassName PersistentValueMapBase<K, V, T>
struct _qty1258;  // mut TemplateTypeParm K
struct _qty1259;  // mut TemplateTypeParm V
struct _qty1260;  // mut TemplateTypeParm T
struct _qty1261;  // mut InjectedClassName GlobalValueMap<K, V, T>
struct _qty1262;  // mut TemplateTypeParm V
struct _qty1263;  // mut TemplateTypeParm T
struct _qty1264;  // mut InjectedClassName PersistentValueVector<V, T>
struct _qty1265;  // mut TemplateTypeParm T
struct _qty1266;  // mut TemplateTypeParm P
struct _qty1267;  // mut InjectedClassName WeakCallbackObject<T, P>
struct _qty1268;  // mut TemplateTypeParm T
struct _qty1269;  // mut InjectedClassName FunctionCallbackInfo<T>
struct _qty1270;  // mut Record v8::FunctionCallbackInfo<v8::Value>
struct _qty1271;  // mut TemplateTypeParm T
struct _qty1272;  // mut InjectedClassName PropertyCallbackInfo<T>
struct _qty1273;  // mut Record v8::PropertyCallbackInfo<v8::Value>
struct _qty1274;  // mut Record v8::PropertyCallbackInfo<void>
struct _qty1275;  // mut Record v8::PropertyCallbackInfo<v8::Integer>
struct _qty1276;  // mut Record v8::PropertyCallbackInfo<v8::Boolean>
struct _qty1277;  // mut Record v8::PropertyCallbackInfo<v8::Array>
struct _qty1278;  // mut Record v8::CallHandlerHelper
struct _qty1279;  // mut Record v8::EscapableHandleScope
struct _qty1280;  // mut TemplateTypeParm T
struct _qty1281;  // mut InjectedClassName ReturnValue<T>
struct _qty1282;  // mut Record v8::debug::ConsoleCallArguments
struct _qty1283;  // mut TemplateTypeParm T
struct _qty1284;  // mut Pointer Local<T> *
struct _qty1285;  // mut TemplateTypeParm S
struct _qty1286;  // mut TemplateSpecialization Local<S>
struct _qty1287;  // mut FunctionProto void (Local<S>)
struct _qty1288;  // mut Pointer const Local<T> *
struct _qty1289;  // mut Pointer T *
struct _qty1290;  // mut FunctionProto T *() const
struct _qty1291;  // mut TemplateTypeParm S
struct _qty1292;  // mut LValueReference const Local<S> &
struct _qty1293;  // const TemplateSpecialization Local<S>
struct _qty1294;  // mut TemplateSpecialization Local<S>
struct _qty1295;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1296;  // mut TemplateTypeParm S
struct _qty1297;  // mut LValueReference const PersistentBase<S> &
struct _qty1298;  // const TemplateSpecialization PersistentBase<S>
struct _qty1299;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1300;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty1301;  // mut TemplateTypeParm S
struct _qty1302;  // mut LValueReference const Local<S> &
struct _qty1303;  // const TemplateSpecialization Local<S>
struct _qty1304;  // mut TemplateSpecialization Local<S>
struct _qty1305;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1306;  // mut TemplateTypeParm S
struct _qty1307;  // mut LValueReference const Persistent<S> &
struct _qty1308;  // const TemplateSpecialization Persistent<S>
struct _qty1309;  // mut TemplateSpecialization Persistent<S>
struct _qty1310;  // mut FunctionProto bool (const Persistent<S> &) const
struct _qty1311;  // mut TemplateTypeParm S
struct _qty1312;  // mut TemplateSpecialization Local<S>
struct _qty1313;  // mut TemplateSpecialization Local<T>
struct _qty1314;  // mut FunctionProto Local<T> (Local<S>)
struct _qty1315;  // mut TemplateTypeParm S
struct _qty1316;  // mut TemplateSpecialization Local<S>
struct _qty1317;  // mut FunctionProto Local<S> () const
struct _qty1318;  // mut TemplateSpecialization Local<T>
struct _qty1319;  // mut TemplateSpecialization Local<T>
struct _qty1320;  // mut FunctionProto Local<T> (v8::Isolate *, Local<T>)
struct _qty1321;  // mut LValueReference const PersistentBase<T> &
struct _qty1322;  // const TemplateSpecialization PersistentBase<T>
struct _qty1323;  // mut TemplateSpecialization PersistentBase<T>
struct _qty1324;  // mut TemplateSpecialization Local<T>
struct _qty1325;  // mut FunctionProto Local<T> (v8::Isolate *, const PersistentBase<T> &)
struct _qty1326;  // mut LValueReference const TracedGlobal<T> &
struct _qty1327;  // const TemplateSpecialization TracedGlobal<T>
struct _qty1328;  // mut TemplateSpecialization TracedGlobal<T>
struct _qty1329;  // mut TemplateSpecialization Local<T>
struct _qty1330;  // mut FunctionProto Local<T> (v8::Isolate *, const TracedGlobal<T> &)
struct _qty1331;  // mut Typedef v8::Handle
struct _qty1332;  // mut TemplateSpecialization Local<T>
struct _qty1333;  // mut TemplateTypeParm T
struct _qty1334;  // mut TemplateTypeParm T
struct _qty1335;  // mut Pointer MaybeLocal<T> *
struct _qty1336;  // mut TemplateTypeParm S
struct _qty1337;  // mut TemplateSpecialization Local<S>
struct _qty1338;  // mut FunctionProto void (Local<S>)
struct _qty1339;  // mut Pointer const MaybeLocal<T> *
struct _qty1340;  // mut TemplateTypeParm S
struct _qty1341;  // mut Pointer Local<S> *
struct _qty1342;  // mut TemplateSpecialization Local<S>
struct _qty1343;  // mut FunctionProto bool (Local<S> *) const
struct _qty1344;  // mut TemplateSpecialization Local<T>
struct _qty1345;  // mut FunctionProto Local<T> ()
struct _qty1346;  // mut TemplateTypeParm S
struct _qty1347;  // mut TemplateSpecialization Local<S>
struct _qty1348;  // mut TemplateSpecialization Local<S>
struct _qty1349;  // mut FunctionProto Local<S> (Local<S>) const
struct _qty1350;  // mut TemplateTypeParm T
struct _qty1351;  // mut Pointer Eternal<T> *
struct _qty1352;  // mut TemplateTypeParm S
struct _qty1353;  // mut TemplateSpecialization Local<S>
struct _qty1354;  // mut FunctionProto void (v8::Isolate *, Local<S>)
struct _qty1355;  // mut TemplateSpecialization Local<T>
struct _qty1356;  // mut FunctionProto Local<T> (v8::Isolate *) const
struct _qty1357;  // mut Pointer const Eternal<T> *
struct _qty1358;  // mut TemplateTypeParm S
struct _qty1359;  // mut TemplateSpecialization Local<S>
struct _qty1360;  // mut FunctionProto void (v8::Isolate *, Local<S>)
struct _qty1361;  // const Builtin int
struct _qty1362;  // mut Builtin int
struct _qty1363;  // mut TemplateTypeParm T
struct _qty1364;  // mut InjectedClassName WeakCallbackInfo<T>
struct _qty1365;  // mut Typedef v8::WeakCallbackInfo::Callback
struct _qty1366;  // mut LValueReference const WeakCallbackInfo<T> &
struct _qty1367;  // const TemplateSpecialization WeakCallbackInfo<T>
struct _qty1368;  // mut FunctionProto void (const WeakCallbackInfo<T> &)
struct _qty1369;  // mut Pointer void (*)(const WeakCallbackInfo<T> &)
struct _qty1370;  // mut Pointer T *
struct _qty1371;  // mut Decayed void **
struct _qty1372;  // mut Pointer void **
struct _qty1373;  // mut Pointer v8::WeakCallbackInfo::Callback *
struct _qty1374;  // mut FunctionProto void (v8::Isolate *, T *, void **, v8::WeakCallbackInfo::Callback *)
struct _qty1375;  // mut Pointer WeakCallbackInfo<T> *
struct _qty1376;  // mut FunctionProto v8::Isolate *() const
struct _qty1377;  // mut Pointer const WeakCallbackInfo<T> *
struct _qty1378;  // mut FunctionProto T *() const
struct _qty1379;  // mut FunctionProto void *(int) const
struct _qty1380;  // mut FunctionProto void (v8::WeakCallbackInfo::Callback) const
struct _qty1381;  // mut Pointer void *
struct _qty1382;  // mut Pointer v8::WeakCallbackInfo<void>::Callback *
struct _qty1383;  // mut FunctionProto void (v8::Isolate *, void *, void **, v8::WeakCallbackInfo<void>::Callback *)
struct _qty1384;  // mut Pointer v8::WeakCallbackInfo<void> *
struct _qty1385;  // mut Pointer const v8::WeakCallbackInfo<void> *
struct _qty1386;  // mut FunctionProto void *() const
struct _qty1387;  // mut FunctionProto void (v8::WeakCallbackInfo<void>::Callback) const
struct _qty1388;  // mut TemplateTypeParm T
struct _qty1389;  // mut Pointer PersistentBase<T> *
struct _qty1390;  // mut TemplateTypeParm S
struct _qty1391;  // mut LValueReference const Local<S> &
struct _qty1392;  // const TemplateSpecialization Local<S>
struct _qty1393;  // mut TemplateSpecialization Local<S>
struct _qty1394;  // mut FunctionProto void (v8::Isolate *, const Local<S> &)
struct _qty1395;  // mut TemplateTypeParm S
struct _qty1396;  // mut LValueReference const PersistentBase<S> &
struct _qty1397;  // const TemplateSpecialization PersistentBase<S>
struct _qty1398;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1399;  // mut FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _qty1400;  // mut Pointer const PersistentBase<T> *
struct _qty1401;  // mut TemplateSpecialization Local<T>
struct _qty1402;  // mut FunctionProto Local<T> (v8::Isolate *) const
struct _qty1403;  // mut TemplateTypeParm S
struct _qty1404;  // mut LValueReference const PersistentBase<S> &
struct _qty1405;  // const TemplateSpecialization PersistentBase<S>
struct _qty1406;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1407;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty1408;  // mut TemplateTypeParm S
struct _qty1409;  // mut LValueReference const Local<S> &
struct _qty1410;  // const TemplateSpecialization Local<S>
struct _qty1411;  // mut TemplateSpecialization Local<S>
struct _qty1412;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1413;  // mut TemplateTypeParm S
struct _qty1414;  // mut LValueReference const PersistentBase<S> &
struct _qty1415;  // const TemplateSpecialization PersistentBase<S>
struct _qty1416;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1417;  // mut FunctionProto bool (const PersistentBase<S> &) const
struct _qty1418;  // mut TemplateTypeParm S
struct _qty1419;  // mut LValueReference const Local<S> &
struct _qty1420;  // const TemplateSpecialization Local<S>
struct _qty1421;  // mut TemplateSpecialization Local<S>
struct _qty1422;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1423;  // mut TemplateTypeParm P
struct _qty1424;  // mut Pointer P *
struct _qty1425;  // mut DependentName typename WeakCallbackInfo<P>::Callback
struct _qty1426;  // mut FunctionProto void (P *, typename WeakCallbackInfo<P>::Callback, v8::WeakCallbackType)
struct _qty1427;  // mut TemplateTypeParm P
struct _qty1428;  // mut Pointer P *
struct _qty1429;  // mut FunctionProto P *()
struct _qty1430;  // mut LValueReference const PersistentBase<T> &
struct _qty1431;  // const InjectedClassName PersistentBase<T>
struct _qty1432;  // mut FunctionProto void (const PersistentBase<T> &)
struct _qty1433;  // mut TemplateTypeParm T
struct _qty1434;  // mut Typedef v8::NonCopyablePersistentTraits::NonCopyablePersistent
struct _qty1435;  // mut TemplateSpecialization Persistent<T, NonCopyablePersistentTraits<T> >
struct _qty1436;  // const Builtin bool
struct _qty1437;  // mut TemplateTypeParm S
struct _qty1438;  // mut TemplateTypeParm M
struct _qty1439;  // mut LValueReference const Persistent<S, M> &
struct _qty1440;  // const TemplateSpecialization Persistent<S, M>
struct _qty1441;  // mut TemplateSpecialization Persistent<S, M>
struct _qty1442;  // mut Pointer v8::NonCopyablePersistentTraits::NonCopyablePersistent *
struct _qty1443;  // mut FunctionProto void (const Persistent<S, M> &, v8::NonCopyablePersistentTraits::NonCopyablePersistent *)
struct _qty1444;  // mut TemplateTypeParm O
struct _qty1445;  // mut TemplateTypeParm T
struct _qty1446;  // mut InjectedClassName CopyablePersistentTraits<T>
struct _qty1447;  // mut Typedef v8::CopyablePersistentTraits::CopyablePersistent
struct _qty1448;  // mut TemplateSpecialization Persistent<T, CopyablePersistentTraits<T> >
struct _qty1449;  // mut TemplateTypeParm S
struct _qty1450;  // mut TemplateTypeParm M
struct _qty1451;  // mut LValueReference const Persistent<S, M> &
struct _qty1452;  // const TemplateSpecialization Persistent<S, M>
struct _qty1453;  // mut TemplateSpecialization Persistent<S, M>
struct _qty1454;  // mut Pointer v8::CopyablePersistentTraits::CopyablePersistent *
struct _qty1455;  // mut FunctionProto void (const Persistent<S, M> &, v8::CopyablePersistentTraits::CopyablePersistent *)
struct _qty1456;  // mut Record v8::CopyablePersistentTraits<v8::Promise>
struct _qty1457;  // mut TemplateTypeParm T
struct _qty1458;  // mut TemplateTypeParm M
struct _qty1459;  // mut Pointer Persistent<T, M> *
struct _qty1460;  // mut TemplateTypeParm S
struct _qty1461;  // mut TemplateSpecialization Local<S>
struct _qty1462;  // mut FunctionProto void (v8::Isolate *, Local<S>)
struct _qty1463;  // mut TemplateTypeParm S
struct _qty1464;  // mut TemplateTypeParm M2
struct _qty1465;  // mut LValueReference const Persistent<S, M2> &
struct _qty1466;  // const TemplateSpecialization Persistent<S, M2>
struct _qty1467;  // mut TemplateSpecialization Persistent<S, M2>
struct _qty1468;  // mut FunctionProto void (v8::Isolate *, const Persistent<S, M2> &)
struct _qty1469;  // mut LValueReference const Persistent<T, M> &
struct _qty1470;  // const InjectedClassName Persistent<T, M>
struct _qty1471;  // mut FunctionProto void (const Persistent<T, M> &)
struct _qty1472;  // mut TemplateTypeParm S
struct _qty1473;  // mut TemplateTypeParm M2
struct _qty1474;  // mut LValueReference const Persistent<S, M2> &
struct _qty1475;  // const TemplateSpecialization Persistent<S, M2>
struct _qty1476;  // mut TemplateSpecialization Persistent<S, M2>
struct _qty1477;  // mut FunctionProto void (const Persistent<S, M2> &)
struct _qty1478;  // mut LValueReference Persistent<T, M> &
struct _qty1479;  // mut FunctionProto Persistent<T, M> &(const Persistent<T, M> &)
struct _qty1480;  // mut TemplateTypeParm S
struct _qty1481;  // mut TemplateTypeParm M2
struct _qty1482;  // mut LValueReference const Persistent<S, M2> &
struct _qty1483;  // const TemplateSpecialization Persistent<S, M2>
struct _qty1484;  // mut TemplateSpecialization Persistent<S, M2>
struct _qty1485;  // mut FunctionProto Persistent<T, M> &(const Persistent<S, M2> &)
struct _qty1486;  // mut TemplateTypeParm S
struct _qty1487;  // mut LValueReference const Persistent<S> &
struct _qty1488;  // const TemplateSpecialization Persistent<S>
struct _qty1489;  // mut TemplateSpecialization Persistent<S>
struct _qty1490;  // mut LValueReference Persistent<T> &
struct _qty1491;  // mut TemplateSpecialization Persistent<T>
struct _qty1492;  // mut FunctionProto Persistent<T> &(const Persistent<S> &)
struct _qty1493;  // mut TemplateTypeParm S
struct _qty1494;  // mut LValueReference Persistent<S> &
struct _qty1495;  // mut TemplateSpecialization Persistent<S>
struct _qty1496;  // mut FunctionProto Persistent<S> &() const
struct _qty1497;  // mut Pointer const Persistent<T, M> *
struct _qty1498;  // mut TemplateTypeParm T
struct _qty1499;  // mut Pointer Global<T> *
struct _qty1500;  // mut TemplateTypeParm S
struct _qty1501;  // mut TemplateSpecialization Local<S>
struct _qty1502;  // mut FunctionProto void (v8::Isolate *, Local<S>)
struct _qty1503;  // mut TemplateTypeParm S
struct _qty1504;  // mut LValueReference const PersistentBase<S> &
struct _qty1505;  // const TemplateSpecialization PersistentBase<S>
struct _qty1506;  // mut TemplateSpecialization PersistentBase<S>
struct _qty1507;  // mut FunctionProto void (v8::Isolate *, const PersistentBase<S> &)
struct _qty1508;  // mut RValueReference Global<T> &&
struct _qty1509;  // mut FunctionProto void (Global<T> &&)
struct _qty1510;  // mut TemplateTypeParm S
struct _qty1511;  // mut RValueReference Global<S> &&
struct _qty1512;  // mut TemplateSpecialization Global<S>
struct _qty1513;  // mut LValueReference Global<T> &
struct _qty1514;  // mut FunctionProto Global<T> &(Global<S> &&)
struct _qty1515;  // mut FunctionProto Global<T> ()
struct _qty1516;  // mut Typedef v8::Global::MoveOnlyTypeForCPP03
struct _qty1517;  // mut LValueReference const Global<T> &
struct _qty1518;  // const InjectedClassName Global<T>
struct _qty1519;  // mut FunctionProto void (const Global<T> &)
struct _qty1520;  // mut Typedef v8::UniquePersistent
struct _qty1521;  // mut TemplateSpecialization Global<T>
struct _qty1522;  // mut TemplateTypeParm T
struct _qty1523;  // mut TemplateTypeParm T
struct _qty1524;  // mut Pointer TracedGlobal<T> *
struct _qty1525;  // mut TemplateTypeParm S
struct _qty1526;  // mut TemplateSpecialization Local<S>
struct _qty1527;  // mut FunctionProto void (v8::Isolate *, Local<S>)
struct _qty1528;  // mut RValueReference TracedGlobal<T> &&
struct _qty1529;  // mut FunctionProto void (TracedGlobal<T> &&)
struct _qty1530;  // mut TemplateTypeParm S
struct _qty1531;  // mut RValueReference TracedGlobal<S> &&
struct _qty1532;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1533;  // mut LValueReference TracedGlobal<T> &
struct _qty1534;  // mut FunctionProto TracedGlobal<T> &(TracedGlobal<S> &&)
struct _qty1535;  // mut LValueReference const TracedGlobal<T> &
struct _qty1536;  // const InjectedClassName TracedGlobal<T>
struct _qty1537;  // mut FunctionProto void (const TracedGlobal<T> &)
struct _qty1538;  // mut Pointer const TracedGlobal<T> *
struct _qty1539;  // mut TemplateTypeParm S
struct _qty1540;  // mut LValueReference const Local<S> &
struct _qty1541;  // const TemplateSpecialization Local<S>
struct _qty1542;  // mut TemplateSpecialization Local<S>
struct _qty1543;  // mut FunctionProto void (v8::Isolate *, const Local<S> &)
struct _qty1544;  // mut TemplateSpecialization Local<T>
struct _qty1545;  // mut FunctionProto Local<T> (v8::Isolate *) const
struct _qty1546;  // mut TemplateTypeParm S
struct _qty1547;  // mut LValueReference TracedGlobal<S> &
struct _qty1548;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1549;  // mut FunctionProto TracedGlobal<S> &() const
struct _qty1550;  // mut TemplateTypeParm S
struct _qty1551;  // mut LValueReference const TracedGlobal<S> &
struct _qty1552;  // const TemplateSpecialization TracedGlobal<S>
struct _qty1553;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1554;  // mut FunctionProto bool (const TracedGlobal<S> &) const
struct _qty1555;  // mut TemplateTypeParm S
struct _qty1556;  // mut LValueReference const Local<S> &
struct _qty1557;  // const TemplateSpecialization Local<S>
struct _qty1558;  // mut TemplateSpecialization Local<S>
struct _qty1559;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1560;  // mut TemplateTypeParm S
struct _qty1561;  // mut LValueReference const TracedGlobal<S> &
struct _qty1562;  // const TemplateSpecialization TracedGlobal<S>
struct _qty1563;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty1564;  // mut FunctionProto bool (const TracedGlobal<S> &) const
struct _qty1565;  // mut TemplateTypeParm S
struct _qty1566;  // mut LValueReference const Local<S> &
struct _qty1567;  // const TemplateSpecialization Local<S>
struct _qty1568;  // mut TemplateSpecialization Local<S>
struct _qty1569;  // mut FunctionProto bool (const Local<S> &) const
struct _qty1570;  // mut Record v8::HandleScope
struct _qty1571;  // mut FunctionProto void (v8::Isolate *)
struct _qty1572;  // mut Pointer v8::HandleScope *
struct _qty1573;  // mut FunctionProto void ()
struct _qty1574;  // mut FunctionProto int (v8::Isolate *)
struct _qty1575;  // mut Pointer const v8::HandleScope *
struct _qty1576;  // mut LValueReference const v8::HandleScope &
struct _qty1577;  // const Record v8::HandleScope
struct _qty1578;  // mut FunctionProto void (const v8::HandleScope &)
struct _qty1579;  // mut FunctionProto void ()
struct _qty1580;  // mut Pointer internal::Isolate *
struct _qty1581;  // mut Record v8::internal::Isolate
struct _qty1582;  // mut Elaborated internal::Address
struct _qty1583;  // mut Typedef v8::internal::Address
struct _qty1584;  // mut Typedef uintptr_t
struct _qty1585;  // mut Builtin unsigned long long
struct _qty1586;  // mut Pointer internal::Address *
struct _qty1587;  // mut FunctionProto internal::Address *(internal::Isolate *, internal::Address)
struct _qty1588;  // mut Pointer v8::EscapableHandleScope *
struct _qty1589;  // mut FunctionProto void ()
struct _qty1590;  // mut TemplateTypeParm T
struct _qty1591;  // mut TemplateSpecialization Local<T>
struct _qty1592;  // mut TemplateSpecialization Local<T>
struct _qty1593;  // mut FunctionProto Local<T> (Local<T>)
struct _qty1594;  // mut TemplateTypeParm T
struct _qty1595;  // mut TemplateSpecialization MaybeLocal<T>
struct _qty1596;  // mut TemplateSpecialization MaybeLocal<T>
struct _qty1597;  // mut FunctionProto MaybeLocal<T> (MaybeLocal<T>)
struct _qty1598;  // mut LValueReference const v8::EscapableHandleScope &
struct _qty1599;  // const Record v8::EscapableHandleScope
struct _qty1600;  // mut FunctionProto void (const v8::EscapableHandleScope &)
struct _qty1601;  // mut Record v8::SealHandleScope
struct _qty1602;  // mut Pointer v8::SealHandleScope *
struct _qty1603;  // mut FunctionProto void ()
struct _qty1604;  // mut LValueReference const v8::SealHandleScope &
struct _qty1605;  // const Record v8::SealHandleScope
struct _qty1606;  // mut FunctionProto void (const v8::SealHandleScope &)
struct _qty1607;  // mut Record v8::ScriptOrModule
struct _qty1608;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1609;  // mut FunctionProto Local<v8::Value> ()
struct _qty1610;  // mut Pointer v8::ScriptOrModule *
struct _qty1611;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty1612;  // mut FunctionProto Local<v8::PrimitiveArray> ()
struct _qty1613;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty1614;  // mut FunctionProto Local<v8::PrimitiveArray> (v8::Isolate *, int)
struct _qty1615;  // mut FunctionProto int () const
struct _qty1616;  // mut Pointer const v8::PrimitiveArray *
struct _qty1617;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty1618;  // mut FunctionProto void (v8::Isolate *, int, Local<v8::Primitive>)
struct _qty1619;  // mut Pointer v8::PrimitiveArray *
struct _qty1620;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty1621;  // mut FunctionProto Local<v8::Primitive> (v8::Isolate *, int)
struct _qty1622;  // mut Record v8::ScriptOriginOptions
struct _qty1623;  // mut FunctionProto void (bool, bool, bool, bool)
struct _qty1624;  // mut Pointer v8::ScriptOriginOptions *
struct _qty1625;  // mut FunctionProto void (int)
struct _qty1626;  // mut Pointer const v8::ScriptOriginOptions *
struct _qty1627;  // mut LValueReference const v8::ScriptOriginOptions &
struct _qty1628;  // const Record v8::ScriptOriginOptions
struct _qty1629;  // mut FunctionProto void (const v8::ScriptOriginOptions &) noexcept
struct _qty1630;  // mut RValueReference v8::ScriptOriginOptions &&
struct _qty1631;  // mut FunctionProto void (v8::ScriptOriginOptions &&) noexcept
struct _qty1632;  // mut LValueReference v8::ScriptOriginOptions &
struct _qty1633;  // mut FunctionProto v8::ScriptOriginOptions &(const v8::ScriptOriginOptions &)
struct _qty1634;  // mut FunctionProto v8::ScriptOriginOptions &(v8::ScriptOriginOptions &&)
struct _qty1635;  // mut Record v8::ScriptOrigin
struct _qty1636;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1637;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty1638;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty1639;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty1640;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty1641;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1642;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty1643;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty1644;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty1645;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty1646;  // mut FunctionProto void (Local<v8::Value>, Local<v8::Integer>, Local<v8::Integer>, Local<v8::Boolean>, Local<v8::Integer>, Local<v8::Value>, Local<v8::Boolean>, Local<v8::Boolean>, Local<v8::Boolean>, Local<v8::PrimitiveArray>)
struct _qty1647;  // mut Pointer v8::ScriptOrigin *
struct _qty1648;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1649;  // mut FunctionProto Local<v8::Value> () const
struct _qty1650;  // mut Pointer const v8::ScriptOrigin *
struct _qty1651;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty1652;  // mut FunctionProto Local<v8::Integer> () const
struct _qty1653;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty1654;  // mut FunctionProto Local<v8::Integer> () const
struct _qty1655;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty1656;  // mut FunctionProto Local<v8::Integer> () const
struct _qty1657;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1658;  // mut FunctionProto Local<v8::Value> () const
struct _qty1659;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty1660;  // mut FunctionProto Local<v8::PrimitiveArray> () const
struct _qty1661;  // mut FunctionProto v8::ScriptOriginOptions () const
struct _qty1662;  // mut LValueReference const v8::ScriptOrigin &
struct _qty1663;  // const Record v8::ScriptOrigin
struct _qty1664;  // mut FunctionProto void (const v8::ScriptOrigin &)
struct _qty1665;  // mut RValueReference v8::ScriptOrigin &&
struct _qty1666;  // mut LValueReference v8::ScriptOrigin &
struct _qty1667;  // mut FunctionProto v8::ScriptOrigin &(v8::ScriptOrigin &&)
struct _qty1668;  // mut FunctionProto void (v8::ScriptOrigin &&)
struct _qty1669;  // mut TemplateSpecialization Local<v8::Script>
struct _qty1670;  // mut FunctionProto Local<v8::Script> ()
struct _qty1671;  // mut Pointer v8::UnboundScript *
struct _qty1672;  // mut FunctionProto int ()
struct _qty1673;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1674;  // mut FunctionProto Local<v8::Value> ()
struct _qty1675;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1676;  // mut FunctionProto Local<v8::Value> ()
struct _qty1677;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1678;  // mut FunctionProto Local<v8::Value> ()
struct _qty1679;  // mut FunctionProto int (int)
struct _qty1680;  // mut Record v8::UnboundModuleScript
struct _qty1681;  // mut Record v8::Location
struct _qty1682;  // mut Pointer v8::Location *
struct _qty1683;  // mut FunctionProto void (int, int)
struct _qty1684;  // mut Record v8::Module
struct _qty1685;  // mut Enum v8::Module::Status
struct _qty1686;  // mut FunctionProto v8::Module::Status () const
struct _qty1687;  // mut Pointer const v8::Module *
struct _qty1688;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1689;  // mut FunctionProto Local<v8::Value> () const
struct _qty1690;  // mut TemplateSpecialization Local<v8::String>
struct _qty1691;  // mut FunctionProto Local<v8::String> (int) const
struct _qty1692;  // mut FunctionProto v8::Location (int) const
struct _qty1693;  // mut Typedef v8::Module::ResolveCallback
struct _qty1694;  // mut TemplateSpecialization MaybeLocal<v8::Module>
struct _qty1695;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1696;  // mut TemplateSpecialization Local<v8::String>
struct _qty1697;  // mut TemplateSpecialization Local<v8::Module>
struct _qty1698;  // mut FunctionProto MaybeLocal<v8::Module> (Local<v8::Context>, Local<v8::String>, Local<v8::Module>)
struct _qty1699;  // mut Pointer MaybeLocal<v8::Module> (*)(Local<v8::Context>, Local<v8::String>, Local<v8::Module>)
struct _qty1700;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1701;  // mut TemplateSpecialization Maybe<bool>
struct _qty1702;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, v8::Module::ResolveCallback)
struct _qty1703;  // mut Pointer v8::Module *
struct _qty1704;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1705;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty1706;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>)
struct _qty1707;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1708;  // mut FunctionProto Local<v8::Value> ()
struct _qty1709;  // mut TemplateSpecialization Local<v8::UnboundModuleScript>
struct _qty1710;  // mut FunctionProto Local<v8::UnboundModuleScript> ()
struct _qty1711;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1712;  // mut TemplateSpecialization Local<v8::String>
struct _qty1713;  // mut TemplateSpecialization MaybeLocal<v8::Script>
struct _qty1714;  // mut FunctionProto MaybeLocal<v8::Script> (Local<v8::Context>, Local<v8::String>, v8::ScriptOrigin *)
struct _qty1715;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1716;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty1717;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>)
struct _qty1718;  // mut Pointer v8::Script *
struct _qty1719;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty1720;  // mut FunctionProto Local<v8::UnboundScript> ()
struct _qty1721;  // mut Record v8::ScriptCompiler
struct _qty1722;  // mut Record v8::ScriptCompiler::CachedData
struct _qty1723;  // mut Enum v8::ScriptCompiler::CachedData::BufferPolicy
struct _qty1724;  // mut Pointer v8::ScriptCompiler::CachedData *
struct _qty1725;  // mut Pointer const uint8_t *
struct _qty1726;  // mut Builtin unsigned char
struct _qty1727;  // mut FunctionProto void (const uint8_t *, int, v8::ScriptCompiler::CachedData::BufferPolicy)
struct _qty1728;  // mut LValueReference const v8::ScriptCompiler::CachedData &
struct _qty1729;  // const Record v8::ScriptCompiler::CachedData
struct _qty1730;  // mut FunctionProto void (const v8::ScriptCompiler::CachedData &)
struct _qty1731;  // mut LValueReference v8::ScriptCompiler::CachedData &
struct _qty1732;  // mut FunctionProto v8::ScriptCompiler::CachedData &(const v8::ScriptCompiler::CachedData &)
struct _qty1733;  // mut Record v8::ScriptCompiler::Source
struct _qty1734;  // mut TemplateSpecialization Local<v8::String>
struct _qty1735;  // mut FunctionProto void (Local<v8::String>, const v8::ScriptOrigin &, v8::ScriptCompiler::CachedData *)
struct _qty1736;  // mut Pointer v8::ScriptCompiler::Source *
struct _qty1737;  // mut TemplateSpecialization Local<v8::String>
struct _qty1738;  // mut FunctionProto void (Local<v8::String>, v8::ScriptCompiler::CachedData *)
struct _qty1739;  // mut Pointer const v8::ScriptCompiler::CachedData *
struct _qty1740;  // mut FunctionProto const v8::ScriptCompiler::CachedData *() const
struct _qty1741;  // mut Pointer const v8::ScriptCompiler::Source *
struct _qty1742;  // mut FunctionProto const v8::ScriptOriginOptions &() const
struct _qty1743;  // mut LValueReference const v8::ScriptCompiler::Source &
struct _qty1744;  // const Record v8::ScriptCompiler::Source
struct _qty1745;  // mut FunctionProto void (const v8::ScriptCompiler::Source &)
struct _qty1746;  // mut LValueReference v8::ScriptCompiler::Source &
struct _qty1747;  // mut FunctionProto v8::ScriptCompiler::Source &(const v8::ScriptCompiler::Source &)
struct _qty1748;  // mut Record v8::ScriptCompiler::ExternalSourceStream
struct _qty1749;  // mut FunctionProto void ()
struct _qty1750;  // mut Pointer v8::ScriptCompiler::ExternalSourceStream *
struct _qty1751;  // mut Pointer const uint8_t **
struct _qty1752;  // mut Typedef size_t
struct _qty1753;  // mut FunctionProto size_t (const uint8_t **)
struct _qty1754;  // mut FunctionProto bool ()
struct _qty1755;  // mut LValueReference const v8::ScriptCompiler::ExternalSourceStream &
struct _qty1756;  // const Record v8::ScriptCompiler::ExternalSourceStream
struct _qty1757;  // mut LValueReference v8::ScriptCompiler::ExternalSourceStream &
struct _qty1758;  // mut FunctionProto v8::ScriptCompiler::ExternalSourceStream &(const v8::ScriptCompiler::ExternalSourceStream &)
struct _qty1759;  // mut Record v8::ScriptCompiler::StreamedSource
struct _qty1760;  // mut Enum v8::ScriptCompiler::StreamedSource::Encoding
struct _qty1761;  // mut FunctionProto void (v8::ScriptCompiler::ExternalSourceStream *, v8::ScriptCompiler::StreamedSource::Encoding)
struct _qty1762;  // mut Pointer v8::ScriptCompiler::StreamedSource *
struct _qty1763;  // mut Elaborated std::unique_ptr<ExternalSourceStream>
struct _qty1764;  // mut TemplateSpecialization unique_ptr<v8::ScriptCompiler::ExternalSourceStream>
struct _qty1765;  // mut Record std::unique_ptr<v8::ScriptCompiler::ExternalSourceStream, std::default_delete<v8::ScriptCompiler::ExternalSourceStream> >
struct _qty1766;  // mut FunctionProto void (std::unique_ptr<ExternalSourceStream>, v8::ScriptCompiler::StreamedSource::Encoding)
struct _qty1767;  // mut FunctionProto void ()
struct _qty1768;  // mut Pointer internal::ScriptStreamingData *
struct _qty1769;  // mut Record v8::internal::ScriptStreamingData
struct _qty1770;  // mut FunctionProto internal::ScriptStreamingData *() const
struct _qty1771;  // mut Pointer const v8::ScriptCompiler::StreamedSource *
struct _qty1772;  // mut LValueReference const v8::ScriptCompiler::StreamedSource &
struct _qty1773;  // const Record v8::ScriptCompiler::StreamedSource
struct _qty1774;  // mut FunctionProto void (const v8::ScriptCompiler::StreamedSource &)
struct _qty1775;  // mut LValueReference v8::ScriptCompiler::StreamedSource &
struct _qty1776;  // mut FunctionProto v8::ScriptCompiler::StreamedSource &(const v8::ScriptCompiler::StreamedSource &)
struct _qty1777;  // mut Record v8::ScriptCompiler::ScriptStreamingTask
struct _qty1778;  // mut Pointer v8::ScriptCompiler::ScriptStreamingTask *
struct _qty1779;  // mut Enum v8::ScriptCompiler::CompileOptions
struct _qty1780;  // mut Enum v8::ScriptCompiler::NoCacheReason
struct _qty1781;  // mut TemplateSpecialization MaybeLocal<v8::UnboundScript>
struct _qty1782;  // mut FunctionProto MaybeLocal<v8::UnboundScript> (v8::Isolate *, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _qty1783;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1784;  // mut TemplateSpecialization MaybeLocal<v8::Script>
struct _qty1785;  // mut FunctionProto MaybeLocal<v8::Script> (Local<v8::Context>, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _qty1786;  // mut FunctionProto v8::ScriptCompiler::ScriptStreamingTask *(v8::Isolate *, v8::ScriptCompiler::StreamedSource *, v8::ScriptCompiler::CompileOptions)
struct _qty1787;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1788;  // mut TemplateSpecialization Local<v8::String>
struct _qty1789;  // mut TemplateSpecialization MaybeLocal<v8::Script>
struct _qty1790;  // mut FunctionProto MaybeLocal<v8::Script> (Local<v8::Context>, v8::ScriptCompiler::StreamedSource *, Local<v8::String>, const v8::ScriptOrigin &)
struct _qty1791;  // mut Typedef uint32_t
struct _qty1792;  // mut Builtin unsigned int
struct _qty1793;  // mut FunctionProto uint32_t ()
struct _qty1794;  // mut TemplateSpecialization MaybeLocal<v8::Module>
struct _qty1795;  // mut FunctionProto MaybeLocal<v8::Module> (v8::Isolate *, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _qty1796;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1797;  // mut Decayed Local<v8::String> *
struct _qty1798;  // mut Pointer Local<v8::String> *
struct _qty1799;  // mut Decayed Local<v8::Object> *
struct _qty1800;  // mut Pointer Local<v8::Object> *
struct _qty1801;  // mut TemplateSpecialization MaybeLocal<v8::Function>
struct _qty1802;  // mut FunctionProto MaybeLocal<v8::Function> (Local<v8::Context>, v8::ScriptCompiler::Source *, size_t, Local<v8::String> *, size_t, Local<v8::Object> *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason)
struct _qty1803;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty1804;  // mut FunctionProto v8::ScriptCompiler::CachedData *(Local<v8::UnboundScript>)
struct _qty1805;  // mut TemplateSpecialization Local<v8::UnboundModuleScript>
struct _qty1806;  // mut FunctionProto v8::ScriptCompiler::CachedData *(Local<v8::UnboundModuleScript>)
struct _qty1807;  // mut TemplateSpecialization Local<v8::Function>
struct _qty1808;  // mut FunctionProto v8::ScriptCompiler::CachedData *(Local<v8::Function>)
struct _qty1809;  // mut Record v8::Message
struct _qty1810;  // mut TemplateSpecialization Local<v8::String>
struct _qty1811;  // mut FunctionProto Local<v8::String> () const
struct _qty1812;  // mut Pointer const v8::Message *
struct _qty1813;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1814;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty1815;  // mut FunctionProto MaybeLocal<v8::String> (Local<v8::Context>) const
struct _qty1816;  // mut FunctionProto v8::ScriptOrigin () const
struct _qty1817;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1818;  // mut FunctionProto Local<v8::Value> () const
struct _qty1819;  // mut TemplateSpecialization Local<v8::StackTrace>
struct _qty1820;  // mut FunctionProto Local<v8::StackTrace> () const
struct _qty1821;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1822;  // mut TemplateSpecialization Maybe<int>
struct _qty1823;  // mut FunctionProto Maybe<int> (Local<v8::Context>) const
struct _qty1824;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1825;  // mut TemplateSpecialization Maybe<int>
struct _qty1826;  // mut FunctionProto Maybe<int> (Local<v8::Context>) const
struct _qty1827;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1828;  // mut TemplateSpecialization Maybe<int>
struct _qty1829;  // mut FunctionProto Maybe<int> (Local<v8::Context>) const
struct _qty1830;  // mut Pointer FILE *
struct _qty1831;  // mut Elaborated struct _iobuf
struct _qty1832;  // mut Record _iobuf
struct _qty1833;  // mut FunctionProto void (v8::Isolate *, FILE *)
struct _qty1834;  // mut Enum v8::StackTrace::StackTraceOptions
struct _qty1835;  // mut TemplateSpecialization Local<v8::StackFrame>
struct _qty1836;  // mut FunctionProto Local<v8::StackFrame> (v8::Isolate *, uint32_t) const
struct _qty1837;  // mut Pointer const v8::StackTrace *
struct _qty1838;  // mut TemplateSpecialization Local<v8::StackTrace>
struct _qty1839;  // mut FunctionProto Local<v8::StackTrace> (v8::Isolate *, int, v8::StackTrace::StackTraceOptions)
struct _qty1840;  // mut Pointer const v8::StackFrame *
struct _qty1841;  // mut TemplateSpecialization Local<v8::String>
struct _qty1842;  // mut FunctionProto Local<v8::String> () const
struct _qty1843;  // mut TemplateSpecialization Local<v8::String>
struct _qty1844;  // mut FunctionProto Local<v8::String> () const
struct _qty1845;  // mut TemplateSpecialization Local<v8::String>
struct _qty1846;  // mut FunctionProto Local<v8::String> () const
struct _qty1847;  // mut Enum v8::StateTag
struct _qty1848;  // mut Record v8::RegisterState
struct _qty1849;  // mut Pointer v8::RegisterState *
struct _qty1850;  // mut Record v8::SampleInfo
struct _qty1851;  // mut Record v8::MemoryRange
struct _qty1852;  // mut Pointer const void *
struct _qty1853;  // mut Record v8::JSEntryStub
struct _qty1854;  // mut Record v8::UnwindState
struct _qty1855;  // mut Record v8::JSON
struct _qty1856;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1857;  // mut TemplateSpecialization Local<v8::String>
struct _qty1858;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty1859;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::String>)
struct _qty1860;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1861;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1862;  // mut TemplateSpecialization Local<v8::String>
struct _qty1863;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty1864;  // mut FunctionProto MaybeLocal<v8::String> (Local<v8::Context>, Local<v8::Value>, Local<v8::String>)
struct _qty1865;  // mut Record v8::ValueSerializer
struct _qty1866;  // mut Record v8::ValueSerializer::Delegate
struct _qty1867;  // mut FunctionProto void ()
struct _qty1868;  // mut Pointer v8::ValueSerializer::Delegate *
struct _qty1869;  // mut TemplateSpecialization Local<v8::String>
struct _qty1870;  // mut FunctionProto void (Local<v8::String>)
struct _qty1871;  // mut TemplateSpecialization Local<v8::Object>
struct _qty1872;  // mut TemplateSpecialization Maybe<bool>
struct _qty1873;  // mut FunctionProto Maybe<bool> (v8::Isolate *, Local<v8::Object>)
struct _qty1874;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty1875;  // mut TemplateSpecialization Maybe<uint32_t>
struct _qty1876;  // mut FunctionProto Maybe<uint32_t> (v8::Isolate *, Local<v8::SharedArrayBuffer>)
struct _qty1877;  // mut TemplateSpecialization Local<v8::WasmModuleObject>
struct _qty1878;  // mut TemplateSpecialization Maybe<uint32_t>
struct _qty1879;  // mut FunctionProto Maybe<uint32_t> (v8::Isolate *, Local<v8::WasmModuleObject>)
struct _qty1880;  // mut Pointer size_t *
struct _qty1881;  // mut FunctionProto void *(void *, size_t, size_t *)
struct _qty1882;  // mut FunctionProto void (void *)
struct _qty1883;  // mut LValueReference const v8::ValueSerializer::Delegate &
struct _qty1884;  // const Record v8::ValueSerializer::Delegate
struct _qty1885;  // mut LValueReference v8::ValueSerializer::Delegate &
struct _qty1886;  // mut FunctionProto v8::ValueSerializer::Delegate &(const v8::ValueSerializer::Delegate &)
struct _qty1887;  // mut Pointer v8::ValueSerializer *
struct _qty1888;  // mut FunctionProto void (v8::Isolate *, v8::ValueSerializer::Delegate *)
struct _qty1889;  // mut FunctionProto void ()
struct _qty1890;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1891;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1892;  // mut TemplateSpecialization Maybe<bool>
struct _qty1893;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty1894;  // mut Elaborated std::pair<uint8_t *, size_t>
struct _qty1895;  // mut TemplateSpecialization pair<uint8_t *, size_t>
struct _qty1896;  // mut Record std::pair<unsigned char *, unsigned long long>
struct _qty1897;  // mut FunctionProto std::pair<uint8_t *, size_t> ()
struct _qty1898;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty1899;  // mut FunctionProto void (uint32_t, Local<v8::ArrayBuffer>)
struct _qty1900;  // mut FunctionProto void (bool)
struct _qty1901;  // mut FunctionProto void (uint32_t)
struct _qty1902;  // mut Typedef uint64_t
struct _qty1903;  // mut FunctionProto void (uint64_t)
struct _qty1904;  // mut Builtin double
struct _qty1905;  // mut FunctionProto void (double)
struct _qty1906;  // mut FunctionProto void (const void *, size_t)
struct _qty1907;  // mut LValueReference const v8::ValueSerializer &
struct _qty1908;  // const Record v8::ValueSerializer
struct _qty1909;  // mut FunctionProto void (const v8::ValueSerializer &)
struct _qty1910;  // mut Record v8::ValueDeserializer
struct _qty1911;  // mut Record v8::ValueDeserializer::Delegate
struct _qty1912;  // mut FunctionProto void ()
struct _qty1913;  // mut Pointer v8::ValueDeserializer::Delegate *
struct _qty1914;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty1915;  // mut FunctionProto MaybeLocal<v8::Object> (v8::Isolate *)
struct _qty1916;  // mut TemplateSpecialization MaybeLocal<v8::WasmModuleObject>
struct _qty1917;  // mut FunctionProto MaybeLocal<v8::WasmModuleObject> (v8::Isolate *, uint32_t)
struct _qty1918;  // mut TemplateSpecialization MaybeLocal<v8::SharedArrayBuffer>
struct _qty1919;  // mut FunctionProto MaybeLocal<v8::SharedArrayBuffer> (v8::Isolate *, uint32_t)
struct _qty1920;  // mut LValueReference const v8::ValueDeserializer::Delegate &
struct _qty1921;  // const Record v8::ValueDeserializer::Delegate
struct _qty1922;  // mut LValueReference v8::ValueDeserializer::Delegate &
struct _qty1923;  // mut FunctionProto v8::ValueDeserializer::Delegate &(const v8::ValueDeserializer::Delegate &)
struct _qty1924;  // mut FunctionProto void (v8::Isolate *, const uint8_t *, size_t)
struct _qty1925;  // mut Pointer v8::ValueDeserializer *
struct _qty1926;  // mut FunctionProto void (v8::Isolate *, const uint8_t *, size_t, v8::ValueDeserializer::Delegate *)
struct _qty1927;  // mut FunctionProto void ()
struct _qty1928;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1929;  // mut TemplateSpecialization Maybe<bool>
struct _qty1930;  // mut FunctionProto Maybe<bool> (Local<v8::Context>)
struct _qty1931;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1932;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty1933;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>)
struct _qty1934;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty1935;  // mut FunctionProto void (uint32_t, Local<v8::ArrayBuffer>)
struct _qty1936;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty1937;  // mut FunctionProto void (uint32_t, Local<v8::SharedArrayBuffer>)
struct _qty1938;  // mut FunctionProto uint32_t () const
struct _qty1939;  // mut Pointer const v8::ValueDeserializer *
struct _qty1940;  // mut Pointer uint32_t *
struct _qty1941;  // mut FunctionProto bool (uint32_t *)
struct _qty1942;  // mut Pointer uint64_t *
struct _qty1943;  // mut FunctionProto bool (uint64_t *)
struct _qty1944;  // mut Pointer double *
struct _qty1945;  // mut FunctionProto bool (double *)
struct _qty1946;  // mut Pointer const void **
struct _qty1947;  // mut FunctionProto bool (size_t, const void **)
struct _qty1948;  // mut LValueReference const v8::ValueDeserializer &
struct _qty1949;  // const Record v8::ValueDeserializer
struct _qty1950;  // mut FunctionProto void (const v8::ValueDeserializer &)
struct _qty1951;  // mut Pointer const v8::Value *
struct _qty1952;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1953;  // mut TemplateSpecialization MaybeLocal<v8::BigInt>
struct _qty1954;  // mut FunctionProto MaybeLocal<v8::BigInt> (Local<v8::Context>) const
struct _qty1955;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1956;  // mut TemplateSpecialization MaybeLocal<v8::Number>
struct _qty1957;  // mut FunctionProto MaybeLocal<v8::Number> (Local<v8::Context>) const
struct _qty1958;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1959;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty1960;  // mut FunctionProto MaybeLocal<v8::String> (Local<v8::Context>) const
struct _qty1961;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1962;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty1963;  // mut FunctionProto MaybeLocal<v8::String> (Local<v8::Context>) const
struct _qty1964;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1965;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty1966;  // mut FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>) const
struct _qty1967;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1968;  // mut TemplateSpecialization MaybeLocal<v8::Integer>
struct _qty1969;  // mut FunctionProto MaybeLocal<v8::Integer> (Local<v8::Context>) const
struct _qty1970;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1971;  // mut TemplateSpecialization MaybeLocal<v8::Uint32>
struct _qty1972;  // mut FunctionProto MaybeLocal<v8::Uint32> (Local<v8::Context>) const
struct _qty1973;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1974;  // mut TemplateSpecialization MaybeLocal<v8::Int32>
struct _qty1975;  // mut FunctionProto MaybeLocal<v8::Int32> (Local<v8::Context>) const
struct _qty1976;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty1977;  // mut FunctionProto Local<v8::Boolean> (v8::Isolate *) const
struct _qty1978;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1979;  // mut TemplateSpecialization MaybeLocal<v8::Uint32>
struct _qty1980;  // mut FunctionProto MaybeLocal<v8::Uint32> (Local<v8::Context>) const
struct _qty1981;  // mut FunctionProto bool (v8::Isolate *) const
struct _qty1982;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1983;  // mut TemplateSpecialization Maybe<double>
struct _qty1984;  // mut FunctionProto Maybe<double> (Local<v8::Context>) const
struct _qty1985;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1986;  // mut TemplateSpecialization Maybe<int64_t>
struct _qty1987;  // mut FunctionProto Maybe<int64_t> (Local<v8::Context>) const
struct _qty1988;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1989;  // mut TemplateSpecialization Maybe<uint32_t>
struct _qty1990;  // mut FunctionProto Maybe<uint32_t> (Local<v8::Context>) const
struct _qty1991;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1992;  // mut TemplateSpecialization Maybe<int32_t>
struct _qty1993;  // mut FunctionProto Maybe<int32_t> (Local<v8::Context>) const
struct _qty1994;  // mut TemplateSpecialization Local<v8::Context>
struct _qty1995;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1996;  // mut TemplateSpecialization Maybe<bool>
struct _qty1997;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>) const
struct _qty1998;  // mut TemplateSpecialization Local<v8::Value>
struct _qty1999;  // mut FunctionProto bool (Local<v8::Value>) const
struct _qty2000;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2001;  // mut FunctionProto bool (Local<v8::Value>) const
struct _qty2002;  // mut TemplateTypeParm T
struct _qty2003;  // mut Pointer T *
struct _qty2004;  // mut Pointer v8::Value *
struct _qty2005;  // mut FunctionProto v8::Value *(T *)
struct _qty2006;  // mut TemplateSpecialization Local<v8::String>
struct _qty2007;  // mut FunctionProto Local<v8::String> (v8::Isolate *)
struct _qty2008;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2009;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2010;  // mut TemplateSpecialization Maybe<bool>
struct _qty2011;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Object>)
struct _qty2012;  // mut Pointer const v8::Boolean *
struct _qty2013;  // mut Pointer v8::Value *
struct _qty2014;  // mut Pointer v8::Boolean *
struct _qty2015;  // mut FunctionProto v8::Boolean *(v8::Value *)
struct _qty2016;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty2017;  // mut FunctionProto Local<v8::Boolean> (v8::Isolate *, bool)
struct _qty2018;  // mut Pointer v8::Name *
struct _qty2019;  // mut FunctionProto v8::Name *(v8::Value *)
struct _qty2020;  // mut Enum v8::NewStringType
struct _qty2021;  // mut Enum v8::String::Encoding
struct _qty2022;  // mut Pointer const v8::String *
struct _qty2023;  // mut FunctionProto int (v8::Isolate *) const
struct _qty2024;  // mut Enum v8::String::WriteOptions
struct _qty2025;  // mut Pointer uint16_t *
struct _qty2026;  // mut FunctionProto int (v8::Isolate *, uint16_t *, int, int, int) const
struct _qty2027;  // mut Pointer uint8_t *
struct _qty2028;  // mut FunctionProto int (v8::Isolate *, uint8_t *, int, int, int) const
struct _qty2029;  // mut Pointer char *
struct _qty2030;  // mut Pointer int *
struct _qty2031;  // mut FunctionProto int (v8::Isolate *, char *, int, int *, int) const
struct _qty2032;  // mut TemplateSpecialization Local<v8::String>
struct _qty2033;  // mut FunctionProto Local<v8::String> (v8::Isolate *)
struct _qty2034;  // mut Record v8::String::ExternalStringResourceBase
struct _qty2035;  // mut Pointer v8::String::ExternalStringResourceBase *
struct _qty2036;  // mut Pointer const v8::String::ExternalStringResourceBase *
struct _qty2037;  // mut LValueReference const v8::String::ExternalStringResourceBase &
struct _qty2038;  // const Record v8::String::ExternalStringResourceBase
struct _qty2039;  // mut FunctionProto void (const v8::String::ExternalStringResourceBase &)
struct _qty2040;  // mut FunctionProto void ()
struct _qty2041;  // mut FunctionProto void () const
struct _qty2042;  // mut Record v8::String::ExternalStringResource
struct _qty2043;  // mut Pointer v8::String::ExternalStringResource *
struct _qty2044;  // mut Pointer const uint16_t *
struct _qty2045;  // mut FunctionProto const uint16_t *() const
struct _qty2046;  // mut Pointer const v8::String::ExternalStringResource *
struct _qty2047;  // mut FunctionProto size_t () const
struct _qty2048;  // mut FunctionProto void ()
struct _qty2049;  // mut LValueReference const v8::String::ExternalStringResource &
struct _qty2050;  // const Record v8::String::ExternalStringResource
struct _qty2051;  // mut FunctionProto void (const v8::String::ExternalStringResource &)
struct _qty2052;  // mut LValueReference v8::String::ExternalStringResource &
struct _qty2053;  // mut FunctionProto v8::String::ExternalStringResource &(const v8::String::ExternalStringResource &)
struct _qty2054;  // mut Record v8::String::ExternalOneByteStringResource
struct _qty2055;  // mut Pointer v8::String::ExternalOneByteStringResource *
struct _qty2056;  // mut FunctionProto const char *() const
struct _qty2057;  // mut Pointer const v8::String::ExternalOneByteStringResource *
struct _qty2058;  // mut FunctionProto void ()
struct _qty2059;  // mut LValueReference const v8::String::ExternalOneByteStringResource &
struct _qty2060;  // const Record v8::String::ExternalOneByteStringResource
struct _qty2061;  // mut FunctionProto void (const v8::String::ExternalOneByteStringResource &)
struct _qty2062;  // mut LValueReference v8::String::ExternalOneByteStringResource &
struct _qty2063;  // mut FunctionProto v8::String::ExternalOneByteStringResource &(const v8::String::ExternalOneByteStringResource &)
struct _qty2064;  // mut Pointer v8::String::Encoding *
struct _qty2065;  // mut FunctionProto v8::String::ExternalStringResourceBase *(v8::String::Encoding *) const
struct _qty2066;  // mut FunctionProto v8::String::ExternalStringResource *() const
struct _qty2067;  // mut FunctionProto const v8::String::ExternalOneByteStringResource *() const
struct _qty2068;  // mut Pointer v8::String *
struct _qty2069;  // mut FunctionProto v8::String *(v8::Value *)
struct _qty2070;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty2071;  // mut FunctionProto MaybeLocal<v8::String> (v8::Isolate *, const char *, v8::NewStringType, int)
struct _qty2072;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty2073;  // mut FunctionProto MaybeLocal<v8::String> (v8::Isolate *, const uint8_t *, v8::NewStringType, int)
struct _qty2074;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty2075;  // mut FunctionProto MaybeLocal<v8::String> (v8::Isolate *, const uint16_t *, v8::NewStringType, int)
struct _qty2076;  // mut TemplateSpecialization Local<v8::String>
struct _qty2077;  // mut TemplateSpecialization Local<v8::String>
struct _qty2078;  // mut TemplateSpecialization Local<v8::String>
struct _qty2079;  // mut FunctionProto Local<v8::String> (v8::Isolate *, Local<v8::String>, Local<v8::String>)
struct _qty2080;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty2081;  // mut FunctionProto MaybeLocal<v8::String> (v8::Isolate *, v8::String::ExternalStringResource *)
struct _qty2082;  // mut FunctionProto bool (v8::String::ExternalStringResource *)
struct _qty2083;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty2084;  // mut FunctionProto MaybeLocal<v8::String> (v8::Isolate *, v8::String::ExternalOneByteStringResource *)
struct _qty2085;  // mut FunctionProto bool (v8::String::ExternalOneByteStringResource *)
struct _qty2086;  // mut TemplateSpecialization Local<v8::String>
struct _qty2087;  // mut FunctionProto bool (Local<v8::String>)
struct _qty2088;  // mut Record v8::String::Utf8Value
struct _qty2089;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2090;  // mut FunctionProto void (v8::Isolate *, Local<v8::Value>)
struct _qty2091;  // mut Pointer v8::String::Utf8Value *
struct _qty2092;  // mut FunctionProto void ()
struct _qty2093;  // mut FunctionProto char *()
struct _qty2094;  // mut Pointer const v8::String::Utf8Value *
struct _qty2095;  // mut LValueReference const v8::String::Utf8Value &
struct _qty2096;  // const Record v8::String::Utf8Value
struct _qty2097;  // mut FunctionProto void (const v8::String::Utf8Value &)
struct _qty2098;  // mut Record v8::String::Value
struct _qty2099;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2100;  // mut FunctionProto void (v8::Isolate *, Local<v8::Value>)
struct _qty2101;  // mut Pointer v8::String::Value *
struct _qty2102;  // mut FunctionProto void ()
struct _qty2103;  // mut FunctionProto uint16_t *()
struct _qty2104;  // mut Pointer const v8::String::Value *
struct _qty2105;  // mut LValueReference const v8::String::Value &
struct _qty2106;  // const Record v8::String::Value
struct _qty2107;  // mut FunctionProto void (const v8::String::Value &)
struct _qty2108;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2109;  // mut FunctionProto Local<v8::Value> () const
struct _qty2110;  // mut Pointer const v8::Symbol *
struct _qty2111;  // mut TemplateSpecialization Local<v8::String>
struct _qty2112;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2113;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *, Local<v8::String>)
struct _qty2114;  // mut TemplateSpecialization Local<v8::String>
struct _qty2115;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2116;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *, Local<v8::String>)
struct _qty2117;  // mut TemplateSpecialization Local<v8::String>
struct _qty2118;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2119;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *, Local<v8::String>)
struct _qty2120;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2121;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2122;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2123;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2124;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2125;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2126;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2127;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2128;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2129;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2130;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2131;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2132;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2133;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2134;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2135;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2136;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2137;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2138;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2139;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2140;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2141;  // mut FunctionProto Local<v8::Symbol> (v8::Isolate *)
struct _qty2142;  // mut Pointer v8::Symbol *
struct _qty2143;  // mut FunctionProto v8::Symbol *(v8::Value *)
struct _qty2144;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2145;  // mut FunctionProto Local<v8::Value> () const
struct _qty2146;  // mut Pointer const v8::Private *
struct _qty2147;  // mut TemplateSpecialization Local<v8::String>
struct _qty2148;  // mut TemplateSpecialization Local<v8::Private>
struct _qty2149;  // mut FunctionProto Local<v8::Private> (v8::Isolate *, Local<v8::String>)
struct _qty2150;  // mut TemplateSpecialization Local<v8::String>
struct _qty2151;  // mut TemplateSpecialization Local<v8::Private>
struct _qty2152;  // mut FunctionProto Local<v8::Private> (v8::Isolate *, Local<v8::String>)
struct _qty2153;  // mut Pointer v8::Data *
struct _qty2154;  // mut Pointer v8::Private *
struct _qty2155;  // mut FunctionProto v8::Private *(v8::Data *)
struct _qty2156;  // mut FunctionProto double () const
struct _qty2157;  // mut Pointer const v8::Number *
struct _qty2158;  // mut TemplateSpecialization Local<v8::Number>
struct _qty2159;  // mut FunctionProto Local<v8::Number> (v8::Isolate *, double)
struct _qty2160;  // mut Pointer v8::Number *
struct _qty2161;  // mut FunctionProto v8::Number *(v8::Value *)
struct _qty2162;  // mut Typedef int32_t
struct _qty2163;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty2164;  // mut FunctionProto Local<v8::Integer> (v8::Isolate *, int32_t)
struct _qty2165;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty2166;  // mut FunctionProto Local<v8::Integer> (v8::Isolate *, uint32_t)
struct _qty2167;  // mut Typedef int64_t
struct _qty2168;  // mut Builtin long long
struct _qty2169;  // mut FunctionProto int64_t () const
struct _qty2170;  // mut Pointer const v8::Integer *
struct _qty2171;  // mut Pointer v8::Integer *
struct _qty2172;  // mut FunctionProto v8::Integer *(v8::Value *)
struct _qty2173;  // mut FunctionProto int32_t () const
struct _qty2174;  // mut Pointer const v8::Int32 *
struct _qty2175;  // mut Pointer v8::Int32 *
struct _qty2176;  // mut FunctionProto v8::Int32 *(v8::Value *)
struct _qty2177;  // mut Pointer const v8::Uint32 *
struct _qty2178;  // mut Pointer v8::Uint32 *
struct _qty2179;  // mut FunctionProto v8::Uint32 *(v8::Value *)
struct _qty2180;  // mut TemplateSpecialization Local<v8::BigInt>
struct _qty2181;  // mut FunctionProto Local<v8::BigInt> (v8::Isolate *, int64_t)
struct _qty2182;  // mut TemplateSpecialization Local<v8::BigInt>
struct _qty2183;  // mut FunctionProto Local<v8::BigInt> (v8::Isolate *, uint64_t)
struct _qty2184;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2185;  // mut Pointer const uint64_t *
struct _qty2186;  // mut TemplateSpecialization MaybeLocal<v8::BigInt>
struct _qty2187;  // mut FunctionProto MaybeLocal<v8::BigInt> (Local<v8::Context>, int, int, const uint64_t *)
struct _qty2188;  // mut Pointer bool *
struct _qty2189;  // mut FunctionProto uint64_t (bool *) const
struct _qty2190;  // mut Pointer const v8::BigInt *
struct _qty2191;  // mut FunctionProto int64_t (bool *) const
struct _qty2192;  // mut FunctionProto void (int *, int *, uint64_t *) const
struct _qty2193;  // mut Pointer v8::BigInt *
struct _qty2194;  // mut FunctionProto v8::BigInt *(v8::Value *)
struct _qty2195;  // mut Enum v8::PropertyAttribute
struct _qty2196;  // mut Typedef v8::AccessorGetterCallback
struct _qty2197;  // mut TemplateSpecialization Local<v8::String>
struct _qty2198;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty2199;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty2200;  // mut FunctionProto void (Local<v8::String>, const PropertyCallbackInfo<v8::Value> &)
struct _qty2201;  // mut Pointer void (*)(Local<v8::String>, const PropertyCallbackInfo<v8::Value> &)
struct _qty2202;  // mut Typedef v8::AccessorNameGetterCallback
struct _qty2203;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2204;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty2205;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty2206;  // mut FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _qty2207;  // mut Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _qty2208;  // mut Typedef v8::AccessorSetterCallback
struct _qty2209;  // mut TemplateSpecialization Local<v8::String>
struct _qty2210;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2211;  // mut LValueReference const PropertyCallbackInfo<void> &
struct _qty2212;  // const TemplateSpecialization PropertyCallbackInfo<void>
struct _qty2213;  // mut FunctionProto void (Local<v8::String>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _qty2214;  // mut Pointer void (*)(Local<v8::String>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _qty2215;  // mut Typedef v8::AccessorNameSetterCallback
struct _qty2216;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2217;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2218;  // mut LValueReference const PropertyCallbackInfo<void> &
struct _qty2219;  // const TemplateSpecialization PropertyCallbackInfo<void>
struct _qty2220;  // mut FunctionProto void (Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _qty2221;  // mut Pointer void (*)(Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<void> &)
struct _qty2222;  // mut Enum v8::AccessControl
struct _qty2223;  // mut Enum v8::PropertyFilter
struct _qty2224;  // mut Enum v8::SideEffectType
struct _qty2225;  // mut Enum v8::KeyCollectionMode
struct _qty2226;  // mut Enum v8::IndexFilter
struct _qty2227;  // mut Enum v8::KeyConversionMode
struct _qty2228;  // mut Enum v8::IntegrityLevel
struct _qty2229;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2230;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2231;  // mut FunctionProto bool (Local<v8::Value>, Local<v8::Value>)
struct _qty2232;  // mut Pointer v8::Object *
struct _qty2233;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2234;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2235;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2236;  // mut TemplateSpecialization Maybe<bool>
struct _qty2237;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>, Local<v8::Value>)
struct _qty2238;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2239;  // mut FunctionProto bool (uint32_t, Local<v8::Value>)
struct _qty2240;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2241;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2242;  // mut TemplateSpecialization Maybe<bool>
struct _qty2243;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t, Local<v8::Value>)
struct _qty2244;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2245;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2246;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2247;  // mut TemplateSpecialization Maybe<bool>
struct _qty2248;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, Local<v8::Value>)
struct _qty2249;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2250;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2251;  // mut TemplateSpecialization Maybe<bool>
struct _qty2252;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t, Local<v8::Value>)
struct _qty2253;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2254;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2255;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2256;  // mut TemplateSpecialization Maybe<bool>
struct _qty2257;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, Local<v8::Value>, v8::PropertyAttribute)
struct _qty2258;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2259;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2260;  // mut LValueReference v8::PropertyDescriptor &
struct _qty2261;  // mut TemplateSpecialization Maybe<bool>
struct _qty2262;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::PropertyDescriptor &)
struct _qty2263;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2264;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2265;  // mut FunctionProto Local<v8::Value> (Local<v8::Value>)
struct _qty2266;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2267;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2268;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2269;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>)
struct _qty2270;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2271;  // mut FunctionProto Local<v8::Value> (uint32_t)
struct _qty2272;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2273;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2274;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, uint32_t)
struct _qty2275;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2276;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2277;  // mut TemplateSpecialization Maybe<v8::PropertyAttribute>
struct _qty2278;  // mut FunctionProto Maybe<v8::PropertyAttribute> (Local<v8::Context>, Local<v8::Value>)
struct _qty2279;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2280;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2281;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2282;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Name>)
struct _qty2283;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2284;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2285;  // mut TemplateSpecialization Maybe<bool>
struct _qty2286;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2287;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2288;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2289;  // mut TemplateSpecialization Maybe<bool>
struct _qty2290;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2291;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2292;  // mut TemplateSpecialization Maybe<bool>
struct _qty2293;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _qty2294;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2295;  // mut TemplateSpecialization Maybe<bool>
struct _qty2296;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _qty2297;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2298;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2299;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2300;  // mut TemplateSpecialization Maybe<bool>
struct _qty2301;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, MaybeLocal<v8::Value>, v8::AccessControl, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _qty2302;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2303;  // mut TemplateSpecialization Local<v8::Function>
struct _qty2304;  // mut TemplateSpecialization Local<v8::Function>
struct _qty2305;  // mut FunctionProto void (Local<v8::Name>, Local<v8::Function>, Local<v8::Function>, v8::PropertyAttribute, v8::AccessControl)
struct _qty2306;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2307;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2308;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2309;  // mut TemplateSpecialization Maybe<bool>
struct _qty2310;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _qty2311;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2312;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2313;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2314;  // mut TemplateSpecialization Maybe<bool>
struct _qty2315;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>, v8::AccessorNameGetterCallback, Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _qty2316;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2317;  // mut TemplateSpecialization Local<v8::Private>
struct _qty2318;  // mut TemplateSpecialization Maybe<bool>
struct _qty2319;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Private>)
struct _qty2320;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2321;  // mut TemplateSpecialization Local<v8::Private>
struct _qty2322;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2323;  // mut TemplateSpecialization Maybe<bool>
struct _qty2324;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Private>, Local<v8::Value>)
struct _qty2325;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2326;  // mut TemplateSpecialization Local<v8::Private>
struct _qty2327;  // mut TemplateSpecialization Maybe<bool>
struct _qty2328;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Private>)
struct _qty2329;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2330;  // mut TemplateSpecialization Local<v8::Private>
struct _qty2331;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2332;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Private>)
struct _qty2333;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2334;  // mut TemplateSpecialization MaybeLocal<v8::Array>
struct _qty2335;  // mut FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>)
struct _qty2336;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2337;  // mut TemplateSpecialization MaybeLocal<v8::Array>
struct _qty2338;  // mut FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>, v8::KeyCollectionMode, v8::PropertyFilter, v8::IndexFilter, v8::KeyConversionMode)
struct _qty2339;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2340;  // mut TemplateSpecialization MaybeLocal<v8::Array>
struct _qty2341;  // mut FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>)
struct _qty2342;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2343;  // mut TemplateSpecialization MaybeLocal<v8::Array>
struct _qty2344;  // mut FunctionProto MaybeLocal<v8::Array> (Local<v8::Context>, v8::PropertyFilter, v8::KeyConversionMode)
struct _qty2345;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2346;  // mut FunctionProto Local<v8::Value> ()
struct _qty2347;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2348;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2349;  // mut TemplateSpecialization Maybe<bool>
struct _qty2350;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2351;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty2352;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2353;  // mut FunctionProto Local<v8::Object> (Local<v8::FunctionTemplate>)
struct _qty2354;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2355;  // mut TemplateSpecialization MaybeLocal<v8::String>
struct _qty2356;  // mut FunctionProto MaybeLocal<v8::String> (Local<v8::Context>)
struct _qty2357;  // mut TemplateSpecialization Local<v8::String>
struct _qty2358;  // mut FunctionProto Local<v8::String> ()
struct _qty2359;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2360;  // mut TemplateSpecialization Maybe<bool>
struct _qty2361;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, v8::IntegrityLevel)
struct _qty2362;  // mut LValueReference const PersistentBase<v8::Object> &
struct _qty2363;  // const TemplateSpecialization PersistentBase<v8::Object>
struct _qty2364;  // mut FunctionProto int (const PersistentBase<v8::Object> &)
struct _qty2365;  // mut LValueReference const TracedGlobal<v8::Object> &
struct _qty2366;  // const TemplateSpecialization TracedGlobal<v8::Object>
struct _qty2367;  // mut FunctionProto int (const TracedGlobal<v8::Object> &)
struct _qty2368;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2369;  // mut FunctionProto Local<v8::Value> (int)
struct _qty2370;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2371;  // mut FunctionProto void (int, Local<v8::Value>)
struct _qty2372;  // mut FunctionProto void *(int)
struct _qty2373;  // mut LValueReference const PersistentBase<v8::Object> &
struct _qty2374;  // const TemplateSpecialization PersistentBase<v8::Object>
struct _qty2375;  // mut FunctionProto void *(const PersistentBase<v8::Object> &, int)
struct _qty2376;  // mut LValueReference const TracedGlobal<v8::Object> &
struct _qty2377;  // const TemplateSpecialization TracedGlobal<v8::Object>
struct _qty2378;  // mut FunctionProto void *(const TracedGlobal<v8::Object> &, int)
struct _qty2379;  // mut FunctionProto void (int, void *)
struct _qty2380;  // mut Decayed int *
struct _qty2381;  // mut Decayed void **
struct _qty2382;  // mut FunctionProto void (int, int *, void **)
struct _qty2383;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2384;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2385;  // mut TemplateSpecialization Maybe<bool>
struct _qty2386;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>)
struct _qty2387;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2388;  // mut TemplateSpecialization Maybe<bool>
struct _qty2389;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _qty2390;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2391;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2392;  // mut TemplateSpecialization Maybe<bool>
struct _qty2393;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>)
struct _qty2394;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2395;  // mut TemplateSpecialization Maybe<bool>
struct _qty2396;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, uint32_t)
struct _qty2397;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2398;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2399;  // mut TemplateSpecialization Maybe<bool>
struct _qty2400;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Name>)
struct _qty2401;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2402;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2403;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2404;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Name>)
struct _qty2405;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2406;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2407;  // mut TemplateSpecialization Maybe<v8::PropertyAttribute>
struct _qty2408;  // mut FunctionProto Maybe<v8::PropertyAttribute> (Local<v8::Context>, Local<v8::Name>)
struct _qty2409;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2410;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2411;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2412;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Name>)
struct _qty2413;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2414;  // mut TemplateSpecialization Local<v8::Name>
struct _qty2415;  // mut TemplateSpecialization Maybe<v8::PropertyAttribute>
struct _qty2416;  // mut FunctionProto Maybe<v8::PropertyAttribute> (Local<v8::Context>, Local<v8::Name>)
struct _qty2417;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2418;  // mut FunctionProto Local<v8::Object> ()
struct _qty2419;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2420;  // mut FunctionProto Local<v8::Context> ()
struct _qty2421;  // mut LValueReference const PersistentBase<v8::Object> &
struct _qty2422;  // const TemplateSpecialization PersistentBase<v8::Object>
struct _qty2423;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2424;  // mut FunctionProto Local<v8::Context> (const PersistentBase<v8::Object> &)
struct _qty2425;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2426;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2427;  // mut Decayed Local<v8::Value> *
struct _qty2428;  // mut Pointer Local<v8::Value> *
struct _qty2429;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2430;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>, int, Local<v8::Value> *)
struct _qty2431;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2432;  // mut Decayed Local<v8::Value> *
struct _qty2433;  // mut Pointer Local<v8::Value> *
struct _qty2434;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2435;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, int, Local<v8::Value> *)
struct _qty2436;  // mut FunctionProto v8::Isolate *()
struct _qty2437;  // mut TemplateSpecialization MaybeLocal<v8::Array>
struct _qty2438;  // mut FunctionProto MaybeLocal<v8::Array> (bool *)
struct _qty2439;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2440;  // mut FunctionProto Local<v8::Object> (v8::Isolate *)
struct _qty2441;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2442;  // mut Pointer Local<v8::Name> *
struct _qty2443;  // mut Pointer Local<v8::Value> *
struct _qty2444;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2445;  // mut FunctionProto Local<v8::Object> (v8::Isolate *, Local<v8::Value>, Local<v8::Name> *, Local<v8::Value> *, size_t)
struct _qty2446;  // mut FunctionProto v8::Object *(v8::Value *)
struct _qty2447;  // mut Pointer const v8::Array *
struct _qty2448;  // mut TemplateSpecialization Local<v8::Array>
struct _qty2449;  // mut FunctionProto Local<v8::Array> (v8::Isolate *, int)
struct _qty2450;  // mut Pointer Local<v8::Value> *
struct _qty2451;  // mut TemplateSpecialization Local<v8::Array>
struct _qty2452;  // mut FunctionProto Local<v8::Array> (v8::Isolate *, Local<v8::Value> *, size_t)
struct _qty2453;  // mut Pointer v8::Array *
struct _qty2454;  // mut FunctionProto v8::Array *(v8::Value *)
struct _qty2455;  // mut Record v8::Map
struct _qty2456;  // mut Pointer const v8::Map *
struct _qty2457;  // mut Pointer v8::Map *
struct _qty2458;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2459;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2460;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2461;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>)
struct _qty2462;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2463;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2464;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2465;  // mut TemplateSpecialization MaybeLocal<v8::Map>
struct _qty2466;  // mut FunctionProto MaybeLocal<v8::Map> (Local<v8::Context>, Local<v8::Value>, Local<v8::Value>)
struct _qty2467;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2468;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2469;  // mut TemplateSpecialization Maybe<bool>
struct _qty2470;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2471;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2472;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2473;  // mut TemplateSpecialization Maybe<bool>
struct _qty2474;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2475;  // mut TemplateSpecialization Local<v8::Array>
struct _qty2476;  // mut FunctionProto Local<v8::Array> () const
struct _qty2477;  // mut TemplateSpecialization Local<v8::Map>
struct _qty2478;  // mut FunctionProto Local<v8::Map> (v8::Isolate *)
struct _qty2479;  // mut FunctionProto v8::Map *(v8::Value *)
struct _qty2480;  // mut Record v8::Set
struct _qty2481;  // mut Pointer const v8::Set *
struct _qty2482;  // mut Pointer v8::Set *
struct _qty2483;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2484;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2485;  // mut TemplateSpecialization MaybeLocal<v8::Set>
struct _qty2486;  // mut FunctionProto MaybeLocal<v8::Set> (Local<v8::Context>, Local<v8::Value>)
struct _qty2487;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2488;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2489;  // mut TemplateSpecialization Maybe<bool>
struct _qty2490;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2491;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2492;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2493;  // mut TemplateSpecialization Maybe<bool>
struct _qty2494;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2495;  // mut TemplateSpecialization Local<v8::Array>
struct _qty2496;  // mut FunctionProto Local<v8::Array> () const
struct _qty2497;  // mut TemplateSpecialization Local<v8::Set>
struct _qty2498;  // mut FunctionProto Local<v8::Set> (v8::Isolate *)
struct _qty2499;  // mut FunctionProto v8::Set *(v8::Value *)
struct _qty2500;  // mut TemplateTypeParm T
struct _qty2501;  // mut TemplateTypeParm S
struct _qty2502;  // mut LValueReference const ReturnValue<S> &
struct _qty2503;  // const TemplateSpecialization ReturnValue<S>
struct _qty2504;  // mut TemplateSpecialization ReturnValue<S>
struct _qty2505;  // mut FunctionProto void (const ReturnValue<S> &)
struct _qty2506;  // mut Pointer ReturnValue<T> *
struct _qty2507;  // mut TemplateTypeParm S
struct _qty2508;  // mut LValueReference const Global<S> &
struct _qty2509;  // const TemplateSpecialization Global<S>
struct _qty2510;  // mut TemplateSpecialization Global<S>
struct _qty2511;  // mut FunctionProto void (const Global<S> &)
struct _qty2512;  // mut TemplateTypeParm S
struct _qty2513;  // mut LValueReference const TracedGlobal<S> &
struct _qty2514;  // const TemplateSpecialization TracedGlobal<S>
struct _qty2515;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty2516;  // mut FunctionProto void (const TracedGlobal<S> &)
struct _qty2517;  // mut TemplateTypeParm S
struct _qty2518;  // const TemplateSpecialization Local<S>
struct _qty2519;  // mut TemplateSpecialization Local<S>
struct _qty2520;  // mut FunctionProto void (const Local<S>)
struct _qty2521;  // mut FunctionProto void (int32_t)
struct _qty2522;  // mut Pointer const ReturnValue<T> *
struct _qty2523;  // mut TemplateTypeParm S
struct _qty2524;  // mut Pointer S *
struct _qty2525;  // mut FunctionProto void (S *)
struct _qty2526;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2527;  // mut FunctionProto Local<v8::Value> () const
struct _qty2528;  // mut TemplateTypeParm T
struct _qty2529;  // mut Pointer const FunctionCallbackInfo<T> *
struct _qty2530;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2531;  // mut FunctionProto Local<v8::Value> (int) const
struct _qty2532;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2533;  // mut FunctionProto Local<v8::Object> () const
struct _qty2534;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2535;  // mut FunctionProto Local<v8::Object> () const
struct _qty2536;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2537;  // mut FunctionProto Local<v8::Value> () const
struct _qty2538;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2539;  // mut FunctionProto Local<v8::Value> () const
struct _qty2540;  // mut TemplateSpecialization ReturnValue<T>
struct _qty2541;  // mut FunctionProto ReturnValue<T> () const
struct _qty2542;  // mut FunctionProto void (internal::Address *, internal::Address *, int)
struct _qty2543;  // mut Pointer FunctionCallbackInfo<T> *
struct _qty2544;  // mut TemplateTypeParm T
struct _qty2545;  // mut Pointer const PropertyCallbackInfo<T> *
struct _qty2546;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2547;  // mut FunctionProto Local<v8::Value> () const
struct _qty2548;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2549;  // mut FunctionProto Local<v8::Object> () const
struct _qty2550;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2551;  // mut FunctionProto Local<v8::Object> () const
struct _qty2552;  // mut TemplateSpecialization ReturnValue<T>
struct _qty2553;  // mut FunctionProto ReturnValue<T> () const
struct _qty2554;  // mut FunctionProto void (internal::Address *)
struct _qty2555;  // mut Pointer PropertyCallbackInfo<T> *
struct _qty2556;  // mut Typedef v8::FunctionCallback
struct _qty2557;  // mut LValueReference const FunctionCallbackInfo<v8::Value> &
struct _qty2558;  // const TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _qty2559;  // mut FunctionProto void (const FunctionCallbackInfo<v8::Value> &)
struct _qty2560;  // mut Pointer void (*)(const FunctionCallbackInfo<v8::Value> &)
struct _qty2561;  // mut Enum v8::ConstructorBehavior
struct _qty2562;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2563;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2564;  // mut TemplateSpecialization MaybeLocal<v8::Function>
struct _qty2565;  // mut FunctionProto MaybeLocal<v8::Function> (Local<v8::Context>, v8::FunctionCallback, Local<v8::Value>, int, v8::ConstructorBehavior, v8::SideEffectType)
struct _qty2566;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2567;  // mut Decayed Local<v8::Value> *
struct _qty2568;  // mut Pointer Local<v8::Value> *
struct _qty2569;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty2570;  // mut FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>, int, Local<v8::Value> *) const
struct _qty2571;  // mut Pointer const v8::Function *
struct _qty2572;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2573;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty2574;  // mut FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>) const
struct _qty2575;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2576;  // mut Decayed Local<v8::Value> *
struct _qty2577;  // mut Pointer Local<v8::Value> *
struct _qty2578;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty2579;  // mut FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>, int, Local<v8::Value> *, v8::SideEffectType) const
struct _qty2580;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2581;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2582;  // mut Decayed Local<v8::Value> *
struct _qty2583;  // mut Pointer Local<v8::Value> *
struct _qty2584;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2585;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>, int, Local<v8::Value> *)
struct _qty2586;  // mut Pointer v8::Function *
struct _qty2587;  // mut TemplateSpecialization Local<v8::String>
struct _qty2588;  // mut FunctionProto void (Local<v8::String>)
struct _qty2589;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2590;  // mut FunctionProto Local<v8::Value> () const
struct _qty2591;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2592;  // mut FunctionProto Local<v8::Value> () const
struct _qty2593;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2594;  // mut FunctionProto Local<v8::Value> () const
struct _qty2595;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2596;  // mut FunctionProto Local<v8::Value> () const
struct _qty2597;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2598;  // mut FunctionProto Local<v8::Value> () const
struct _qty2599;  // mut FunctionProto v8::Function *(v8::Value *)
struct _qty2600;  // mut Enum v8::Promise::PromiseState
struct _qty2601;  // mut Record v8::Promise::Resolver
struct _qty2602;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2603;  // mut TemplateSpecialization MaybeLocal<v8::Promise::Resolver>
struct _qty2604;  // mut FunctionProto MaybeLocal<v8::Promise::Resolver> (Local<v8::Context>)
struct _qty2605;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty2606;  // mut FunctionProto Local<v8::Promise> ()
struct _qty2607;  // mut Pointer v8::Promise::Resolver *
struct _qty2608;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2609;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2610;  // mut TemplateSpecialization Maybe<bool>
struct _qty2611;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2612;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2613;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2614;  // mut TemplateSpecialization Maybe<bool>
struct _qty2615;  // mut FunctionProto Maybe<bool> (Local<v8::Context>, Local<v8::Value>)
struct _qty2616;  // mut FunctionProto v8::Promise::Resolver *(v8::Value *)
struct _qty2617;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2618;  // mut TemplateSpecialization Local<v8::Function>
struct _qty2619;  // mut TemplateSpecialization MaybeLocal<v8::Promise>
struct _qty2620;  // mut FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::Function>)
struct _qty2621;  // mut Pointer v8::Promise *
struct _qty2622;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2623;  // mut TemplateSpecialization Local<v8::Function>
struct _qty2624;  // mut TemplateSpecialization MaybeLocal<v8::Promise>
struct _qty2625;  // mut FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::Function>)
struct _qty2626;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2627;  // mut TemplateSpecialization Local<v8::Function>
struct _qty2628;  // mut TemplateSpecialization Local<v8::Function>
struct _qty2629;  // mut TemplateSpecialization MaybeLocal<v8::Promise>
struct _qty2630;  // mut FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::Function>, Local<v8::Function>)
struct _qty2631;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2632;  // mut FunctionProto Local<v8::Value> ()
struct _qty2633;  // mut FunctionProto v8::Promise::PromiseState ()
struct _qty2634;  // mut FunctionProto v8::Promise *(v8::Value *)
struct _qty2635;  // mut Pointer v8::PropertyDescriptor *
struct _qty2636;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2637;  // mut FunctionProto void (Local<v8::Value>)
struct _qty2638;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2639;  // mut FunctionProto void (Local<v8::Value>, bool)
struct _qty2640;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2641;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2642;  // mut FunctionProto void (Local<v8::Value>, Local<v8::Value>)
struct _qty2643;  // mut FunctionProto void ()
struct _qty2644;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2645;  // mut FunctionProto Local<v8::Value> () const
struct _qty2646;  // mut Pointer const v8::PropertyDescriptor *
struct _qty2647;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2648;  // mut FunctionProto Local<v8::Value> () const
struct _qty2649;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2650;  // mut FunctionProto Local<v8::Value> () const
struct _qty2651;  // mut Record v8::PropertyDescriptor::PrivateData
struct _qty2652;  // mut Pointer v8::PropertyDescriptor::PrivateData *
struct _qty2653;  // mut FunctionProto v8::PropertyDescriptor::PrivateData *() const
struct _qty2654;  // mut LValueReference const v8::PropertyDescriptor &
struct _qty2655;  // const Record v8::PropertyDescriptor
struct _qty2656;  // mut FunctionProto void (const v8::PropertyDescriptor &)
struct _qty2657;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2658;  // mut FunctionProto Local<v8::Value> ()
struct _qty2659;  // mut Pointer v8::Proxy *
struct _qty2660;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2661;  // mut FunctionProto Local<v8::Value> ()
struct _qty2662;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2663;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2664;  // mut TemplateSpecialization Local<v8::Object>
struct _qty2665;  // mut TemplateSpecialization MaybeLocal<v8::Proxy>
struct _qty2666;  // mut FunctionProto MaybeLocal<v8::Proxy> (Local<v8::Context>, Local<v8::Object>, Local<v8::Object>)
struct _qty2667;  // mut FunctionProto v8::Proxy *(v8::Value *)
struct _qty2668;  // mut TemplateTypeParm T
struct _qty2669;  // mut InjectedClassName MemorySpan<T>
struct _qty2670;  // mut Pointer MemorySpan<T> *
struct _qty2671;  // mut Pointer T *
struct _qty2672;  // mut FunctionProto void (T *, size_t)
struct _qty2673;  // mut FunctionProto T *() const
struct _qty2674;  // mut Pointer const MemorySpan<T> *
struct _qty2675;  // mut Record v8::MemorySpan<const unsigned char>
struct _qty2676;  // mut FunctionProto void ()
struct _qty2677;  // mut Pointer v8::MemorySpan<const unsigned char> *
struct _qty2678;  // mut Pointer const unsigned char *
struct _qty2679;  // const Builtin unsigned char
struct _qty2680;  // mut FunctionProto void (const unsigned char *, size_t)
struct _qty2681;  // mut FunctionProto const unsigned char *() const
struct _qty2682;  // mut Pointer const v8::MemorySpan<const unsigned char> *
struct _qty2683;  // mut LValueReference const v8::MemorySpan<const unsigned char> &
struct _qty2684;  // const Record v8::MemorySpan<const unsigned char>
struct _qty2685;  // mut FunctionProto void (const v8::MemorySpan<const unsigned char> &)
struct _qty2686;  // mut RValueReference v8::MemorySpan<const unsigned char> &&
struct _qty2687;  // mut FunctionProto void (v8::MemorySpan<const unsigned char> &&)
struct _qty2688;  // mut Record v8::OwnedBuffer
struct _qty2689;  // mut Elaborated std::unique_ptr<const uint8_t []>
struct _qty2690;  // mut TemplateSpecialization unique_ptr<const uint8_t []>
struct _qty2691;  // mut Record std::unique_ptr<unsigned char const[], std::default_delete<unsigned char const[]> >
struct _qty2692;  // mut Elaborated std::unique_ptr<const uint8_t []>
struct _qty2693;  // mut TemplateSpecialization unique_ptr<const uint8_t []>
struct _qty2694;  // mut FunctionProto void (std::unique_ptr<const uint8_t []>, size_t)
struct _qty2695;  // mut Pointer v8::OwnedBuffer *
struct _qty2696;  // mut FunctionProto void ()
struct _qty2697;  // mut LValueReference const v8::OwnedBuffer &
struct _qty2698;  // const Record v8::OwnedBuffer
struct _qty2699;  // mut FunctionProto void (const v8::OwnedBuffer &)
struct _qty2700;  // mut RValueReference v8::OwnedBuffer &&
struct _qty2701;  // mut FunctionProto void (v8::OwnedBuffer &&) noexcept
struct _qty2702;  // mut LValueReference v8::OwnedBuffer &
struct _qty2703;  // mut FunctionProto v8::OwnedBuffer &(v8::OwnedBuffer &&)
struct _qty2704;  // mut FunctionProto v8::OwnedBuffer &(const v8::OwnedBuffer &)
struct _qty2705;  // mut Record v8::CompiledWasmModule
struct _qty2706;  // mut FunctionProto v8::OwnedBuffer ()
struct _qty2707;  // mut Pointer v8::CompiledWasmModule *
struct _qty2708;  // mut TemplateSpecialization MemorySpan<const uint8_t>
struct _qty2709;  // mut FunctionProto MemorySpan<const uint8_t> ()
struct _qty2710;  // mut LValueReference const v8::CompiledWasmModule &
struct _qty2711;  // const Record v8::CompiledWasmModule
struct _qty2712;  // mut FunctionProto void (const v8::CompiledWasmModule &)
struct _qty2713;  // mut RValueReference v8::CompiledWasmModule &&
struct _qty2714;  // mut FunctionProto void (v8::CompiledWasmModule &&)
struct _qty2715;  // mut LValueReference v8::CompiledWasmModule &
struct _qty2716;  // mut FunctionProto v8::CompiledWasmModule &(v8::CompiledWasmModule &&)
struct _qty2717;  // mut FunctionProto void ()
struct _qty2718;  // mut Record v8::WasmModuleObject::TransferrableModule
struct _qty2719;  // mut RValueReference v8::WasmModuleObject::TransferrableModule &&
struct _qty2720;  // mut FunctionProto void (v8::WasmModuleObject::TransferrableModule &&)
struct _qty2721;  // mut Pointer v8::WasmModuleObject::TransferrableModule *
struct _qty2722;  // mut LValueReference const v8::WasmModuleObject::TransferrableModule &
struct _qty2723;  // const Record v8::WasmModuleObject::TransferrableModule
struct _qty2724;  // mut FunctionProto void (const v8::WasmModuleObject::TransferrableModule &)
struct _qty2725;  // mut LValueReference v8::WasmModuleObject::TransferrableModule &
struct _qty2726;  // mut FunctionProto v8::WasmModuleObject::TransferrableModule &(v8::WasmModuleObject::TransferrableModule &&)
struct _qty2727;  // mut FunctionProto v8::WasmModuleObject::TransferrableModule &(const v8::WasmModuleObject::TransferrableModule &)
struct _qty2728;  // mut FunctionProto void ()
struct _qty2729;  // mut FunctionProto v8::WasmModuleObject::TransferrableModule ()
struct _qty2730;  // mut Pointer v8::WasmModuleObject *
struct _qty2731;  // mut TemplateSpecialization MaybeLocal<v8::WasmModuleObject>
struct _qty2732;  // mut FunctionProto MaybeLocal<v8::WasmModuleObject> (v8::Isolate *, const v8::WasmModuleObject::TransferrableModule &)
struct _qty2733;  // mut FunctionProto v8::CompiledWasmModule ()
struct _qty2734;  // mut TemplateSpecialization MemorySpan<const uint8_t>
struct _qty2735;  // mut TemplateSpecialization MemorySpan<const uint8_t>
struct _qty2736;  // mut TemplateSpecialization MaybeLocal<v8::WasmModuleObject>
struct _qty2737;  // mut FunctionProto MaybeLocal<v8::WasmModuleObject> (v8::Isolate *, MemorySpan<const uint8_t>, MemorySpan<const uint8_t>)
struct _qty2738;  // mut FunctionProto v8::WasmModuleObject *(v8::Value *)
struct _qty2739;  // mut Record v8::WasmStreaming
struct _qty2740;  // mut Record v8::WasmStreaming::WasmStreamingImpl
struct _qty2741;  // mut Record v8::WasmStreaming::Client
struct _qty2742;  // mut FunctionProto void ()
struct _qty2743;  // mut Pointer v8::WasmStreaming::Client *
struct _qty2744;  // mut FunctionProto void (v8::CompiledWasmModule)
struct _qty2745;  // mut LValueReference const v8::WasmStreaming::Client &
struct _qty2746;  // const Record v8::WasmStreaming::Client
struct _qty2747;  // mut LValueReference v8::WasmStreaming::Client &
struct _qty2748;  // mut FunctionProto v8::WasmStreaming::Client &(const v8::WasmStreaming::Client &)
struct _qty2749;  // mut Elaborated std::unique_ptr<WasmStreamingImpl>
struct _qty2750;  // mut TemplateSpecialization unique_ptr<v8::WasmStreaming::WasmStreamingImpl>
struct _qty2751;  // mut Record std::unique_ptr<v8::WasmStreaming::WasmStreamingImpl, std::default_delete<v8::WasmStreaming::WasmStreamingImpl> >
struct _qty2752;  // mut FunctionProto void (std::unique_ptr<WasmStreamingImpl>)
struct _qty2753;  // mut Pointer v8::WasmStreaming *
struct _qty2754;  // mut FunctionProto void ()
struct _qty2755;  // mut FunctionProto void (const uint8_t *, size_t)
struct _qty2756;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2757;  // mut FunctionProto void (MaybeLocal<v8::Value>)
struct _qty2758;  // mut FunctionProto bool (const uint8_t *, size_t)
struct _qty2759;  // mut Elaborated std::shared_ptr<Client>
struct _qty2760;  // mut TemplateSpecialization shared_ptr<v8::WasmStreaming::Client>
struct _qty2761;  // mut Record std::shared_ptr<v8::WasmStreaming::Client>
struct _qty2762;  // mut FunctionProto void (std::shared_ptr<Client>)
struct _qty2763;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2764;  // mut Elaborated std::shared_ptr<WasmStreaming>
struct _qty2765;  // mut TemplateSpecialization shared_ptr<v8::WasmStreaming>
struct _qty2766;  // mut Record std::shared_ptr<v8::WasmStreaming>
struct _qty2767;  // mut FunctionProto std::shared_ptr<WasmStreaming> (v8::Isolate *, Local<v8::Value>)
struct _qty2768;  // mut LValueReference const v8::WasmStreaming &
struct _qty2769;  // const Record v8::WasmStreaming
struct _qty2770;  // mut FunctionProto void (const v8::WasmStreaming &)
struct _qty2771;  // mut Record v8::WasmModuleObjectBuilderStreaming
struct _qty2772;  // mut Pointer v8::WasmModuleObjectBuilderStreaming *
struct _qty2773;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2774;  // mut FunctionProto void (MaybeLocal<v8::Value>)
struct _qty2775;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty2776;  // mut FunctionProto Local<v8::Promise> ()
struct _qty2777;  // mut FunctionProto void ()
struct _qty2778;  // mut Enum v8::ArrayBufferCreationMode
struct _qty2779;  // mut Record v8::ArrayBuffer::Allocator
struct _qty2780;  // mut FunctionProto void ()
struct _qty2781;  // mut Pointer v8::ArrayBuffer::Allocator *
struct _qty2782;  // mut FunctionProto void *(size_t)
struct _qty2783;  // mut FunctionProto void (void *, size_t)
struct _qty2784;  // mut Enum v8::ArrayBuffer::Allocator::AllocationMode
struct _qty2785;  // mut FunctionProto v8::ArrayBuffer::Allocator *()
struct _qty2786;  // mut LValueReference const v8::ArrayBuffer::Allocator &
struct _qty2787;  // const Record v8::ArrayBuffer::Allocator
struct _qty2788;  // mut LValueReference v8::ArrayBuffer::Allocator &
struct _qty2789;  // mut FunctionProto v8::ArrayBuffer::Allocator &(const v8::ArrayBuffer::Allocator &)
struct _qty2790;  // mut Record v8::ArrayBuffer::Contents
struct _qty2791;  // mut Typedef v8::ArrayBuffer::Contents::DeleterCallback
struct _qty2792;  // mut FunctionProto void (void *, size_t, void *)
struct _qty2793;  // mut Pointer void (*)(void *, size_t, void *)
struct _qty2794;  // mut Pointer v8::ArrayBuffer::Contents *
struct _qty2795;  // mut FunctionProto void *() const
struct _qty2796;  // mut Pointer const v8::ArrayBuffer::Contents *
struct _qty2797;  // mut Elaborated Allocator::AllocationMode
struct _qty2798;  // mut FunctionProto Allocator::AllocationMode () const
struct _qty2799;  // mut FunctionProto v8::ArrayBuffer::Contents::DeleterCallback () const
struct _qty2800;  // mut Pointer const v8::ArrayBuffer *
struct _qty2801;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2802;  // mut FunctionProto Local<v8::ArrayBuffer> (v8::Isolate *, size_t)
struct _qty2803;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2804;  // mut FunctionProto Local<v8::ArrayBuffer> (v8::Isolate *, void *, size_t, v8::ArrayBufferCreationMode)
struct _qty2805;  // mut Pointer v8::ArrayBuffer *
struct _qty2806;  // mut FunctionProto v8::ArrayBuffer::Contents ()
struct _qty2807;  // mut FunctionProto v8::ArrayBuffer *(v8::Value *)
struct _qty2808;  // mut Record v8::ArrayBufferView
struct _qty2809;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2810;  // mut FunctionProto Local<v8::ArrayBuffer> ()
struct _qty2811;  // mut Pointer v8::ArrayBufferView *
struct _qty2812;  // mut FunctionProto size_t ()
struct _qty2813;  // mut FunctionProto size_t (void *, size_t)
struct _qty2814;  // mut Pointer const v8::ArrayBufferView *
struct _qty2815;  // mut FunctionProto v8::ArrayBufferView *(v8::Value *)
struct _qty2816;  // mut Record v8::TypedArray
struct _qty2817;  // const Typedef size_t
struct _qty2818;  // mut Pointer v8::TypedArray *
struct _qty2819;  // mut FunctionProto v8::TypedArray *(v8::Value *)
struct _qty2820;  // mut Record v8::Uint8Array
struct _qty2821;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2822;  // mut TemplateSpecialization Local<v8::Uint8Array>
struct _qty2823;  // mut FunctionProto Local<v8::Uint8Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2824;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2825;  // mut TemplateSpecialization Local<v8::Uint8Array>
struct _qty2826;  // mut FunctionProto Local<v8::Uint8Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2827;  // mut Pointer v8::Uint8Array *
struct _qty2828;  // mut FunctionProto v8::Uint8Array *(v8::Value *)
struct _qty2829;  // mut Record v8::Uint8ClampedArray
struct _qty2830;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2831;  // mut TemplateSpecialization Local<v8::Uint8ClampedArray>
struct _qty2832;  // mut FunctionProto Local<v8::Uint8ClampedArray> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2833;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2834;  // mut TemplateSpecialization Local<v8::Uint8ClampedArray>
struct _qty2835;  // mut FunctionProto Local<v8::Uint8ClampedArray> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2836;  // mut Pointer v8::Uint8ClampedArray *
struct _qty2837;  // mut FunctionProto v8::Uint8ClampedArray *(v8::Value *)
struct _qty2838;  // mut Record v8::Int8Array
struct _qty2839;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2840;  // mut TemplateSpecialization Local<v8::Int8Array>
struct _qty2841;  // mut FunctionProto Local<v8::Int8Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2842;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2843;  // mut TemplateSpecialization Local<v8::Int8Array>
struct _qty2844;  // mut FunctionProto Local<v8::Int8Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2845;  // mut Pointer v8::Int8Array *
struct _qty2846;  // mut FunctionProto v8::Int8Array *(v8::Value *)
struct _qty2847;  // mut Record v8::Uint16Array
struct _qty2848;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2849;  // mut TemplateSpecialization Local<v8::Uint16Array>
struct _qty2850;  // mut FunctionProto Local<v8::Uint16Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2851;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2852;  // mut TemplateSpecialization Local<v8::Uint16Array>
struct _qty2853;  // mut FunctionProto Local<v8::Uint16Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2854;  // mut Pointer v8::Uint16Array *
struct _qty2855;  // mut FunctionProto v8::Uint16Array *(v8::Value *)
struct _qty2856;  // mut Record v8::Int16Array
struct _qty2857;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2858;  // mut TemplateSpecialization Local<v8::Int16Array>
struct _qty2859;  // mut FunctionProto Local<v8::Int16Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2860;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2861;  // mut TemplateSpecialization Local<v8::Int16Array>
struct _qty2862;  // mut FunctionProto Local<v8::Int16Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2863;  // mut Pointer v8::Int16Array *
struct _qty2864;  // mut FunctionProto v8::Int16Array *(v8::Value *)
struct _qty2865;  // mut Record v8::Uint32Array
struct _qty2866;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2867;  // mut TemplateSpecialization Local<v8::Uint32Array>
struct _qty2868;  // mut FunctionProto Local<v8::Uint32Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2869;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2870;  // mut TemplateSpecialization Local<v8::Uint32Array>
struct _qty2871;  // mut FunctionProto Local<v8::Uint32Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2872;  // mut Pointer v8::Uint32Array *
struct _qty2873;  // mut FunctionProto v8::Uint32Array *(v8::Value *)
struct _qty2874;  // mut Record v8::Int32Array
struct _qty2875;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2876;  // mut TemplateSpecialization Local<v8::Int32Array>
struct _qty2877;  // mut FunctionProto Local<v8::Int32Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2878;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2879;  // mut TemplateSpecialization Local<v8::Int32Array>
struct _qty2880;  // mut FunctionProto Local<v8::Int32Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2881;  // mut Pointer v8::Int32Array *
struct _qty2882;  // mut FunctionProto v8::Int32Array *(v8::Value *)
struct _qty2883;  // mut Record v8::Float32Array
struct _qty2884;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2885;  // mut TemplateSpecialization Local<v8::Float32Array>
struct _qty2886;  // mut FunctionProto Local<v8::Float32Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2887;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2888;  // mut TemplateSpecialization Local<v8::Float32Array>
struct _qty2889;  // mut FunctionProto Local<v8::Float32Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2890;  // mut Pointer v8::Float32Array *
struct _qty2891;  // mut FunctionProto v8::Float32Array *(v8::Value *)
struct _qty2892;  // mut Record v8::Float64Array
struct _qty2893;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2894;  // mut TemplateSpecialization Local<v8::Float64Array>
struct _qty2895;  // mut FunctionProto Local<v8::Float64Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2896;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2897;  // mut TemplateSpecialization Local<v8::Float64Array>
struct _qty2898;  // mut FunctionProto Local<v8::Float64Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2899;  // mut Pointer v8::Float64Array *
struct _qty2900;  // mut FunctionProto v8::Float64Array *(v8::Value *)
struct _qty2901;  // mut Record v8::BigInt64Array
struct _qty2902;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2903;  // mut TemplateSpecialization Local<v8::BigInt64Array>
struct _qty2904;  // mut FunctionProto Local<v8::BigInt64Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2905;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2906;  // mut TemplateSpecialization Local<v8::BigInt64Array>
struct _qty2907;  // mut FunctionProto Local<v8::BigInt64Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2908;  // mut Pointer v8::BigInt64Array *
struct _qty2909;  // mut FunctionProto v8::BigInt64Array *(v8::Value *)
struct _qty2910;  // mut Record v8::BigUint64Array
struct _qty2911;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2912;  // mut TemplateSpecialization Local<v8::BigUint64Array>
struct _qty2913;  // mut FunctionProto Local<v8::BigUint64Array> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2914;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2915;  // mut TemplateSpecialization Local<v8::BigUint64Array>
struct _qty2916;  // mut FunctionProto Local<v8::BigUint64Array> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2917;  // mut Pointer v8::BigUint64Array *
struct _qty2918;  // mut FunctionProto v8::BigUint64Array *(v8::Value *)
struct _qty2919;  // mut Record v8::DataView
struct _qty2920;  // mut TemplateSpecialization Local<v8::ArrayBuffer>
struct _qty2921;  // mut TemplateSpecialization Local<v8::DataView>
struct _qty2922;  // mut FunctionProto Local<v8::DataView> (Local<v8::ArrayBuffer>, size_t, size_t)
struct _qty2923;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2924;  // mut TemplateSpecialization Local<v8::DataView>
struct _qty2925;  // mut FunctionProto Local<v8::DataView> (Local<v8::SharedArrayBuffer>, size_t, size_t)
struct _qty2926;  // mut Pointer v8::DataView *
struct _qty2927;  // mut FunctionProto v8::DataView *(v8::Value *)
struct _qty2928;  // mut Record v8::SharedArrayBuffer::Contents
struct _qty2929;  // mut Typedef v8::SharedArrayBuffer::Contents::Allocator
struct _qty2930;  // mut Elaborated v8::ArrayBuffer::Allocator
struct _qty2931;  // mut Typedef v8::SharedArrayBuffer::Contents::DeleterCallback
struct _qty2932;  // mut Pointer v8::SharedArrayBuffer::Contents *
struct _qty2933;  // mut Pointer const v8::SharedArrayBuffer::Contents *
struct _qty2934;  // mut Elaborated Allocator::AllocationMode
struct _qty2935;  // mut FunctionProto Allocator::AllocationMode () const
struct _qty2936;  // mut FunctionProto v8::SharedArrayBuffer::Contents::DeleterCallback () const
struct _qty2937;  // mut Pointer const v8::SharedArrayBuffer *
struct _qty2938;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2939;  // mut FunctionProto Local<v8::SharedArrayBuffer> (v8::Isolate *, size_t)
struct _qty2940;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2941;  // mut FunctionProto Local<v8::SharedArrayBuffer> (v8::Isolate *, void *, size_t, v8::ArrayBufferCreationMode)
struct _qty2942;  // mut LValueReference const SharedArrayBuffer::Contents &
struct _qty2943;  // const Elaborated SharedArrayBuffer::Contents
struct _qty2944;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty2945;  // mut FunctionProto Local<v8::SharedArrayBuffer> (v8::Isolate *, const SharedArrayBuffer::Contents &, v8::ArrayBufferCreationMode)
struct _qty2946;  // mut FunctionProto v8::SharedArrayBuffer::Contents ()
struct _qty2947;  // mut Pointer v8::SharedArrayBuffer *
struct _qty2948;  // mut FunctionProto v8::SharedArrayBuffer *(v8::Value *)
struct _qty2949;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2950;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty2951;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, double)
struct _qty2952;  // mut Pointer const v8::Date *
struct _qty2953;  // mut Pointer v8::Date *
struct _qty2954;  // mut FunctionProto v8::Date *(v8::Value *)
struct _qty2955;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2956;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, double)
struct _qty2957;  // mut Pointer const v8::NumberObject *
struct _qty2958;  // mut Pointer v8::NumberObject *
struct _qty2959;  // mut FunctionProto v8::NumberObject *(v8::Value *)
struct _qty2960;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2961;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, int64_t)
struct _qty2962;  // mut TemplateSpecialization Local<v8::BigInt>
struct _qty2963;  // mut FunctionProto Local<v8::BigInt> () const
struct _qty2964;  // mut Pointer const v8::BigIntObject *
struct _qty2965;  // mut Pointer v8::BigIntObject *
struct _qty2966;  // mut FunctionProto v8::BigIntObject *(v8::Value *)
struct _qty2967;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2968;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, bool)
struct _qty2969;  // mut Pointer const v8::BooleanObject *
struct _qty2970;  // mut Pointer v8::BooleanObject *
struct _qty2971;  // mut FunctionProto v8::BooleanObject *(v8::Value *)
struct _qty2972;  // mut TemplateSpecialization Local<v8::String>
struct _qty2973;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2974;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, Local<v8::String>)
struct _qty2975;  // mut TemplateSpecialization Local<v8::String>
struct _qty2976;  // mut FunctionProto Local<v8::String> () const
struct _qty2977;  // mut Pointer const v8::StringObject *
struct _qty2978;  // mut Pointer v8::StringObject *
struct _qty2979;  // mut FunctionProto v8::StringObject *(v8::Value *)
struct _qty2980;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2981;  // mut TemplateSpecialization Local<v8::Value>
struct _qty2982;  // mut FunctionProto Local<v8::Value> (v8::Isolate *, Local<v8::Symbol>)
struct _qty2983;  // mut TemplateSpecialization Local<v8::Symbol>
struct _qty2984;  // mut FunctionProto Local<v8::Symbol> () const
struct _qty2985;  // mut Pointer const v8::SymbolObject *
struct _qty2986;  // mut Pointer v8::SymbolObject *
struct _qty2987;  // mut FunctionProto v8::SymbolObject *(v8::Value *)
struct _qty2988;  // mut Record v8::RegExp
struct _qty2989;  // mut Enum v8::RegExp::Flags
struct _qty2990;  // mut TemplateSpecialization Local<v8::Context>
struct _qty2991;  // mut TemplateSpecialization Local<v8::String>
struct _qty2992;  // mut TemplateSpecialization MaybeLocal<v8::RegExp>
struct _qty2993;  // mut FunctionProto MaybeLocal<v8::RegExp> (Local<v8::Context>, Local<v8::String>, v8::RegExp::Flags)
struct _qty2994;  // mut TemplateSpecialization Local<v8::String>
struct _qty2995;  // mut FunctionProto Local<v8::String> () const
struct _qty2996;  // mut Pointer const v8::RegExp *
struct _qty2997;  // mut FunctionProto v8::RegExp::Flags () const
struct _qty2998;  // mut Pointer v8::RegExp *
struct _qty2999;  // mut FunctionProto v8::RegExp *(v8::Value *)
struct _qty3000;  // mut TemplateSpecialization Local<v8::External>
struct _qty3001;  // mut FunctionProto Local<v8::External> (v8::Isolate *, void *)
struct _qty3002;  // mut Pointer v8::External *
struct _qty3003;  // mut FunctionProto v8::External *(v8::Value *)
struct _qty3004;  // mut Pointer const v8::External *
struct _qty3005;  // mut Enum v8::Intrinsic
struct _qty3006;  // mut Record v8::Template
struct _qty3007;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3008;  // mut TemplateSpecialization Local<v8::Data>
struct _qty3009;  // mut FunctionProto void (Local<v8::Name>, Local<v8::Data>, v8::PropertyAttribute)
struct _qty3010;  // mut Pointer v8::Template *
struct _qty3011;  // mut TemplateSpecialization Local<v8::Private>
struct _qty3012;  // mut TemplateSpecialization Local<v8::Data>
struct _qty3013;  // mut FunctionProto void (Local<v8::Private>, Local<v8::Data>, v8::PropertyAttribute)
struct _qty3014;  // mut TemplateSpecialization Local<v8::Data>
struct _qty3015;  // mut FunctionProto void (v8::Isolate *, const char *, Local<v8::Data>)
struct _qty3016;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3017;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3018;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3019;  // mut FunctionProto void (Local<v8::Name>, Local<v8::FunctionTemplate>, Local<v8::FunctionTemplate>, v8::PropertyAttribute, v8::AccessControl)
struct _qty3020;  // mut TemplateSpecialization Local<v8::String>
struct _qty3021;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3022;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty3023;  // mut FunctionProto void (Local<v8::String>, v8::AccessorGetterCallback, v8::AccessorSetterCallback, Local<v8::Value>, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::AccessControl, v8::SideEffectType, v8::SideEffectType)
struct _qty3024;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3025;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3026;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty3027;  // mut FunctionProto void (Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, Local<v8::Value>, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::AccessControl, v8::SideEffectType, v8::SideEffectType)
struct _qty3028;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3029;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3030;  // mut FunctionProto void (Local<v8::Name>, v8::AccessorNameGetterCallback, Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType)
struct _qty3031;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3032;  // mut FunctionProto void (Local<v8::Name>, v8::Intrinsic, v8::PropertyAttribute)
struct _qty3033;  // mut Typedef v8::GenericNamedPropertyGetterCallback
struct _qty3034;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3035;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3036;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3037;  // mut FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3038;  // mut Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3039;  // mut Typedef v8::GenericNamedPropertySetterCallback
struct _qty3040;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3041;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3042;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3043;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3044;  // mut FunctionProto void (Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3045;  // mut Pointer void (*)(Local<v8::Name>, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3046;  // mut Typedef v8::GenericNamedPropertyQueryCallback
struct _qty3047;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3048;  // mut LValueReference const PropertyCallbackInfo<v8::Integer> &
struct _qty3049;  // const TemplateSpecialization PropertyCallbackInfo<v8::Integer>
struct _qty3050;  // mut FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Integer> &)
struct _qty3051;  // mut Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Integer> &)
struct _qty3052;  // mut Typedef v8::GenericNamedPropertyDeleterCallback
struct _qty3053;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3054;  // mut LValueReference const PropertyCallbackInfo<v8::Boolean> &
struct _qty3055;  // const TemplateSpecialization PropertyCallbackInfo<v8::Boolean>
struct _qty3056;  // mut FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Boolean> &)
struct _qty3057;  // mut Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Boolean> &)
struct _qty3058;  // mut Typedef v8::GenericNamedPropertyEnumeratorCallback
struct _qty3059;  // mut LValueReference const PropertyCallbackInfo<v8::Array> &
struct _qty3060;  // const TemplateSpecialization PropertyCallbackInfo<v8::Array>
struct _qty3061;  // mut FunctionProto void (const PropertyCallbackInfo<v8::Array> &)
struct _qty3062;  // mut Pointer void (*)(const PropertyCallbackInfo<v8::Array> &)
struct _qty3063;  // mut Typedef v8::GenericNamedPropertyDefinerCallback
struct _qty3064;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3065;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3066;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3067;  // mut FunctionProto void (Local<v8::Name>, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _qty3068;  // mut Pointer void (*)(Local<v8::Name>, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _qty3069;  // mut Typedef v8::GenericNamedPropertyDescriptorCallback
struct _qty3070;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3071;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3072;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3073;  // mut FunctionProto void (Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3074;  // mut Pointer void (*)(Local<v8::Name>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3075;  // mut Typedef v8::IndexedPropertyGetterCallback
struct _qty3076;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3077;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3078;  // mut FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _qty3079;  // mut Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _qty3080;  // mut Typedef v8::IndexedPropertySetterCallback
struct _qty3081;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3082;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3083;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3084;  // mut FunctionProto void (uint32_t, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3085;  // mut Pointer void (*)(uint32_t, Local<v8::Value>, const PropertyCallbackInfo<v8::Value> &)
struct _qty3086;  // mut Typedef v8::IndexedPropertyQueryCallback
struct _qty3087;  // mut LValueReference const PropertyCallbackInfo<v8::Integer> &
struct _qty3088;  // const TemplateSpecialization PropertyCallbackInfo<v8::Integer>
struct _qty3089;  // mut FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Integer> &)
struct _qty3090;  // mut Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Integer> &)
struct _qty3091;  // mut Typedef v8::IndexedPropertyDeleterCallback
struct _qty3092;  // mut LValueReference const PropertyCallbackInfo<v8::Boolean> &
struct _qty3093;  // const TemplateSpecialization PropertyCallbackInfo<v8::Boolean>
struct _qty3094;  // mut FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Boolean> &)
struct _qty3095;  // mut Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Boolean> &)
struct _qty3096;  // mut Typedef v8::IndexedPropertyEnumeratorCallback
struct _qty3097;  // mut LValueReference const PropertyCallbackInfo<v8::Array> &
struct _qty3098;  // const TemplateSpecialization PropertyCallbackInfo<v8::Array>
struct _qty3099;  // mut FunctionProto void (const PropertyCallbackInfo<v8::Array> &)
struct _qty3100;  // mut Pointer void (*)(const PropertyCallbackInfo<v8::Array> &)
struct _qty3101;  // mut Typedef v8::IndexedPropertyDefinerCallback
struct _qty3102;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3103;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3104;  // mut FunctionProto void (uint32_t, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _qty3105;  // mut Pointer void (*)(uint32_t, const v8::PropertyDescriptor &, const PropertyCallbackInfo<v8::Value> &)
struct _qty3106;  // mut Typedef v8::IndexedPropertyDescriptorCallback
struct _qty3107;  // mut LValueReference const PropertyCallbackInfo<v8::Value> &
struct _qty3108;  // const TemplateSpecialization PropertyCallbackInfo<v8::Value>
struct _qty3109;  // mut FunctionProto void (uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _qty3110;  // mut Pointer void (*)(uint32_t, const PropertyCallbackInfo<v8::Value> &)
struct _qty3111;  // mut Enum v8::AccessType
struct _qty3112;  // mut Typedef v8::AccessCheckCallback
struct _qty3113;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3114;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3115;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3116;  // mut FunctionProto bool (Local<v8::Context>, Local<v8::Object>, Local<v8::Value>)
struct _qty3117;  // mut Pointer bool (*)(Local<v8::Context>, Local<v8::Object>, Local<v8::Value>)
struct _qty3118;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3119;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty3120;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3121;  // mut FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, v8::FunctionCallback, Local<v8::Value>, Local<v8::Signature>, int, v8::ConstructorBehavior, v8::SideEffectType)
struct _qty3122;  // mut TemplateSpecialization MaybeLocal<v8::FunctionTemplate>
struct _qty3123;  // mut FunctionProto MaybeLocal<v8::FunctionTemplate> (v8::Isolate *, size_t)
struct _qty3124;  // mut TemplateSpecialization Local<v8::Private>
struct _qty3125;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3126;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty3127;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3128;  // mut FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, v8::FunctionCallback, Local<v8::Private>, Local<v8::Value>, Local<v8::Signature>, int, v8::SideEffectType)
struct _qty3129;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3130;  // mut TemplateSpecialization MaybeLocal<v8::Function>
struct _qty3131;  // mut FunctionProto MaybeLocal<v8::Function> (Local<v8::Context>)
struct _qty3132;  // mut Pointer v8::FunctionTemplate *
struct _qty3133;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty3134;  // mut FunctionProto MaybeLocal<v8::Object> ()
struct _qty3135;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3136;  // mut FunctionProto void (v8::FunctionCallback, Local<v8::Value>, v8::SideEffectType)
struct _qty3137;  // mut TemplateSpecialization Local<v8::ObjectTemplate>
struct _qty3138;  // mut FunctionProto Local<v8::ObjectTemplate> ()
struct _qty3139;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3140;  // mut FunctionProto void (Local<v8::FunctionTemplate>)
struct _qty3141;  // mut TemplateSpecialization Local<v8::ObjectTemplate>
struct _qty3142;  // mut FunctionProto Local<v8::ObjectTemplate> ()
struct _qty3143;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3144;  // mut FunctionProto void (Local<v8::FunctionTemplate>)
struct _qty3145;  // mut TemplateSpecialization Local<v8::String>
struct _qty3146;  // mut FunctionProto void (Local<v8::String>)
struct _qty3147;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3148;  // mut FunctionProto bool (Local<v8::Value>)
struct _qty3149;  // mut FunctionProto v8::FunctionTemplate *(v8::Data *)
struct _qty3150;  // mut Enum v8::PropertyHandlerFlags
struct _qty3151;  // mut Record v8::NamedPropertyHandlerConfiguration
struct _qty3152;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3153;  // mut FunctionProto void (v8::GenericNamedPropertyGetterCallback, v8::GenericNamedPropertySetterCallback, v8::GenericNamedPropertyQueryCallback, v8::GenericNamedPropertyDeleterCallback, v8::GenericNamedPropertyEnumeratorCallback, v8::GenericNamedPropertyDefinerCallback, v8::GenericNamedPropertyDescriptorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _qty3154;  // mut Pointer v8::NamedPropertyHandlerConfiguration *
struct _qty3155;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3156;  // mut FunctionProto void (v8::GenericNamedPropertyGetterCallback, v8::GenericNamedPropertySetterCallback, v8::GenericNamedPropertyQueryCallback, v8::GenericNamedPropertyDeleterCallback, v8::GenericNamedPropertyEnumeratorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _qty3157;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3158;  // mut FunctionProto void (v8::GenericNamedPropertyGetterCallback, v8::GenericNamedPropertySetterCallback, v8::GenericNamedPropertyDescriptorCallback, v8::GenericNamedPropertyDeleterCallback, v8::GenericNamedPropertyEnumeratorCallback, v8::GenericNamedPropertyDefinerCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _qty3159;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3160;  // mut LValueReference const v8::NamedPropertyHandlerConfiguration &
struct _qty3161;  // const Record v8::NamedPropertyHandlerConfiguration
struct _qty3162;  // mut FunctionProto void (const v8::NamedPropertyHandlerConfiguration &)
struct _qty3163;  // mut RValueReference v8::NamedPropertyHandlerConfiguration &&
struct _qty3164;  // mut FunctionProto void (v8::NamedPropertyHandlerConfiguration &&)
struct _qty3165;  // mut Record v8::IndexedPropertyHandlerConfiguration
struct _qty3166;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3167;  // mut FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyQueryCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, v8::IndexedPropertyDefinerCallback, v8::IndexedPropertyDescriptorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _qty3168;  // mut Pointer v8::IndexedPropertyHandlerConfiguration *
struct _qty3169;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3170;  // mut FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyQueryCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _qty3171;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3172;  // mut FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyDescriptorCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, v8::IndexedPropertyDefinerCallback, Local<v8::Value>, v8::PropertyHandlerFlags)
struct _qty3173;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3174;  // mut LValueReference const v8::IndexedPropertyHandlerConfiguration &
struct _qty3175;  // const Record v8::IndexedPropertyHandlerConfiguration
struct _qty3176;  // mut FunctionProto void (const v8::IndexedPropertyHandlerConfiguration &)
struct _qty3177;  // mut RValueReference v8::IndexedPropertyHandlerConfiguration &&
struct _qty3178;  // mut FunctionProto void (v8::IndexedPropertyHandlerConfiguration &&)
struct _qty3179;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3180;  // mut TemplateSpecialization Local<v8::ObjectTemplate>
struct _qty3181;  // mut FunctionProto Local<v8::ObjectTemplate> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _qty3182;  // mut TemplateSpecialization MaybeLocal<v8::ObjectTemplate>
struct _qty3183;  // mut FunctionProto MaybeLocal<v8::ObjectTemplate> (v8::Isolate *, size_t)
struct _qty3184;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3185;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty3186;  // mut FunctionProto MaybeLocal<v8::Object> (Local<v8::Context>)
struct _qty3187;  // mut Pointer v8::ObjectTemplate *
struct _qty3188;  // mut TemplateSpecialization Local<v8::String>
struct _qty3189;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3190;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty3191;  // mut FunctionProto void (Local<v8::String>, v8::AccessorGetterCallback, v8::AccessorSetterCallback, Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::SideEffectType, v8::SideEffectType)
struct _qty3192;  // mut TemplateSpecialization Local<v8::Name>
struct _qty3193;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3194;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty3195;  // mut FunctionProto void (Local<v8::Name>, v8::AccessorNameGetterCallback, v8::AccessorNameSetterCallback, Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute, Local<v8::AccessorSignature>, v8::SideEffectType, v8::SideEffectType)
struct _qty3196;  // mut FunctionProto void (const v8::NamedPropertyHandlerConfiguration &)
struct _qty3197;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3198;  // mut FunctionProto void (v8::IndexedPropertyGetterCallback, v8::IndexedPropertySetterCallback, v8::IndexedPropertyQueryCallback, v8::IndexedPropertyDeleterCallback, v8::IndexedPropertyEnumeratorCallback, Local<v8::Value>)
struct _qty3199;  // mut FunctionProto void (const v8::IndexedPropertyHandlerConfiguration &)
struct _qty3200;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3201;  // mut FunctionProto void (v8::FunctionCallback, Local<v8::Value>)
struct _qty3202;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3203;  // mut FunctionProto void (v8::AccessCheckCallback, Local<v8::Value>)
struct _qty3204;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3205;  // mut FunctionProto void (v8::AccessCheckCallback, const v8::NamedPropertyHandlerConfiguration &, const v8::IndexedPropertyHandlerConfiguration &, Local<v8::Value>)
struct _qty3206;  // mut FunctionProto v8::ObjectTemplate *(v8::Data *)
struct _qty3207;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3208;  // mut TemplateSpecialization Local<v8::Signature>
struct _qty3209;  // mut FunctionProto Local<v8::Signature> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _qty3210;  // mut Pointer v8::Signature *
struct _qty3211;  // mut FunctionProto v8::Signature *(v8::Data *)
struct _qty3212;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3213;  // mut TemplateSpecialization Local<v8::AccessorSignature>
struct _qty3214;  // mut FunctionProto Local<v8::AccessorSignature> (v8::Isolate *, Local<v8::FunctionTemplate>)
struct _qty3215;  // mut Pointer v8::AccessorSignature *
struct _qty3216;  // mut FunctionProto v8::AccessorSignature *(v8::Data *)
struct _qty3217;  // mut Record v8::Extension
struct _qty3218;  // mut Pointer const char **
struct _qty3219;  // mut FunctionProto void (const char *, const char *, int, const char **, int)
struct _qty3220;  // mut Pointer v8::Extension *
struct _qty3221;  // mut TemplateSpecialization Local<v8::String>
struct _qty3222;  // mut TemplateSpecialization Local<v8::FunctionTemplate>
struct _qty3223;  // mut FunctionProto Local<v8::FunctionTemplate> (v8::Isolate *, Local<v8::String>)
struct _qty3224;  // mut Pointer const v8::Extension *
struct _qty3225;  // mut Pointer const String::ExternalOneByteStringResource *
struct _qty3226;  // mut FunctionProto const String::ExternalOneByteStringResource *() const
struct _qty3227;  // mut FunctionProto const char **() const
struct _qty3228;  // mut LValueReference const v8::Extension &
struct _qty3229;  // const Record v8::Extension
struct _qty3230;  // mut FunctionProto void (const v8::Extension &)
struct _qty3231;  // mut Elaborated std::unique_ptr<Extension>
struct _qty3232;  // mut TemplateSpecialization unique_ptr<v8::Extension>
struct _qty3233;  // mut Record std::unique_ptr<v8::Extension, std::default_delete<v8::Extension> >
struct _qty3234;  // mut FunctionProto void (std::unique_ptr<Extension>)
struct _qty3235;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty3236;  // mut FunctionProto Local<v8::Primitive> (v8::Isolate *)
struct _qty3237;  // mut TemplateSpecialization Local<v8::Primitive>
struct _qty3238;  // mut FunctionProto Local<v8::Primitive> (v8::Isolate *)
struct _qty3239;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty3240;  // mut FunctionProto Local<v8::Boolean> (v8::Isolate *)
struct _qty3241;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty3242;  // mut FunctionProto Local<v8::Boolean> (v8::Isolate *)
struct _qty3243;  // mut Record v8::ResourceConstraints
struct _qty3244;  // mut FunctionProto void (size_t, size_t)
struct _qty3245;  // mut Pointer v8::ResourceConstraints *
struct _qty3246;  // mut FunctionProto void (uint64_t, uint64_t)
struct _qty3247;  // mut FunctionProto uint32_t *() const
struct _qty3248;  // mut Pointer const v8::ResourceConstraints *
struct _qty3249;  // mut FunctionProto void (uint32_t *)
struct _qty3250;  // mut FunctionProto void (size_t)
struct _qty3251;  // mut LValueReference const v8::ResourceConstraints &
struct _qty3252;  // const Record v8::ResourceConstraints
struct _qty3253;  // mut FunctionProto void (const v8::ResourceConstraints &)
struct _qty3254;  // mut RValueReference v8::ResourceConstraints &&
struct _qty3255;  // mut FunctionProto void (v8::ResourceConstraints &&)
struct _qty3256;  // mut Typedef v8::FatalErrorCallback
struct _qty3257;  // mut FunctionProto void (const char *, const char *)
struct _qty3258;  // mut Pointer void (*)(const char *, const char *)
struct _qty3259;  // mut Typedef v8::OOMErrorCallback
struct _qty3260;  // mut FunctionProto void (const char *, bool)
struct _qty3261;  // mut Pointer void (*)(const char *, bool)
struct _qty3262;  // mut Typedef v8::DcheckErrorCallback
struct _qty3263;  // mut FunctionProto void (const char *, int, const char *)
struct _qty3264;  // mut Pointer void (*)(const char *, int, const char *)
struct _qty3265;  // mut Typedef v8::MessageCallback
struct _qty3266;  // mut TemplateSpecialization Local<v8::Message>
struct _qty3267;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3268;  // mut FunctionProto void (Local<v8::Message>, Local<v8::Value>)
struct _qty3269;  // mut Pointer void (*)(Local<v8::Message>, Local<v8::Value>)
struct _qty3270;  // mut Typedef v8::LogEventCallback
struct _qty3271;  // mut FunctionProto void (const char *, int)
struct _qty3272;  // mut Pointer void (*)(const char *, int)
struct _qty3273;  // mut Record v8::Exception
struct _qty3274;  // mut TemplateSpecialization Local<v8::String>
struct _qty3275;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3276;  // mut FunctionProto Local<v8::Value> (Local<v8::String>)
struct _qty3277;  // mut TemplateSpecialization Local<v8::String>
struct _qty3278;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3279;  // mut FunctionProto Local<v8::Value> (Local<v8::String>)
struct _qty3280;  // mut TemplateSpecialization Local<v8::String>
struct _qty3281;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3282;  // mut FunctionProto Local<v8::Value> (Local<v8::String>)
struct _qty3283;  // mut TemplateSpecialization Local<v8::String>
struct _qty3284;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3285;  // mut FunctionProto Local<v8::Value> (Local<v8::String>)
struct _qty3286;  // mut TemplateSpecialization Local<v8::String>
struct _qty3287;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3288;  // mut FunctionProto Local<v8::Value> (Local<v8::String>)
struct _qty3289;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3290;  // mut TemplateSpecialization Local<v8::Message>
struct _qty3291;  // mut FunctionProto Local<v8::Message> (v8::Isolate *, Local<v8::Value>)
struct _qty3292;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3293;  // mut TemplateSpecialization Local<v8::StackTrace>
struct _qty3294;  // mut FunctionProto Local<v8::StackTrace> (Local<v8::Value>)
struct _qty3295;  // mut Typedef v8::CounterLookupCallback
struct _qty3296;  // mut FunctionProto int *(const char *)
struct _qty3297;  // mut Pointer int *(*)(const char *)
struct _qty3298;  // mut Typedef v8::CreateHistogramCallback
struct _qty3299;  // mut FunctionProto void *(const char *, int, int, size_t)
struct _qty3300;  // mut Pointer void *(*)(const char *, int, int, size_t)
struct _qty3301;  // mut Typedef v8::AddHistogramSampleCallback
struct _qty3302;  // mut FunctionProto void (void *, int)
struct _qty3303;  // mut Pointer void (*)(void *, int)
struct _qty3304;  // mut Typedef v8::BeforeCallEnteredCallback
struct _qty3305;  // mut Pointer void (*)(v8::Isolate *)
struct _qty3306;  // mut Typedef v8::CallCompletedCallback
struct _qty3307;  // mut Typedef v8::HostImportModuleDynamicallyCallback
struct _qty3308;  // mut TemplateSpecialization MaybeLocal<v8::Promise>
struct _qty3309;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3310;  // mut TemplateSpecialization Local<v8::ScriptOrModule>
struct _qty3311;  // mut TemplateSpecialization Local<v8::String>
struct _qty3312;  // mut FunctionProto MaybeLocal<v8::Promise> (Local<v8::Context>, Local<v8::ScriptOrModule>, Local<v8::String>)
struct _qty3313;  // mut Pointer MaybeLocal<v8::Promise> (*)(Local<v8::Context>, Local<v8::ScriptOrModule>, Local<v8::String>)
struct _qty3314;  // mut Typedef v8::HostInitializeImportMetaObjectCallback
struct _qty3315;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3316;  // mut TemplateSpecialization Local<v8::Module>
struct _qty3317;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3318;  // mut FunctionProto void (Local<v8::Context>, Local<v8::Module>, Local<v8::Object>)
struct _qty3319;  // mut Pointer void (*)(Local<v8::Context>, Local<v8::Module>, Local<v8::Object>)
struct _qty3320;  // mut Typedef v8::PrepareStackTraceCallback
struct _qty3321;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty3322;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3323;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3324;  // mut TemplateSpecialization Local<v8::Array>
struct _qty3325;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>, Local<v8::Value>, Local<v8::Array>)
struct _qty3326;  // mut Pointer MaybeLocal<v8::Value> (*)(Local<v8::Context>, Local<v8::Value>, Local<v8::Array>)
struct _qty3327;  // mut Enum v8::PromiseHookType
struct _qty3328;  // mut Typedef v8::PromiseHook
struct _qty3329;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty3330;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3331;  // mut FunctionProto void (v8::PromiseHookType, Local<v8::Promise>, Local<v8::Value>)
struct _qty3332;  // mut Pointer void (*)(v8::PromiseHookType, Local<v8::Promise>, Local<v8::Value>)
struct _qty3333;  // mut Enum v8::PromiseRejectEvent
struct _qty3334;  // mut Record v8::PromiseRejectMessage
struct _qty3335;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty3336;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3337;  // mut FunctionProto void (Local<v8::Promise>, v8::PromiseRejectEvent, Local<v8::Value>)
struct _qty3338;  // mut Pointer v8::PromiseRejectMessage *
struct _qty3339;  // mut TemplateSpecialization Local<v8::Promise>
struct _qty3340;  // mut FunctionProto Local<v8::Promise> () const
struct _qty3341;  // mut Pointer const v8::PromiseRejectMessage *
struct _qty3342;  // mut FunctionProto v8::PromiseRejectEvent () const
struct _qty3343;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3344;  // mut FunctionProto Local<v8::Value> () const
struct _qty3345;  // mut Typedef v8::PromiseRejectCallback
struct _qty3346;  // mut FunctionProto void (v8::PromiseRejectMessage)
struct _qty3347;  // mut Pointer void (*)(v8::PromiseRejectMessage)
struct _qty3348;  // mut Typedef v8::MicrotasksCompletedCallback
struct _qty3349;  // mut Typedef v8::MicrotasksCompletedCallbackWithData
struct _qty3350;  // mut FunctionProto void (v8::Isolate *, void *)
struct _qty3351;  // mut Pointer void (*)(v8::Isolate *, void *)
struct _qty3352;  // mut Typedef v8::MicrotaskCallback
struct _qty3353;  // mut Pointer void (*)(void *)
struct _qty3354;  // mut Enum v8::MicrotasksPolicy
struct _qty3355;  // mut Elaborated std::unique_ptr<MicrotaskQueue>
struct _qty3356;  // mut TemplateSpecialization unique_ptr<v8::MicrotaskQueue>
struct _qty3357;  // mut Record std::unique_ptr<v8::MicrotaskQueue, std::default_delete<v8::MicrotaskQueue> >
struct _qty3358;  // mut FunctionProto std::unique_ptr<MicrotaskQueue> (v8::Isolate *, v8::MicrotasksPolicy)
struct _qty3359;  // mut FunctionProto void ()
struct _qty3360;  // mut Pointer v8::MicrotaskQueue *
struct _qty3361;  // mut TemplateSpecialization Local<v8::Function>
struct _qty3362;  // mut FunctionProto void (v8::Isolate *, Local<v8::Function>)
struct _qty3363;  // mut Pointer v8::Isolate *
struct _qty3364;  // mut FunctionProto void (v8::Isolate *, v8::MicrotaskCallback, void *)
struct _qty3365;  // mut FunctionProto void (v8::MicrotasksCompletedCallbackWithData, void *)
struct _qty3366;  // mut Pointer const v8::MicrotaskQueue *
struct _qty3367;  // mut LValueReference const v8::MicrotaskQueue &
struct _qty3368;  // const Record v8::MicrotaskQueue
struct _qty3369;  // mut FunctionProto void (const v8::MicrotaskQueue &)
struct _qty3370;  // mut LValueReference v8::MicrotaskQueue &
struct _qty3371;  // mut FunctionProto v8::MicrotaskQueue &(const v8::MicrotaskQueue &)
struct _qty3372;  // mut Record v8::MicrotasksScope
struct _qty3373;  // mut Enum v8::MicrotasksScope::Type
struct _qty3374;  // mut FunctionProto void (v8::Isolate *, v8::MicrotasksScope::Type)
struct _qty3375;  // mut Pointer v8::MicrotasksScope *
struct _qty3376;  // mut FunctionProto void (v8::Isolate *, v8::MicrotaskQueue *, v8::MicrotasksScope::Type)
struct _qty3377;  // mut FunctionProto void ()
struct _qty3378;  // mut FunctionProto bool (v8::Isolate *)
struct _qty3379;  // mut LValueReference const v8::MicrotasksScope &
struct _qty3380;  // const Record v8::MicrotasksScope
struct _qty3381;  // mut FunctionProto void (const v8::MicrotasksScope &)
struct _qty3382;  // mut LValueReference v8::MicrotasksScope &
struct _qty3383;  // mut FunctionProto v8::MicrotasksScope &(const v8::MicrotasksScope &)
struct _qty3384;  // mut Typedef v8::FailedAccessCheckCallback
struct _qty3385;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3386;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3387;  // mut FunctionProto void (Local<v8::Object>, v8::AccessType, Local<v8::Value>)
struct _qty3388;  // mut Pointer void (*)(Local<v8::Object>, v8::AccessType, Local<v8::Value>)
struct _qty3389;  // mut Typedef v8::AllowCodeGenerationFromStringsCallback
struct _qty3390;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3391;  // mut TemplateSpecialization Local<v8::String>
struct _qty3392;  // mut FunctionProto bool (Local<v8::Context>, Local<v8::String>)
struct _qty3393;  // mut Pointer bool (*)(Local<v8::Context>, Local<v8::String>)
struct _qty3394;  // mut Typedef v8::ExtensionCallback
struct _qty3395;  // mut LValueReference const FunctionCallbackInfo<v8::Value> &
struct _qty3396;  // const TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _qty3397;  // mut FunctionProto bool (const FunctionCallbackInfo<v8::Value> &)
struct _qty3398;  // mut Pointer bool (*)(const FunctionCallbackInfo<v8::Value> &)
struct _qty3399;  // mut Typedef v8::AllowWasmCodeGenerationCallback
struct _qty3400;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3401;  // mut TemplateSpecialization Local<v8::String>
struct _qty3402;  // mut FunctionProto bool (Local<v8::Context>, Local<v8::String>)
struct _qty3403;  // mut Pointer bool (*)(Local<v8::Context>, Local<v8::String>)
struct _qty3404;  // mut Typedef v8::ApiImplementationCallback
struct _qty3405;  // mut LValueReference const FunctionCallbackInfo<v8::Value> &
struct _qty3406;  // const TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _qty3407;  // mut FunctionProto void (const FunctionCallbackInfo<v8::Value> &)
struct _qty3408;  // mut Pointer void (*)(const FunctionCallbackInfo<v8::Value> &)
struct _qty3409;  // mut Typedef v8::WasmStreamingCallback
struct _qty3410;  // mut LValueReference const FunctionCallbackInfo<v8::Value> &
struct _qty3411;  // const TemplateSpecialization FunctionCallbackInfo<v8::Value>
struct _qty3412;  // mut FunctionProto void (const FunctionCallbackInfo<v8::Value> &)
struct _qty3413;  // mut Pointer void (*)(const FunctionCallbackInfo<v8::Value> &)
struct _qty3414;  // mut Typedef v8::WasmThreadsEnabledCallback
struct _qty3415;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3416;  // mut FunctionProto bool (Local<v8::Context>)
struct _qty3417;  // mut Pointer bool (*)(Local<v8::Context>)
struct _qty3418;  // mut Enum v8::GCType
struct _qty3419;  // mut Enum v8::GCCallbackFlags
struct _qty3420;  // mut Typedef v8::GCCallback
struct _qty3421;  // mut FunctionProto void (v8::GCType, v8::GCCallbackFlags)
struct _qty3422;  // mut Pointer void (*)(v8::GCType, v8::GCCallbackFlags)
struct _qty3423;  // mut Typedef v8::InterruptCallback
struct _qty3424;  // mut Typedef v8::NearHeapLimitCallback
struct _qty3425;  // mut FunctionProto size_t (void *, size_t, size_t)
struct _qty3426;  // mut Pointer size_t (*)(void *, size_t, size_t)
struct _qty3427;  // mut Record v8::HeapStatistics
struct _qty3428;  // mut Pointer v8::HeapStatistics *
struct _qty3429;  // mut Record v8::HeapSpaceStatistics
struct _qty3430;  // mut Pointer v8::HeapSpaceStatistics *
struct _qty3431;  // mut FunctionProto const char *()
struct _qty3432;  // mut Record v8::HeapObjectStatistics
struct _qty3433;  // mut Pointer v8::HeapObjectStatistics *
struct _qty3434;  // mut Record v8::HeapCodeStatistics
struct _qty3435;  // mut Pointer v8::HeapCodeStatistics *
struct _qty3436;  // mut Record v8::JitCodeEvent
struct _qty3437;  // mut Enum v8::JitCodeEvent::EventType
struct _qty3438;  // mut Enum v8::JitCodeEvent::PositionType
struct _qty3439;  // mut Enum v8::JitCodeEvent::CodeType
struct _qty3440;  // mut TemplateSpecialization Local<v8::UnboundScript>
struct _qty3441;  // mut Record v8::JitCodeEvent::name_t
struct _qty3442;  // mut Record v8::JitCodeEvent::line_info_t
struct _qty3443;  // mut Record v8::JitCodeEvent::(anonymous union at D:\gen8/v8/include/v8.h:7072:3)
struct _qty3444;  // mut Elaborated struct name_t
struct _qty3445;  // mut Elaborated struct line_info_t
struct _qty3446;  // mut Enum v8::RAILMode
struct _qty3447;  // mut Enum v8::JitCodeEventOptions
struct _qty3448;  // mut Typedef v8::JitCodeEventHandler
struct _qty3449;  // mut Pointer const v8::JitCodeEvent *
struct _qty3450;  // mut FunctionProto void (const v8::JitCodeEvent *)
struct _qty3451;  // mut Pointer void (*)(const v8::JitCodeEvent *)
struct _qty3452;  // mut Typedef v8::UnhandledExceptionCallback
struct _qty3453;  // mut Pointer _EXCEPTION_POINTERS *
struct _qty3454;  // mut Record _EXCEPTION_POINTERS
struct _qty3455;  // mut FunctionProto int (_EXCEPTION_POINTERS *)
struct _qty3456;  // mut Pointer int (*)(_EXCEPTION_POINTERS *)
struct _qty3457;  // mut Record v8::ExternalResourceVisitor
struct _qty3458;  // mut FunctionProto void ()
struct _qty3459;  // mut Pointer v8::ExternalResourceVisitor *
struct _qty3460;  // mut TemplateSpecialization Local<v8::String>
struct _qty3461;  // mut FunctionProto void (Local<v8::String>)
struct _qty3462;  // mut LValueReference const v8::ExternalResourceVisitor &
struct _qty3463;  // const Record v8::ExternalResourceVisitor
struct _qty3464;  // mut LValueReference v8::ExternalResourceVisitor &
struct _qty3465;  // mut FunctionProto v8::ExternalResourceVisitor &(const v8::ExternalResourceVisitor &)
struct _qty3466;  // mut Record v8::PersistentHandleVisitor
struct _qty3467;  // mut FunctionProto void ()
struct _qty3468;  // mut Pointer v8::PersistentHandleVisitor *
struct _qty3469;  // mut Pointer Persistent<v8::Value> *
struct _qty3470;  // mut FunctionProto void (Persistent<v8::Value> *, uint16_t)
struct _qty3471;  // mut LValueReference const v8::PersistentHandleVisitor &
struct _qty3472;  // const Record v8::PersistentHandleVisitor
struct _qty3473;  // mut LValueReference v8::PersistentHandleVisitor &
struct _qty3474;  // mut FunctionProto v8::PersistentHandleVisitor &(const v8::PersistentHandleVisitor &)
struct _qty3475;  // mut Enum v8::MemoryPressureLevel
struct _qty3476;  // mut Record v8::EmbedderHeapTracer
struct _qty3477;  // mut Enum v8::EmbedderHeapTracer::TraceFlags
struct _qty3478;  // mut Enum v8::EmbedderHeapTracer::EmbedderStackState
struct _qty3479;  // mut Record v8::EmbedderHeapTracer::TracedGlobalHandleVisitor
struct _qty3480;  // mut FunctionProto void ()
struct _qty3481;  // mut Pointer v8::EmbedderHeapTracer::TracedGlobalHandleVisitor *
struct _qty3482;  // mut LValueReference const TracedGlobal<v8::Value> &
struct _qty3483;  // const TemplateSpecialization TracedGlobal<v8::Value>
struct _qty3484;  // mut FunctionProto void (const TracedGlobal<v8::Value> &)
struct _qty3485;  // mut LValueReference const v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &
struct _qty3486;  // const Record v8::EmbedderHeapTracer::TracedGlobalHandleVisitor
struct _qty3487;  // mut LValueReference v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &
struct _qty3488;  // mut FunctionProto v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &(const v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &)
struct _qty3489;  // mut Record v8::EmbedderHeapTracer::TraceSummary
struct _qty3490;  // mut FunctionProto void ()
struct _qty3491;  // mut Pointer v8::EmbedderHeapTracer *
struct _qty3492;  // mut FunctionProto void (v8::EmbedderHeapTracer::TracedGlobalHandleVisitor *)
struct _qty3493;  // mut LValueReference const std::vector<std::pair<void *, void *> > &
struct _qty3494;  // const Elaborated std::vector<std::pair<void *, void *> >
struct _qty3495;  // mut TemplateSpecialization vector<std::pair<void *, void *> >
struct _qty3496;  // mut Record std::vector<std::pair<void *, void *>, std::allocator<std::pair<void *, void *> > >
struct _qty3497;  // mut FunctionProto void (const std::vector<std::pair<void *, void *> > &)
struct _qty3498;  // mut LValueReference const TracedGlobal<v8::Value> &
struct _qty3499;  // const TemplateSpecialization TracedGlobal<v8::Value>
struct _qty3500;  // mut FunctionProto void (const TracedGlobal<v8::Value> &)
struct _qty3501;  // mut FunctionProto void (v8::EmbedderHeapTracer::TraceFlags)
struct _qty3502;  // mut FunctionProto bool (double)
struct _qty3503;  // mut Pointer v8::EmbedderHeapTracer::TraceSummary *
struct _qty3504;  // mut FunctionProto void (v8::EmbedderHeapTracer::TraceSummary *)
struct _qty3505;  // mut FunctionProto void (v8::EmbedderHeapTracer::EmbedderStackState)
struct _qty3506;  // mut LValueReference const v8::TracedGlobal<v8::Value> &
struct _qty3507;  // const Elaborated v8::TracedGlobal<v8::Value>
struct _qty3508;  // mut TemplateSpecialization TracedGlobal<v8::Value>
struct _qty3509;  // mut FunctionProto bool (const v8::TracedGlobal<v8::Value> &)
struct _qty3510;  // mut FunctionProto v8::Isolate *() const
struct _qty3511;  // mut Pointer const v8::EmbedderHeapTracer *
struct _qty3512;  // mut LValueReference const v8::EmbedderHeapTracer &
struct _qty3513;  // const Record v8::EmbedderHeapTracer
struct _qty3514;  // mut LValueReference v8::EmbedderHeapTracer &
struct _qty3515;  // mut FunctionProto v8::EmbedderHeapTracer &(const v8::EmbedderHeapTracer &)
struct _qty3516;  // mut Record v8::SerializeInternalFieldsCallback
struct _qty3517;  // mut Typedef v8::SerializeInternalFieldsCallback::CallbackFunction
struct _qty3518;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3519;  // mut FunctionProto v8::StartupData (Local<v8::Object>, int, void *)
struct _qty3520;  // mut Pointer v8::StartupData (*)(Local<v8::Object>, int, void *)
struct _qty3521;  // mut FunctionProto void (v8::SerializeInternalFieldsCallback::CallbackFunction, void *)
struct _qty3522;  // mut Pointer v8::SerializeInternalFieldsCallback *
struct _qty3523;  // mut LValueReference const v8::SerializeInternalFieldsCallback &
struct _qty3524;  // const Record v8::SerializeInternalFieldsCallback
struct _qty3525;  // mut FunctionProto void (const v8::SerializeInternalFieldsCallback &)
struct _qty3526;  // mut RValueReference v8::SerializeInternalFieldsCallback &&
struct _qty3527;  // mut FunctionProto void (v8::SerializeInternalFieldsCallback &&) noexcept
struct _qty3528;  // mut Typedef v8::SerializeEmbedderFieldsCallback
struct _qty3529;  // mut Record v8::DeserializeInternalFieldsCallback
struct _qty3530;  // mut Typedef v8::DeserializeInternalFieldsCallback::CallbackFunction
struct _qty3531;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3532;  // mut FunctionProto void (Local<v8::Object>, int, v8::StartupData, void *)
struct _qty3533;  // mut Pointer void (*)(Local<v8::Object>, int, v8::StartupData, void *)
struct _qty3534;  // mut FunctionProto void (v8::DeserializeInternalFieldsCallback::CallbackFunction, void *)
struct _qty3535;  // mut Pointer v8::DeserializeInternalFieldsCallback *
struct _qty3536;  // mut Pointer void (*)(Local<v8::Object>, int, v8::StartupData, void *)
struct _qty3537;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3538;  // mut FunctionProto void (Local<v8::Object>, int, v8::StartupData, void *)
struct _qty3539;  // mut LValueReference const v8::DeserializeInternalFieldsCallback &
struct _qty3540;  // const Record v8::DeserializeInternalFieldsCallback
struct _qty3541;  // mut FunctionProto void (const v8::DeserializeInternalFieldsCallback &)
struct _qty3542;  // mut RValueReference v8::DeserializeInternalFieldsCallback &&
struct _qty3543;  // mut FunctionProto void (v8::DeserializeInternalFieldsCallback &&) noexcept
struct _qty3544;  // mut Typedef v8::DeserializeEmbedderFieldsCallback
struct _qty3545;  // mut Record v8::Isolate::CreateParams
struct _qty3546;  // mut Pointer v8::Isolate::CreateParams *
struct _qty3547;  // mut Pointer v8::StartupData *
struct _qty3548;  // mut Pointer ArrayBuffer::Allocator *
struct _qty3549;  // mut Pointer const intptr_t *
struct _qty3550;  // mut Record v8::Isolate::Scope
struct _qty3551;  // mut Pointer v8::Isolate::Scope *
struct _qty3552;  // mut LValueReference const v8::Isolate::Scope &
struct _qty3553;  // const Record v8::Isolate::Scope
struct _qty3554;  // mut FunctionProto void (const v8::Isolate::Scope &)
struct _qty3555;  // mut LValueReference v8::Isolate::Scope &
struct _qty3556;  // mut FunctionProto v8::Isolate::Scope &(const v8::Isolate::Scope &)
struct _qty3557;  // mut Record v8::Isolate::DisallowJavascriptExecutionScope
struct _qty3558;  // mut Enum v8::Isolate::DisallowJavascriptExecutionScope::OnFailure
struct _qty3559;  // mut FunctionProto void (v8::Isolate *, v8::Isolate::DisallowJavascriptExecutionScope::OnFailure)
struct _qty3560;  // mut Pointer v8::Isolate::DisallowJavascriptExecutionScope *
struct _qty3561;  // mut FunctionProto void ()
struct _qty3562;  // mut LValueReference const v8::Isolate::DisallowJavascriptExecutionScope &
struct _qty3563;  // const Record v8::Isolate::DisallowJavascriptExecutionScope
struct _qty3564;  // mut FunctionProto void (const v8::Isolate::DisallowJavascriptExecutionScope &)
struct _qty3565;  // mut LValueReference v8::Isolate::DisallowJavascriptExecutionScope &
struct _qty3566;  // mut FunctionProto v8::Isolate::DisallowJavascriptExecutionScope &(const v8::Isolate::DisallowJavascriptExecutionScope &)
struct _qty3567;  // mut Record v8::Isolate::AllowJavascriptExecutionScope
struct _qty3568;  // mut Pointer v8::Isolate::AllowJavascriptExecutionScope *
struct _qty3569;  // mut FunctionProto void ()
struct _qty3570;  // mut LValueReference const v8::Isolate::AllowJavascriptExecutionScope &
struct _qty3571;  // const Record v8::Isolate::AllowJavascriptExecutionScope
struct _qty3572;  // mut FunctionProto void (const v8::Isolate::AllowJavascriptExecutionScope &)
struct _qty3573;  // mut LValueReference v8::Isolate::AllowJavascriptExecutionScope &
struct _qty3574;  // mut FunctionProto v8::Isolate::AllowJavascriptExecutionScope &(const v8::Isolate::AllowJavascriptExecutionScope &)
struct _qty3575;  // mut Record v8::Isolate::SuppressMicrotaskExecutionScope
struct _qty3576;  // mut Pointer v8::Isolate::SuppressMicrotaskExecutionScope *
struct _qty3577;  // mut FunctionProto void (v8::MicrotaskQueue *)
struct _qty3578;  // mut FunctionProto void ()
struct _qty3579;  // mut LValueReference const v8::Isolate::SuppressMicrotaskExecutionScope &
struct _qty3580;  // const Record v8::Isolate::SuppressMicrotaskExecutionScope
struct _qty3581;  // mut FunctionProto void (const v8::Isolate::SuppressMicrotaskExecutionScope &)
struct _qty3582;  // mut LValueReference v8::Isolate::SuppressMicrotaskExecutionScope &
struct _qty3583;  // mut FunctionProto v8::Isolate::SuppressMicrotaskExecutionScope &(const v8::Isolate::SuppressMicrotaskExecutionScope &)
struct _qty3584;  // mut Record v8::Isolate::SafeForTerminationScope
struct _qty3585;  // mut FunctionProto void (v8::Isolate *)
struct _qty3586;  // mut Pointer v8::Isolate::SafeForTerminationScope *
struct _qty3587;  // mut FunctionProto void ()
struct _qty3588;  // mut LValueReference const v8::Isolate::SafeForTerminationScope &
struct _qty3589;  // const Record v8::Isolate::SafeForTerminationScope
struct _qty3590;  // mut FunctionProto void (const v8::Isolate::SafeForTerminationScope &)
struct _qty3591;  // mut LValueReference v8::Isolate::SafeForTerminationScope &
struct _qty3592;  // mut FunctionProto v8::Isolate::SafeForTerminationScope &(const v8::Isolate::SafeForTerminationScope &)
struct _qty3593;  // mut Enum v8::Isolate::GarbageCollectionType
struct _qty3594;  // mut Enum v8::Isolate::UseCounterFeature
struct _qty3595;  // mut Enum v8::Isolate::MessageErrorLevel
struct _qty3596;  // mut Typedef v8::Isolate::UseCounterCallback
struct _qty3597;  // mut FunctionProto void (v8::Isolate *, v8::Isolate::UseCounterFeature)
struct _qty3598;  // mut Pointer void (*)(v8::Isolate *, v8::Isolate::UseCounterFeature)
struct _qty3599;  // mut LValueReference const v8::Isolate::CreateParams &
struct _qty3600;  // const Record v8::Isolate::CreateParams
struct _qty3601;  // mut FunctionProto void (v8::Isolate *, const v8::Isolate::CreateParams &)
struct _qty3602;  // mut FunctionProto v8::Isolate *(const v8::Isolate::CreateParams &)
struct _qty3603;  // mut Typedef v8::Isolate::AbortOnUncaughtExceptionCallback
struct _qty3604;  // mut Pointer bool (*)(v8::Isolate *)
struct _qty3605;  // mut FunctionProto void (v8::Isolate::AbortOnUncaughtExceptionCallback)
struct _qty3606;  // mut FunctionProto void (v8::HostImportModuleDynamicallyCallback)
struct _qty3607;  // mut FunctionProto void (v8::HostInitializeImportMetaObjectCallback)
struct _qty3608;  // mut FunctionProto void (v8::PrepareStackTraceCallback)
struct _qty3609;  // mut FunctionProto void (v8::MemoryPressureLevel)
struct _qty3610;  // mut FunctionProto void (uint32_t, void *)
struct _qty3611;  // mut FunctionProto void *(uint32_t)
struct _qty3612;  // mut TemplateTypeParm T
struct _qty3613;  // mut TemplateSpecialization MaybeLocal<T>
struct _qty3614;  // mut FunctionProto MaybeLocal<T> (size_t)
struct _qty3615;  // mut FunctionProto void (v8::HeapStatistics *)
struct _qty3616;  // mut FunctionProto bool (v8::HeapSpaceStatistics *, size_t)
struct _qty3617;  // mut FunctionProto bool (v8::HeapObjectStatistics *, size_t)
struct _qty3618;  // mut FunctionProto bool (v8::HeapCodeStatistics *)
struct _qty3619;  // mut LValueReference const v8::RegisterState &
struct _qty3620;  // const Record v8::RegisterState
struct _qty3621;  // mut Pointer v8::SampleInfo *
struct _qty3622;  // mut FunctionProto void (const v8::RegisterState &, void **, size_t, v8::SampleInfo *)
struct _qty3623;  // mut FunctionProto int64_t (int64_t)
struct _qty3624;  // mut Pointer v8::HeapProfiler *
struct _qty3625;  // mut FunctionProto v8::HeapProfiler *()
struct _qty3626;  // mut FunctionProto ArrayBuffer::Allocator *()
struct _qty3627;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3628;  // mut FunctionProto Local<v8::Context> ()
struct _qty3629;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3630;  // mut FunctionProto Local<v8::Context> ()
struct _qty3631;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3632;  // mut FunctionProto Local<v8::Context> ()
struct _qty3633;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3634;  // mut FunctionProto Local<v8::Context> ()
struct _qty3635;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3636;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3637;  // mut FunctionProto Local<v8::Value> (Local<v8::Value>)
struct _qty3638;  // mut Typedef v8::Isolate::GCCallback
struct _qty3639;  // mut FunctionProto void (v8::Isolate *, v8::GCType, v8::GCCallbackFlags)
struct _qty3640;  // mut Pointer void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags)
struct _qty3641;  // mut Typedef v8::Isolate::GCCallbackWithData
struct _qty3642;  // mut FunctionProto void (v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *)
struct _qty3643;  // mut Pointer void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *)
struct _qty3644;  // mut FunctionProto void (v8::Isolate::GCCallbackWithData, void *, v8::GCType)
struct _qty3645;  // mut FunctionProto void (v8::Isolate::GCCallback, v8::GCType)
struct _qty3646;  // mut FunctionProto void (v8::Isolate::GCCallbackWithData, void *)
struct _qty3647;  // mut FunctionProto void (v8::Isolate::GCCallback)
struct _qty3648;  // mut FunctionProto void (v8::EmbedderHeapTracer *)
struct _qty3649;  // mut FunctionProto v8::EmbedderHeapTracer *()
struct _qty3650;  // mut Enum v8::Isolate::AtomicsWaitEvent
struct _qty3651;  // mut Record v8::Isolate::AtomicsWaitWakeHandle
struct _qty3652;  // mut Pointer v8::Isolate::AtomicsWaitWakeHandle *
struct _qty3653;  // mut Typedef v8::Isolate::AtomicsWaitCallback
struct _qty3654;  // mut TemplateSpecialization Local<v8::SharedArrayBuffer>
struct _qty3655;  // mut FunctionProto void (v8::Isolate::AtomicsWaitEvent, Local<v8::SharedArrayBuffer>, size_t, int64_t, double, v8::Isolate::AtomicsWaitWakeHandle *, void *)
struct _qty3656;  // mut Pointer void (*)(v8::Isolate::AtomicsWaitEvent, Local<v8::SharedArrayBuffer>, size_t, int64_t, double, v8::Isolate::AtomicsWaitWakeHandle *, void *)
struct _qty3657;  // mut FunctionProto void (v8::Isolate::AtomicsWaitCallback, void *)
struct _qty3658;  // mut Typedef v8::Isolate::GetExternallyAllocatedMemoryInBytesCallback
struct _qty3659;  // mut Pointer size_t (*)()
struct _qty3660;  // mut FunctionProto void (v8::Isolate::GetExternallyAllocatedMemoryInBytesCallback)
struct _qty3661;  // mut FunctionProto void (v8::InterruptCallback, void *)
struct _qty3662;  // mut FunctionProto void (v8::Isolate::GarbageCollectionType)
struct _qty3663;  // mut FunctionProto void (v8::LogEventCallback)
struct _qty3664;  // mut FunctionProto void (v8::BeforeCallEnteredCallback)
struct _qty3665;  // mut FunctionProto void (v8::CallCompletedCallback)
struct _qty3666;  // mut FunctionProto void (v8::PromiseHook)
struct _qty3667;  // mut FunctionProto void (v8::PromiseRejectCallback)
struct _qty3668;  // mut TemplateSpecialization Local<v8::Function>
struct _qty3669;  // mut FunctionProto void (Local<v8::Function>)
struct _qty3670;  // mut FunctionProto void (v8::MicrotaskCallback, void *)
struct _qty3671;  // mut FunctionProto void (v8::MicrotasksPolicy)
struct _qty3672;  // mut FunctionProto v8::MicrotasksPolicy () const
struct _qty3673;  // mut Pointer const v8::Isolate *
struct _qty3674;  // mut FunctionProto void (v8::MicrotasksCompletedCallback)
struct _qty3675;  // mut FunctionProto void (v8::Isolate::UseCounterCallback)
struct _qty3676;  // mut FunctionProto void (v8::CounterLookupCallback)
struct _qty3677;  // mut FunctionProto void (v8::CreateHistogramCallback)
struct _qty3678;  // mut FunctionProto void (v8::AddHistogramSampleCallback)
struct _qty3679;  // mut FunctionProto int (bool)
struct _qty3680;  // mut FunctionProto void (v8::RAILMode)
struct _qty3681;  // mut FunctionProto void (v8::JitCodeEventOptions, v8::JitCodeEventHandler)
struct _qty3682;  // mut FunctionProto void (uintptr_t)
struct _qty3683;  // mut FunctionProto void (void **, size_t *)
struct _qty3684;  // mut FunctionProto v8::UnwindState ()
struct _qty3685;  // mut FunctionProto void (v8::FatalErrorCallback)
struct _qty3686;  // mut FunctionProto void (v8::OOMErrorCallback)
struct _qty3687;  // mut FunctionProto void (v8::NearHeapLimitCallback, void *)
struct _qty3688;  // mut FunctionProto void (v8::NearHeapLimitCallback, size_t)
struct _qty3689;  // mut FunctionProto void (v8::AllowCodeGenerationFromStringsCallback)
struct _qty3690;  // mut FunctionProto void (v8::AllowWasmCodeGenerationCallback)
struct _qty3691;  // mut FunctionProto void (v8::ExtensionCallback)
struct _qty3692;  // mut FunctionProto void (v8::WasmStreamingCallback)
struct _qty3693;  // mut FunctionProto void (v8::WasmThreadsEnabledCallback)
struct _qty3694;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3695;  // mut FunctionProto bool (v8::MessageCallback, Local<v8::Value>)
struct _qty3696;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3697;  // mut FunctionProto bool (v8::MessageCallback, int, Local<v8::Value>)
struct _qty3698;  // mut FunctionProto void (v8::MessageCallback)
struct _qty3699;  // mut FunctionProto void (v8::FailedAccessCheckCallback)
struct _qty3700;  // mut Elaborated StackTrace::StackTraceOptions
struct _qty3701;  // mut FunctionProto void (bool, int, StackTrace::StackTraceOptions)
struct _qty3702;  // mut FunctionProto void (v8::ExternalResourceVisitor *)
struct _qty3703;  // mut FunctionProto void (v8::PersistentHandleVisitor *)
struct _qty3704;  // mut Enum v8::Isolate::TimeZoneDetection
struct _qty3705;  // mut FunctionProto void (v8::Isolate::TimeZoneDetection)
struct _qty3706;  // mut FunctionProto void ()
struct _qty3707;  // mut LValueReference const v8::Isolate &
struct _qty3708;  // const Record v8::Isolate
struct _qty3709;  // mut FunctionProto void (const v8::Isolate &)
struct _qty3710;  // mut LValueReference v8::Isolate &
struct _qty3711;  // mut FunctionProto v8::Isolate &(const v8::Isolate &)
struct _qty3712;  // mut FunctionProto void (void *, size_t) noexcept
struct _qty3713;  // mut Pointer const v8::StartupData *
struct _qty3714;  // mut Typedef v8::EntropySource
struct _qty3715;  // mut Pointer unsigned char *
struct _qty3716;  // mut FunctionProto bool (unsigned char *, size_t)
struct _qty3717;  // mut Pointer bool (*)(unsigned char *, size_t)
struct _qty3718;  // mut Typedef v8::ReturnAddressLocationResolver
struct _qty3719;  // mut FunctionProto uintptr_t (uintptr_t)
struct _qty3720;  // mut Pointer uintptr_t (*)(uintptr_t)
struct _qty3721;  // mut Record v8::V8
struct _qty3722;  // mut FunctionProto void (v8::StartupData *)
struct _qty3723;  // mut FunctionProto void (v8::DcheckErrorCallback)
struct _qty3724;  // mut FunctionProto void (const char *, size_t)
struct _qty3725;  // mut Pointer char **
struct _qty3726;  // mut FunctionProto void (int *, char **, bool)
struct _qty3727;  // mut FunctionProto void (v8::EntropySource)
struct _qty3728;  // mut FunctionProto void (v8::ReturnAddressLocationResolver)
struct _qty3729;  // mut FunctionProto bool (const char *)
struct _qty3730;  // mut FunctionProto bool (const char *, const char *)
struct _qty3731;  // mut Pointer v8::Platform *
struct _qty3732;  // mut FunctionProto void (v8::Platform *)
struct _qty3733;  // mut FunctionProto bool (bool)
struct _qty3734;  // mut FunctionProto void (v8::UnhandledExceptionCallback)
struct _qty3735;  // mut Record v8::SnapshotCreator
struct _qty3736;  // mut Enum v8::SnapshotCreator::FunctionCodeHandling
struct _qty3737;  // mut FunctionProto void (v8::Isolate *, const intptr_t *, v8::StartupData *)
struct _qty3738;  // mut Pointer v8::SnapshotCreator *
struct _qty3739;  // mut FunctionProto void (const intptr_t *, v8::StartupData *)
struct _qty3740;  // mut FunctionProto void ()
struct _qty3741;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3742;  // mut FunctionProto void (Local<v8::Context>, v8::SerializeInternalFieldsCallback)
struct _qty3743;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3744;  // mut FunctionProto size_t (Local<v8::Context>, v8::SerializeInternalFieldsCallback)
struct _qty3745;  // mut TemplateSpecialization Local<v8::Template>
struct _qty3746;  // mut FunctionProto size_t (Local<v8::Template>)
struct _qty3747;  // mut TemplateTypeParm T
struct _qty3748;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3749;  // mut TemplateSpecialization Local<T>
struct _qty3750;  // mut FunctionProto size_t (Local<v8::Context>, Local<T>)
struct _qty3751;  // mut TemplateTypeParm T
struct _qty3752;  // mut TemplateSpecialization Local<T>
struct _qty3753;  // mut FunctionProto size_t (Local<T>)
struct _qty3754;  // mut FunctionProto v8::StartupData (v8::SnapshotCreator::FunctionCodeHandling)
struct _qty3755;  // mut LValueReference const v8::SnapshotCreator &
struct _qty3756;  // const Record v8::SnapshotCreator
struct _qty3757;  // mut FunctionProto void (const v8::SnapshotCreator &)
struct _qty3758;  // mut TemplateTypeParm T
struct _qty3759;  // mut Pointer const Maybe<T> *
struct _qty3760;  // mut FunctionProto T () const
struct _qty3761;  // mut Pointer T *
struct _qty3762;  // mut FunctionProto bool (T *) const
struct _qty3763;  // mut LValueReference const T &
struct _qty3764;  // const TemplateTypeParm T
struct _qty3765;  // mut FunctionProto T (const T &) const
struct _qty3766;  // mut LValueReference const Maybe<T> &
struct _qty3767;  // const InjectedClassName Maybe<T>
struct _qty3768;  // mut FunctionProto bool (const Maybe<T> &) const
struct _qty3769;  // mut TemplateTypeParm T
struct _qty3770;  // mut TemplateSpecialization Maybe<T>
struct _qty3771;  // mut FunctionProto Maybe<T> ()
struct _qty3772;  // mut TemplateTypeParm T
struct _qty3773;  // mut LValueReference const T &
struct _qty3774;  // const TemplateTypeParm T
struct _qty3775;  // mut TemplateSpecialization Maybe<T>
struct _qty3776;  // mut FunctionProto Maybe<T> (const T &)
struct _qty3777;  // mut Record v8::Maybe<void>
struct _qty3778;  // mut Pointer const v8::Maybe<void> *
struct _qty3779;  // mut LValueReference const v8::Maybe<void> &
struct _qty3780;  // const Record v8::Maybe<void>
struct _qty3781;  // mut FunctionProto bool (const v8::Maybe<void> &) const
struct _qty3782;  // mut FunctionProto void (const v8::Maybe<void> &)
struct _qty3783;  // mut Pointer v8::Maybe<void> *
struct _qty3784;  // mut RValueReference v8::Maybe<void> &&
struct _qty3785;  // mut FunctionProto void (v8::Maybe<void> &&) noexcept
struct _qty3786;  // mut TemplateSpecialization Maybe<void>
struct _qty3787;  // mut FunctionProto Maybe<void> ()
struct _qty3788;  // mut Record v8::TryCatch
struct _qty3789;  // mut Pointer v8::TryCatch *
struct _qty3790;  // mut FunctionProto void ()
struct _qty3791;  // mut Pointer const v8::TryCatch *
struct _qty3792;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3793;  // mut FunctionProto Local<v8::Value> ()
struct _qty3794;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3795;  // mut FunctionProto Local<v8::Value> () const
struct _qty3796;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3797;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty3798;  // mut FunctionProto MaybeLocal<v8::Value> (Local<v8::Context>) const
struct _qty3799;  // mut TemplateSpecialization Local<v8::Message>
struct _qty3800;  // mut FunctionProto Local<v8::Message> () const
struct _qty3801;  // mut FunctionProto void *(v8::TryCatch *)
struct _qty3802;  // mut LValueReference const v8::TryCatch &
struct _qty3803;  // const Record v8::TryCatch
struct _qty3804;  // mut FunctionProto void (const v8::TryCatch &)
struct _qty3805;  // mut Record v8::ExtensionConfiguration
struct _qty3806;  // mut Pointer v8::ExtensionConfiguration *
struct _qty3807;  // mut Decayed const char **
struct _qty3808;  // mut FunctionProto void (int, const char **)
struct _qty3809;  // mut Pointer const v8::ExtensionConfiguration *
struct _qty3810;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3811;  // mut FunctionProto Local<v8::Object> ()
struct _qty3812;  // mut Pointer v8::Context *
struct _qty3813;  // mut TemplateSpecialization MaybeLocal<v8::ObjectTemplate>
struct _qty3814;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty3815;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3816;  // mut FunctionProto Local<v8::Context> (v8::Isolate *, v8::ExtensionConfiguration *, MaybeLocal<v8::ObjectTemplate>, MaybeLocal<v8::Value>, v8::DeserializeInternalFieldsCallback, v8::MicrotaskQueue *)
struct _qty3817;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty3818;  // mut TemplateSpecialization MaybeLocal<v8::Context>
struct _qty3819;  // mut FunctionProto MaybeLocal<v8::Context> (v8::Isolate *, size_t, v8::DeserializeInternalFieldsCallback, v8::ExtensionConfiguration *, MaybeLocal<v8::Value>, v8::MicrotaskQueue *)
struct _qty3820;  // mut TemplateSpecialization Local<v8::ObjectTemplate>
struct _qty3821;  // mut TemplateSpecialization MaybeLocal<v8::Value>
struct _qty3822;  // mut TemplateSpecialization MaybeLocal<v8::Object>
struct _qty3823;  // mut FunctionProto MaybeLocal<v8::Object> (v8::Isolate *, Local<v8::ObjectTemplate>, MaybeLocal<v8::Value>)
struct _qty3824;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3825;  // mut FunctionProto void (Local<v8::Value>)
struct _qty3826;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3827;  // mut FunctionProto Local<v8::Value> ()
struct _qty3828;  // mut Enum v8::Context::EmbedderDataFields
struct _qty3829;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3830;  // mut FunctionProto Local<v8::Value> (int)
struct _qty3831;  // mut TemplateSpecialization Local<v8::Object>
struct _qty3832;  // mut FunctionProto Local<v8::Object> ()
struct _qty3833;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3834;  // mut FunctionProto void (int, Local<v8::Value>)
struct _qty3835;  // mut TemplateSpecialization Local<v8::String>
struct _qty3836;  // mut FunctionProto void (Local<v8::String>)
struct _qty3837;  // mut TemplateTypeParm T
struct _qty3838;  // mut TemplateSpecialization MaybeLocal<T>
struct _qty3839;  // mut FunctionProto MaybeLocal<T> (size_t)
struct _qty3840;  // mut Typedef v8::Context::AbortScriptExecutionCallback
struct _qty3841;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3842;  // mut FunctionProto void (v8::Isolate *, Local<v8::Context>)
struct _qty3843;  // mut Pointer void (*)(v8::Isolate *, Local<v8::Context>)
struct _qty3844;  // mut FunctionProto void (v8::Context::AbortScriptExecutionCallback)
struct _qty3845;  // mut Record v8::Context::Scope
struct _qty3846;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3847;  // mut FunctionProto void (Local<v8::Context>)
struct _qty3848;  // mut Pointer v8::Context::Scope *
struct _qty3849;  // mut Record v8::Context::BackupIncumbentScope
struct _qty3850;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3851;  // mut FunctionProto void (Local<v8::Context>)
struct _qty3852;  // mut Pointer v8::Context::BackupIncumbentScope *
struct _qty3853;  // mut FunctionProto void ()
struct _qty3854;  // mut FunctionProto uintptr_t () const
struct _qty3855;  // mut Pointer const v8::Context::BackupIncumbentScope *
struct _qty3856;  // mut Record v8::Unlocker
struct _qty3857;  // mut Pointer v8::Unlocker *
struct _qty3858;  // mut FunctionProto void ()
struct _qty3859;  // mut Record v8::Locker
struct _qty3860;  // mut Pointer v8::Locker *
struct _qty3861;  // mut FunctionProto void ()
struct _qty3862;  // mut LValueReference const v8::Locker &
struct _qty3863;  // const Record v8::Locker
struct _qty3864;  // mut FunctionProto void (const v8::Locker &)
struct _qty3865;  // mut Record v8::Unwinder
struct _qty3866;  // mut LValueReference const v8::UnwindState &
struct _qty3867;  // const Record v8::UnwindState
struct _qty3868;  // mut FunctionProto bool (const v8::UnwindState &, v8::RegisterState *, const void *)
struct _qty3869;  // mut FunctionProto bool (const v8::UnwindState &, void *)
struct _qty3870;  // mut TemplateSpecialization Local<T>
struct _qty3871;  // mut LValueReference const PersistentBase<T> &
struct _qty3872;  // const TemplateSpecialization PersistentBase<T>
struct _qty3873;  // mut TemplateSpecialization PersistentBase<T>
struct _qty3874;  // mut LValueReference const TracedGlobal<T> &
struct _qty3875;  // const TemplateSpecialization TracedGlobal<T>
struct _qty3876;  // mut TemplateSpecialization TracedGlobal<T>
struct _qty3877;  // mut TemplateTypeParm S
struct _qty3878;  // mut TemplateSpecialization Local<S>
struct _qty3879;  // mut TemplateTypeParm S
struct _qty3880;  // mut LValueReference const Local<S> &
struct _qty3881;  // const TemplateSpecialization Local<S>
struct _qty3882;  // mut TemplateSpecialization Local<S>
struct _qty3883;  // mut TemplateTypeParm S
struct _qty3884;  // mut LValueReference const PersistentBase<S> &
struct _qty3885;  // const TemplateSpecialization PersistentBase<S>
struct _qty3886;  // mut TemplateSpecialization PersistentBase<S>
struct _qty3887;  // mut TemplateTypeParm P
struct _qty3888;  // mut Pointer P *
struct _qty3889;  // mut DependentName typename WeakCallbackInfo<P>::Callback
struct _qty3890;  // mut TemplateTypeParm P
struct _qty3891;  // mut TemplateTypeParm S
struct _qty3892;  // mut RValueReference Global<S> &&
struct _qty3893;  // mut TemplateSpecialization Global<S>
struct _qty3894;  // mut TemplateTypeParm S
struct _qty3895;  // mut LValueReference const Local<S> &
struct _qty3896;  // const TemplateSpecialization Local<S>
struct _qty3897;  // mut TemplateSpecialization Local<S>
struct _qty3898;  // mut TemplateTypeParm S
struct _qty3899;  // mut RValueReference TracedGlobal<S> &&
struct _qty3900;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty3901;  // mut Elaborated typename WeakCallbackInfo<void>::Callback
struct _qty3902;  // mut TemplateTypeParm S
struct _qty3903;  // mut LValueReference const Global<S> &
struct _qty3904;  // const TemplateSpecialization Global<S>
struct _qty3905;  // mut TemplateSpecialization Global<S>
struct _qty3906;  // mut TemplateTypeParm S
struct _qty3907;  // mut LValueReference const TracedGlobal<S> &
struct _qty3908;  // const TemplateSpecialization TracedGlobal<S>
struct _qty3909;  // mut TemplateSpecialization TracedGlobal<S>
struct _qty3910;  // mut TemplateTypeParm S
struct _qty3911;  // const TemplateSpecialization Local<S>
struct _qty3912;  // mut TemplateSpecialization Local<S>
struct _qty3913;  // mut TemplateTypeParm S
struct _qty3914;  // mut Pointer S *
struct _qty3915;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3916;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty3917;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty3918;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty3919;  // mut TemplateSpecialization Local<v8::Integer>
struct _qty3920;  // mut TemplateSpecialization Local<v8::Value>
struct _qty3921;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty3922;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty3923;  // mut TemplateSpecialization Local<v8::Boolean>
struct _qty3924;  // mut TemplateSpecialization Local<v8::PrimitiveArray>
struct _qty3925;  // mut TemplateSpecialization Local<v8::String>
struct _qty3926;  // mut TemplateSpecialization Local<v8::String>
struct _qty3927;  // mut TemplateSpecialization Local<v8::Data>
struct _qty3928;  // mut Pointer String::Encoding *
struct _qty3929;  // mut TemplateTypeParm T
struct _qty3930;  // mut Pointer T *
struct _qty3931;  // mut TemplateTypeParm T
struct _qty3932;  // mut TemplateTypeParm T
struct _qty3933;  // mut TemplateTypeParm T
struct _qty3934;  // mut TemplateSpecialization Local<v8::Context>
struct _qty3935;  // mut TemplateSpecialization Local<T>
struct _qty3936;  // mut TemplateTypeParm T
struct _qty3937;  // mut TemplateSpecialization Local<T>
struct _d1; // Namespace v8
struct _d2; // CXXRecord Context
struct _d3; // CXXRecord Data
struct _d4; // CXXRecord Isolate
struct _d5; // CXXRecord AccessorSignature
struct _d6; // CXXRecord Array
struct _d7; // CXXRecord ArrayBuffer
struct _d8; // CXXRecord BigInt
struct _d9; // CXXRecord BigIntObject
struct _d10; // CXXRecord Boolean
struct _d11; // CXXRecord BooleanObject
struct _d12; // CXXRecord Date
struct _d13; // CXXRecord External
struct _d14; // CXXRecord Function
struct _d15; // CXXRecord FunctionTemplate
struct _d16; // CXXRecord HeapProfiler
struct _d17; // CXXRecord ImplementationUtilities
struct _d18; // CXXRecord Int32
struct _d19; // CXXRecord Integer
struct _d20; // ClassTemplate Maybe
struct _d21; // TemplateTypeParm T
struct _d22; // CXXRecord Maybe
struct _d23; // ClassTemplateSpecialization Maybe
struct _d24; // ClassTemplateSpecialization Maybe
struct _d25; // ClassTemplateSpecialization Maybe
struct _d26; // ClassTemplateSpecialization Maybe
struct _d27; // ClassTemplateSpecialization Maybe
struct _d28; // ClassTemplateSpecialization Maybe
struct _d29; // CXXRecord MicrotaskQueue
struct _d30; // CXXRecord Name
struct _d31; // CXXRecord Number
struct _d32; // CXXRecord NumberObject
struct _d33; // CXXRecord Object
struct _d34; // CXXRecord ObjectOperationDescriptor
struct _d35; // CXXRecord ObjectTemplate
struct _d36; // CXXRecord Platform
struct _d37; // CXXRecord Primitive
struct _d38; // CXXRecord Promise
struct _d39; // CXXRecord PropertyDescriptor
struct _d40; // CXXRecord Proxy
struct _d41; // CXXRecord RawOperationDescriptor
struct _d42; // CXXRecord Script
struct _d43; // CXXRecord SharedArrayBuffer
struct _d44; // CXXRecord Signature
struct _d45; // CXXRecord StartupData
struct _d46; // CXXRecord StackFrame
struct _d47; // CXXRecord StackTrace
struct _d48; // CXXRecord String
struct _d49; // CXXRecord StringObject
struct _d50; // CXXRecord Symbol
struct _d51; // CXXRecord SymbolObject
struct _d52; // CXXRecord PrimitiveArray
struct _d53; // CXXRecord Private
struct _d54; // CXXRecord Uint32
struct _d55; // CXXRecord Utils
struct _d56; // CXXRecord Value
struct _d57; // CXXRecord WasmModuleObject
struct _d58; // ClassTemplate Local
struct _d59; // TemplateTypeParm T
struct _d60; // CXXRecord Local
struct _d61; // ClassTemplateSpecialization Local
struct _d62; // CXXConstructor Local
struct _d63; // FunctionTemplate Local
struct _d64; // TemplateTypeParm S
struct _d65; // CXXConstructor Local
struct _d66; // ParmVar that
struct _d67; // CXXConstructor Local
struct _d68; // ParmVar that
struct _d69; // CXXMethod IsEmpty
struct _d70; // CXXMethod Clear
struct _d71; // CXXMethod operator->
struct _d72; // CXXMethod operator*
struct _d73; // FunctionTemplate operator==
struct _d74; // TemplateTypeParm S
struct _d75; // CXXMethod operator==
struct _d76; // ParmVar that
struct _d77; // FunctionTemplate operator==
struct _d78; // TemplateTypeParm S
struct _d79; // CXXMethod operator==
struct _d80; // ParmVar that
struct _d81; // FunctionTemplate operator!=
struct _d82; // TemplateTypeParm S
struct _d83; // CXXMethod operator!=
struct _d84; // ParmVar that
struct _d85; // FunctionTemplate operator!=
struct _d86; // TemplateTypeParm S
struct _d87; // CXXMethod operator!=
struct _d88; // ParmVar that
struct _d89; // FunctionTemplate Cast
struct _d90; // TemplateTypeParm S
struct _d91; // CXXMethod Cast
struct _d92; // ParmVar that
struct _d93; // FunctionTemplate As
struct _d94; // TemplateTypeParm S
struct _d95; // CXXMethod As
struct _d96; // CXXMethod New
struct _d97; // ParmVar isolate
struct _d98; // ParmVar that
struct _d99; // CXXMethod New
struct _d100; // ParmVar isolate
struct _d101; // ParmVar that
struct _d102; // ClassTemplateSpecialization PersistentBase
struct _d103; // CXXMethod New
struct _d104; // ParmVar isolate
struct _d105; // ParmVar that
struct _d106; // ClassTemplateSpecialization TracedGlobal
struct _d107; // CXXConstructor Local
struct _d108; // ParmVar 
struct _d109; // CXXConstructor Local
struct _d110; // ParmVar 
struct _d111; // CXXDestructor ~Local
struct _d112; // ClassTemplateSpecialization Local
struct _d113; // CXXConstructor Local
struct _d114; // FunctionTemplate Local
struct _d115; // TemplateTypeParm S
struct _d116; // CXXConstructor Local
struct _d117; // ParmVar that
struct _d118; // CXXConstructor Local
struct _d119; // ParmVar that
struct _d120; // CXXMethod IsEmpty
struct _d121; // CXXMethod Clear
struct _d122; // CXXMethod operator->
struct _d123; // CXXMethod operator*
struct _d124; // FunctionTemplate operator==
struct _d125; // TemplateTypeParm S
struct _d126; // CXXMethod operator==
struct _d127; // ParmVar that
struct _d128; // FunctionTemplate operator==
struct _d129; // TemplateTypeParm S
struct _d130; // CXXMethod operator==
struct _d131; // ParmVar that
struct _d132; // FunctionTemplate operator!=
struct _d133; // TemplateTypeParm S
struct _d134; // CXXMethod operator!=
struct _d135; // ParmVar that
struct _d136; // FunctionTemplate operator!=
struct _d137; // TemplateTypeParm S
struct _d138; // CXXMethod operator!=
struct _d139; // ParmVar that
struct _d140; // FunctionTemplate Cast
struct _d141; // TemplateTypeParm S
struct _d142; // CXXMethod Cast
struct _d143; // ParmVar that
struct _d144; // FunctionTemplate As
struct _d145; // TemplateTypeParm S
struct _d146; // CXXMethod As
struct _d147; // CXXMethod New
struct _d148; // ParmVar isolate
struct _d149; // ParmVar that
struct _d150; // CXXMethod New
struct _d151; // ParmVar isolate
struct _d152; // ParmVar that
struct _d153; // ClassTemplateSpecialization PersistentBase
struct _d154; // CXXMethod New
struct _d155; // ParmVar isolate
struct _d156; // ParmVar that
struct _d157; // ClassTemplateSpecialization TracedGlobal
struct _d158; // CXXConstructor Local
struct _d159; // ParmVar 
struct _d160; // CXXConstructor Local
struct _d161; // ParmVar 
struct _d162; // CXXDestructor ~Local
struct _d163; // ClassTemplateSpecialization Local
struct _d164; // CXXConstructor Local
struct _d165; // FunctionTemplate Local
struct _d166; // TemplateTypeParm S
struct _d167; // CXXConstructor Local
struct _d168; // ParmVar that
struct _d169; // CXXConstructor Local
struct _d170; // ParmVar that
struct _d171; // CXXMethod IsEmpty
struct _d172; // CXXMethod Clear
struct _d173; // CXXMethod operator->
struct _d174; // CXXMethod operator*
struct _d175; // FunctionTemplate operator==
struct _d176; // TemplateTypeParm S
struct _d177; // CXXMethod operator==
struct _d178; // ParmVar that
struct _d179; // FunctionTemplate operator==
struct _d180; // TemplateTypeParm S
struct _d181; // CXXMethod operator==
struct _d182; // ParmVar that
struct _d183; // FunctionTemplate operator!=
struct _d184; // TemplateTypeParm S
struct _d185; // CXXMethod operator!=
struct _d186; // ParmVar that
struct _d187; // FunctionTemplate operator!=
struct _d188; // TemplateTypeParm S
struct _d189; // CXXMethod operator!=
struct _d190; // ParmVar that
struct _d191; // FunctionTemplate Cast
struct _d192; // TemplateTypeParm S
struct _d193; // CXXMethod Cast
struct _d194; // ParmVar that
struct _d195; // FunctionTemplate As
struct _d196; // TemplateTypeParm S
struct _d197; // CXXMethod As
struct _d198; // CXXMethod New
struct _d199; // ParmVar isolate
struct _d200; // ParmVar that
struct _d201; // CXXMethod New
struct _d202; // ParmVar isolate
struct _d203; // ParmVar that
struct _d204; // ClassTemplateSpecialization PersistentBase
struct _d205; // CXXMethod New
struct _d206; // ParmVar isolate
struct _d207; // ParmVar that
struct _d208; // ClassTemplateSpecialization TracedGlobal
struct _d209; // CXXConstructor Local
struct _d210; // ParmVar 
struct _d211; // CXXConstructor Local
struct _d212; // ParmVar 
struct _d213; // CXXDestructor ~Local
struct _d214; // CXXMethod operator=
struct _d215; // ParmVar 
struct _d216; // CXXMethod operator=
struct _d217; // ParmVar 
struct _d218; // ClassTemplateSpecialization Local
struct _d219; // CXXConstructor Local
struct _d220; // FunctionTemplate Local
struct _d221; // TemplateTypeParm S
struct _d222; // CXXConstructor Local
struct _d223; // ParmVar that
struct _d224; // CXXConstructor Local
struct _d225; // ParmVar that
struct _d226; // CXXMethod IsEmpty
struct _d227; // CXXMethod Clear
struct _d228; // CXXMethod operator->
struct _d229; // CXXMethod operator*
struct _d230; // FunctionTemplate operator==
struct _d231; // TemplateTypeParm S
struct _d232; // CXXMethod operator==
struct _d233; // ParmVar that
struct _d234; // FunctionTemplate operator==
struct _d235; // TemplateTypeParm S
struct _d236; // CXXMethod operator==
struct _d237; // ParmVar that
struct _d238; // FunctionTemplate operator!=
struct _d239; // TemplateTypeParm S
struct _d240; // CXXMethod operator!=
struct _d241; // ParmVar that
struct _d242; // FunctionTemplate operator!=
struct _d243; // TemplateTypeParm S
struct _d244; // CXXMethod operator!=
struct _d245; // ParmVar that
struct _d246; // FunctionTemplate Cast
struct _d247; // TemplateTypeParm S
struct _d248; // CXXMethod Cast
struct _d249; // ParmVar that
struct _d250; // FunctionTemplate As
struct _d251; // TemplateTypeParm S
struct _d252; // CXXMethod As
struct _d253; // CXXMethod New
struct _d254; // ParmVar isolate
struct _d255; // ParmVar that
struct _d256; // CXXMethod New
struct _d257; // ParmVar isolate
struct _d258; // ParmVar that
struct _d259; // ClassTemplateSpecialization PersistentBase
struct _d260; // CXXMethod New
struct _d261; // ParmVar isolate
struct _d262; // ParmVar that
struct _d263; // ClassTemplateSpecialization TracedGlobal
struct _d264; // CXXConstructor Local
struct _d265; // ParmVar 
struct _d266; // CXXConstructor Local
struct _d267; // ParmVar 
struct _d268; // CXXDestructor ~Local
struct _d269; // CXXMethod operator=
struct _d270; // ParmVar 
struct _d271; // CXXMethod operator=
struct _d272; // ParmVar 
struct _d273; // ClassTemplateSpecialization Local
struct _d274; // CXXConstructor Local
struct _d275; // FunctionTemplate Local
struct _d276; // TemplateTypeParm S
struct _d277; // CXXConstructor Local
struct _d278; // ParmVar that
struct _d279; // CXXConstructor Local
struct _d280; // ParmVar that
struct _d281; // CXXMethod IsEmpty
struct _d282; // CXXMethod Clear
struct _d283; // CXXMethod operator->
struct _d284; // CXXMethod operator*
struct _d285; // FunctionTemplate operator==
struct _d286; // TemplateTypeParm S
struct _d287; // CXXMethod operator==
struct _d288; // ParmVar that
struct _d289; // FunctionTemplate operator==
struct _d290; // TemplateTypeParm S
struct _d291; // CXXMethod operator==
struct _d292; // ParmVar that
struct _d293; // FunctionTemplate operator!=
struct _d294; // TemplateTypeParm S
struct _d295; // CXXMethod operator!=
struct _d296; // ParmVar that
struct _d297; // FunctionTemplate operator!=
struct _d298; // TemplateTypeParm S
struct _d299; // CXXMethod operator!=
struct _d300; // ParmVar that
struct _d301; // FunctionTemplate Cast
struct _d302; // TemplateTypeParm S
struct _d303; // CXXMethod Cast
struct _d304; // ParmVar that
struct _d305; // FunctionTemplate As
struct _d306; // TemplateTypeParm S
struct _d307; // CXXMethod As
struct _d308; // CXXMethod New
struct _d309; // ParmVar isolate
struct _d310; // ParmVar that
struct _d311; // CXXMethod New
struct _d312; // ParmVar isolate
struct _d313; // ParmVar that
struct _d314; // ClassTemplateSpecialization PersistentBase
struct _d315; // CXXMethod New
struct _d316; // ParmVar isolate
struct _d317; // ParmVar that
struct _d318; // ClassTemplateSpecialization TracedGlobal
struct _d319; // CXXConstructor Local
struct _d320; // ParmVar 
struct _d321; // CXXConstructor Local
struct _d322; // ParmVar 
struct _d323; // CXXDestructor ~Local
struct _d324; // CXXMethod operator=
struct _d325; // ParmVar 
struct _d326; // CXXMethod operator=
struct _d327; // ParmVar 
struct _d328; // ClassTemplateSpecialization Local
struct _d329; // ClassTemplateSpecialization Local
struct _d330; // CXXConstructor Local
struct _d331; // FunctionTemplate Local
struct _d332; // TemplateTypeParm S
struct _d333; // CXXConstructor Local
struct _d334; // ParmVar that
struct _d335; // CXXConstructor Local
struct _d336; // ParmVar that
struct _d337; // CXXMethod IsEmpty
struct _d338; // CXXMethod Clear
struct _d339; // CXXMethod operator->
struct _d340; // CXXMethod operator*
struct _d341; // FunctionTemplate operator==
struct _d342; // TemplateTypeParm S
struct _d343; // CXXMethod operator==
struct _d344; // ParmVar that
struct _d345; // FunctionTemplate operator==
struct _d346; // TemplateTypeParm S
struct _d347; // CXXMethod operator==
struct _d348; // ParmVar that
struct _d349; // FunctionTemplate operator!=
struct _d350; // TemplateTypeParm S
struct _d351; // CXXMethod operator!=
struct _d352; // ParmVar that
struct _d353; // FunctionTemplate operator!=
struct _d354; // TemplateTypeParm S
struct _d355; // CXXMethod operator!=
struct _d356; // ParmVar that
struct _d357; // FunctionTemplate Cast
struct _d358; // TemplateTypeParm S
struct _d359; // CXXMethod Cast
struct _d360; // ParmVar that
struct _d361; // FunctionTemplate As
struct _d362; // TemplateTypeParm S
struct _d363; // CXXMethod As
struct _d364; // CXXMethod New
struct _d365; // ParmVar isolate
struct _d366; // ParmVar that
struct _d367; // CXXMethod New
struct _d368; // ParmVar isolate
struct _d369; // ParmVar that
struct _d370; // ClassTemplateSpecialization PersistentBase
struct _d371; // CXXMethod New
struct _d372; // ParmVar isolate
struct _d373; // ParmVar that
struct _d374; // ClassTemplateSpecialization TracedGlobal
struct _d375; // CXXConstructor Local
struct _d376; // ParmVar 
struct _d377; // CXXConstructor Local
struct _d378; // ParmVar 
struct _d379; // CXXMethod operator=
struct _d380; // ParmVar 
struct _d381; // CXXMethod operator=
struct _d382; // ParmVar 
struct _d383; // CXXDestructor ~Local
struct _d384; // ClassTemplateSpecialization Local
struct _d385; // CXXConstructor Local
struct _d386; // FunctionTemplate Local
struct _d387; // TemplateTypeParm S
struct _d388; // CXXConstructor Local
struct _d389; // ParmVar that
struct _d390; // CXXConstructor Local
struct _d391; // ParmVar that
struct _d392; // CXXMethod IsEmpty
struct _d393; // CXXMethod Clear
struct _d394; // CXXMethod operator->
struct _d395; // CXXMethod operator*
struct _d396; // FunctionTemplate operator==
struct _d397; // TemplateTypeParm S
struct _d398; // CXXMethod operator==
struct _d399; // ParmVar that
struct _d400; // FunctionTemplate operator==
struct _d401; // TemplateTypeParm S
struct _d402; // CXXMethod operator==
struct _d403; // ParmVar that
struct _d404; // FunctionTemplate operator!=
struct _d405; // TemplateTypeParm S
struct _d406; // CXXMethod operator!=
struct _d407; // ParmVar that
struct _d408; // FunctionTemplate operator!=
struct _d409; // TemplateTypeParm S
struct _d410; // CXXMethod operator!=
struct _d411; // ParmVar that
struct _d412; // FunctionTemplate Cast
struct _d413; // TemplateTypeParm S
struct _d414; // CXXMethod Cast
struct _d415; // ParmVar that
struct _d416; // FunctionTemplate As
struct _d417; // TemplateTypeParm S
struct _d418; // CXXMethod As
struct _d419; // CXXMethod New
struct _d420; // ParmVar isolate
struct _d421; // ParmVar that
struct _d422; // CXXMethod New
struct _d423; // ParmVar isolate
struct _d424; // ParmVar that
struct _d425; // ClassTemplateSpecialization PersistentBase
struct _d426; // CXXMethod New
struct _d427; // ParmVar isolate
struct _d428; // ParmVar that
struct _d429; // ClassTemplateSpecialization TracedGlobal
struct _d430; // CXXDestructor ~Local
struct _d431; // CXXConstructor Local
struct _d432; // ParmVar 
struct _d433; // CXXConstructor Local
struct _d434; // ParmVar 
struct _d435; // ClassTemplateSpecialization Local
struct _d436; // ClassTemplateSpecialization Local
struct _d437; // ClassTemplateSpecialization Local
struct _d438; // CXXConstructor Local
struct _d439; // FunctionTemplate Local
struct _d440; // TemplateTypeParm S
struct _d441; // CXXConstructor Local
struct _d442; // ParmVar that
struct _d443; // CXXMethod IsEmpty
struct _d444; // CXXMethod Clear
struct _d445; // CXXMethod operator->
struct _d446; // CXXRecord UnboundScript
struct _d447; // CXXMethod operator*
struct _d448; // FunctionTemplate operator==
struct _d449; // TemplateTypeParm S
struct _d450; // CXXMethod operator==
struct _d451; // ParmVar that
struct _d452; // FunctionTemplate operator==
struct _d453; // TemplateTypeParm S
struct _d454; // CXXMethod operator==
struct _d455; // ParmVar that
struct _d456; // FunctionTemplate operator!=
struct _d457; // TemplateTypeParm S
struct _d458; // CXXMethod operator!=
struct _d459; // ParmVar that
struct _d460; // FunctionTemplate operator!=
struct _d461; // TemplateTypeParm S
struct _d462; // CXXMethod operator!=
struct _d463; // ParmVar that
struct _d464; // FunctionTemplate Cast
struct _d465; // TemplateTypeParm S
struct _d466; // CXXMethod Cast
struct _d467; // ParmVar that
struct _d468; // FunctionTemplate As
struct _d469; // TemplateTypeParm S
struct _d470; // CXXMethod As
struct _d471; // CXXMethod New
struct _d472; // ParmVar isolate
struct _d473; // ParmVar that
struct _d474; // CXXMethod New
struct _d475; // ParmVar isolate
struct _d476; // ParmVar that
struct _d477; // ClassTemplateSpecialization PersistentBase
struct _d478; // CXXMethod New
struct _d479; // ParmVar isolate
struct _d480; // ParmVar that
struct _d481; // ClassTemplateSpecialization TracedGlobal
struct _d482; // ClassTemplateSpecialization Local
struct _d483; // ClassTemplateSpecialization Local
struct _d484; // CXXConstructor Local
struct _d485; // FunctionTemplate Local
struct _d486; // TemplateTypeParm S
struct _d487; // CXXConstructor Local
struct _d488; // ParmVar that
struct _d489; // CXXConstructor Local
struct _d490; // ParmVar that
struct _d491; // CXXMethod IsEmpty
struct _d492; // CXXMethod Clear
struct _d493; // CXXMethod operator->
struct _d494; // CXXMethod operator*
struct _d495; // FunctionTemplate operator==
struct _d496; // TemplateTypeParm S
struct _d497; // CXXMethod operator==
struct _d498; // ParmVar that
struct _d499; // FunctionTemplate operator==
struct _d500; // TemplateTypeParm S
struct _d501; // CXXMethod operator==
struct _d502; // ParmVar that
struct _d503; // FunctionTemplate operator!=
struct _d504; // TemplateTypeParm S
struct _d505; // CXXMethod operator!=
struct _d506; // ParmVar that
struct _d507; // FunctionTemplate operator!=
struct _d508; // TemplateTypeParm S
struct _d509; // CXXMethod operator!=
struct _d510; // ParmVar that
struct _d511; // FunctionTemplate Cast
struct _d512; // TemplateTypeParm S
struct _d513; // CXXMethod Cast
struct _d514; // ParmVar that
struct _d515; // FunctionTemplate As
struct _d516; // TemplateTypeParm S
struct _d517; // CXXMethod As
struct _d518; // CXXMethod New
struct _d519; // ParmVar isolate
struct _d520; // ParmVar that
struct _d521; // CXXMethod New
struct _d522; // ParmVar isolate
struct _d523; // ParmVar that
struct _d524; // ClassTemplateSpecialization PersistentBase
struct _d525; // CXXMethod New
struct _d526; // ParmVar isolate
struct _d527; // ParmVar that
struct _d528; // ClassTemplateSpecialization TracedGlobal
struct _d529; // CXXConstructor Local
struct _d530; // ParmVar 
struct _d531; // CXXConstructor Local
struct _d532; // ParmVar 
struct _d533; // CXXDestructor ~Local
struct _d534; // ClassTemplateSpecialization Local
struct _d535; // ClassTemplateSpecialization Local
struct _d536; // ClassTemplateSpecialization Local
struct _d537; // ClassTemplateSpecialization Local
struct _d538; // ClassTemplateSpecialization Local
struct _d539; // ClassTemplateSpecialization Local
struct _d540; // ClassTemplateSpecialization Local
struct _d541; // ClassTemplateSpecialization Local
struct _d542; // ClassTemplateSpecialization Local
struct _d543; // ClassTemplateSpecialization Local
struct _d544; // CXXConstructor Local
struct _d545; // FunctionTemplate Local
struct _d546; // TemplateTypeParm S
struct _d547; // CXXConstructor Local
struct _d548; // ParmVar that
struct _d549; // CXXConstructor Local
struct _d550; // ParmVar that
struct _d551; // CXXConstructor Local
struct _d552; // ParmVar that
struct _d553; // CXXMethod IsEmpty
struct _d554; // CXXMethod Clear
struct _d555; // CXXMethod operator->
struct _d556; // CXXMethod operator*
struct _d557; // FunctionTemplate operator==
struct _d558; // TemplateTypeParm S
struct _d559; // CXXMethod operator==
struct _d560; // ParmVar that
struct _d561; // FunctionTemplate operator==
struct _d562; // TemplateTypeParm S
struct _d563; // CXXMethod operator==
struct _d564; // ParmVar that
struct _d565; // FunctionTemplate operator!=
struct _d566; // TemplateTypeParm S
struct _d567; // CXXMethod operator!=
struct _d568; // ParmVar that
struct _d569; // FunctionTemplate operator!=
struct _d570; // TemplateTypeParm S
struct _d571; // CXXMethod operator!=
struct _d572; // ParmVar that
struct _d573; // FunctionTemplate Cast
struct _d574; // TemplateTypeParm S
struct _d575; // CXXMethod Cast
struct _d576; // ParmVar that
struct _d577; // FunctionTemplate As
struct _d578; // TemplateTypeParm S
struct _d579; // CXXMethod As
struct _d580; // CXXMethod New
struct _d581; // ParmVar isolate
struct _d582; // ParmVar that
struct _d583; // CXXMethod New
struct _d584; // ParmVar isolate
struct _d585; // ParmVar that
struct _d586; // ClassTemplateSpecialization PersistentBase
struct _d587; // CXXMethod New
struct _d588; // ParmVar isolate
struct _d589; // ParmVar that
struct _d590; // ClassTemplateSpecialization TracedGlobal
struct _d591; // CXXConstructor Local
struct _d592; // ParmVar 
struct _d593; // CXXConstructor Local
struct _d594; // ParmVar 
struct _d595; // CXXDestructor ~Local
struct _d596; // ClassTemplateSpecialization Local
struct _d597; // CXXConstructor Local
struct _d598; // FunctionTemplate Local
struct _d599; // TemplateTypeParm S
struct _d600; // CXXConstructor Local
struct _d601; // ParmVar that
struct _d602; // CXXConstructor Local
struct _d603; // ParmVar that
struct _d604; // CXXMethod IsEmpty
struct _d605; // CXXMethod Clear
struct _d606; // CXXMethod operator->
struct _d607; // CXXMethod operator*
struct _d608; // FunctionTemplate operator==
struct _d609; // TemplateTypeParm S
struct _d610; // CXXMethod operator==
struct _d611; // ParmVar that
struct _d612; // FunctionTemplate operator==
struct _d613; // TemplateTypeParm S
struct _d614; // CXXMethod operator==
struct _d615; // ParmVar that
struct _d616; // FunctionTemplate operator!=
struct _d617; // TemplateTypeParm S
struct _d618; // CXXMethod operator!=
struct _d619; // ParmVar that
struct _d620; // FunctionTemplate operator!=
struct _d621; // TemplateTypeParm S
struct _d622; // CXXMethod operator!=
struct _d623; // ParmVar that
struct _d624; // FunctionTemplate Cast
struct _d625; // TemplateTypeParm S
struct _d626; // CXXMethod Cast
struct _d627; // ParmVar that
struct _d628; // FunctionTemplate As
struct _d629; // TemplateTypeParm S
struct _d630; // CXXMethod As
struct _d631; // CXXMethod New
struct _d632; // ParmVar isolate
struct _d633; // ParmVar that
struct _d634; // CXXMethod New
struct _d635; // ParmVar isolate
struct _d636; // ParmVar that
struct _d637; // ClassTemplateSpecialization PersistentBase
struct _d638; // CXXMethod New
struct _d639; // ParmVar isolate
struct _d640; // ParmVar that
struct _d641; // ClassTemplateSpecialization TracedGlobal
struct _d642; // CXXConstructor Local
struct _d643; // ParmVar 
struct _d644; // CXXConstructor Local
struct _d645; // ParmVar 
struct _d646; // CXXDestructor ~Local
struct _d647; // ClassTemplateSpecialization Local
struct _d648; // ClassTemplateSpecialization Local
struct _d649; // ClassTemplateSpecialization Local
struct _d650; // ClassTemplateSpecialization Local
struct _d651; // CXXConstructor Local
struct _d652; // FunctionTemplate Local
struct _d653; // TemplateTypeParm S
struct _d654; // CXXConstructor Local
struct _d655; // ParmVar that
struct _d656; // CXXConstructor Local
struct _d657; // ParmVar that
struct _d658; // CXXMethod IsEmpty
struct _d659; // CXXMethod Clear
struct _d660; // CXXMethod operator->
struct _d661; // CXXMethod operator*
struct _d662; // FunctionTemplate operator==
struct _d663; // TemplateTypeParm S
struct _d664; // CXXMethod operator==
struct _d665; // ParmVar that
struct _d666; // FunctionTemplate operator==
struct _d667; // TemplateTypeParm S
struct _d668; // CXXMethod operator==
struct _d669; // ParmVar that
struct _d670; // FunctionTemplate operator!=
struct _d671; // TemplateTypeParm S
struct _d672; // CXXMethod operator!=
struct _d673; // ParmVar that
struct _d674; // FunctionTemplate operator!=
struct _d675; // TemplateTypeParm S
struct _d676; // CXXMethod operator!=
struct _d677; // ParmVar that
struct _d678; // FunctionTemplate Cast
struct _d679; // TemplateTypeParm S
struct _d680; // CXXMethod Cast
struct _d681; // ParmVar that
struct _d682; // FunctionTemplate As
struct _d683; // TemplateTypeParm S
struct _d684; // CXXMethod As
struct _d685; // CXXMethod New
struct _d686; // ParmVar isolate
struct _d687; // ParmVar that
struct _d688; // CXXMethod New
struct _d689; // ParmVar isolate
struct _d690; // ParmVar that
struct _d691; // ClassTemplateSpecialization PersistentBase
struct _d692; // CXXMethod New
struct _d693; // ParmVar isolate
struct _d694; // ParmVar that
struct _d695; // ClassTemplateSpecialization TracedGlobal
struct _d696; // CXXConstructor Local
struct _d697; // ParmVar 
struct _d698; // CXXConstructor Local
struct _d699; // ParmVar 
struct _d700; // ClassTemplateSpecialization Local
struct _d701; // ClassTemplateSpecialization Local
struct _d702; // ClassTemplateSpecialization Local
struct _d703; // ClassTemplateSpecialization Local
struct _d704; // ClassTemplateSpecialization Local
struct _d705; // ClassTemplateSpecialization Local
struct _d706; // ClassTemplateSpecialization Local
struct _d707; // ClassTemplateSpecialization Local
struct _d708; // ClassTemplateSpecialization Local
struct _d709; // ClassTemplateSpecialization Local
struct _d710; // ClassTemplateSpecialization Local
struct _d711; // ClassTemplateSpecialization Local
struct _d712; // ClassTemplateSpecialization Local
struct _d713; // ClassTemplateSpecialization Local
struct _d714; // CXXConstructor Local
struct _d715; // FunctionTemplate Local
struct _d716; // TemplateTypeParm S
struct _d717; // CXXConstructor Local
struct _d718; // ParmVar that
struct _d719; // CXXConstructor Local
struct _d720; // ParmVar that
struct _d721; // CXXMethod IsEmpty
struct _d722; // CXXMethod Clear
struct _d723; // CXXMethod operator->
struct _d724; // CXXMethod operator*
struct _d725; // FunctionTemplate operator==
struct _d726; // TemplateTypeParm S
struct _d727; // CXXMethod operator==
struct _d728; // ParmVar that
struct _d729; // FunctionTemplate operator==
struct _d730; // TemplateTypeParm S
struct _d731; // CXXMethod operator==
struct _d732; // ParmVar that
struct _d733; // FunctionTemplate operator!=
struct _d734; // TemplateTypeParm S
struct _d735; // CXXMethod operator!=
struct _d736; // ParmVar that
struct _d737; // FunctionTemplate operator!=
struct _d738; // TemplateTypeParm S
struct _d739; // CXXMethod operator!=
struct _d740; // ParmVar that
struct _d741; // FunctionTemplate Cast
struct _d742; // TemplateTypeParm S
struct _d743; // CXXMethod Cast
struct _d744; // ParmVar that
struct _d745; // FunctionTemplate As
struct _d746; // TemplateTypeParm S
struct _d747; // CXXMethod As
struct _d748; // CXXMethod New
struct _d749; // ParmVar isolate
struct _d750; // ParmVar that
struct _d751; // CXXMethod New
struct _d752; // ParmVar isolate
struct _d753; // ParmVar that
struct _d754; // ClassTemplateSpecialization PersistentBase
struct _d755; // CXXMethod New
struct _d756; // ParmVar isolate
struct _d757; // ParmVar that
struct _d758; // ClassTemplateSpecialization TracedGlobal
struct _d759; // CXXConstructor Local
struct _d760; // ParmVar 
struct _d761; // CXXConstructor Local
struct _d762; // ParmVar 
struct _d763; // CXXDestructor ~Local
struct _d764; // ClassTemplateSpecialization Local
struct _d765; // CXXConstructor Local
struct _d766; // FunctionTemplate Local
struct _d767; // TemplateTypeParm S
struct _d768; // CXXConstructor Local
struct _d769; // ParmVar that
struct _d770; // CXXConstructor Local
struct _d771; // ParmVar that
struct _d772; // CXXMethod IsEmpty
struct _d773; // CXXMethod Clear
struct _d774; // CXXMethod operator->
struct _d775; // CXXMethod operator*
struct _d776; // FunctionTemplate operator==
struct _d777; // TemplateTypeParm S
struct _d778; // CXXMethod operator==
struct _d779; // ParmVar that
struct _d780; // FunctionTemplate operator==
struct _d781; // TemplateTypeParm S
struct _d782; // CXXMethod operator==
struct _d783; // ParmVar that
struct _d784; // FunctionTemplate operator!=
struct _d785; // TemplateTypeParm S
struct _d786; // CXXMethod operator!=
struct _d787; // ParmVar that
struct _d788; // FunctionTemplate operator!=
struct _d789; // TemplateTypeParm S
struct _d790; // CXXMethod operator!=
struct _d791; // ParmVar that
struct _d792; // FunctionTemplate Cast
struct _d793; // TemplateTypeParm S
struct _d794; // CXXMethod Cast
struct _d795; // ParmVar that
struct _d796; // FunctionTemplate As
struct _d797; // TemplateTypeParm S
struct _d798; // CXXMethod As
struct _d799; // CXXMethod New
struct _d800; // ParmVar isolate
struct _d801; // ParmVar that
struct _d802; // CXXMethod New
struct _d803; // ParmVar isolate
struct _d804; // ParmVar that
struct _d805; // ClassTemplateSpecialization PersistentBase
struct _d806; // CXXMethod New
struct _d807; // ParmVar isolate
struct _d808; // ParmVar that
struct _d809; // ClassTemplateSpecialization TracedGlobal
struct _d810; // CXXConstructor Local
struct _d811; // ParmVar 
struct _d812; // CXXConstructor Local
struct _d813; // ParmVar 
struct _d814; // CXXDestructor ~Local
struct _d815; // ClassTemplateSpecialization Local
struct _d816; // CXXConstructor Local
struct _d817; // FunctionTemplate Local
struct _d818; // TemplateTypeParm S
struct _d819; // CXXConstructor Local
struct _d820; // ParmVar that
struct _d821; // CXXConstructor Local
struct _d822; // ParmVar that
struct _d823; // CXXMethod IsEmpty
struct _d824; // CXXMethod Clear
struct _d825; // CXXMethod operator->
struct _d826; // CXXMethod operator*
struct _d827; // FunctionTemplate operator==
struct _d828; // TemplateTypeParm S
struct _d829; // CXXMethod operator==
struct _d830; // ParmVar that
struct _d831; // FunctionTemplate operator==
struct _d832; // TemplateTypeParm S
struct _d833; // CXXMethod operator==
struct _d834; // ParmVar that
struct _d835; // FunctionTemplate operator!=
struct _d836; // TemplateTypeParm S
struct _d837; // CXXMethod operator!=
struct _d838; // ParmVar that
struct _d839; // FunctionTemplate operator!=
struct _d840; // TemplateTypeParm S
struct _d841; // CXXMethod operator!=
struct _d842; // ParmVar that
struct _d843; // FunctionTemplate Cast
struct _d844; // TemplateTypeParm S
struct _d845; // CXXMethod Cast
struct _d846; // ParmVar that
struct _d847; // FunctionTemplate As
struct _d848; // TemplateTypeParm S
struct _d849; // CXXMethod As
struct _d850; // CXXMethod New
struct _d851; // ParmVar isolate
struct _d852; // ParmVar that
struct _d853; // CXXMethod New
struct _d854; // ParmVar isolate
struct _d855; // ParmVar that
struct _d856; // ClassTemplateSpecialization PersistentBase
struct _d857; // CXXMethod New
struct _d858; // ParmVar isolate
struct _d859; // ParmVar that
struct _d860; // ClassTemplateSpecialization TracedGlobal
struct _d861; // CXXConstructor Local
struct _d862; // ParmVar 
struct _d863; // CXXConstructor Local
struct _d864; // ParmVar 
struct _d865; // CXXDestructor ~Local
struct _d866; // ClassTemplateSpecialization Local
struct _d867; // ClassTemplateSpecialization Local
struct _d868; // ClassTemplateSpecialization Local
struct _d869; // ClassTemplateSpecialization Local
struct _d870; // ClassTemplate MaybeLocal
struct _d871; // TemplateTypeParm T
struct _d872; // CXXRecord MaybeLocal
struct _d873; // ClassTemplateSpecialization MaybeLocal
struct _d874; // ClassTemplateSpecialization MaybeLocal
struct _d875; // CXXConstructor MaybeLocal
struct _d876; // FunctionTemplate MaybeLocal
struct _d877; // TemplateTypeParm S
struct _d878; // CXXConstructor MaybeLocal
struct _d879; // ParmVar that
struct _d880; // CXXMethod IsEmpty
struct _d881; // FunctionTemplate ToLocal
struct _d882; // TemplateTypeParm S
struct _d883; // CXXMethod ToLocal
struct _d884; // ParmVar out
struct _d885; // CXXMethod ToLocalChecked
struct _d886; // FunctionTemplate FromMaybe
struct _d887; // TemplateTypeParm S
struct _d888; // CXXMethod FromMaybe
struct _d889; // ParmVar default_value
struct _d890; // CXXConstructor MaybeLocal
struct _d891; // ParmVar 
struct _d892; // CXXConstructor MaybeLocal
struct _d893; // ParmVar 
struct _d894; // CXXDestructor ~MaybeLocal
struct _d895; // ClassTemplateSpecialization MaybeLocal
struct _d896; // ClassTemplateSpecialization MaybeLocal
struct _d897; // ClassTemplateSpecialization MaybeLocal
struct _d898; // ClassTemplateSpecialization MaybeLocal
struct _d899; // CXXConstructor MaybeLocal
struct _d900; // FunctionTemplate MaybeLocal
struct _d901; // TemplateTypeParm S
struct _d902; // CXXConstructor MaybeLocal
struct _d903; // ParmVar that
struct _d904; // CXXMethod IsEmpty
struct _d905; // FunctionTemplate ToLocal
struct _d906; // TemplateTypeParm S
struct _d907; // CXXMethod ToLocal
struct _d908; // ParmVar out
struct _d909; // CXXMethod ToLocalChecked
struct _d910; // FunctionTemplate FromMaybe
struct _d911; // TemplateTypeParm S
struct _d912; // CXXMethod FromMaybe
struct _d913; // ParmVar default_value
struct _d914; // CXXDestructor ~MaybeLocal
struct _d915; // ClassTemplateSpecialization MaybeLocal
struct _d916; // CXXConstructor MaybeLocal
struct _d917; // FunctionTemplate MaybeLocal
struct _d918; // TemplateTypeParm S
struct _d919; // CXXConstructor MaybeLocal
struct _d920; // ParmVar that
struct _d921; // CXXMethod IsEmpty
struct _d922; // FunctionTemplate ToLocal
struct _d923; // TemplateTypeParm S
struct _d924; // CXXMethod ToLocal
struct _d925; // ParmVar out
struct _d926; // CXXMethod ToLocalChecked
struct _d927; // FunctionTemplate FromMaybe
struct _d928; // TemplateTypeParm S
struct _d929; // CXXMethod FromMaybe
struct _d930; // ParmVar default_value
struct _d931; // CXXDestructor ~MaybeLocal
struct _d932; // CXXConstructor MaybeLocal
struct _d933; // ParmVar 
struct _d934; // CXXConstructor MaybeLocal
struct _d935; // ParmVar 
struct _d936; // ClassTemplateSpecialization MaybeLocal
struct _d937; // ClassTemplateSpecialization MaybeLocal
struct _d938; // ClassTemplateSpecialization MaybeLocal
struct _d939; // ClassTemplateSpecialization MaybeLocal
struct _d940; // ClassTemplateSpecialization MaybeLocal
struct _d941; // ClassTemplateSpecialization MaybeLocal
struct _d942; // ClassTemplateSpecialization MaybeLocal
struct _d943; // ClassTemplateSpecialization MaybeLocal
struct _d944; // ClassTemplateSpecialization MaybeLocal
struct _d945; // ClassTemplateSpecialization MaybeLocal
struct _d946; // ClassTemplateSpecialization MaybeLocal
struct _d947; // ClassTemplateSpecialization MaybeLocal
struct _d948; // ClassTemplateSpecialization MaybeLocal
struct _d949; // ClassTemplateSpecialization MaybeLocal
struct _d950; // ClassTemplateSpecialization MaybeLocal
struct _d951; // ClassTemplateSpecialization MaybeLocal
struct _d952; // CXXConstructor MaybeLocal
struct _d953; // FunctionTemplate MaybeLocal
struct _d954; // TemplateTypeParm S
struct _d955; // CXXConstructor MaybeLocal
struct _d956; // ParmVar that
struct _d957; // CXXMethod IsEmpty
struct _d958; // FunctionTemplate ToLocal
struct _d959; // TemplateTypeParm S
struct _d960; // CXXMethod ToLocal
struct _d961; // ParmVar out
struct _d962; // CXXMethod ToLocalChecked
struct _d963; // FunctionTemplate FromMaybe
struct _d964; // TemplateTypeParm S
struct _d965; // CXXMethod FromMaybe
struct _d966; // ParmVar default_value
struct _d967; // CXXConstructor MaybeLocal
struct _d968; // ParmVar 
struct _d969; // CXXConstructor MaybeLocal
struct _d970; // ParmVar 
struct _d971; // CXXDestructor ~MaybeLocal
struct _d972; // ClassTemplateSpecialization MaybeLocal
struct _d973; // ClassTemplate Eternal
struct _d974; // TemplateTypeParm T
struct _d975; // CXXRecord Eternal
struct _d976; // ClassTemplate NonCopyablePersistentTraits
struct _d977; // TemplateTypeParm T
struct _d978; // CXXRecord NonCopyablePersistentTraits
struct _d979; // ClassTemplateSpecialization NonCopyablePersistentTraits
struct _d980; // ClassTemplateSpecialization NonCopyablePersistentTraits
struct _d981; // ClassTemplate PersistentBase
struct _d982; // TemplateTypeParm T
struct _d983; // CXXRecord PersistentBase
struct _d984; // ClassTemplateSpecialization PersistentBase
struct _d985; // CXXMethod Reset
struct _d986; // FunctionTemplate Reset
struct _d987; // TemplateTypeParm S
struct _d988; // CXXMethod Reset
struct _d989; // ParmVar isolate
struct _d990; // ParmVar other
struct _d991; // FunctionTemplate Reset
struct _d992; // TemplateTypeParm S
struct _d993; // CXXMethod Reset
struct _d994; // ParmVar isolate
struct _d995; // ParmVar other
struct _d996; // CXXMethod IsEmpty
struct _d997; // CXXMethod Empty
struct _d998; // CXXMethod Get
struct _d999; // ParmVar isolate
struct _d1000; // FunctionTemplate operator==
struct _d1001; // TemplateTypeParm S
struct _d1002; // CXXMethod operator==
struct _d1003; // ParmVar that
struct _d1004; // FunctionTemplate operator==
struct _d1005; // TemplateTypeParm S
struct _d1006; // CXXMethod operator==
struct _d1007; // ParmVar that
struct _d1008; // FunctionTemplate operator!=
struct _d1009; // TemplateTypeParm S
struct _d1010; // CXXMethod operator!=
struct _d1011; // ParmVar that
struct _d1012; // FunctionTemplate operator!=
struct _d1013; // TemplateTypeParm S
struct _d1014; // CXXMethod operator!=
struct _d1015; // ParmVar that
struct _d1016; // FunctionTemplate SetWeak
struct _d1017; // TemplateTypeParm P
struct _d1018; // CXXMethod SetWeak
struct _d1019; // ParmVar parameter
struct _d1020; // ParmVar callback
struct _d1021; // ParmVar type
struct _d1022; // Enum WeakCallbackType
struct _d1023; // CXXMethod SetWeak
struct _d1024; // FunctionTemplate ClearWeak
struct _d1025; // TemplateTypeParm P
struct _d1026; // CXXMethod ClearWeak
struct _d1027; // CXXMethod ClearWeak
struct _d1028; // CXXMethod AnnotateStrongRetainer
struct _d1029; // ParmVar label
struct _d1030; // CXXMethod IsWeak
struct _d1031; // CXXMethod SetWrapperClassId
struct _d1032; // ParmVar class_id
struct _d1033; // CXXMethod WrapperClassId
struct _d1034; // CXXConstructor PersistentBase
struct _d1035; // ParmVar other
struct _d1036; // CXXMethod operator=
struct _d1037; // ParmVar 
struct _d1038; // CXXMethod Reset
struct _d1039; // FunctionTemplate Reset
struct _d1040; // TemplateTypeParm S
struct _d1041; // CXXMethod Reset
struct _d1042; // ParmVar isolate
struct _d1043; // ParmVar other
struct _d1044; // FunctionTemplate Reset
struct _d1045; // TemplateTypeParm S
struct _d1046; // CXXMethod Reset
struct _d1047; // ParmVar isolate
struct _d1048; // ParmVar other
struct _d1049; // CXXMethod IsEmpty
struct _d1050; // CXXMethod Empty
struct _d1051; // CXXMethod Get
struct _d1052; // ParmVar isolate
struct _d1053; // FunctionTemplate operator==
struct _d1054; // TemplateTypeParm S
struct _d1055; // CXXMethod operator==
struct _d1056; // ParmVar that
struct _d1057; // FunctionTemplate operator==
struct _d1058; // TemplateTypeParm S
struct _d1059; // CXXMethod operator==
struct _d1060; // ParmVar that
struct _d1061; // FunctionTemplate operator!=
struct _d1062; // TemplateTypeParm S
struct _d1063; // CXXMethod operator!=
struct _d1064; // ParmVar that
struct _d1065; // FunctionTemplate operator!=
struct _d1066; // TemplateTypeParm S
struct _d1067; // CXXMethod operator!=
struct _d1068; // ParmVar that
struct _d1069; // FunctionTemplate SetWeak
struct _d1070; // TemplateTypeParm P
struct _d1071; // CXXMethod SetWeak
struct _d1072; // ParmVar parameter
struct _d1073; // ParmVar callback
struct _d1074; // ParmVar type
struct _d1075; // CXXMethod SetWeak
struct _d1076; // FunctionTemplate ClearWeak
struct _d1077; // TemplateTypeParm P
struct _d1078; // CXXMethod ClearWeak
struct _d1079; // CXXMethod ClearWeak
struct _d1080; // CXXMethod AnnotateStrongRetainer
struct _d1081; // ParmVar label
struct _d1082; // CXXMethod IsWeak
struct _d1083; // CXXMethod SetWrapperClassId
struct _d1084; // ParmVar class_id
struct _d1085; // CXXMethod WrapperClassId
struct _d1086; // CXXConstructor PersistentBase
struct _d1087; // ParmVar other
struct _d1088; // CXXMethod operator=
struct _d1089; // ParmVar 
struct _d1090; // ClassTemplate Persistent
struct _d1091; // TemplateTypeParm T
struct _d1092; // TemplateTypeParm M
struct _d1093; // CXXRecord Persistent
struct _d1094; // ClassTemplateSpecialization Persistent
struct _d1095; // CXXConstructor Persistent
struct _d1096; // FunctionTemplate Persistent
struct _d1097; // TemplateTypeParm S
struct _d1098; // CXXConstructor Persistent
struct _d1099; // ParmVar isolate
struct _d1100; // ParmVar that
struct _d1101; // FunctionTemplate Persistent
struct _d1102; // TemplateTypeParm S
struct _d1103; // TemplateTypeParm M2
struct _d1104; // CXXConstructor Persistent
struct _d1105; // ParmVar isolate
struct _d1106; // ParmVar that
struct _d1107; // CXXConstructor Persistent
struct _d1108; // ParmVar that
struct _d1109; // FunctionTemplate Persistent
struct _d1110; // TemplateTypeParm S
struct _d1111; // TemplateTypeParm M2
struct _d1112; // CXXConstructor Persistent
struct _d1113; // ParmVar that
struct _d1114; // CXXConstructor Persistent
struct _d1115; // ParmVar that
struct _d1116; // CXXMethod operator=
struct _d1117; // ParmVar that
struct _d1118; // FunctionTemplate operator=
struct _d1119; // TemplateTypeParm S
struct _d1120; // TemplateTypeParm M2
struct _d1121; // CXXMethod operator=
struct _d1122; // ParmVar that
struct _d1123; // CXXMethod operator=
struct _d1124; // ParmVar that
struct _d1125; // CXXDestructor ~Persistent
struct _d1126; // FunctionTemplate Cast
struct _d1127; // TemplateTypeParm S
struct _d1128; // CXXMethod Cast
struct _d1129; // ParmVar that
struct _d1130; // ClassTemplateSpecialization Persistent
struct _d1131; // FunctionTemplate As
struct _d1132; // TemplateTypeParm S
struct _d1133; // CXXMethod As
struct _d1134; // ClassTemplateSpecialization Persistent
struct _d1135; // ClassTemplate Global
struct _d1136; // TemplateTypeParm T
struct _d1137; // CXXRecord Global
struct _d1138; // ClassTemplate TracedGlobal
struct _d1139; // TemplateTypeParm T
struct _d1140; // CXXRecord TracedGlobal
struct _d1141; // ClassTemplateSpecialization TracedGlobal
struct _d1142; // CXXConstructor TracedGlobal
struct _d1143; // CXXDestructor ~TracedGlobal
struct _d1144; // FunctionTemplate TracedGlobal
struct _d1145; // TemplateTypeParm S
struct _d1146; // CXXConstructor TracedGlobal
struct _d1147; // ParmVar isolate
struct _d1148; // ParmVar that
struct _d1149; // CXXConstructor TracedGlobal
struct _d1150; // ParmVar other
struct _d1151; // FunctionTemplate operator=
struct _d1152; // TemplateTypeParm S
struct _d1153; // CXXMethod operator=
struct _d1154; // ParmVar rhs
struct _d1155; // CXXConstructor TracedGlobal
struct _d1156; // ParmVar 
struct _d1157; // CXXMethod operator=
struct _d1158; // ParmVar 
struct _d1159; // CXXMethod IsEmpty
struct _d1160; // CXXMethod Reset
struct _d1161; // FunctionTemplate Reset
struct _d1162; // TemplateTypeParm S
struct _d1163; // CXXMethod Reset
struct _d1164; // ParmVar isolate
struct _d1165; // ParmVar other
struct _d1166; // CXXMethod Get
struct _d1167; // ParmVar isolate
struct _d1168; // FunctionTemplate As
struct _d1169; // TemplateTypeParm S
struct _d1170; // CXXMethod As
struct _d1171; // FunctionTemplate operator==
struct _d1172; // TemplateTypeParm S
struct _d1173; // CXXMethod operator==
struct _d1174; // ParmVar that
struct _d1175; // FunctionTemplate operator==
struct _d1176; // TemplateTypeParm S
struct _d1177; // CXXMethod operator==
struct _d1178; // ParmVar that
struct _d1179; // FunctionTemplate operator!=
struct _d1180; // TemplateTypeParm S
struct _d1181; // CXXMethod operator!=
struct _d1182; // ParmVar that
struct _d1183; // FunctionTemplate operator!=
struct _d1184; // TemplateTypeParm S
struct _d1185; // CXXMethod operator!=
struct _d1186; // ParmVar that
struct _d1187; // CXXMethod SetWrapperClassId
struct _d1188; // ParmVar class_id
struct _d1189; // CXXMethod WrapperClassId
struct _d1190; // CXXMethod SetFinalizationCallback
struct _d1191; // ParmVar parameter
struct _d1192; // ParmVar callback
struct _d1193; // ClassTemplateSpecialization WeakCallbackInfo
struct _d1194; // ClassTemplate PersistentValueMap
struct _d1195; // TemplateTypeParm K
struct _d1196; // TemplateTypeParm V
struct _d1197; // TemplateTypeParm T
struct _d1198; // CXXRecord PersistentValueMap
struct _d1199; // ClassTemplate PersistentValueMapBase
struct _d1200; // TemplateTypeParm K
struct _d1201; // TemplateTypeParm V
struct _d1202; // TemplateTypeParm T
struct _d1203; // CXXRecord PersistentValueMapBase
struct _d1204; // ClassTemplate GlobalValueMap
struct _d1205; // TemplateTypeParm K
struct _d1206; // TemplateTypeParm V
struct _d1207; // TemplateTypeParm T
struct _d1208; // CXXRecord GlobalValueMap
struct _d1209; // ClassTemplate PersistentValueVector
struct _d1210; // TemplateTypeParm V
struct _d1211; // TemplateTypeParm T
struct _d1212; // CXXRecord PersistentValueVector
struct _d1213; // ClassTemplate WeakCallbackObject
struct _d1214; // TemplateTypeParm T
struct _d1215; // TemplateTypeParm P
struct _d1216; // CXXRecord WeakCallbackObject
struct _d1217; // ClassTemplate FunctionCallbackInfo
struct _d1218; // TemplateTypeParm T
struct _d1219; // CXXRecord FunctionCallbackInfo
struct _d1220; // ClassTemplateSpecialization FunctionCallbackInfo
struct _d1221; // ClassTemplate PropertyCallbackInfo
struct _d1222; // TemplateTypeParm T
struct _d1223; // CXXRecord PropertyCallbackInfo
struct _d1224; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1225; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1226; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1227; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1228; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1229; // CXXRecord CallHandlerHelper
struct _d1230; // CXXRecord EscapableHandleScope
struct _d1231; // ClassTemplate ReturnValue
struct _d1232; // TemplateTypeParm T
struct _d1233; // CXXRecord ReturnValue
struct _d1234; // Namespace debug
struct _d1235; // CXXRecord ConsoleCallArguments
struct _d1236; // TemplateTypeParm T
struct _d1237; // CXXRecord Local
struct _d1238; // CXXConstructor Local<T>
struct _d1239; // FunctionTemplate Local<T>
struct _d1240; // TemplateTypeParm S
struct _d1241; // CXXConstructor Local<T>
struct _d1242; // ParmVar that
struct _d1243; // CXXMethod IsEmpty
struct _d1244; // CXXMethod Clear
struct _d1245; // CXXMethod operator->
struct _d1246; // CXXMethod operator*
struct _d1247; // FunctionTemplate operator==
struct _d1248; // TemplateTypeParm S
struct _d1249; // CXXMethod operator==
struct _d1250; // ParmVar that
struct _d1251; // FunctionTemplate operator==
struct _d1252; // TemplateTypeParm S
struct _d1253; // CXXMethod operator==
struct _d1254; // ParmVar that
struct _d1255; // FunctionTemplate operator!=
struct _d1256; // TemplateTypeParm S
struct _d1257; // CXXMethod operator!=
struct _d1258; // ParmVar that
struct _d1259; // FunctionTemplate operator!=
struct _d1260; // TemplateTypeParm S
struct _d1261; // CXXMethod operator!=
struct _d1262; // ParmVar that
struct _d1263; // FunctionTemplate Cast
struct _d1264; // TemplateTypeParm S
struct _d1265; // CXXMethod Cast
struct _d1266; // ParmVar that
struct _d1267; // FunctionTemplate As
struct _d1268; // TemplateTypeParm S
struct _d1269; // CXXMethod As
struct _d1270; // CXXMethod New
struct _d1271; // ParmVar isolate
struct _d1272; // ParmVar that
struct _d1273; // CXXMethod New
struct _d1274; // ParmVar isolate
struct _d1275; // ParmVar that
struct _d1276; // CXXMethod New
struct _d1277; // ParmVar isolate
struct _d1278; // ParmVar that
struct _d1279; // TypeAliasTemplate Handle
struct _d1280; // TypeAlias Handle
struct _d1281; // TemplateTypeParm T
struct _d1282; // TemplateTypeParm T
struct _d1283; // CXXRecord MaybeLocal
struct _d1284; // CXXConstructor MaybeLocal<T>
struct _d1285; // FunctionTemplate MaybeLocal<T>
struct _d1286; // TemplateTypeParm S
struct _d1287; // CXXConstructor MaybeLocal<T>
struct _d1288; // ParmVar that
struct _d1289; // CXXMethod IsEmpty
struct _d1290; // FunctionTemplate ToLocal
struct _d1291; // TemplateTypeParm S
struct _d1292; // CXXMethod ToLocal
struct _d1293; // ParmVar out
struct _d1294; // CXXMethod ToLocalChecked
struct _d1295; // FunctionTemplate FromMaybe
struct _d1296; // TemplateTypeParm S
struct _d1297; // CXXMethod FromMaybe
struct _d1298; // ParmVar default_value
struct _d1299; // TemplateTypeParm T
struct _d1300; // CXXRecord Eternal
struct _d1301; // CXXConstructor Eternal<T>
struct _d1302; // FunctionTemplate Eternal<T>
struct _d1303; // TemplateTypeParm S
struct _d1304; // CXXConstructor Eternal<T>
struct _d1305; // ParmVar isolate
struct _d1306; // ParmVar handle
struct _d1307; // CXXMethod Get
struct _d1308; // ParmVar isolate
struct _d1309; // CXXMethod IsEmpty
struct _d1310; // FunctionTemplate Set
struct _d1311; // TemplateTypeParm S
struct _d1312; // CXXMethod Set
struct _d1313; // ParmVar isolate
struct _d1314; // ParmVar handle
struct _d1315; // Var kInternalFieldsInWeakCallback
struct _d1316; // Var kEmbedderFieldsInWeakCallback
struct _d1317; // ClassTemplate WeakCallbackInfo
struct _d1318; // TemplateTypeParm T
struct _d1319; // CXXRecord WeakCallbackInfo
struct _d1320; // CXXRecord WeakCallbackInfo
struct _d1321; // Typedef Callback
struct _d1322; // CXXConstructor WeakCallbackInfo<T>
struct _d1323; // ParmVar isolate
struct _d1324; // ParmVar parameter
struct _d1325; // ParmVar embedder_fields
struct _d1326; // ParmVar callback
struct _d1327; // CXXMethod GetIsolate
struct _d1328; // CXXMethod GetParameter
struct _d1329; // CXXMethod GetInternalField
struct _d1330; // ParmVar index
struct _d1331; // CXXMethod SetSecondPassCallback
struct _d1332; // ParmVar callback
struct _d1333; // Typedef Callback
struct _d1334; // ParmVar data
struct _d1335; // CXXConstructor WeakCallbackInfo
struct _d1336; // ParmVar isolate
struct _d1337; // ParmVar parameter
struct _d1338; // ParmVar embedder_fields
struct _d1339; // ParmVar callback
struct _d1340; // CXXMethod GetIsolate
struct _d1341; // CXXMethod GetParameter
struct _d1342; // CXXMethod GetInternalField
struct _d1343; // ParmVar index
struct _d1344; // CXXMethod SetSecondPassCallback
struct _d1345; // ParmVar callback
struct _d1346; // EnumConstant kParameter
struct _d1347; // EnumConstant kInternalFields
struct _d1348; // EnumConstant kFinalizer
struct _d1349; // TemplateTypeParm T
struct _d1350; // CXXRecord PersistentBase
struct _d1351; // CXXMethod Reset
struct _d1352; // FunctionTemplate Reset
struct _d1353; // TemplateTypeParm S
struct _d1354; // CXXMethod Reset
struct _d1355; // ParmVar isolate
struct _d1356; // ParmVar other
struct _d1357; // FunctionTemplate Reset
struct _d1358; // TemplateTypeParm S
struct _d1359; // CXXMethod Reset
struct _d1360; // ParmVar isolate
struct _d1361; // ParmVar other
struct _d1362; // CXXMethod IsEmpty
struct _d1363; // CXXMethod Empty
struct _d1364; // CXXMethod Get
struct _d1365; // ParmVar isolate
struct _d1366; // FunctionTemplate operator==
struct _d1367; // TemplateTypeParm S
struct _d1368; // CXXMethod operator==
struct _d1369; // ParmVar that
struct _d1370; // FunctionTemplate operator==
struct _d1371; // TemplateTypeParm S
struct _d1372; // CXXMethod operator==
struct _d1373; // ParmVar that
struct _d1374; // FunctionTemplate operator!=
struct _d1375; // TemplateTypeParm S
struct _d1376; // CXXMethod operator!=
struct _d1377; // ParmVar that
struct _d1378; // FunctionTemplate operator!=
struct _d1379; // TemplateTypeParm S
struct _d1380; // CXXMethod operator!=
struct _d1381; // ParmVar that
struct _d1382; // FunctionTemplate SetWeak
struct _d1383; // TemplateTypeParm P
struct _d1384; // CXXMethod SetWeak
struct _d1385; // ParmVar parameter
struct _d1386; // ParmVar callback
struct _d1387; // ParmVar type
struct _d1388; // CXXMethod SetWeak
struct _d1389; // FunctionTemplate ClearWeak
struct _d1390; // TemplateTypeParm P
struct _d1391; // CXXMethod ClearWeak
struct _d1392; // CXXMethod ClearWeak
struct _d1393; // CXXMethod AnnotateStrongRetainer
struct _d1394; // ParmVar label
struct _d1395; // CXXMethod IsWeak
struct _d1396; // CXXMethod SetWrapperClassId
struct _d1397; // ParmVar class_id
struct _d1398; // CXXMethod WrapperClassId
struct _d1399; // CXXConstructor PersistentBase<T>
struct _d1400; // ParmVar other
struct _d1401; // CXXMethod operator=
struct _d1402; // ParmVar 
struct _d1403; // TemplateTypeParm T
struct _d1404; // CXXRecord NonCopyablePersistentTraits
struct _d1405; // Typedef NonCopyablePersistent
struct _d1406; // Var kResetInDestructor
struct _d1407; // FunctionTemplate Copy
struct _d1408; // TemplateTypeParm S
struct _d1409; // TemplateTypeParm M
struct _d1410; // CXXMethod Copy
struct _d1411; // ParmVar source
struct _d1412; // ParmVar dest
struct _d1413; // FunctionTemplate Uncompilable
struct _d1414; // TemplateTypeParm O
struct _d1415; // CXXMethod Uncompilable
struct _d1416; // ClassTemplate CopyablePersistentTraits
struct _d1417; // TemplateTypeParm T
struct _d1418; // CXXRecord CopyablePersistentTraits
struct _d1419; // CXXRecord CopyablePersistentTraits
struct _d1420; // Typedef CopyablePersistent
struct _d1421; // Var kResetInDestructor
struct _d1422; // FunctionTemplate Copy
struct _d1423; // TemplateTypeParm S
struct _d1424; // TemplateTypeParm M
struct _d1425; // CXXMethod Copy
struct _d1426; // ParmVar source
struct _d1427; // ParmVar dest
struct _d1428; // ClassTemplateSpecialization CopyablePersistentTraits
struct _d1429; // TemplateTypeParm T
struct _d1430; // TemplateTypeParm M
struct _d1431; // CXXRecord Persistent
struct _d1432; // CXXConstructor Persistent<T, M>
struct _d1433; // FunctionTemplate Persistent<T, M>
struct _d1434; // TemplateTypeParm S
struct _d1435; // CXXConstructor Persistent<T, M>
struct _d1436; // ParmVar isolate
struct _d1437; // ParmVar that
struct _d1438; // FunctionTemplate Persistent<T, M>
struct _d1439; // TemplateTypeParm S
struct _d1440; // TemplateTypeParm M2
struct _d1441; // CXXConstructor Persistent<T, M>
struct _d1442; // ParmVar isolate
struct _d1443; // ParmVar that
struct _d1444; // CXXConstructor Persistent<T, M>
struct _d1445; // ParmVar that
struct _d1446; // FunctionTemplate Persistent<T, M>
struct _d1447; // TemplateTypeParm S
struct _d1448; // TemplateTypeParm M2
struct _d1449; // CXXConstructor Persistent<T, M>
struct _d1450; // ParmVar that
struct _d1451; // CXXMethod operator=
struct _d1452; // ParmVar that
struct _d1453; // FunctionTemplate operator=
struct _d1454; // TemplateTypeParm S
struct _d1455; // TemplateTypeParm M2
struct _d1456; // CXXMethod operator=
struct _d1457; // ParmVar that
struct _d1458; // CXXDestructor ~Persistent<T, M>
struct _d1459; // FunctionTemplate Cast
struct _d1460; // TemplateTypeParm S
struct _d1461; // CXXMethod Cast
struct _d1462; // ParmVar that
struct _d1463; // FunctionTemplate As
struct _d1464; // TemplateTypeParm S
struct _d1465; // CXXMethod As
struct _d1466; // TemplateTypeParm T
struct _d1467; // CXXRecord Global
struct _d1468; // CXXConstructor Global<T>
struct _d1469; // FunctionTemplate Global<T>
struct _d1470; // TemplateTypeParm S
struct _d1471; // CXXConstructor Global<T>
struct _d1472; // ParmVar isolate
struct _d1473; // ParmVar that
struct _d1474; // FunctionTemplate Global<T>
struct _d1475; // TemplateTypeParm S
struct _d1476; // CXXConstructor Global<T>
struct _d1477; // ParmVar isolate
struct _d1478; // ParmVar that
struct _d1479; // CXXConstructor Global<T>
struct _d1480; // ParmVar other
struct _d1481; // CXXDestructor ~Global<T>
struct _d1482; // FunctionTemplate operator=
struct _d1483; // TemplateTypeParm S
struct _d1484; // CXXMethod operator=
struct _d1485; // ParmVar rhs
struct _d1486; // CXXMethod Pass
struct _d1487; // Typedef MoveOnlyTypeForCPP03
struct _d1488; // CXXConstructor Global<T>
struct _d1489; // ParmVar 
struct _d1490; // CXXMethod operator=
struct _d1491; // ParmVar 
struct _d1492; // TypeAliasTemplate UniquePersistent
struct _d1493; // TypeAlias UniquePersistent
struct _d1494; // TemplateTypeParm T
struct _d1495; // TemplateTypeParm T
struct _d1496; // CXXRecord TracedGlobal
struct _d1497; // CXXConstructor TracedGlobal<T>
struct _d1498; // CXXDestructor ~TracedGlobal<T>
struct _d1499; // FunctionTemplate TracedGlobal<T>
struct _d1500; // TemplateTypeParm S
struct _d1501; // CXXConstructor TracedGlobal<T>
struct _d1502; // ParmVar isolate
struct _d1503; // ParmVar that
struct _d1504; // CXXConstructor TracedGlobal<T>
struct _d1505; // ParmVar other
struct _d1506; // FunctionTemplate operator=
struct _d1507; // TemplateTypeParm S
struct _d1508; // CXXMethod operator=
struct _d1509; // ParmVar rhs
struct _d1510; // CXXConstructor TracedGlobal<T>
struct _d1511; // ParmVar 
struct _d1512; // CXXMethod operator=
struct _d1513; // ParmVar 
struct _d1514; // CXXMethod IsEmpty
struct _d1515; // CXXMethod Reset
struct _d1516; // FunctionTemplate Reset
struct _d1517; // TemplateTypeParm S
struct _d1518; // CXXMethod Reset
struct _d1519; // ParmVar isolate
struct _d1520; // ParmVar other
struct _d1521; // CXXMethod Get
struct _d1522; // ParmVar isolate
struct _d1523; // FunctionTemplate As
struct _d1524; // TemplateTypeParm S
struct _d1525; // CXXMethod As
struct _d1526; // FunctionTemplate operator==
struct _d1527; // TemplateTypeParm S
struct _d1528; // CXXMethod operator==
struct _d1529; // ParmVar that
struct _d1530; // FunctionTemplate operator==
struct _d1531; // TemplateTypeParm S
struct _d1532; // CXXMethod operator==
struct _d1533; // ParmVar that
struct _d1534; // FunctionTemplate operator!=
struct _d1535; // TemplateTypeParm S
struct _d1536; // CXXMethod operator!=
struct _d1537; // ParmVar that
struct _d1538; // FunctionTemplate operator!=
struct _d1539; // TemplateTypeParm S
struct _d1540; // CXXMethod operator!=
struct _d1541; // ParmVar that
struct _d1542; // CXXMethod SetWrapperClassId
struct _d1543; // ParmVar class_id
struct _d1544; // CXXMethod WrapperClassId
struct _d1545; // CXXMethod SetFinalizationCallback
struct _d1546; // ParmVar parameter
struct _d1547; // ParmVar callback
struct _d1548; // CXXRecord HandleScope
struct _d1549; // CXXRecord HandleScope
struct _d1550; // CXXConstructor HandleScope
struct _d1551; // ParmVar isolate
struct _d1552; // CXXDestructor ~HandleScope
struct _d1553; // CXXMethod NumberOfHandles
struct _d1554; // ParmVar isolate
struct _d1555; // CXXMethod GetIsolate
struct _d1556; // CXXConstructor HandleScope
struct _d1557; // ParmVar 
struct _d1558; // CXXMethod operator=
struct _d1559; // ParmVar 
struct _d1560; // CXXConstructor HandleScope
struct _d1561; // CXXMethod Initialize
struct _d1562; // ParmVar isolate
struct _d1563; // CXXMethod CreateHandle
struct _d1564; // ParmVar isolate
struct _d1565; // CXXRecord Isolate
struct _d1566; // ParmVar value
struct _d1567; // CXXRecord EscapableHandleScope
struct _d1568; // CXXConstructor EscapableHandleScope
struct _d1569; // ParmVar isolate
struct _d1570; // CXXDestructor ~EscapableHandleScope
struct _d1571; // FunctionTemplate Escape
struct _d1572; // TemplateTypeParm T
struct _d1573; // CXXMethod Escape
struct _d1574; // ParmVar value
struct _d1575; // FunctionTemplate EscapeMaybe
struct _d1576; // TemplateTypeParm T
struct _d1577; // CXXMethod EscapeMaybe
struct _d1578; // ParmVar value
struct _d1579; // CXXConstructor EscapableHandleScope
struct _d1580; // ParmVar 
struct _d1581; // CXXMethod operator=
struct _d1582; // ParmVar 
struct _d1583; // CXXRecord SealHandleScope
struct _d1584; // CXXRecord SealHandleScope
struct _d1585; // CXXConstructor SealHandleScope
struct _d1586; // ParmVar isolate
struct _d1587; // CXXDestructor ~SealHandleScope
struct _d1588; // CXXConstructor SealHandleScope
struct _d1589; // ParmVar 
struct _d1590; // CXXMethod operator=
struct _d1591; // ParmVar 
struct _d1592; // CXXRecord Data
struct _d1593; // CXXRecord ScriptOrModule
struct _d1594; // CXXRecord ScriptOrModule
struct _d1595; // CXXMethod GetResourceName
struct _d1596; // CXXMethod GetHostDefinedOptions
struct _d1597; // CXXRecord PrimitiveArray
struct _d1598; // CXXMethod New
struct _d1599; // ParmVar isolate
struct _d1600; // ParmVar length
struct _d1601; // CXXMethod Length
struct _d1602; // CXXMethod Set
struct _d1603; // ParmVar isolate
struct _d1604; // ParmVar index
struct _d1605; // ParmVar item
struct _d1606; // CXXMethod Get
struct _d1607; // ParmVar isolate
struct _d1608; // ParmVar index
struct _d1609; // CXXRecord ScriptOriginOptions
struct _d1610; // CXXRecord ScriptOriginOptions
struct _d1611; // CXXConstructor ScriptOriginOptions
struct _d1612; // ParmVar is_shared_cross_origin
struct _d1613; // ParmVar is_opaque
struct _d1614; // ParmVar is_wasm
struct _d1615; // ParmVar is_module
struct _d1616; // CXXConstructor ScriptOriginOptions
struct _d1617; // ParmVar flags
struct _d1618; // CXXMethod IsSharedCrossOrigin
struct _d1619; // CXXMethod IsOpaque
struct _d1620; // CXXMethod IsWasm
struct _d1621; // CXXMethod IsModule
struct _d1622; // CXXMethod Flags
struct _d1623; // CXXConstructor ScriptOriginOptions
struct _d1624; // ParmVar 
struct _d1625; // CXXConstructor ScriptOriginOptions
struct _d1626; // ParmVar 
struct _d1627; // CXXDestructor ~ScriptOriginOptions
struct _d1628; // CXXMethod operator=
struct _d1629; // ParmVar 
struct _d1630; // CXXMethod operator=
struct _d1631; // ParmVar 
struct _d1632; // CXXRecord ScriptOrigin
struct _d1633; // CXXRecord ScriptOrigin
struct _d1634; // CXXConstructor ScriptOrigin
struct _d1635; // ParmVar resource_name
struct _d1636; // ParmVar resource_line_offset
struct _d1637; // ParmVar resource_column_offset
struct _d1638; // ParmVar resource_is_shared_cross_origin
struct _d1639; // ParmVar script_id
struct _d1640; // ParmVar source_map_url
struct _d1641; // ParmVar resource_is_opaque
struct _d1642; // ParmVar is_wasm
struct _d1643; // ParmVar is_module
struct _d1644; // ParmVar host_defined_options
struct _d1645; // CXXMethod ResourceName
struct _d1646; // CXXMethod ResourceLineOffset
struct _d1647; // CXXMethod ResourceColumnOffset
struct _d1648; // CXXMethod ScriptID
struct _d1649; // CXXMethod SourceMapUrl
struct _d1650; // CXXMethod HostDefinedOptions
struct _d1651; // CXXMethod Options
struct _d1652; // CXXConstructor ScriptOrigin
struct _d1653; // ParmVar 
struct _d1654; // CXXMethod operator=
struct _d1655; // ParmVar 
struct _d1656; // CXXConstructor ScriptOrigin
struct _d1657; // ParmVar 
struct _d1658; // CXXRecord UnboundScript
struct _d1659; // CXXMethod BindToCurrentContext
struct _d1660; // CXXMethod GetId
struct _d1661; // CXXMethod GetScriptName
struct _d1662; // CXXMethod GetSourceURL
struct _d1663; // CXXMethod GetSourceMappingURL
struct _d1664; // CXXMethod GetLineNumber
struct _d1665; // ParmVar code_pos
struct _d1666; // Var kNoScriptId
struct _d1667; // CXXRecord UnboundModuleScript
struct _d1668; // CXXRecord UnboundModuleScript
struct _d1669; // CXXRecord Location
struct _d1670; // CXXRecord Location
struct _d1671; // CXXMethod GetLineNumber
struct _d1672; // CXXMethod GetColumnNumber
struct _d1673; // CXXConstructor Location
struct _d1674; // ParmVar line_number
struct _d1675; // ParmVar column_number
struct _d1676; // CXXRecord Module
struct _d1677; // CXXRecord Module
struct _d1678; // Enum Status
struct _d1679; // EnumConstant kUninstantiated
struct _d1680; // EnumConstant kInstantiating
struct _d1681; // EnumConstant kInstantiated
struct _d1682; // EnumConstant kEvaluating
struct _d1683; // EnumConstant kEvaluated
struct _d1684; // EnumConstant kErrored
struct _d1685; // CXXMethod GetStatus
struct _d1686; // CXXMethod GetException
struct _d1687; // CXXMethod GetModuleRequestsLength
struct _d1688; // CXXMethod GetModuleRequest
struct _d1689; // ParmVar i
struct _d1690; // CXXMethod GetModuleRequestLocation
struct _d1691; // ParmVar i
struct _d1692; // CXXMethod GetIdentityHash
struct _d1693; // Typedef ResolveCallback
struct _d1694; // CXXMethod InstantiateModule
struct _d1695; // ParmVar context
struct _d1696; // ParmVar callback
struct _d1697; // CXXMethod Evaluate
struct _d1698; // ParmVar context
struct _d1699; // CXXMethod GetModuleNamespace
struct _d1700; // CXXMethod GetUnboundModuleScript
struct _d1701; // CXXRecord Script
struct _d1702; // CXXMethod Compile
struct _d1703; // ParmVar context
struct _d1704; // ParmVar source
struct _d1705; // ParmVar origin
struct _d1706; // CXXMethod Run
struct _d1707; // ParmVar context
struct _d1708; // CXXMethod GetUnboundScript
struct _d1709; // CXXRecord ScriptCompiler
struct _d1710; // CXXRecord ScriptCompiler
struct _d1711; // CXXRecord CachedData
struct _d1712; // CXXRecord CachedData
struct _d1713; // Enum BufferPolicy
struct _d1714; // EnumConstant BufferNotOwned
struct _d1715; // EnumConstant BufferOwned
struct _d1716; // CXXConstructor CachedData
struct _d1717; // CXXConstructor CachedData
struct _d1718; // ParmVar data
struct _d1719; // ParmVar length
struct _d1720; // ParmVar buffer_policy
struct _d1721; // CXXDestructor ~CachedData
struct _d1722; // Field data
struct _d1723; // Field length
struct _d1724; // Field rejected
struct _d1725; // Field buffer_policy
struct _d1726; // CXXConstructor CachedData
struct _d1727; // ParmVar 
struct _d1728; // CXXMethod operator=
struct _d1729; // ParmVar 
struct _d1730; // CXXRecord Source
struct _d1731; // CXXRecord Source
struct _d1732; // CXXConstructor Source
struct _d1733; // ParmVar source_string
struct _d1734; // ParmVar origin
struct _d1735; // ParmVar cached_data
struct _d1736; // CXXConstructor Source
struct _d1737; // ParmVar source_string
struct _d1738; // ParmVar cached_data
struct _d1739; // CXXDestructor ~Source
struct _d1740; // CXXMethod GetCachedData
struct _d1741; // CXXMethod GetResourceOptions
struct _d1742; // CXXConstructor Source
struct _d1743; // ParmVar 
struct _d1744; // CXXMethod operator=
struct _d1745; // ParmVar 
struct _d1746; // CXXRecord ExternalSourceStream
struct _d1747; // CXXRecord ExternalSourceStream
struct _d1748; // CXXDestructor ~ExternalSourceStream
struct _d1749; // CXXMethod GetMoreData
struct _d1750; // ParmVar src
struct _d1751; // CXXMethod SetBookmark
struct _d1752; // CXXMethod ResetToBookmark
struct _d1753; // CXXMethod operator=
struct _d1754; // ParmVar 
struct _d1755; // CXXRecord StreamedSource
struct _d1756; // CXXRecord StreamedSource
struct _d1757; // Enum Encoding
struct _d1758; // EnumConstant ONE_BYTE
struct _d1759; // EnumConstant TWO_BYTE
struct _d1760; // EnumConstant UTF8
struct _d1761; // CXXConstructor StreamedSource
struct _d1762; // ParmVar source_stream
struct _d1763; // ParmVar encoding
struct _d1764; // CXXConstructor StreamedSource
struct _d1765; // ParmVar source_stream
struct _d1766; // ClassTemplateSpecialization unique_ptr
struct _d1767; // ParmVar encoding
struct _d1768; // CXXDestructor ~StreamedSource
struct _d1769; // CXXMethod impl
struct _d1770; // CXXRecord ScriptStreamingData
struct _d1771; // CXXConstructor StreamedSource
struct _d1772; // ParmVar 
struct _d1773; // CXXMethod operator=
struct _d1774; // ParmVar 
struct _d1775; // CXXRecord ScriptStreamingTask
struct _d1776; // CXXRecord ScriptStreamingTask
struct _d1777; // CXXMethod Run
struct _d1778; // Enum CompileOptions
struct _d1779; // EnumConstant kNoCompileOptions
struct _d1780; // EnumConstant kConsumeCodeCache
struct _d1781; // EnumConstant kEagerCompile
struct _d1782; // Enum NoCacheReason
struct _d1783; // EnumConstant kNoCacheNoReason
struct _d1784; // EnumConstant kNoCacheBecauseCachingDisabled
struct _d1785; // EnumConstant kNoCacheBecauseNoResource
struct _d1786; // EnumConstant kNoCacheBecauseInlineScript
struct _d1787; // EnumConstant kNoCacheBecauseModule
struct _d1788; // EnumConstant kNoCacheBecauseStreamingSource
struct _d1789; // EnumConstant kNoCacheBecauseInspector
struct _d1790; // EnumConstant kNoCacheBecauseScriptTooSmall
struct _d1791; // EnumConstant kNoCacheBecauseCacheTooCold
struct _d1792; // EnumConstant kNoCacheBecauseV8Extension
struct _d1793; // EnumConstant kNoCacheBecauseExtensionModule
struct _d1794; // EnumConstant kNoCacheBecausePacScript
struct _d1795; // EnumConstant kNoCacheBecauseInDocumentWrite
struct _d1796; // EnumConstant kNoCacheBecauseResourceWithNoCacheHandler
struct _d1797; // EnumConstant kNoCacheBecauseDeferredProduceCodeCache
struct _d1798; // CXXMethod CompileUnboundScript
struct _d1799; // ParmVar isolate
struct _d1800; // ParmVar source
struct _d1801; // ParmVar options
struct _d1802; // ParmVar no_cache_reason
struct _d1803; // CXXMethod Compile
struct _d1804; // ParmVar context
struct _d1805; // ParmVar source
struct _d1806; // ParmVar options
struct _d1807; // ParmVar no_cache_reason
struct _d1808; // CXXMethod StartStreamingScript
struct _d1809; // ParmVar isolate
struct _d1810; // ParmVar source
struct _d1811; // ParmVar options
struct _d1812; // CXXMethod Compile
struct _d1813; // ParmVar context
struct _d1814; // ParmVar source
struct _d1815; // ParmVar full_source_string
struct _d1816; // ParmVar origin
struct _d1817; // CXXMethod CachedDataVersionTag
struct _d1818; // CXXMethod CompileModule
struct _d1819; // ParmVar isolate
struct _d1820; // ParmVar source
struct _d1821; // ParmVar options
struct _d1822; // ParmVar no_cache_reason
struct _d1823; // CXXMethod CompileFunctionInContext
struct _d1824; // ParmVar context
struct _d1825; // ParmVar source
struct _d1826; // ParmVar arguments_count
struct _d1827; // ParmVar arguments
struct _d1828; // ParmVar context_extension_count
struct _d1829; // ParmVar context_extensions
struct _d1830; // ParmVar options
struct _d1831; // ParmVar no_cache_reason
struct _d1832; // CXXMethod CreateCodeCache
struct _d1833; // ParmVar unbound_script
struct _d1834; // CXXMethod CreateCodeCache
struct _d1835; // ParmVar unbound_module_script
struct _d1836; // CXXMethod CreateCodeCacheForFunction
struct _d1837; // ParmVar function
struct _d1838; // CXXRecord Message
struct _d1839; // CXXRecord Message
struct _d1840; // CXXMethod Get
struct _d1841; // CXXMethod GetIsolate
struct _d1842; // CXXMethod GetSourceLine
struct _d1843; // ParmVar context
struct _d1844; // CXXMethod GetScriptOrigin
struct _d1845; // CXXMethod GetScriptResourceName
struct _d1846; // CXXMethod GetStackTrace
struct _d1847; // CXXMethod GetLineNumber
struct _d1848; // ParmVar context
struct _d1849; // CXXMethod GetStartPosition
struct _d1850; // CXXMethod GetEndPosition
struct _d1851; // CXXMethod ErrorLevel
struct _d1852; // CXXMethod GetStartColumn
struct _d1853; // CXXMethod GetStartColumn
struct _d1854; // ParmVar context
struct _d1855; // CXXMethod GetEndColumn
struct _d1856; // CXXMethod GetEndColumn
struct _d1857; // ParmVar context
struct _d1858; // CXXMethod IsSharedCrossOrigin
struct _d1859; // CXXMethod IsOpaque
struct _d1860; // CXXMethod PrintCurrentStackTrace
struct _d1861; // ParmVar isolate
struct _d1862; // ParmVar out
struct _d1863; // CXXRecord _iobuf
struct _d1864; // Var kNoLineNumberInfo
struct _d1865; // Var kNoColumnInfo
struct _d1866; // Var kNoScriptIdInfo
struct _d1867; // CXXRecord StackTrace
struct _d1868; // Enum StackTraceOptions
struct _d1869; // EnumConstant kLineNumber
struct _d1870; // EnumConstant kColumnOffset
struct _d1871; // EnumConstant kScriptName
struct _d1872; // EnumConstant kFunctionName
struct _d1873; // EnumConstant kIsEval
struct _d1874; // EnumConstant kIsConstructor
struct _d1875; // EnumConstant kScriptNameOrSourceURL
struct _d1876; // EnumConstant kScriptId
struct _d1877; // EnumConstant kExposeFramesAcrossSecurityOrigins
struct _d1878; // EnumConstant kOverview
struct _d1879; // EnumConstant kDetailed
struct _d1880; // CXXMethod GetFrame
struct _d1881; // ParmVar isolate
struct _d1882; // ParmVar index
struct _d1883; // CXXMethod GetFrameCount
struct _d1884; // CXXMethod CurrentStackTrace
struct _d1885; // ParmVar isolate
struct _d1886; // ParmVar frame_limit
struct _d1887; // ParmVar options
struct _d1888; // CXXRecord StackFrame
struct _d1889; // CXXMethod GetLineNumber
struct _d1890; // CXXMethod GetColumn
struct _d1891; // CXXMethod GetScriptId
struct _d1892; // CXXMethod GetScriptName
struct _d1893; // CXXMethod GetScriptNameOrSourceURL
struct _d1894; // CXXMethod GetFunctionName
struct _d1895; // CXXMethod IsEval
struct _d1896; // CXXMethod IsConstructor
struct _d1897; // CXXMethod IsWasm
struct _d1898; // CXXMethod IsUserJavaScript
struct _d1899; // Enum StateTag
struct _d1900; // EnumConstant JS
struct _d1901; // EnumConstant GC
struct _d1902; // EnumConstant PARSER
struct _d1903; // EnumConstant BYTECODE_COMPILER
struct _d1904; // EnumConstant COMPILER
struct _d1905; // EnumConstant OTHER
struct _d1906; // EnumConstant EXTERNAL
struct _d1907; // EnumConstant IDLE
struct _d1908; // CXXRecord RegisterState
struct _d1909; // CXXRecord RegisterState
struct _d1910; // CXXConstructor RegisterState
struct _d1911; // Field pc
struct _d1912; // Field sp
struct _d1913; // Field fp
struct _d1914; // Field lr
struct _d1915; // CXXRecord SampleInfo
struct _d1916; // CXXRecord SampleInfo
struct _d1917; // Field frames_count
struct _d1918; // Field vm_state
struct _d1919; // Field external_callback_entry
struct _d1920; // CXXRecord MemoryRange
struct _d1921; // CXXRecord MemoryRange
struct _d1922; // Field start
struct _d1923; // Field length_in_bytes
struct _d1924; // CXXRecord JSEntryStub
struct _d1925; // CXXRecord JSEntryStub
struct _d1926; // Field code
struct _d1927; // CXXRecord UnwindState
struct _d1928; // CXXRecord UnwindState
struct _d1929; // Field code_range
struct _d1930; // Field embedded_code_range
struct _d1931; // Field js_entry_stub
struct _d1932; // CXXRecord JSON
struct _d1933; // CXXRecord JSON
struct _d1934; // CXXMethod Parse
struct _d1935; // ParmVar context
struct _d1936; // ParmVar json_string
struct _d1937; // CXXMethod Stringify
struct _d1938; // ParmVar context
struct _d1939; // ParmVar json_object
struct _d1940; // ParmVar gap
struct _d1941; // CXXRecord ValueSerializer
struct _d1942; // CXXRecord ValueSerializer
struct _d1943; // CXXRecord Delegate
struct _d1944; // CXXRecord Delegate
struct _d1945; // CXXDestructor ~Delegate
struct _d1946; // CXXMethod ThrowDataCloneError
struct _d1947; // ParmVar message
struct _d1948; // CXXMethod WriteHostObject
struct _d1949; // ParmVar isolate
struct _d1950; // ParmVar object
struct _d1951; // CXXMethod GetSharedArrayBufferId
struct _d1952; // ParmVar isolate
struct _d1953; // ParmVar shared_array_buffer
struct _d1954; // CXXMethod GetWasmModuleTransferId
struct _d1955; // ParmVar isolate
struct _d1956; // ParmVar module
struct _d1957; // CXXMethod ReallocateBufferMemory
struct _d1958; // ParmVar old_buffer
struct _d1959; // ParmVar size
struct _d1960; // ParmVar actual_size
struct _d1961; // CXXMethod FreeBufferMemory
struct _d1962; // ParmVar buffer
struct _d1963; // CXXMethod operator=
struct _d1964; // ParmVar 
struct _d1965; // CXXConstructor ValueSerializer
struct _d1966; // ParmVar isolate
struct _d1967; // CXXConstructor ValueSerializer
struct _d1968; // ParmVar isolate
struct _d1969; // ParmVar delegate
struct _d1970; // CXXDestructor ~ValueSerializer
struct _d1971; // CXXMethod WriteHeader
struct _d1972; // CXXMethod WriteValue
struct _d1973; // ParmVar context
struct _d1974; // ParmVar value
struct _d1975; // CXXMethod Release
struct _d1976; // ClassTemplateSpecialization pair
struct _d1977; // CXXMethod TransferArrayBuffer
struct _d1978; // ParmVar transfer_id
struct _d1979; // ParmVar array_buffer
struct _d1980; // CXXMethod SetTreatArrayBufferViewsAsHostObjects
struct _d1981; // ParmVar mode
struct _d1982; // CXXMethod WriteUint32
struct _d1983; // ParmVar value
struct _d1984; // CXXMethod WriteUint64
struct _d1985; // ParmVar value
struct _d1986; // CXXMethod WriteDouble
struct _d1987; // ParmVar value
struct _d1988; // CXXMethod WriteRawBytes
struct _d1989; // ParmVar source
struct _d1990; // ParmVar length
struct _d1991; // CXXConstructor ValueSerializer
struct _d1992; // ParmVar 
struct _d1993; // CXXMethod operator=
struct _d1994; // ParmVar 
struct _d1995; // CXXRecord ValueDeserializer
struct _d1996; // CXXRecord ValueDeserializer
struct _d1997; // CXXRecord Delegate
struct _d1998; // CXXRecord Delegate
struct _d1999; // CXXDestructor ~Delegate
struct _d2000; // CXXMethod ReadHostObject
struct _d2001; // ParmVar isolate
struct _d2002; // CXXMethod GetWasmModuleFromId
struct _d2003; // ParmVar isolate
struct _d2004; // ParmVar transfer_id
struct _d2005; // CXXMethod GetSharedArrayBufferFromId
struct _d2006; // ParmVar isolate
struct _d2007; // ParmVar clone_id
struct _d2008; // CXXMethod operator=
struct _d2009; // ParmVar 
struct _d2010; // CXXConstructor ValueDeserializer
struct _d2011; // ParmVar isolate
struct _d2012; // ParmVar data
struct _d2013; // ParmVar size
struct _d2014; // CXXConstructor ValueDeserializer
struct _d2015; // ParmVar isolate
struct _d2016; // ParmVar data
struct _d2017; // ParmVar size
struct _d2018; // ParmVar delegate
struct _d2019; // CXXDestructor ~ValueDeserializer
struct _d2020; // CXXMethod ReadHeader
struct _d2021; // ParmVar context
struct _d2022; // CXXMethod ReadValue
struct _d2023; // ParmVar context
struct _d2024; // CXXMethod TransferArrayBuffer
struct _d2025; // ParmVar transfer_id
struct _d2026; // ParmVar array_buffer
struct _d2027; // CXXMethod TransferSharedArrayBuffer
struct _d2028; // ParmVar id
struct _d2029; // ParmVar shared_array_buffer
struct _d2030; // CXXMethod SetSupportsLegacyWireFormat
struct _d2031; // ParmVar supports_legacy_wire_format
struct _d2032; // CXXMethod SetExpectInlineWasm
struct _d2033; // ParmVar allow_inline_wasm
struct _d2034; // CXXMethod GetWireFormatVersion
struct _d2035; // CXXMethod ReadUint32
struct _d2036; // ParmVar value
struct _d2037; // CXXMethod ReadUint64
struct _d2038; // ParmVar value
struct _d2039; // CXXMethod ReadDouble
struct _d2040; // ParmVar value
struct _d2041; // CXXMethod ReadRawBytes
struct _d2042; // ParmVar length
struct _d2043; // ParmVar data
struct _d2044; // CXXConstructor ValueDeserializer
struct _d2045; // ParmVar 
struct _d2046; // CXXMethod operator=
struct _d2047; // ParmVar 
struct _d2048; // CXXRecord Value
struct _d2049; // CXXMethod IsUndefined
struct _d2050; // CXXMethod IsNull
struct _d2051; // CXXMethod IsNullOrUndefined
struct _d2052; // CXXMethod IsTrue
struct _d2053; // CXXMethod IsFalse
struct _d2054; // CXXMethod IsName
struct _d2055; // CXXMethod IsString
struct _d2056; // CXXMethod IsSymbol
struct _d2057; // CXXMethod IsFunction
struct _d2058; // CXXMethod IsArray
struct _d2059; // CXXMethod IsObject
struct _d2060; // CXXMethod IsBigInt
struct _d2061; // CXXMethod IsBoolean
struct _d2062; // CXXMethod IsNumber
struct _d2063; // CXXMethod IsExternal
struct _d2064; // CXXMethod IsInt32
struct _d2065; // CXXMethod IsUint32
struct _d2066; // CXXMethod IsDate
struct _d2067; // CXXMethod IsArgumentsObject
struct _d2068; // CXXMethod IsBigIntObject
struct _d2069; // CXXMethod IsBooleanObject
struct _d2070; // CXXMethod IsNumberObject
struct _d2071; // CXXMethod IsStringObject
struct _d2072; // CXXMethod IsSymbolObject
struct _d2073; // CXXMethod IsNativeError
struct _d2074; // CXXMethod IsRegExp
struct _d2075; // CXXMethod IsAsyncFunction
struct _d2076; // CXXMethod IsGeneratorFunction
struct _d2077; // CXXMethod IsGeneratorObject
struct _d2078; // CXXMethod IsPromise
struct _d2079; // CXXMethod IsMap
struct _d2080; // CXXMethod IsSet
struct _d2081; // CXXMethod IsMapIterator
struct _d2082; // CXXMethod IsSetIterator
struct _d2083; // CXXMethod IsWeakMap
struct _d2084; // CXXMethod IsWeakSet
struct _d2085; // CXXMethod IsArrayBuffer
struct _d2086; // CXXMethod IsArrayBufferView
struct _d2087; // CXXMethod IsTypedArray
struct _d2088; // CXXMethod IsUint8Array
struct _d2089; // CXXMethod IsUint8ClampedArray
struct _d2090; // CXXMethod IsInt8Array
struct _d2091; // CXXMethod IsUint16Array
struct _d2092; // CXXMethod IsInt16Array
struct _d2093; // CXXMethod IsUint32Array
struct _d2094; // CXXMethod IsInt32Array
struct _d2095; // CXXMethod IsFloat32Array
struct _d2096; // CXXMethod IsFloat64Array
struct _d2097; // CXXMethod IsBigInt64Array
struct _d2098; // CXXMethod IsBigUint64Array
struct _d2099; // CXXMethod IsDataView
struct _d2100; // CXXMethod IsSharedArrayBuffer
struct _d2101; // CXXMethod IsProxy
struct _d2102; // CXXMethod IsWebAssemblyCompiledModule
struct _d2103; // CXXMethod IsModuleNamespaceObject
struct _d2104; // CXXMethod ToBigInt
struct _d2105; // ParmVar context
struct _d2106; // CXXMethod ToNumber
struct _d2107; // ParmVar context
struct _d2108; // CXXMethod ToString
struct _d2109; // ParmVar context
struct _d2110; // CXXMethod ToDetailString
struct _d2111; // ParmVar context
struct _d2112; // CXXMethod ToObject
struct _d2113; // ParmVar context
struct _d2114; // CXXMethod ToInteger
struct _d2115; // ParmVar context
struct _d2116; // CXXMethod ToUint32
struct _d2117; // ParmVar context
struct _d2118; // CXXMethod ToInt32
struct _d2119; // ParmVar context
struct _d2120; // CXXMethod ToBoolean
struct _d2121; // ParmVar isolate
struct _d2122; // CXXMethod ToArrayIndex
struct _d2123; // ParmVar context
struct _d2124; // CXXMethod BooleanValue
struct _d2125; // ParmVar isolate
struct _d2126; // CXXMethod NumberValue
struct _d2127; // ParmVar context
struct _d2128; // CXXMethod IntegerValue
struct _d2129; // ParmVar context
struct _d2130; // CXXMethod Uint32Value
struct _d2131; // ParmVar context
struct _d2132; // CXXMethod Int32Value
struct _d2133; // ParmVar context
struct _d2134; // CXXMethod Equals
struct _d2135; // ParmVar context
struct _d2136; // ParmVar that
struct _d2137; // CXXMethod StrictEquals
struct _d2138; // ParmVar that
struct _d2139; // CXXMethod SameValue
struct _d2140; // ParmVar that
struct _d2141; // FunctionTemplate Cast
struct _d2142; // TemplateTypeParm T
struct _d2143; // CXXMethod Cast
struct _d2144; // ParmVar value
struct _d2145; // CXXMethod TypeOf
struct _d2146; // ParmVar 
struct _d2147; // CXXMethod InstanceOf
struct _d2148; // ParmVar context
struct _d2149; // ParmVar object
struct _d2150; // CXXRecord Primitive
struct _d2151; // CXXRecord Boolean
struct _d2152; // CXXMethod Value
struct _d2153; // CXXMethod Cast
struct _d2154; // ParmVar obj
struct _d2155; // CXXMethod New
struct _d2156; // ParmVar isolate
struct _d2157; // ParmVar value
struct _d2158; // CXXRecord Name
struct _d2159; // CXXMethod GetIdentityHash
struct _d2160; // CXXMethod Cast
struct _d2161; // ParmVar obj
struct _d2162; // Enum NewStringType
struct _d2163; // EnumConstant kNormal
struct _d2164; // EnumConstant kInternalized
struct _d2165; // CXXRecord String
struct _d2166; // Var kMaxLength
struct _d2167; // Enum Encoding
struct _d2168; // EnumConstant UNKNOWN_ENCODING
struct _d2169; // EnumConstant TWO_BYTE_ENCODING
struct _d2170; // EnumConstant ONE_BYTE_ENCODING
struct _d2171; // CXXMethod Length
struct _d2172; // CXXMethod Utf8Length
struct _d2173; // ParmVar isolate
struct _d2174; // CXXMethod IsOneByte
struct _d2175; // CXXMethod ContainsOnlyOneByte
struct _d2176; // Enum WriteOptions
struct _d2177; // EnumConstant NO_OPTIONS
struct _d2178; // EnumConstant HINT_MANY_WRITES_EXPECTED
struct _d2179; // EnumConstant NO_NULL_TERMINATION
struct _d2180; // EnumConstant PRESERVE_ONE_BYTE_NULL
struct _d2181; // EnumConstant REPLACE_INVALID_UTF8
struct _d2182; // CXXMethod Write
struct _d2183; // ParmVar isolate
struct _d2184; // ParmVar buffer
struct _d2185; // ParmVar start
struct _d2186; // ParmVar length
struct _d2187; // ParmVar options
struct _d2188; // CXXMethod WriteOneByte
struct _d2189; // ParmVar isolate
struct _d2190; // ParmVar buffer
struct _d2191; // ParmVar start
struct _d2192; // ParmVar length
struct _d2193; // ParmVar options
struct _d2194; // CXXMethod WriteUtf8
struct _d2195; // ParmVar isolate
struct _d2196; // ParmVar buffer
struct _d2197; // ParmVar length
struct _d2198; // ParmVar nchars_ref
struct _d2199; // ParmVar options
struct _d2200; // CXXMethod Empty
struct _d2201; // ParmVar isolate
struct _d2202; // CXXMethod IsExternal
struct _d2203; // CXXMethod IsExternalOneByte
struct _d2204; // CXXRecord ExternalStringResourceBase
struct _d2205; // CXXRecord ExternalStringResourceBase
struct _d2206; // CXXDestructor ~ExternalStringResourceBase
struct _d2207; // CXXMethod IsCacheable
struct _d2208; // CXXConstructor ExternalStringResourceBase
struct _d2209; // ParmVar 
struct _d2210; // CXXMethod operator=
struct _d2211; // ParmVar 
struct _d2212; // CXXConstructor ExternalStringResourceBase
struct _d2213; // CXXMethod Dispose
struct _d2214; // CXXMethod Lock
struct _d2215; // CXXMethod Unlock
struct _d2216; // CXXRecord ExternalStringResource
struct _d2217; // CXXRecord ExternalStringResource
struct _d2218; // CXXDestructor ~ExternalStringResource
struct _d2219; // CXXMethod data
struct _d2220; // CXXMethod length
struct _d2221; // CXXConstructor ExternalStringResource
struct _d2222; // CXXConstructor ExternalStringResource
struct _d2223; // ParmVar 
struct _d2224; // CXXMethod operator=
struct _d2225; // ParmVar 
struct _d2226; // CXXRecord ExternalOneByteStringResource
struct _d2227; // CXXRecord ExternalOneByteStringResource
struct _d2228; // CXXDestructor ~ExternalOneByteStringResource
struct _d2229; // CXXMethod data
struct _d2230; // CXXMethod length
struct _d2231; // CXXConstructor ExternalOneByteStringResource
struct _d2232; // CXXConstructor ExternalOneByteStringResource
struct _d2233; // ParmVar 
struct _d2234; // CXXMethod operator=
struct _d2235; // ParmVar 
struct _d2236; // CXXMethod GetExternalStringResourceBase
struct _d2237; // ParmVar encoding_out
struct _d2238; // CXXMethod GetExternalStringResource
struct _d2239; // CXXMethod GetExternalOneByteStringResource
struct _d2240; // CXXMethod Cast
struct _d2241; // ParmVar obj
struct _d2242; // CXXMethod NewFromUtf8
struct _d2243; // ParmVar isolate
struct _d2244; // ParmVar data
struct _d2245; // ParmVar type
struct _d2246; // ParmVar length
struct _d2247; // CXXMethod NewFromOneByte
struct _d2248; // ParmVar isolate
struct _d2249; // ParmVar data
struct _d2250; // ParmVar type
struct _d2251; // ParmVar length
struct _d2252; // CXXMethod NewFromTwoByte
struct _d2253; // ParmVar isolate
struct _d2254; // ParmVar data
struct _d2255; // ParmVar type
struct _d2256; // ParmVar length
struct _d2257; // CXXMethod Concat
struct _d2258; // ParmVar isolate
struct _d2259; // ParmVar left
struct _d2260; // ParmVar right
struct _d2261; // CXXMethod NewExternalTwoByte
struct _d2262; // ParmVar isolate
struct _d2263; // ParmVar resource
struct _d2264; // CXXMethod MakeExternal
struct _d2265; // ParmVar resource
struct _d2266; // CXXMethod NewExternalOneByte
struct _d2267; // ParmVar isolate
struct _d2268; // ParmVar resource
struct _d2269; // CXXMethod MakeExternal
struct _d2270; // ParmVar resource
struct _d2271; // CXXMethod CanMakeExternal
struct _d2272; // CXXMethod StringEquals
struct _d2273; // ParmVar str
struct _d2274; // CXXRecord Utf8Value
struct _d2275; // CXXRecord Utf8Value
struct _d2276; // CXXConstructor Utf8Value
struct _d2277; // ParmVar isolate
struct _d2278; // ParmVar obj
struct _d2279; // CXXDestructor ~Utf8Value
struct _d2280; // CXXMethod operator*
struct _d2281; // CXXMethod operator*
struct _d2282; // CXXMethod length
struct _d2283; // CXXConstructor Utf8Value
struct _d2284; // ParmVar 
struct _d2285; // CXXMethod operator=
struct _d2286; // ParmVar 
struct _d2287; // CXXRecord Value
struct _d2288; // CXXRecord Value
struct _d2289; // CXXConstructor Value
struct _d2290; // ParmVar isolate
struct _d2291; // ParmVar obj
struct _d2292; // CXXDestructor ~Value
struct _d2293; // CXXMethod operator*
struct _d2294; // CXXMethod operator*
struct _d2295; // CXXMethod length
struct _d2296; // CXXConstructor Value
struct _d2297; // ParmVar 
struct _d2298; // CXXMethod operator=
struct _d2299; // ParmVar 
struct _d2300; // CXXRecord Symbol
struct _d2301; // CXXMethod Name
struct _d2302; // CXXMethod New
struct _d2303; // ParmVar isolate
struct _d2304; // ParmVar name
struct _d2305; // CXXMethod For
struct _d2306; // ParmVar isolate
struct _d2307; // ParmVar name
struct _d2308; // CXXMethod ForApi
struct _d2309; // ParmVar isolate
struct _d2310; // ParmVar name
struct _d2311; // CXXMethod GetAsyncIterator
struct _d2312; // ParmVar isolate
struct _d2313; // CXXMethod GetHasInstance
struct _d2314; // ParmVar isolate
struct _d2315; // CXXMethod GetIsConcatSpreadable
struct _d2316; // ParmVar isolate
struct _d2317; // CXXMethod GetIterator
struct _d2318; // ParmVar isolate
struct _d2319; // CXXMethod GetMatch
struct _d2320; // ParmVar isolate
struct _d2321; // CXXMethod GetReplace
struct _d2322; // ParmVar isolate
struct _d2323; // CXXMethod GetSearch
struct _d2324; // ParmVar isolate
struct _d2325; // CXXMethod GetSplit
struct _d2326; // ParmVar isolate
struct _d2327; // CXXMethod GetToPrimitive
struct _d2328; // ParmVar isolate
struct _d2329; // CXXMethod GetToStringTag
struct _d2330; // ParmVar isolate
struct _d2331; // CXXMethod GetUnscopables
struct _d2332; // ParmVar isolate
struct _d2333; // CXXMethod Cast
struct _d2334; // ParmVar obj
struct _d2335; // CXXRecord Private
struct _d2336; // CXXMethod Name
struct _d2337; // CXXMethod New
struct _d2338; // ParmVar isolate
struct _d2339; // ParmVar name
struct _d2340; // CXXMethod ForApi
struct _d2341; // ParmVar isolate
struct _d2342; // ParmVar name
struct _d2343; // CXXMethod Cast
struct _d2344; // ParmVar data
struct _d2345; // CXXRecord Number
struct _d2346; // CXXMethod Value
struct _d2347; // CXXMethod New
struct _d2348; // ParmVar isolate
struct _d2349; // ParmVar value
struct _d2350; // CXXMethod Cast
struct _d2351; // ParmVar obj
struct _d2352; // CXXRecord Integer
struct _d2353; // CXXMethod New
struct _d2354; // ParmVar isolate
struct _d2355; // ParmVar value
struct _d2356; // CXXMethod NewFromUnsigned
struct _d2357; // ParmVar isolate
struct _d2358; // ParmVar value
struct _d2359; // CXXMethod Value
struct _d2360; // CXXMethod Cast
struct _d2361; // ParmVar obj
struct _d2362; // CXXRecord Int32
struct _d2363; // CXXMethod Value
struct _d2364; // CXXMethod Cast
struct _d2365; // ParmVar obj
struct _d2366; // CXXRecord Uint32
struct _d2367; // CXXMethod Value
struct _d2368; // CXXMethod Cast
struct _d2369; // ParmVar obj
struct _d2370; // CXXRecord BigInt
struct _d2371; // CXXMethod New
struct _d2372; // ParmVar isolate
struct _d2373; // ParmVar value
struct _d2374; // CXXMethod NewFromUnsigned
struct _d2375; // ParmVar isolate
struct _d2376; // ParmVar value
struct _d2377; // CXXMethod NewFromWords
struct _d2378; // ParmVar context
struct _d2379; // ParmVar sign_bit
struct _d2380; // ParmVar word_count
struct _d2381; // ParmVar words
struct _d2382; // CXXMethod Uint64Value
struct _d2383; // ParmVar lossless
struct _d2384; // CXXMethod Int64Value
struct _d2385; // ParmVar lossless
struct _d2386; // CXXMethod WordCount
struct _d2387; // CXXMethod ToWordsArray
struct _d2388; // ParmVar sign_bit
struct _d2389; // ParmVar word_count
struct _d2390; // ParmVar words
struct _d2391; // CXXMethod Cast
struct _d2392; // ParmVar obj
struct _d2393; // Enum PropertyAttribute
struct _d2394; // EnumConstant None
struct _d2395; // EnumConstant ReadOnly
struct _d2396; // EnumConstant DontEnum
struct _d2397; // EnumConstant DontDelete
struct _d2398; // Typedef AccessorGetterCallback
struct _d2399; // Typedef AccessorNameGetterCallback
struct _d2400; // Typedef AccessorSetterCallback
struct _d2401; // Typedef AccessorNameSetterCallback
struct _d2402; // Enum AccessControl
struct _d2403; // EnumConstant DEFAULT
struct _d2404; // EnumConstant ALL_CAN_READ
struct _d2405; // EnumConstant ALL_CAN_WRITE
struct _d2406; // EnumConstant PROHIBITS_OVERWRITING
struct _d2407; // Enum PropertyFilter
struct _d2408; // EnumConstant ALL_PROPERTIES
struct _d2409; // EnumConstant ONLY_WRITABLE
struct _d2410; // EnumConstant ONLY_ENUMERABLE
struct _d2411; // EnumConstant ONLY_CONFIGURABLE
struct _d2412; // EnumConstant SKIP_STRINGS
struct _d2413; // EnumConstant SKIP_SYMBOLS
struct _d2414; // Enum SideEffectType
struct _d2415; // EnumConstant kHasSideEffect
struct _d2416; // EnumConstant kHasNoSideEffect
struct _d2417; // EnumConstant kHasSideEffectToReceiver
struct _d2418; // Enum KeyCollectionMode
struct _d2419; // EnumConstant kOwnOnly
struct _d2420; // EnumConstant kIncludePrototypes
struct _d2421; // Enum IndexFilter
struct _d2422; // EnumConstant kIncludeIndices
struct _d2423; // EnumConstant kSkipIndices
struct _d2424; // Enum KeyConversionMode
struct _d2425; // EnumConstant kConvertToString
struct _d2426; // EnumConstant kKeepNumbers
struct _d2427; // Enum IntegrityLevel
struct _d2428; // EnumConstant kFrozen
struct _d2429; // EnumConstant kSealed
struct _d2430; // CXXRecord Object
struct _d2431; // CXXMethod Set
struct _d2432; // ParmVar key
struct _d2433; // ParmVar value
struct _d2434; // CXXMethod Set
struct _d2435; // ParmVar context
struct _d2436; // ParmVar key
struct _d2437; // ParmVar value
struct _d2438; // CXXMethod Set
struct _d2439; // ParmVar index
struct _d2440; // ParmVar value
struct _d2441; // CXXMethod Set
struct _d2442; // ParmVar context
struct _d2443; // ParmVar index
struct _d2444; // ParmVar value
struct _d2445; // CXXMethod CreateDataProperty
struct _d2446; // ParmVar context
struct _d2447; // ParmVar key
struct _d2448; // ParmVar value
struct _d2449; // CXXMethod CreateDataProperty
struct _d2450; // ParmVar context
struct _d2451; // ParmVar index
struct _d2452; // ParmVar value
struct _d2453; // CXXMethod DefineOwnProperty
struct _d2454; // ParmVar context
struct _d2455; // ParmVar key
struct _d2456; // ParmVar value
struct _d2457; // ParmVar attributes
struct _d2458; // CXXMethod DefineProperty
struct _d2459; // ParmVar context
struct _d2460; // ParmVar key
struct _d2461; // ParmVar descriptor
struct _d2462; // CXXMethod Get
struct _d2463; // ParmVar key
struct _d2464; // CXXMethod Get
struct _d2465; // ParmVar context
struct _d2466; // ParmVar key
struct _d2467; // CXXMethod Get
struct _d2468; // ParmVar index
struct _d2469; // CXXMethod Get
struct _d2470; // ParmVar context
struct _d2471; // ParmVar index
struct _d2472; // CXXMethod GetPropertyAttributes
struct _d2473; // ParmVar context
struct _d2474; // ParmVar key
struct _d2475; // CXXMethod GetOwnPropertyDescriptor
struct _d2476; // ParmVar context
struct _d2477; // ParmVar key
struct _d2478; // CXXMethod Has
struct _d2479; // ParmVar context
struct _d2480; // ParmVar key
struct _d2481; // CXXMethod Delete
struct _d2482; // ParmVar context
struct _d2483; // ParmVar key
struct _d2484; // CXXMethod Has
struct _d2485; // ParmVar context
struct _d2486; // ParmVar index
struct _d2487; // CXXMethod Delete
struct _d2488; // ParmVar context
struct _d2489; // ParmVar index
struct _d2490; // CXXMethod SetAccessor
struct _d2491; // ParmVar context
struct _d2492; // ParmVar name
struct _d2493; // ParmVar getter
struct _d2494; // ParmVar setter
struct _d2495; // ParmVar data
struct _d2496; // ParmVar settings
struct _d2497; // ParmVar attribute
struct _d2498; // ParmVar getter_side_effect_type
struct _d2499; // ParmVar setter_side_effect_type
struct _d2500; // CXXMethod SetAccessorProperty
struct _d2501; // ParmVar name
struct _d2502; // ParmVar getter
struct _d2503; // ParmVar setter
struct _d2504; // ParmVar attribute
struct _d2505; // ParmVar settings
struct _d2506; // CXXMethod SetNativeDataProperty
struct _d2507; // ParmVar context
struct _d2508; // ParmVar name
struct _d2509; // ParmVar getter
struct _d2510; // ParmVar setter
struct _d2511; // ParmVar data
struct _d2512; // ParmVar attributes
struct _d2513; // ParmVar getter_side_effect_type
struct _d2514; // ParmVar setter_side_effect_type
struct _d2515; // CXXMethod SetLazyDataProperty
struct _d2516; // ParmVar context
struct _d2517; // ParmVar name
struct _d2518; // ParmVar getter
struct _d2519; // ParmVar data
struct _d2520; // ParmVar attributes
struct _d2521; // ParmVar getter_side_effect_type
struct _d2522; // ParmVar setter_side_effect_type
struct _d2523; // CXXMethod HasPrivate
struct _d2524; // ParmVar context
struct _d2525; // ParmVar key
struct _d2526; // CXXMethod SetPrivate
struct _d2527; // ParmVar context
struct _d2528; // ParmVar key
struct _d2529; // ParmVar value
struct _d2530; // CXXMethod DeletePrivate
struct _d2531; // ParmVar context
struct _d2532; // ParmVar key
struct _d2533; // CXXMethod GetPrivate
struct _d2534; // ParmVar context
struct _d2535; // ParmVar key
struct _d2536; // CXXMethod GetPropertyNames
struct _d2537; // ParmVar context
struct _d2538; // CXXMethod GetPropertyNames
struct _d2539; // ParmVar context
struct _d2540; // ParmVar mode
struct _d2541; // ParmVar property_filter
struct _d2542; // ParmVar index_filter
struct _d2543; // ParmVar key_conversion
struct _d2544; // CXXMethod GetOwnPropertyNames
struct _d2545; // ParmVar context
struct _d2546; // CXXMethod GetOwnPropertyNames
struct _d2547; // ParmVar context
struct _d2548; // ParmVar filter
struct _d2549; // ParmVar key_conversion
struct _d2550; // CXXMethod GetPrototype
struct _d2551; // CXXMethod SetPrototype
struct _d2552; // ParmVar context
struct _d2553; // ParmVar prototype
struct _d2554; // CXXMethod FindInstanceInPrototypeChain
struct _d2555; // ParmVar tmpl
struct _d2556; // CXXMethod ObjectProtoToString
struct _d2557; // ParmVar context
struct _d2558; // CXXMethod GetConstructorName
struct _d2559; // CXXMethod SetIntegrityLevel
struct _d2560; // ParmVar context
struct _d2561; // ParmVar level
struct _d2562; // CXXMethod InternalFieldCount
struct _d2563; // CXXMethod InternalFieldCount
struct _d2564; // ParmVar object
struct _d2565; // CXXMethod InternalFieldCount
struct _d2566; // ParmVar object
struct _d2567; // CXXMethod GetInternalField
struct _d2568; // ParmVar index
struct _d2569; // CXXMethod SetInternalField
struct _d2570; // ParmVar index
struct _d2571; // ParmVar value
struct _d2572; // CXXMethod GetAlignedPointerFromInternalField
struct _d2573; // ParmVar index
struct _d2574; // CXXMethod GetAlignedPointerFromInternalField
struct _d2575; // ParmVar object
struct _d2576; // ParmVar index
struct _d2577; // CXXMethod GetAlignedPointerFromInternalField
struct _d2578; // ParmVar object
struct _d2579; // ParmVar index
struct _d2580; // CXXMethod SetAlignedPointerInInternalField
struct _d2581; // ParmVar index
struct _d2582; // ParmVar value
struct _d2583; // CXXMethod SetAlignedPointerInInternalFields
struct _d2584; // ParmVar argc
struct _d2585; // ParmVar indices
struct _d2586; // ParmVar values
struct _d2587; // CXXMethod HasOwnProperty
struct _d2588; // ParmVar context
struct _d2589; // ParmVar key
struct _d2590; // CXXMethod HasOwnProperty
struct _d2591; // ParmVar context
struct _d2592; // ParmVar index
struct _d2593; // CXXMethod HasRealNamedProperty
struct _d2594; // ParmVar context
struct _d2595; // ParmVar key
struct _d2596; // CXXMethod HasRealIndexedProperty
struct _d2597; // ParmVar context
struct _d2598; // ParmVar index
struct _d2599; // CXXMethod HasRealNamedCallbackProperty
struct _d2600; // ParmVar context
struct _d2601; // ParmVar key
struct _d2602; // CXXMethod GetRealNamedPropertyInPrototypeChain
struct _d2603; // ParmVar context
struct _d2604; // ParmVar key
struct _d2605; // CXXMethod GetRealNamedPropertyAttributesInPrototypeChain
struct _d2606; // ParmVar context
struct _d2607; // ParmVar key
struct _d2608; // CXXMethod GetRealNamedProperty
struct _d2609; // ParmVar context
struct _d2610; // ParmVar key
struct _d2611; // CXXMethod GetRealNamedPropertyAttributes
struct _d2612; // ParmVar context
struct _d2613; // ParmVar key
struct _d2614; // CXXMethod HasNamedLookupInterceptor
struct _d2615; // CXXMethod HasIndexedLookupInterceptor
struct _d2616; // CXXMethod GetIdentityHash
struct _d2617; // CXXMethod Clone
struct _d2618; // CXXMethod CreationContext
struct _d2619; // CXXMethod CreationContext
struct _d2620; // ParmVar object
struct _d2621; // CXXMethod IsCallable
struct _d2622; // CXXMethod IsConstructor
struct _d2623; // CXXMethod CallAsFunction
struct _d2624; // ParmVar context
struct _d2625; // ParmVar recv
struct _d2626; // ParmVar argc
struct _d2627; // ParmVar argv
struct _d2628; // CXXMethod CallAsConstructor
struct _d2629; // ParmVar context
struct _d2630; // ParmVar argc
struct _d2631; // ParmVar argv
struct _d2632; // CXXMethod GetIsolate
struct _d2633; // CXXMethod PreviewEntries
struct _d2634; // ParmVar is_key_value
struct _d2635; // CXXMethod New
struct _d2636; // ParmVar isolate
struct _d2637; // CXXMethod New
struct _d2638; // ParmVar isolate
struct _d2639; // ParmVar prototype_or_null
struct _d2640; // ParmVar names
struct _d2641; // ParmVar values
struct _d2642; // ParmVar length
struct _d2643; // CXXMethod Cast
struct _d2644; // ParmVar obj
struct _d2645; // CXXRecord Array
struct _d2646; // CXXMethod Length
struct _d2647; // CXXMethod New
struct _d2648; // ParmVar isolate
struct _d2649; // ParmVar length
struct _d2650; // CXXMethod New
struct _d2651; // ParmVar isolate
struct _d2652; // ParmVar elements
struct _d2653; // ParmVar length
struct _d2654; // CXXMethod Cast
struct _d2655; // ParmVar obj
struct _d2656; // CXXRecord Map
struct _d2657; // CXXRecord Map
struct _d2658; // CXXMethod Size
struct _d2659; // CXXMethod Clear
struct _d2660; // CXXMethod Get
struct _d2661; // ParmVar context
struct _d2662; // ParmVar key
struct _d2663; // CXXMethod Set
struct _d2664; // ParmVar context
struct _d2665; // ParmVar key
struct _d2666; // ParmVar value
struct _d2667; // CXXMethod Has
struct _d2668; // ParmVar context
struct _d2669; // ParmVar key
struct _d2670; // CXXMethod Delete
struct _d2671; // ParmVar context
struct _d2672; // ParmVar key
struct _d2673; // CXXMethod AsArray
struct _d2674; // CXXMethod New
struct _d2675; // ParmVar isolate
struct _d2676; // CXXMethod Cast
struct _d2677; // ParmVar obj
struct _d2678; // CXXRecord Set
struct _d2679; // CXXRecord Set
struct _d2680; // CXXMethod Size
struct _d2681; // CXXMethod Clear
struct _d2682; // CXXMethod Add
struct _d2683; // ParmVar context
struct _d2684; // ParmVar key
struct _d2685; // CXXMethod Has
struct _d2686; // ParmVar context
struct _d2687; // ParmVar key
struct _d2688; // CXXMethod Delete
struct _d2689; // ParmVar context
struct _d2690; // ParmVar key
struct _d2691; // CXXMethod AsArray
struct _d2692; // CXXMethod New
struct _d2693; // ParmVar isolate
struct _d2694; // CXXMethod Cast
struct _d2695; // ParmVar obj
struct _d2696; // TemplateTypeParm T
struct _d2697; // CXXRecord ReturnValue
struct _d2698; // FunctionTemplate ReturnValue<T>
struct _d2699; // TemplateTypeParm S
struct _d2700; // CXXConstructor ReturnValue<T>
struct _d2701; // ParmVar that
struct _d2702; // FunctionTemplate Set
struct _d2703; // TemplateTypeParm S
struct _d2704; // CXXMethod Set
struct _d2705; // ParmVar handle
struct _d2706; // FunctionTemplate Set
struct _d2707; // TemplateTypeParm S
struct _d2708; // CXXMethod Set
struct _d2709; // ParmVar handle
struct _d2710; // FunctionTemplate Set
struct _d2711; // TemplateTypeParm S
struct _d2712; // CXXMethod Set
struct _d2713; // ParmVar handle
struct _d2714; // CXXMethod Set
struct _d2715; // ParmVar value
struct _d2716; // CXXMethod Set
struct _d2717; // ParmVar i
struct _d2718; // CXXMethod Set
struct _d2719; // ParmVar i
struct _d2720; // CXXMethod Set
struct _d2721; // ParmVar i
struct _d2722; // CXXMethod SetNull
struct _d2723; // CXXMethod SetUndefined
struct _d2724; // CXXMethod SetEmptyString
struct _d2725; // CXXMethod GetIsolate
struct _d2726; // FunctionTemplate Set
struct _d2727; // TemplateTypeParm S
struct _d2728; // CXXMethod Set
struct _d2729; // ParmVar whatever
struct _d2730; // CXXMethod Get
struct _d2731; // TemplateTypeParm T
struct _d2732; // CXXRecord FunctionCallbackInfo
struct _d2733; // CXXMethod Length
struct _d2734; // CXXMethod operator[]
struct _d2735; // ParmVar i
struct _d2736; // CXXMethod This
struct _d2737; // CXXMethod Holder
struct _d2738; // CXXMethod NewTarget
struct _d2739; // CXXMethod IsConstructCall
struct _d2740; // CXXMethod Data
struct _d2741; // CXXMethod GetIsolate
struct _d2742; // CXXMethod GetReturnValue
struct _d2743; // Var kArgsLength
struct _d2744; // Var kHolderIndex
struct _d2745; // Var kIsolateIndex
struct _d2746; // Var kReturnValueDefaultValueIndex
struct _d2747; // Var kReturnValueIndex
struct _d2748; // Var kDataIndex
struct _d2749; // Var kNewTargetIndex
struct _d2750; // CXXConstructor FunctionCallbackInfo<T>
struct _d2751; // ParmVar implicit_args
struct _d2752; // ParmVar values
struct _d2753; // ParmVar length
struct _d2754; // Field implicit_args_
struct _d2755; // Field values_
struct _d2756; // Field length_
struct _d2757; // TemplateTypeParm T
struct _d2758; // CXXRecord PropertyCallbackInfo
struct _d2759; // CXXMethod GetIsolate
struct _d2760; // CXXMethod Data
struct _d2761; // CXXMethod This
struct _d2762; // CXXMethod Holder
struct _d2763; // CXXMethod GetReturnValue
struct _d2764; // CXXMethod ShouldThrowOnError
struct _d2765; // Var kArgsLength
struct _d2766; // Var kShouldThrowOnErrorIndex
struct _d2767; // Var kHolderIndex
struct _d2768; // Var kIsolateIndex
struct _d2769; // Var kReturnValueDefaultValueIndex
struct _d2770; // Var kReturnValueIndex
struct _d2771; // Var kDataIndex
struct _d2772; // Var kThisIndex
struct _d2773; // CXXConstructor PropertyCallbackInfo<T>
struct _d2774; // ParmVar args
struct _d2775; // Field args_
struct _d2776; // Typedef FunctionCallback
struct _d2777; // Enum ConstructorBehavior
struct _d2778; // EnumConstant kThrow
struct _d2779; // EnumConstant kAllow
struct _d2780; // CXXRecord Function
struct _d2781; // CXXMethod New
struct _d2782; // ParmVar context
struct _d2783; // ParmVar callback
struct _d2784; // ParmVar data
struct _d2785; // ParmVar length
struct _d2786; // ParmVar behavior
struct _d2787; // ParmVar side_effect_type
struct _d2788; // CXXMethod NewInstance
struct _d2789; // ParmVar context
struct _d2790; // ParmVar argc
struct _d2791; // ParmVar argv
struct _d2792; // CXXMethod NewInstance
struct _d2793; // ParmVar context
struct _d2794; // CXXMethod NewInstanceWithSideEffectType
struct _d2795; // ParmVar context
struct _d2796; // ParmVar argc
struct _d2797; // ParmVar argv
struct _d2798; // ParmVar side_effect_type
struct _d2799; // CXXMethod Call
struct _d2800; // ParmVar context
struct _d2801; // ParmVar recv
struct _d2802; // ParmVar argc
struct _d2803; // ParmVar argv
struct _d2804; // CXXMethod SetName
struct _d2805; // ParmVar name
struct _d2806; // CXXMethod GetName
struct _d2807; // CXXMethod GetInferredName
struct _d2808; // CXXMethod GetDebugName
struct _d2809; // CXXMethod GetDisplayName
struct _d2810; // CXXMethod GetScriptLineNumber
struct _d2811; // CXXMethod GetScriptColumnNumber
struct _d2812; // CXXMethod ScriptId
struct _d2813; // CXXMethod GetBoundFunction
struct _d2814; // CXXMethod GetScriptOrigin
struct _d2815; // CXXMethod Cast
struct _d2816; // ParmVar obj
struct _d2817; // Var kLineOffsetNotFound
struct _d2818; // CXXRecord Promise
struct _d2819; // Enum PromiseState
struct _d2820; // EnumConstant kPending
struct _d2821; // EnumConstant kFulfilled
struct _d2822; // EnumConstant kRejected
struct _d2823; // CXXRecord Resolver
struct _d2824; // CXXRecord Resolver
struct _d2825; // CXXMethod New
struct _d2826; // ParmVar context
struct _d2827; // CXXMethod GetPromise
struct _d2828; // CXXMethod Resolve
struct _d2829; // ParmVar context
struct _d2830; // ParmVar value
struct _d2831; // CXXMethod Reject
struct _d2832; // ParmVar context
struct _d2833; // ParmVar value
struct _d2834; // CXXMethod Cast
struct _d2835; // ParmVar obj
struct _d2836; // CXXMethod Catch
struct _d2837; // ParmVar context
struct _d2838; // ParmVar handler
struct _d2839; // CXXMethod Then
struct _d2840; // ParmVar context
struct _d2841; // ParmVar handler
struct _d2842; // CXXMethod Then
struct _d2843; // ParmVar context
struct _d2844; // ParmVar on_fulfilled
struct _d2845; // ParmVar on_rejected
struct _d2846; // CXXMethod HasHandler
struct _d2847; // CXXMethod Result
struct _d2848; // CXXMethod State
struct _d2849; // CXXMethod MarkAsHandled
struct _d2850; // CXXMethod Cast
struct _d2851; // ParmVar obj
struct _d2852; // Var kEmbedderFieldCount
struct _d2853; // CXXRecord PropertyDescriptor
struct _d2854; // CXXConstructor PropertyDescriptor
struct _d2855; // CXXConstructor PropertyDescriptor
struct _d2856; // ParmVar value
struct _d2857; // CXXConstructor PropertyDescriptor
struct _d2858; // ParmVar value
struct _d2859; // ParmVar writable
struct _d2860; // CXXConstructor PropertyDescriptor
struct _d2861; // ParmVar get
struct _d2862; // ParmVar set
struct _d2863; // CXXDestructor ~PropertyDescriptor
struct _d2864; // CXXMethod value
struct _d2865; // CXXMethod has_value
struct _d2866; // CXXMethod get
struct _d2867; // CXXMethod has_get
struct _d2868; // CXXMethod set
struct _d2869; // CXXMethod has_set
struct _d2870; // CXXMethod set_enumerable
struct _d2871; // ParmVar enumerable
struct _d2872; // CXXMethod enumerable
struct _d2873; // CXXMethod has_enumerable
struct _d2874; // CXXMethod set_configurable
struct _d2875; // ParmVar configurable
struct _d2876; // CXXMethod configurable
struct _d2877; // CXXMethod has_configurable
struct _d2878; // CXXMethod writable
struct _d2879; // CXXMethod has_writable
struct _d2880; // CXXRecord PrivateData
struct _d2881; // CXXMethod get_private
struct _d2882; // CXXConstructor PropertyDescriptor
struct _d2883; // ParmVar 
struct _d2884; // CXXMethod operator=
struct _d2885; // ParmVar 
struct _d2886; // CXXRecord Proxy
struct _d2887; // CXXMethod GetTarget
struct _d2888; // CXXMethod GetHandler
struct _d2889; // CXXMethod IsRevoked
struct _d2890; // CXXMethod Revoke
struct _d2891; // CXXMethod New
struct _d2892; // ParmVar context
struct _d2893; // ParmVar local_target
struct _d2894; // ParmVar local_handler
struct _d2895; // CXXMethod Cast
struct _d2896; // ParmVar obj
struct _d2897; // ClassTemplate MemorySpan
struct _d2898; // TemplateTypeParm T
struct _d2899; // CXXRecord MemorySpan
struct _d2900; // CXXRecord MemorySpan
struct _d2901; // CXXConstructor MemorySpan<T>
struct _d2902; // CXXConstructor MemorySpan<T>
struct _d2903; // ParmVar data
struct _d2904; // ParmVar size
struct _d2905; // CXXMethod data
struct _d2906; // CXXMethod size
struct _d2907; // ClassTemplateSpecialization MemorySpan
struct _d2908; // CXXConstructor MemorySpan
struct _d2909; // CXXConstructor MemorySpan
struct _d2910; // ParmVar data
struct _d2911; // ParmVar size
struct _d2912; // CXXMethod data
struct _d2913; // CXXMethod size
struct _d2914; // CXXConstructor MemorySpan
struct _d2915; // ParmVar 
struct _d2916; // CXXConstructor MemorySpan
struct _d2917; // ParmVar 
struct _d2918; // CXXRecord OwnedBuffer
struct _d2919; // CXXRecord OwnedBuffer
struct _d2920; // Field buffer
struct _d2921; // ClassTemplateSpecialization unique_ptr
struct _d2922; // Field size
struct _d2923; // CXXConstructor OwnedBuffer
struct _d2924; // ParmVar buffer
struct _d2925; // ParmVar size
struct _d2926; // CXXConstructor OwnedBuffer
struct _d2927; // CXXConstructor OwnedBuffer
struct _d2928; // ParmVar 
struct _d2929; // CXXConstructor OwnedBuffer
struct _d2930; // ParmVar 
struct _d2931; // CXXMethod operator=
struct _d2932; // ParmVar 
struct _d2933; // CXXDestructor ~OwnedBuffer
struct _d2934; // CXXMethod operator=
struct _d2935; // ParmVar 
struct _d2936; // CXXRecord CompiledWasmModule
struct _d2937; // CXXRecord CompiledWasmModule
struct _d2938; // CXXMethod Serialize
struct _d2939; // CXXMethod GetWireBytesRef
struct _d2940; // CXXConstructor CompiledWasmModule
struct _d2941; // ParmVar 
struct _d2942; // CXXConstructor CompiledWasmModule
struct _d2943; // ParmVar 
struct _d2944; // CXXMethod operator=
struct _d2945; // ParmVar 
struct _d2946; // CXXDestructor ~CompiledWasmModule
struct _d2947; // CXXRecord WasmModuleObject
struct _d2948; // CXXRecord TransferrableModule
struct _d2949; // CXXRecord TransferrableModule
struct _d2950; // CXXConstructor TransferrableModule
struct _d2951; // ParmVar src
struct _d2952; // CXXConstructor TransferrableModule
struct _d2953; // ParmVar src
struct _d2954; // CXXMethod operator=
struct _d2955; // ParmVar src
struct _d2956; // CXXMethod operator=
struct _d2957; // ParmVar src
struct _d2958; // CXXDestructor ~TransferrableModule
struct _d2959; // CXXMethod GetTransferrableModule
struct _d2960; // CXXMethod FromTransferrableModule
struct _d2961; // ParmVar isolate
struct _d2962; // ParmVar 
struct _d2963; // CXXMethod GetCompiledModule
struct _d2964; // CXXMethod DeserializeOrCompile
struct _d2965; // ParmVar isolate
struct _d2966; // ParmVar serialized_module
struct _d2967; // ParmVar wire_bytes
struct _d2968; // CXXMethod Cast
struct _d2969; // ParmVar obj
struct _d2970; // CXXRecord WasmStreaming
struct _d2971; // CXXRecord WasmStreaming
struct _d2972; // CXXRecord WasmStreamingImpl
struct _d2973; // CXXRecord Client
struct _d2974; // CXXRecord Client
struct _d2975; // CXXDestructor ~Client
struct _d2976; // CXXMethod OnModuleCompiled
struct _d2977; // ParmVar compiled_module
struct _d2978; // CXXMethod operator=
struct _d2979; // ParmVar 
struct _d2980; // CXXConstructor WasmStreaming
struct _d2981; // ParmVar impl
struct _d2982; // ClassTemplateSpecialization unique_ptr
struct _d2983; // CXXDestructor ~WasmStreaming
struct _d2984; // CXXMethod OnBytesReceived
struct _d2985; // ParmVar bytes
struct _d2986; // ParmVar size
struct _d2987; // CXXMethod Finish
struct _d2988; // CXXMethod Abort
struct _d2989; // ParmVar exception
struct _d2990; // CXXMethod SetCompiledModuleBytes
struct _d2991; // ParmVar bytes
struct _d2992; // ParmVar size
struct _d2993; // CXXMethod SetClient
struct _d2994; // ParmVar client
struct _d2995; // ClassTemplateSpecialization shared_ptr
struct _d2996; // CXXMethod Unpack
struct _d2997; // ParmVar isolate
struct _d2998; // ParmVar value
struct _d2999; // ClassTemplateSpecialization shared_ptr
struct _d3000; // CXXConstructor WasmStreaming
struct _d3001; // ParmVar 
struct _d3002; // CXXRecord WasmModuleObjectBuilderStreaming
struct _d3003; // CXXRecord WasmModuleObjectBuilderStreaming
struct _d3004; // CXXConstructor WasmModuleObjectBuilderStreaming
struct _d3005; // ParmVar isolate
struct _d3006; // CXXMethod OnBytesReceived
struct _d3007; // ParmVar 
struct _d3008; // ParmVar size
struct _d3009; // CXXMethod Finish
struct _d3010; // CXXMethod Abort
struct _d3011; // ParmVar exception
struct _d3012; // CXXMethod GetPromise
struct _d3013; // CXXDestructor ~WasmModuleObjectBuilderStreaming
struct _d3014; // Enum ArrayBufferCreationMode
struct _d3015; // EnumConstant kInternalized
struct _d3016; // EnumConstant kExternalized
struct _d3017; // CXXRecord ArrayBuffer
struct _d3018; // CXXRecord Allocator
struct _d3019; // CXXRecord Allocator
struct _d3020; // CXXDestructor ~Allocator
struct _d3021; // CXXMethod Allocate
struct _d3022; // ParmVar length
struct _d3023; // CXXMethod AllocateUninitialized
struct _d3024; // ParmVar length
struct _d3025; // CXXMethod Free
struct _d3026; // ParmVar data
struct _d3027; // ParmVar length
struct _d3028; // Enum AllocationMode
struct _d3029; // EnumConstant kNormal
struct _d3030; // EnumConstant kReservation
struct _d3031; // CXXMethod NewDefaultAllocator
struct _d3032; // CXXMethod operator=
struct _d3033; // ParmVar 
struct _d3034; // CXXRecord Contents
struct _d3035; // CXXRecord Contents
struct _d3036; // TypeAlias DeleterCallback
struct _d3037; // CXXConstructor Contents
struct _d3038; // CXXMethod AllocationBase
struct _d3039; // CXXMethod AllocationLength
struct _d3040; // CXXMethod AllocationMode
struct _d3041; // CXXMethod Data
struct _d3042; // CXXMethod ByteLength
struct _d3043; // CXXMethod Deleter
struct _d3044; // CXXMethod DeleterData
struct _d3045; // CXXMethod ByteLength
struct _d3046; // CXXMethod New
struct _d3047; // ParmVar isolate
struct _d3048; // ParmVar byte_length
struct _d3049; // CXXMethod New
struct _d3050; // ParmVar isolate
struct _d3051; // ParmVar data
struct _d3052; // ParmVar byte_length
struct _d3053; // ParmVar mode
struct _d3054; // CXXMethod IsExternal
struct _d3055; // CXXMethod IsDetachable
struct _d3056; // CXXMethod IsNeuterable
struct _d3057; // CXXMethod Detach
struct _d3058; // CXXMethod Neuter
struct _d3059; // CXXMethod Externalize
struct _d3060; // CXXMethod GetContents
struct _d3061; // CXXMethod Cast
struct _d3062; // ParmVar obj
struct _d3063; // Var kInternalFieldCount
struct _d3064; // Var kEmbedderFieldCount
struct _d3065; // CXXRecord ArrayBufferView
struct _d3066; // CXXRecord ArrayBufferView
struct _d3067; // CXXMethod Buffer
struct _d3068; // CXXMethod ByteOffset
struct _d3069; // CXXMethod ByteLength
struct _d3070; // CXXMethod CopyContents
struct _d3071; // ParmVar dest
struct _d3072; // ParmVar byte_length
struct _d3073; // CXXMethod HasBuffer
struct _d3074; // CXXMethod Cast
struct _d3075; // ParmVar obj
struct _d3076; // Var kInternalFieldCount
struct _d3077; // Var kEmbedderFieldCount
struct _d3078; // CXXRecord TypedArray
struct _d3079; // CXXRecord TypedArray
struct _d3080; // Var kMaxLength
struct _d3081; // CXXMethod Length
struct _d3082; // CXXMethod Cast
struct _d3083; // ParmVar obj
struct _d3084; // CXXRecord Uint8Array
struct _d3085; // CXXRecord Uint8Array
struct _d3086; // CXXMethod New
struct _d3087; // ParmVar array_buffer
struct _d3088; // ParmVar byte_offset
struct _d3089; // ParmVar length
struct _d3090; // CXXMethod New
struct _d3091; // ParmVar shared_array_buffer
struct _d3092; // ParmVar byte_offset
struct _d3093; // ParmVar length
struct _d3094; // CXXMethod Cast
struct _d3095; // ParmVar obj
struct _d3096; // CXXRecord Uint8ClampedArray
struct _d3097; // CXXRecord Uint8ClampedArray
struct _d3098; // CXXMethod New
struct _d3099; // ParmVar array_buffer
struct _d3100; // ParmVar byte_offset
struct _d3101; // ParmVar length
struct _d3102; // CXXMethod New
struct _d3103; // ParmVar shared_array_buffer
struct _d3104; // ParmVar byte_offset
struct _d3105; // ParmVar length
struct _d3106; // CXXMethod Cast
struct _d3107; // ParmVar obj
struct _d3108; // CXXRecord Int8Array
struct _d3109; // CXXRecord Int8Array
struct _d3110; // CXXMethod New
struct _d3111; // ParmVar array_buffer
struct _d3112; // ParmVar byte_offset
struct _d3113; // ParmVar length
struct _d3114; // CXXMethod New
struct _d3115; // ParmVar shared_array_buffer
struct _d3116; // ParmVar byte_offset
struct _d3117; // ParmVar length
struct _d3118; // CXXMethod Cast
struct _d3119; // ParmVar obj
struct _d3120; // CXXRecord Uint16Array
struct _d3121; // CXXRecord Uint16Array
struct _d3122; // CXXMethod New
struct _d3123; // ParmVar array_buffer
struct _d3124; // ParmVar byte_offset
struct _d3125; // ParmVar length
struct _d3126; // CXXMethod New
struct _d3127; // ParmVar shared_array_buffer
struct _d3128; // ParmVar byte_offset
struct _d3129; // ParmVar length
struct _d3130; // CXXMethod Cast
struct _d3131; // ParmVar obj
struct _d3132; // CXXRecord Int16Array
struct _d3133; // CXXRecord Int16Array
struct _d3134; // CXXMethod New
struct _d3135; // ParmVar array_buffer
struct _d3136; // ParmVar byte_offset
struct _d3137; // ParmVar length
struct _d3138; // CXXMethod New
struct _d3139; // ParmVar shared_array_buffer
struct _d3140; // ParmVar byte_offset
struct _d3141; // ParmVar length
struct _d3142; // CXXMethod Cast
struct _d3143; // ParmVar obj
struct _d3144; // CXXRecord Uint32Array
struct _d3145; // CXXRecord Uint32Array
struct _d3146; // CXXMethod New
struct _d3147; // ParmVar array_buffer
struct _d3148; // ParmVar byte_offset
struct _d3149; // ParmVar length
struct _d3150; // CXXMethod New
struct _d3151; // ParmVar shared_array_buffer
struct _d3152; // ParmVar byte_offset
struct _d3153; // ParmVar length
struct _d3154; // CXXMethod Cast
struct _d3155; // ParmVar obj
struct _d3156; // CXXRecord Int32Array
struct _d3157; // CXXRecord Int32Array
struct _d3158; // CXXMethod New
struct _d3159; // ParmVar array_buffer
struct _d3160; // ParmVar byte_offset
struct _d3161; // ParmVar length
struct _d3162; // CXXMethod New
struct _d3163; // ParmVar shared_array_buffer
struct _d3164; // ParmVar byte_offset
struct _d3165; // ParmVar length
struct _d3166; // CXXMethod Cast
struct _d3167; // ParmVar obj
struct _d3168; // CXXRecord Float32Array
struct _d3169; // CXXRecord Float32Array
struct _d3170; // CXXMethod New
struct _d3171; // ParmVar array_buffer
struct _d3172; // ParmVar byte_offset
struct _d3173; // ParmVar length
struct _d3174; // CXXMethod New
struct _d3175; // ParmVar shared_array_buffer
struct _d3176; // ParmVar byte_offset
struct _d3177; // ParmVar length
struct _d3178; // CXXMethod Cast
struct _d3179; // ParmVar obj
struct _d3180; // CXXRecord Float64Array
struct _d3181; // CXXRecord Float64Array
struct _d3182; // CXXMethod New
struct _d3183; // ParmVar array_buffer
struct _d3184; // ParmVar byte_offset
struct _d3185; // ParmVar length
struct _d3186; // CXXMethod New
struct _d3187; // ParmVar shared_array_buffer
struct _d3188; // ParmVar byte_offset
struct _d3189; // ParmVar length
struct _d3190; // CXXMethod Cast
struct _d3191; // ParmVar obj
struct _d3192; // CXXRecord BigInt64Array
struct _d3193; // CXXRecord BigInt64Array
struct _d3194; // CXXMethod New
struct _d3195; // ParmVar array_buffer
struct _d3196; // ParmVar byte_offset
struct _d3197; // ParmVar length
struct _d3198; // CXXMethod New
struct _d3199; // ParmVar shared_array_buffer
struct _d3200; // ParmVar byte_offset
struct _d3201; // ParmVar length
struct _d3202; // CXXMethod Cast
struct _d3203; // ParmVar obj
struct _d3204; // CXXRecord BigUint64Array
struct _d3205; // CXXRecord BigUint64Array
struct _d3206; // CXXMethod New
struct _d3207; // ParmVar array_buffer
struct _d3208; // ParmVar byte_offset
struct _d3209; // ParmVar length
struct _d3210; // CXXMethod New
struct _d3211; // ParmVar shared_array_buffer
struct _d3212; // ParmVar byte_offset
struct _d3213; // ParmVar length
struct _d3214; // CXXMethod Cast
struct _d3215; // ParmVar obj
struct _d3216; // CXXRecord DataView
struct _d3217; // CXXRecord DataView
struct _d3218; // CXXMethod New
struct _d3219; // ParmVar array_buffer
struct _d3220; // ParmVar byte_offset
struct _d3221; // ParmVar length
struct _d3222; // CXXMethod New
struct _d3223; // ParmVar shared_array_buffer
struct _d3224; // ParmVar byte_offset
struct _d3225; // ParmVar length
struct _d3226; // CXXMethod Cast
struct _d3227; // ParmVar obj
struct _d3228; // CXXRecord SharedArrayBuffer
struct _d3229; // CXXRecord Contents
struct _d3230; // CXXRecord Contents
struct _d3231; // TypeAlias Allocator
struct _d3232; // TypeAlias DeleterCallback
struct _d3233; // CXXConstructor Contents
struct _d3234; // CXXMethod AllocationBase
struct _d3235; // CXXMethod AllocationLength
struct _d3236; // CXXMethod AllocationMode
struct _d3237; // CXXMethod Data
struct _d3238; // CXXMethod ByteLength
struct _d3239; // CXXMethod Deleter
struct _d3240; // CXXMethod DeleterData
struct _d3241; // CXXMethod ByteLength
struct _d3242; // CXXMethod New
struct _d3243; // ParmVar isolate
struct _d3244; // ParmVar byte_length
struct _d3245; // CXXMethod New
struct _d3246; // ParmVar isolate
struct _d3247; // ParmVar data
struct _d3248; // ParmVar byte_length
struct _d3249; // ParmVar mode
struct _d3250; // CXXMethod New
struct _d3251; // ParmVar isolate
struct _d3252; // ParmVar 
struct _d3253; // ParmVar mode
struct _d3254; // CXXMethod IsExternal
struct _d3255; // CXXMethod Externalize
struct _d3256; // CXXMethod GetContents
struct _d3257; // CXXMethod Cast
struct _d3258; // ParmVar obj
struct _d3259; // Var kInternalFieldCount
struct _d3260; // CXXRecord Date
struct _d3261; // CXXMethod New
struct _d3262; // ParmVar context
struct _d3263; // ParmVar time
struct _d3264; // CXXMethod ValueOf
struct _d3265; // CXXMethod Cast
struct _d3266; // ParmVar obj
struct _d3267; // CXXRecord NumberObject
struct _d3268; // CXXMethod New
struct _d3269; // ParmVar isolate
struct _d3270; // ParmVar value
struct _d3271; // CXXMethod ValueOf
struct _d3272; // CXXMethod Cast
struct _d3273; // ParmVar obj
struct _d3274; // CXXRecord BigIntObject
struct _d3275; // CXXMethod New
struct _d3276; // ParmVar isolate
struct _d3277; // ParmVar value
struct _d3278; // CXXMethod ValueOf
struct _d3279; // CXXMethod Cast
struct _d3280; // ParmVar obj
struct _d3281; // CXXRecord BooleanObject
struct _d3282; // CXXMethod New
struct _d3283; // ParmVar isolate
struct _d3284; // ParmVar value
struct _d3285; // CXXMethod ValueOf
struct _d3286; // CXXMethod Cast
struct _d3287; // ParmVar obj
struct _d3288; // CXXRecord StringObject
struct _d3289; // CXXMethod New
struct _d3290; // ParmVar isolate
struct _d3291; // ParmVar value
struct _d3292; // CXXMethod ValueOf
struct _d3293; // CXXMethod Cast
struct _d3294; // ParmVar obj
struct _d3295; // CXXRecord SymbolObject
struct _d3296; // CXXMethod New
struct _d3297; // ParmVar isolate
struct _d3298; // ParmVar value
struct _d3299; // CXXMethod ValueOf
struct _d3300; // CXXMethod Cast
struct _d3301; // ParmVar obj
struct _d3302; // CXXRecord RegExp
struct _d3303; // CXXRecord RegExp
struct _d3304; // Enum Flags
struct _d3305; // EnumConstant kNone
struct _d3306; // EnumConstant kGlobal
struct _d3307; // EnumConstant kIgnoreCase
struct _d3308; // EnumConstant kMultiline
struct _d3309; // EnumConstant kSticky
struct _d3310; // EnumConstant kUnicode
struct _d3311; // EnumConstant kDotAll
struct _d3312; // CXXMethod New
struct _d3313; // ParmVar context
struct _d3314; // ParmVar pattern
struct _d3315; // ParmVar flags
struct _d3316; // CXXMethod GetSource
struct _d3317; // CXXMethod GetFlags
struct _d3318; // CXXMethod Cast
struct _d3319; // ParmVar obj
struct _d3320; // CXXRecord External
struct _d3321; // CXXMethod New
struct _d3322; // ParmVar isolate
struct _d3323; // ParmVar value
struct _d3324; // CXXMethod Cast
struct _d3325; // ParmVar obj
struct _d3326; // CXXMethod Value
struct _d3327; // Enum Intrinsic
struct _d3328; // EnumConstant kArrayProto_entries
struct _d3329; // EnumConstant kArrayProto_forEach
struct _d3330; // EnumConstant kArrayProto_keys
struct _d3331; // EnumConstant kArrayProto_values
struct _d3332; // EnumConstant kErrorPrototype
struct _d3333; // EnumConstant kIteratorPrototype
struct _d3334; // CXXRecord Template
struct _d3335; // CXXRecord Template
struct _d3336; // CXXMethod Set
struct _d3337; // ParmVar name
struct _d3338; // ParmVar value
struct _d3339; // ParmVar attributes
struct _d3340; // CXXMethod SetPrivate
struct _d3341; // ParmVar name
struct _d3342; // ParmVar value
struct _d3343; // ParmVar attributes
struct _d3344; // CXXMethod Set
struct _d3345; // ParmVar isolate
struct _d3346; // ParmVar name
struct _d3347; // ParmVar value
struct _d3348; // CXXMethod SetAccessorProperty
struct _d3349; // ParmVar name
struct _d3350; // ParmVar getter
struct _d3351; // ParmVar setter
struct _d3352; // ParmVar attribute
struct _d3353; // ParmVar settings
struct _d3354; // CXXMethod SetNativeDataProperty
struct _d3355; // ParmVar name
struct _d3356; // ParmVar getter
struct _d3357; // ParmVar setter
struct _d3358; // ParmVar data
struct _d3359; // ParmVar attribute
struct _d3360; // ParmVar signature
struct _d3361; // ParmVar settings
struct _d3362; // ParmVar getter_side_effect_type
struct _d3363; // ParmVar setter_side_effect_type
struct _d3364; // CXXMethod SetNativeDataProperty
struct _d3365; // ParmVar name
struct _d3366; // ParmVar getter
struct _d3367; // ParmVar setter
struct _d3368; // ParmVar data
struct _d3369; // ParmVar attribute
struct _d3370; // ParmVar signature
struct _d3371; // ParmVar settings
struct _d3372; // ParmVar getter_side_effect_type
struct _d3373; // ParmVar setter_side_effect_type
struct _d3374; // CXXMethod SetLazyDataProperty
struct _d3375; // ParmVar name
struct _d3376; // ParmVar getter
struct _d3377; // ParmVar data
struct _d3378; // ParmVar attribute
struct _d3379; // ParmVar getter_side_effect_type
struct _d3380; // ParmVar setter_side_effect_type
struct _d3381; // CXXMethod SetIntrinsicDataProperty
struct _d3382; // ParmVar name
struct _d3383; // ParmVar intrinsic
struct _d3384; // ParmVar attribute
struct _d3385; // Typedef GenericNamedPropertyGetterCallback
struct _d3386; // Typedef GenericNamedPropertySetterCallback
struct _d3387; // Typedef GenericNamedPropertyQueryCallback
struct _d3388; // Typedef GenericNamedPropertyDeleterCallback
struct _d3389; // Typedef GenericNamedPropertyEnumeratorCallback
struct _d3390; // Typedef GenericNamedPropertyDefinerCallback
struct _d3391; // Typedef GenericNamedPropertyDescriptorCallback
struct _d3392; // Typedef IndexedPropertyGetterCallback
struct _d3393; // Typedef IndexedPropertySetterCallback
struct _d3394; // Typedef IndexedPropertyQueryCallback
struct _d3395; // Typedef IndexedPropertyDeleterCallback
struct _d3396; // Typedef IndexedPropertyEnumeratorCallback
struct _d3397; // Typedef IndexedPropertyDefinerCallback
struct _d3398; // Typedef IndexedPropertyDescriptorCallback
struct _d3399; // Enum AccessType
struct _d3400; // EnumConstant ACCESS_GET
struct _d3401; // EnumConstant ACCESS_SET
struct _d3402; // EnumConstant ACCESS_HAS
struct _d3403; // EnumConstant ACCESS_DELETE
struct _d3404; // EnumConstant ACCESS_KEYS
struct _d3405; // Typedef AccessCheckCallback
struct _d3406; // CXXRecord FunctionTemplate
struct _d3407; // CXXMethod New
struct _d3408; // ParmVar isolate
struct _d3409; // ParmVar callback
struct _d3410; // ParmVar data
struct _d3411; // ParmVar signature
struct _d3412; // ParmVar length
struct _d3413; // ParmVar behavior
struct _d3414; // ParmVar side_effect_type
struct _d3415; // CXXMethod FromSnapshot
struct _d3416; // ParmVar isolate
struct _d3417; // ParmVar index
struct _d3418; // CXXMethod NewWithCache
struct _d3419; // ParmVar isolate
struct _d3420; // ParmVar callback
struct _d3421; // ParmVar cache_property
struct _d3422; // ParmVar data
struct _d3423; // ParmVar signature
struct _d3424; // ParmVar length
struct _d3425; // ParmVar side_effect_type
struct _d3426; // CXXMethod GetFunction
struct _d3427; // ParmVar context
struct _d3428; // CXXMethod NewRemoteInstance
struct _d3429; // CXXMethod SetCallHandler
struct _d3430; // ParmVar callback
struct _d3431; // ParmVar data
struct _d3432; // ParmVar side_effect_type
struct _d3433; // CXXMethod SetLength
struct _d3434; // ParmVar length
struct _d3435; // CXXMethod InstanceTemplate
struct _d3436; // CXXMethod Inherit
struct _d3437; // ParmVar parent
struct _d3438; // CXXMethod PrototypeTemplate
struct _d3439; // CXXMethod SetPrototypeProviderTemplate
struct _d3440; // ParmVar prototype_provider
struct _d3441; // CXXMethod SetClassName
struct _d3442; // ParmVar name
struct _d3443; // CXXMethod SetAcceptAnyReceiver
struct _d3444; // ParmVar value
struct _d3445; // CXXMethod ReadOnlyPrototype
struct _d3446; // CXXMethod RemovePrototype
struct _d3447; // CXXMethod HasInstance
struct _d3448; // ParmVar object
struct _d3449; // CXXMethod Cast
struct _d3450; // ParmVar data
struct _d3451; // Enum PropertyHandlerFlags
struct _d3452; // EnumConstant kNone
struct _d3453; // EnumConstant kAllCanRead
struct _d3454; // EnumConstant kNonMasking
struct _d3455; // EnumConstant kOnlyInterceptStrings
struct _d3456; // EnumConstant kHasNoSideEffect
struct _d3457; // CXXRecord NamedPropertyHandlerConfiguration
struct _d3458; // CXXRecord NamedPropertyHandlerConfiguration
struct _d3459; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3460; // ParmVar getter
struct _d3461; // ParmVar setter
struct _d3462; // ParmVar query
struct _d3463; // ParmVar deleter
struct _d3464; // ParmVar enumerator
struct _d3465; // ParmVar definer
struct _d3466; // ParmVar descriptor
struct _d3467; // ParmVar data
struct _d3468; // ParmVar flags
struct _d3469; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3470; // ParmVar getter
struct _d3471; // ParmVar setter
struct _d3472; // ParmVar query
struct _d3473; // ParmVar deleter
struct _d3474; // ParmVar enumerator
struct _d3475; // ParmVar data
struct _d3476; // ParmVar flags
struct _d3477; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3478; // ParmVar getter
struct _d3479; // ParmVar setter
struct _d3480; // ParmVar descriptor
struct _d3481; // ParmVar deleter
struct _d3482; // ParmVar enumerator
struct _d3483; // ParmVar definer
struct _d3484; // ParmVar data
struct _d3485; // ParmVar flags
struct _d3486; // Field getter
struct _d3487; // Field setter
struct _d3488; // Field query
struct _d3489; // Field deleter
struct _d3490; // Field enumerator
struct _d3491; // Field definer
struct _d3492; // Field descriptor
struct _d3493; // Field data
struct _d3494; // Field flags
struct _d3495; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3496; // ParmVar 
struct _d3497; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3498; // ParmVar 
struct _d3499; // CXXRecord IndexedPropertyHandlerConfiguration
struct _d3500; // CXXRecord IndexedPropertyHandlerConfiguration
struct _d3501; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3502; // ParmVar getter
struct _d3503; // ParmVar setter
struct _d3504; // ParmVar query
struct _d3505; // ParmVar deleter
struct _d3506; // ParmVar enumerator
struct _d3507; // ParmVar definer
struct _d3508; // ParmVar descriptor
struct _d3509; // ParmVar data
struct _d3510; // ParmVar flags
struct _d3511; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3512; // ParmVar getter
struct _d3513; // ParmVar setter
struct _d3514; // ParmVar query
struct _d3515; // ParmVar deleter
struct _d3516; // ParmVar enumerator
struct _d3517; // ParmVar data
struct _d3518; // ParmVar flags
struct _d3519; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3520; // ParmVar getter
struct _d3521; // ParmVar setter
struct _d3522; // ParmVar descriptor
struct _d3523; // ParmVar deleter
struct _d3524; // ParmVar enumerator
struct _d3525; // ParmVar definer
struct _d3526; // ParmVar data
struct _d3527; // ParmVar flags
struct _d3528; // Field getter
struct _d3529; // Field setter
struct _d3530; // Field query
struct _d3531; // Field deleter
struct _d3532; // Field enumerator
struct _d3533; // Field definer
struct _d3534; // Field descriptor
struct _d3535; // Field data
struct _d3536; // Field flags
struct _d3537; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3538; // ParmVar 
struct _d3539; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3540; // ParmVar 
struct _d3541; // CXXDestructor ~IndexedPropertyHandlerConfiguration
struct _d3542; // CXXRecord ObjectTemplate
struct _d3543; // CXXMethod New
struct _d3544; // ParmVar isolate
struct _d3545; // ParmVar constructor
struct _d3546; // CXXMethod FromSnapshot
struct _d3547; // ParmVar isolate
struct _d3548; // ParmVar index
struct _d3549; // CXXMethod NewInstance
struct _d3550; // ParmVar context
struct _d3551; // CXXMethod SetAccessor
struct _d3552; // ParmVar name
struct _d3553; // ParmVar getter
struct _d3554; // ParmVar setter
struct _d3555; // ParmVar data
struct _d3556; // ParmVar settings
struct _d3557; // ParmVar attribute
struct _d3558; // ParmVar signature
struct _d3559; // ParmVar getter_side_effect_type
struct _d3560; // ParmVar setter_side_effect_type
struct _d3561; // CXXMethod SetAccessor
struct _d3562; // ParmVar name
struct _d3563; // ParmVar getter
struct _d3564; // ParmVar setter
struct _d3565; // ParmVar data
struct _d3566; // ParmVar settings
struct _d3567; // ParmVar attribute
struct _d3568; // ParmVar signature
struct _d3569; // ParmVar getter_side_effect_type
struct _d3570; // ParmVar setter_side_effect_type
struct _d3571; // CXXMethod SetHandler
struct _d3572; // ParmVar configuration
struct _d3573; // CXXMethod SetIndexedPropertyHandler
struct _d3574; // ParmVar getter
struct _d3575; // ParmVar setter
struct _d3576; // ParmVar query
struct _d3577; // ParmVar deleter
struct _d3578; // ParmVar enumerator
struct _d3579; // ParmVar data
struct _d3580; // CXXMethod SetHandler
struct _d3581; // ParmVar configuration
struct _d3582; // CXXMethod SetCallAsFunctionHandler
struct _d3583; // ParmVar callback
struct _d3584; // ParmVar data
struct _d3585; // CXXMethod MarkAsUndetectable
struct _d3586; // CXXMethod SetAccessCheckCallback
struct _d3587; // ParmVar callback
struct _d3588; // ParmVar data
struct _d3589; // CXXMethod SetAccessCheckCallbackAndHandler
struct _d3590; // ParmVar callback
struct _d3591; // ParmVar named_handler
struct _d3592; // ParmVar indexed_handler
struct _d3593; // ParmVar data
struct _d3594; // CXXMethod InternalFieldCount
struct _d3595; // CXXMethod SetInternalFieldCount
struct _d3596; // ParmVar value
struct _d3597; // CXXMethod IsImmutableProto
struct _d3598; // CXXMethod SetImmutableProto
struct _d3599; // CXXMethod Cast
struct _d3600; // ParmVar data
struct _d3601; // CXXRecord Signature
struct _d3602; // CXXMethod New
struct _d3603; // ParmVar isolate
struct _d3604; // ParmVar receiver
struct _d3605; // CXXMethod Cast
struct _d3606; // ParmVar data
struct _d3607; // CXXRecord AccessorSignature
struct _d3608; // CXXMethod New
struct _d3609; // ParmVar isolate
struct _d3610; // ParmVar receiver
struct _d3611; // CXXMethod Cast
struct _d3612; // ParmVar data
struct _d3613; // CXXRecord Extension
struct _d3614; // CXXRecord Extension
struct _d3615; // CXXConstructor Extension
struct _d3616; // ParmVar name
struct _d3617; // ParmVar source
struct _d3618; // ParmVar dep_count
struct _d3619; // ParmVar deps
struct _d3620; // ParmVar source_length
struct _d3621; // CXXDestructor ~Extension
struct _d3622; // CXXMethod GetNativeFunctionTemplate
struct _d3623; // ParmVar isolate
struct _d3624; // ParmVar name
struct _d3625; // CXXMethod name
struct _d3626; // CXXMethod source_length
struct _d3627; // CXXMethod source
struct _d3628; // CXXMethod dependency_count
struct _d3629; // CXXMethod dependencies
struct _d3630; // CXXMethod set_auto_enable
struct _d3631; // ParmVar value
struct _d3632; // CXXMethod auto_enable
struct _d3633; // CXXConstructor Extension
struct _d3634; // ParmVar 
struct _d3635; // CXXMethod operator=
struct _d3636; // ParmVar 
struct _d3637; // Function RegisterExtension
struct _d3638; // ParmVar 
struct _d3639; // ClassTemplateSpecialization unique_ptr
struct _d3640; // Function Undefined
struct _d3641; // ParmVar isolate
struct _d3642; // ParmVar isolate
struct _d3643; // Function Null
struct _d3644; // ParmVar isolate
struct _d3645; // ParmVar isolate
struct _d3646; // Function True
struct _d3647; // ParmVar isolate
struct _d3648; // ParmVar isolate
struct _d3649; // Function False
struct _d3650; // ParmVar isolate
struct _d3651; // ParmVar isolate
struct _d3652; // CXXRecord ResourceConstraints
struct _d3653; // CXXRecord ResourceConstraints
struct _d3654; // CXXMethod ConfigureDefaultsFromHeapSize
struct _d3655; // ParmVar initial_heap_size_in_bytes
struct _d3656; // ParmVar maximum_heap_size_in_bytes
struct _d3657; // CXXMethod ConfigureDefaults
struct _d3658; // ParmVar physical_memory
struct _d3659; // ParmVar virtual_memory_limit
struct _d3660; // CXXMethod stack_limit
struct _d3661; // CXXMethod set_stack_limit
struct _d3662; // ParmVar value
struct _d3663; // CXXMethod code_range_size_in_bytes
struct _d3664; // CXXMethod set_code_range_size_in_bytes
struct _d3665; // ParmVar limit
struct _d3666; // CXXMethod max_old_generation_size_in_bytes
struct _d3667; // CXXMethod set_max_old_generation_size_in_bytes
struct _d3668; // ParmVar limit
struct _d3669; // CXXMethod max_young_generation_size_in_bytes
struct _d3670; // CXXMethod set_max_young_generation_size_in_bytes
struct _d3671; // ParmVar limit
struct _d3672; // CXXMethod initial_old_generation_size_in_bytes
struct _d3673; // CXXMethod set_initial_old_generation_size_in_bytes
struct _d3674; // ParmVar initial_size
struct _d3675; // CXXMethod initial_young_generation_size_in_bytes
struct _d3676; // CXXMethod set_initial_young_generation_size_in_bytes
struct _d3677; // ParmVar initial_size
struct _d3678; // CXXMethod code_range_size
struct _d3679; // CXXMethod set_code_range_size
struct _d3680; // ParmVar limit_in_mb
struct _d3681; // CXXMethod max_semi_space_size_in_kb
struct _d3682; // CXXMethod set_max_semi_space_size_in_kb
struct _d3683; // ParmVar limit_in_kb
struct _d3684; // CXXMethod max_old_space_size
struct _d3685; // CXXMethod set_max_old_space_size
struct _d3686; // ParmVar limit_in_mb
struct _d3687; // CXXMethod max_zone_pool_size
struct _d3688; // CXXMethod set_max_zone_pool_size
struct _d3689; // ParmVar bytes
struct _d3690; // CXXConstructor ResourceConstraints
struct _d3691; // CXXConstructor ResourceConstraints
struct _d3692; // ParmVar 
struct _d3693; // CXXConstructor ResourceConstraints
struct _d3694; // ParmVar 
struct _d3695; // Typedef FatalErrorCallback
struct _d3696; // Typedef OOMErrorCallback
struct _d3697; // Typedef DcheckErrorCallback
struct _d3698; // Typedef MessageCallback
struct _d3699; // Typedef LogEventCallback
struct _d3700; // CXXRecord Exception
struct _d3701; // CXXRecord Exception
struct _d3702; // CXXMethod RangeError
struct _d3703; // ParmVar message
struct _d3704; // CXXMethod ReferenceError
struct _d3705; // ParmVar message
struct _d3706; // CXXMethod SyntaxError
struct _d3707; // ParmVar message
struct _d3708; // CXXMethod TypeError
struct _d3709; // ParmVar message
struct _d3710; // CXXMethod Error
struct _d3711; // ParmVar message
struct _d3712; // CXXMethod CreateMessage
struct _d3713; // ParmVar isolate
struct _d3714; // ParmVar exception
struct _d3715; // CXXMethod GetStackTrace
struct _d3716; // ParmVar exception
struct _d3717; // Typedef CounterLookupCallback
struct _d3718; // Typedef CreateHistogramCallback
struct _d3719; // Typedef AddHistogramSampleCallback
struct _d3720; // Typedef BeforeCallEnteredCallback
struct _d3721; // Typedef CallCompletedCallback
struct _d3722; // Typedef HostImportModuleDynamicallyCallback
struct _d3723; // Typedef HostInitializeImportMetaObjectCallback
struct _d3724; // Typedef PrepareStackTraceCallback
struct _d3725; // Enum PromiseHookType
struct _d3726; // EnumConstant kInit
struct _d3727; // EnumConstant kResolve
struct _d3728; // EnumConstant kBefore
struct _d3729; // EnumConstant kAfter
struct _d3730; // Typedef PromiseHook
struct _d3731; // Enum PromiseRejectEvent
struct _d3732; // EnumConstant kPromiseRejectWithNoHandler
struct _d3733; // EnumConstant kPromiseHandlerAddedAfterReject
struct _d3734; // EnumConstant kPromiseRejectAfterResolved
struct _d3735; // EnumConstant kPromiseResolveAfterResolved
struct _d3736; // CXXRecord PromiseRejectMessage
struct _d3737; // CXXRecord PromiseRejectMessage
struct _d3738; // CXXConstructor PromiseRejectMessage
struct _d3739; // ParmVar promise
struct _d3740; // ParmVar event
struct _d3741; // ParmVar value
struct _d3742; // CXXMethod GetPromise
struct _d3743; // CXXMethod GetEvent
struct _d3744; // CXXMethod GetValue
struct _d3745; // Typedef PromiseRejectCallback
struct _d3746; // Typedef MicrotasksCompletedCallback
struct _d3747; // Typedef MicrotasksCompletedCallbackWithData
struct _d3748; // Typedef MicrotaskCallback
struct _d3749; // Enum MicrotasksPolicy
struct _d3750; // EnumConstant kExplicit
struct _d3751; // EnumConstant kScoped
struct _d3752; // EnumConstant kAuto
struct _d3753; // CXXRecord MicrotaskQueue
struct _d3754; // CXXMethod New
struct _d3755; // ParmVar isolate
struct _d3756; // ParmVar policy
struct _d3757; // ClassTemplateSpecialization unique_ptr
struct _d3758; // CXXDestructor ~MicrotaskQueue
struct _d3759; // CXXMethod EnqueueMicrotask
struct _d3760; // ParmVar isolate
struct _d3761; // ParmVar microtask
struct _d3762; // CXXMethod EnqueueMicrotask
struct _d3763; // ParmVar isolate
struct _d3764; // ParmVar callback
struct _d3765; // ParmVar data
struct _d3766; // CXXMethod AddMicrotasksCompletedCallback
struct _d3767; // ParmVar callback
struct _d3768; // ParmVar data
struct _d3769; // CXXMethod RemoveMicrotasksCompletedCallback
struct _d3770; // ParmVar callback
struct _d3771; // ParmVar data
struct _d3772; // CXXMethod PerformCheckpoint
struct _d3773; // ParmVar isolate
struct _d3774; // CXXMethod IsRunningMicrotasks
struct _d3775; // CXXMethod GetMicrotasksScopeDepth
struct _d3776; // CXXConstructor MicrotaskQueue
struct _d3777; // ParmVar 
struct _d3778; // CXXMethod operator=
struct _d3779; // ParmVar 
struct _d3780; // CXXRecord MicrotasksScope
struct _d3781; // CXXRecord MicrotasksScope
struct _d3782; // Enum Type
struct _d3783; // EnumConstant kRunMicrotasks
struct _d3784; // EnumConstant kDoNotRunMicrotasks
struct _d3785; // CXXConstructor MicrotasksScope
struct _d3786; // ParmVar isolate
struct _d3787; // ParmVar type
struct _d3788; // CXXConstructor MicrotasksScope
struct _d3789; // ParmVar isolate
struct _d3790; // ParmVar microtask_queue
struct _d3791; // ParmVar type
struct _d3792; // CXXDestructor ~MicrotasksScope
struct _d3793; // CXXMethod PerformCheckpoint
struct _d3794; // ParmVar isolate
struct _d3795; // CXXMethod GetCurrentDepth
struct _d3796; // ParmVar isolate
struct _d3797; // CXXMethod IsRunningMicrotasks
struct _d3798; // ParmVar isolate
struct _d3799; // CXXConstructor MicrotasksScope
struct _d3800; // ParmVar 
struct _d3801; // CXXMethod operator=
struct _d3802; // ParmVar 
struct _d3803; // Typedef FailedAccessCheckCallback
struct _d3804; // Typedef AllowCodeGenerationFromStringsCallback
struct _d3805; // Typedef ExtensionCallback
struct _d3806; // Typedef AllowWasmCodeGenerationCallback
struct _d3807; // Typedef ApiImplementationCallback
struct _d3808; // Typedef WasmStreamingCallback
struct _d3809; // Typedef WasmThreadsEnabledCallback
struct _d3810; // Enum GCType
struct _d3811; // EnumConstant kGCTypeScavenge
struct _d3812; // EnumConstant kGCTypeMarkSweepCompact
struct _d3813; // EnumConstant kGCTypeIncrementalMarking
struct _d3814; // EnumConstant kGCTypeProcessWeakCallbacks
struct _d3815; // EnumConstant kGCTypeAll
struct _d3816; // Enum GCCallbackFlags
struct _d3817; // EnumConstant kNoGCCallbackFlags
struct _d3818; // EnumConstant kGCCallbackFlagConstructRetainedObjectInfos
struct _d3819; // EnumConstant kGCCallbackFlagForced
struct _d3820; // EnumConstant kGCCallbackFlagSynchronousPhantomCallbackProcessing
struct _d3821; // EnumConstant kGCCallbackFlagCollectAllAvailableGarbage
struct _d3822; // EnumConstant kGCCallbackFlagCollectAllExternalMemory
struct _d3823; // EnumConstant kGCCallbackScheduleIdleGarbageCollection
struct _d3824; // Typedef GCCallback
struct _d3825; // Typedef InterruptCallback
struct _d3826; // Typedef NearHeapLimitCallback
struct _d3827; // CXXRecord HeapStatistics
struct _d3828; // CXXRecord HeapStatistics
struct _d3829; // CXXConstructor HeapStatistics
struct _d3830; // CXXMethod total_heap_size
struct _d3831; // CXXMethod total_heap_size_executable
struct _d3832; // CXXMethod total_physical_size
struct _d3833; // CXXMethod total_available_size
struct _d3834; // CXXMethod used_heap_size
struct _d3835; // CXXMethod heap_size_limit
struct _d3836; // CXXMethod malloced_memory
struct _d3837; // CXXMethod external_memory
struct _d3838; // CXXMethod peak_malloced_memory
struct _d3839; // CXXMethod number_of_native_contexts
struct _d3840; // CXXMethod number_of_detached_contexts
struct _d3841; // CXXMethod does_zap_garbage
struct _d3842; // CXXRecord HeapSpaceStatistics
struct _d3843; // CXXRecord HeapSpaceStatistics
struct _d3844; // CXXConstructor HeapSpaceStatistics
struct _d3845; // CXXMethod space_name
struct _d3846; // CXXMethod space_size
struct _d3847; // CXXMethod space_used_size
struct _d3848; // CXXMethod space_available_size
struct _d3849; // CXXMethod physical_space_size
struct _d3850; // CXXRecord HeapObjectStatistics
struct _d3851; // CXXRecord HeapObjectStatistics
struct _d3852; // CXXConstructor HeapObjectStatistics
struct _d3853; // CXXMethod object_type
struct _d3854; // CXXMethod object_sub_type
struct _d3855; // CXXMethod object_count
struct _d3856; // CXXMethod object_size
struct _d3857; // CXXRecord HeapCodeStatistics
struct _d3858; // CXXRecord HeapCodeStatistics
struct _d3859; // CXXConstructor HeapCodeStatistics
struct _d3860; // CXXMethod code_and_metadata_size
struct _d3861; // CXXMethod bytecode_and_metadata_size
struct _d3862; // CXXMethod external_script_source_size
struct _d3863; // CXXRecord JitCodeEvent
struct _d3864; // CXXRecord JitCodeEvent
struct _d3865; // Enum EventType
struct _d3866; // EnumConstant CODE_ADDED
struct _d3867; // EnumConstant CODE_MOVED
struct _d3868; // EnumConstant CODE_REMOVED
struct _d3869; // EnumConstant CODE_ADD_LINE_POS_INFO
struct _d3870; // EnumConstant CODE_START_LINE_INFO_RECORDING
struct _d3871; // EnumConstant CODE_END_LINE_INFO_RECORDING
struct _d3872; // Enum PositionType
struct _d3873; // EnumConstant POSITION
struct _d3874; // EnumConstant STATEMENT_POSITION
struct _d3875; // Enum CodeType
struct _d3876; // EnumConstant BYTE_CODE
struct _d3877; // EnumConstant JIT_CODE
struct _d3878; // Field type
struct _d3879; // Field code_type
struct _d3880; // Field code_start
struct _d3881; // Field code_len
struct _d3882; // Field script
struct _d3883; // Field user_data
struct _d3884; // CXXRecord name_t
struct _d3885; // CXXRecord name_t
struct _d3886; // Field str
struct _d3887; // Field len
struct _d3888; // CXXRecord line_info_t
struct _d3889; // CXXRecord line_info_t
struct _d3890; // Field offset
struct _d3891; // Field pos
struct _d3892; // Field position_type
struct _d3893; // CXXRecord 
struct _d3894; // Field name
struct _d3895; // Field line_info
struct _d3896; // Field new_code_start
struct _d3897; // Field 
struct _d3898; // IndirectField name
struct _d3899; // IndirectField line_info
struct _d3900; // IndirectField new_code_start
struct _d3901; // Field isolate
struct _d3902; // Enum RAILMode
struct _d3903; // EnumConstant PERFORMANCE_RESPONSE
struct _d3904; // EnumConstant PERFORMANCE_ANIMATION
struct _d3905; // EnumConstant PERFORMANCE_IDLE
struct _d3906; // EnumConstant PERFORMANCE_LOAD
struct _d3907; // Enum JitCodeEventOptions
struct _d3908; // EnumConstant kJitCodeEventDefault
struct _d3909; // EnumConstant kJitCodeEventEnumExisting
struct _d3910; // Typedef JitCodeEventHandler
struct _d3911; // Typedef UnhandledExceptionCallback
struct _d3912; // CXXRecord _EXCEPTION_POINTERS
struct _d3913; // CXXRecord ExternalResourceVisitor
struct _d3914; // CXXRecord ExternalResourceVisitor
struct _d3915; // CXXDestructor ~ExternalResourceVisitor
struct _d3916; // CXXMethod VisitExternalString
struct _d3917; // ParmVar string
struct _d3918; // CXXMethod operator=
struct _d3919; // ParmVar 
struct _d3920; // CXXRecord PersistentHandleVisitor
struct _d3921; // CXXRecord PersistentHandleVisitor
struct _d3922; // CXXDestructor ~PersistentHandleVisitor
struct _d3923; // CXXMethod VisitPersistentHandle
struct _d3924; // ParmVar value
struct _d3925; // ParmVar class_id
struct _d3926; // CXXMethod operator=
struct _d3927; // ParmVar 
struct _d3928; // Enum MemoryPressureLevel
struct _d3929; // EnumConstant kNone
struct _d3930; // EnumConstant kModerate
struct _d3931; // EnumConstant kCritical
struct _d3932; // CXXRecord EmbedderHeapTracer
struct _d3933; // CXXRecord EmbedderHeapTracer
struct _d3934; // Enum TraceFlags
struct _d3935; // EnumConstant kNoFlags
struct _d3936; // EnumConstant kReduceMemory
struct _d3937; // Enum EmbedderStackState
struct _d3938; // EnumConstant kUnknown
struct _d3939; // EnumConstant kNonEmpty
struct _d3940; // EnumConstant kEmpty
struct _d3941; // CXXRecord TracedGlobalHandleVisitor
struct _d3942; // CXXRecord TracedGlobalHandleVisitor
struct _d3943; // CXXDestructor ~TracedGlobalHandleVisitor
struct _d3944; // CXXMethod VisitTracedGlobalHandle
struct _d3945; // ParmVar value
struct _d3946; // CXXMethod operator=
struct _d3947; // ParmVar 
struct _d3948; // CXXRecord TraceSummary
struct _d3949; // CXXRecord TraceSummary
struct _d3950; // Field time
struct _d3951; // Field allocated_size
struct _d3952; // CXXDestructor ~EmbedderHeapTracer
struct _d3953; // CXXMethod IterateTracedGlobalHandles
struct _d3954; // ParmVar visitor
struct _d3955; // CXXMethod RegisterV8References
struct _d3956; // ParmVar embedder_fields
struct _d3957; // ClassTemplateSpecialization vector
struct _d3958; // CXXMethod RegisterEmbedderReference
struct _d3959; // ParmVar ref
struct _d3960; // CXXMethod TracePrologue
struct _d3961; // CXXMethod TracePrologue
struct _d3962; // ParmVar flags
struct _d3963; // CXXMethod AdvanceTracing
struct _d3964; // ParmVar deadline_in_ms
struct _d3965; // CXXMethod IsTracingDone
struct _d3966; // CXXMethod TraceEpilogue
struct _d3967; // CXXMethod TraceEpilogue
struct _d3968; // ParmVar trace_summary
struct _d3969; // CXXMethod EnterFinalPause
struct _d3970; // ParmVar stack_state
struct _d3971; // CXXMethod FinalizeTracing
struct _d3972; // CXXMethod IsRootForNonTracingGC
struct _d3973; // ParmVar handle
struct _d3974; // CXXMethod GarbageCollectionForTesting
struct _d3975; // ParmVar stack_state
struct _d3976; // CXXMethod IncreaseAllocatedSize
struct _d3977; // ParmVar bytes
struct _d3978; // CXXMethod DecreaseAllocatedSize
struct _d3979; // ParmVar bytes
struct _d3980; // CXXMethod isolate
struct _d3981; // Field isolate_
struct _d3982; // CXXMethod operator=
struct _d3983; // ParmVar 
struct _d3984; // CXXRecord SerializeInternalFieldsCallback
struct _d3985; // CXXRecord SerializeInternalFieldsCallback
struct _d3986; // Typedef CallbackFunction
struct _d3987; // CXXConstructor SerializeInternalFieldsCallback
struct _d3988; // ParmVar function
struct _d3989; // ParmVar data_arg
struct _d3990; // Field callback
struct _d3991; // Field data
struct _d3992; // CXXConstructor SerializeInternalFieldsCallback
struct _d3993; // ParmVar 
struct _d3994; // CXXConstructor SerializeInternalFieldsCallback
struct _d3995; // ParmVar 
struct _d3996; // CXXDestructor ~SerializeInternalFieldsCallback
struct _d3997; // Typedef SerializeEmbedderFieldsCallback
struct _d3998; // CXXRecord DeserializeInternalFieldsCallback
struct _d3999; // CXXRecord DeserializeInternalFieldsCallback
struct _d4000; // Typedef CallbackFunction
struct _d4001; // CXXConstructor DeserializeInternalFieldsCallback
struct _d4002; // ParmVar function
struct _d4003; // ParmVar data_arg
struct _d4004; // Field callback
struct _d4005; // Field data
struct _d4006; // CXXConstructor DeserializeInternalFieldsCallback
struct _d4007; // ParmVar 
struct _d4008; // CXXConstructor DeserializeInternalFieldsCallback
struct _d4009; // ParmVar 
struct _d4010; // CXXDestructor ~DeserializeInternalFieldsCallback
struct _d4011; // Typedef DeserializeEmbedderFieldsCallback
struct _d4012; // CXXRecord Isolate
struct _d4013; // CXXRecord CreateParams
struct _d4014; // CXXRecord CreateParams
struct _d4015; // CXXConstructor CreateParams
struct _d4016; // Field code_event_handler
struct _d4017; // Field constraints
struct _d4018; // Field snapshot_blob
struct _d4019; // Field counter_lookup_callback
struct _d4020; // Field create_histogram_callback
struct _d4021; // Field add_histogram_sample_callback
struct _d4022; // Field array_buffer_allocator
struct _d4023; // Field external_references
struct _d4024; // Field allow_atomics_wait
struct _d4025; // Field only_terminate_in_safe_scope
struct _d4026; // CXXRecord Scope
struct _d4027; // CXXRecord Scope
struct _d4028; // CXXConstructor Scope
struct _d4029; // ParmVar isolate
struct _d4030; // CXXDestructor ~Scope
struct _d4031; // CXXConstructor Scope
struct _d4032; // ParmVar 
struct _d4033; // CXXMethod operator=
struct _d4034; // ParmVar 
struct _d4035; // CXXRecord DisallowJavascriptExecutionScope
struct _d4036; // CXXRecord DisallowJavascriptExecutionScope
struct _d4037; // Enum OnFailure
struct _d4038; // EnumConstant CRASH_ON_FAILURE
struct _d4039; // EnumConstant THROW_ON_FAILURE
struct _d4040; // EnumConstant DUMP_ON_FAILURE
struct _d4041; // CXXConstructor DisallowJavascriptExecutionScope
struct _d4042; // ParmVar isolate
struct _d4043; // ParmVar on_failure
struct _d4044; // CXXDestructor ~DisallowJavascriptExecutionScope
struct _d4045; // CXXConstructor DisallowJavascriptExecutionScope
struct _d4046; // ParmVar 
struct _d4047; // CXXMethod operator=
struct _d4048; // ParmVar 
struct _d4049; // CXXRecord AllowJavascriptExecutionScope
struct _d4050; // CXXRecord AllowJavascriptExecutionScope
struct _d4051; // CXXConstructor AllowJavascriptExecutionScope
struct _d4052; // ParmVar isolate
struct _d4053; // CXXDestructor ~AllowJavascriptExecutionScope
struct _d4054; // CXXConstructor AllowJavascriptExecutionScope
struct _d4055; // ParmVar 
struct _d4056; // CXXMethod operator=
struct _d4057; // ParmVar 
struct _d4058; // CXXRecord SuppressMicrotaskExecutionScope
struct _d4059; // CXXRecord SuppressMicrotaskExecutionScope
struct _d4060; // CXXConstructor SuppressMicrotaskExecutionScope
struct _d4061; // ParmVar isolate
struct _d4062; // CXXConstructor SuppressMicrotaskExecutionScope
struct _d4063; // ParmVar microtask_queue
struct _d4064; // CXXDestructor ~SuppressMicrotaskExecutionScope
struct _d4065; // CXXConstructor SuppressMicrotaskExecutionScope
struct _d4066; // ParmVar 
struct _d4067; // CXXMethod operator=
struct _d4068; // ParmVar 
struct _d4069; // CXXRecord SafeForTerminationScope
struct _d4070; // CXXRecord SafeForTerminationScope
struct _d4071; // CXXConstructor SafeForTerminationScope
struct _d4072; // ParmVar isolate
struct _d4073; // CXXDestructor ~SafeForTerminationScope
struct _d4074; // CXXConstructor SafeForTerminationScope
struct _d4075; // ParmVar 
struct _d4076; // CXXMethod operator=
struct _d4077; // ParmVar 
struct _d4078; // Enum GarbageCollectionType
struct _d4079; // EnumConstant kFullGarbageCollection
struct _d4080; // EnumConstant kMinorGarbageCollection
struct _d4081; // Enum UseCounterFeature
struct _d4082; // EnumConstant kUseAsm
struct _d4083; // EnumConstant kBreakIterator
struct _d4084; // EnumConstant kLegacyConst
struct _d4085; // EnumConstant kMarkDequeOverflow
struct _d4086; // EnumConstant kStoreBufferOverflow
struct _d4087; // EnumConstant kSlotsBufferOverflow
struct _d4088; // EnumConstant kObjectObserve
struct _d4089; // EnumConstant kForcedGC
struct _d4090; // EnumConstant kSloppyMode
struct _d4091; // EnumConstant kStrictMode
struct _d4092; // EnumConstant kStrongMode
struct _d4093; // EnumConstant kRegExpPrototypeStickyGetter
struct _d4094; // EnumConstant kRegExpPrototypeToString
struct _d4095; // EnumConstant kRegExpPrototypeUnicodeGetter
struct _d4096; // EnumConstant kIntlV8Parse
struct _d4097; // EnumConstant kIntlPattern
struct _d4098; // EnumConstant kIntlResolved
struct _d4099; // EnumConstant kPromiseChain
struct _d4100; // EnumConstant kPromiseAccept
struct _d4101; // EnumConstant kPromiseDefer
struct _d4102; // EnumConstant kHtmlCommentInExternalScript
struct _d4103; // EnumConstant kHtmlComment
struct _d4104; // EnumConstant kSloppyModeBlockScopedFunctionRedefinition
struct _d4105; // EnumConstant kForInInitializer
struct _d4106; // EnumConstant kArrayProtectorDirtied
struct _d4107; // EnumConstant kArraySpeciesModified
struct _d4108; // EnumConstant kArrayPrototypeConstructorModified
struct _d4109; // EnumConstant kArrayInstanceProtoModified
struct _d4110; // EnumConstant kArrayInstanceConstructorModified
struct _d4111; // EnumConstant kLegacyFunctionDeclaration
struct _d4112; // EnumConstant kRegExpPrototypeSourceGetter
struct _d4113; // EnumConstant kRegExpPrototypeOldFlagGetter
struct _d4114; // EnumConstant kDecimalWithLeadingZeroInStrictMode
struct _d4115; // EnumConstant kLegacyDateParser
struct _d4116; // EnumConstant kDefineGetterOrSetterWouldThrow
struct _d4117; // EnumConstant kFunctionConstructorReturnedUndefined
struct _d4118; // EnumConstant kAssigmentExpressionLHSIsCallInSloppy
struct _d4119; // EnumConstant kAssigmentExpressionLHSIsCallInStrict
struct _d4120; // EnumConstant kPromiseConstructorReturnedUndefined
struct _d4121; // EnumConstant kConstructorNonUndefinedPrimitiveReturn
struct _d4122; // EnumConstant kLabeledExpressionStatement
struct _d4123; // EnumConstant kLineOrParagraphSeparatorAsLineTerminator
struct _d4124; // EnumConstant kIndexAccessor
struct _d4125; // EnumConstant kErrorCaptureStackTrace
struct _d4126; // EnumConstant kErrorPrepareStackTrace
struct _d4127; // EnumConstant kErrorStackTraceLimit
struct _d4128; // EnumConstant kWebAssemblyInstantiation
struct _d4129; // EnumConstant kDeoptimizerDisableSpeculation
struct _d4130; // EnumConstant kArrayPrototypeSortJSArrayModifiedPrototype
struct _d4131; // EnumConstant kFunctionTokenOffsetTooLongForToString
struct _d4132; // EnumConstant kWasmSharedMemory
struct _d4133; // EnumConstant kWasmThreadOpcodes
struct _d4134; // EnumConstant kAtomicsNotify
struct _d4135; // EnumConstant kAtomicsWake
struct _d4136; // EnumConstant kCollator
struct _d4137; // EnumConstant kNumberFormat
struct _d4138; // EnumConstant kDateTimeFormat
struct _d4139; // EnumConstant kPluralRules
struct _d4140; // EnumConstant kRelativeTimeFormat
struct _d4141; // EnumConstant kLocale
struct _d4142; // EnumConstant kListFormat
struct _d4143; // EnumConstant kSegmenter
struct _d4144; // EnumConstant kStringLocaleCompare
struct _d4145; // EnumConstant kStringToLocaleUpperCase
struct _d4146; // EnumConstant kStringToLocaleLowerCase
struct _d4147; // EnumConstant kNumberToLocaleString
struct _d4148; // EnumConstant kDateToLocaleString
struct _d4149; // EnumConstant kDateToLocaleDateString
struct _d4150; // EnumConstant kDateToLocaleTimeString
struct _d4151; // EnumConstant kAttemptOverrideReadOnlyOnPrototypeSloppy
struct _d4152; // EnumConstant kAttemptOverrideReadOnlyOnPrototypeStrict
struct _d4153; // EnumConstant kOptimizedFunctionWithOneShotBytecode
struct _d4154; // EnumConstant kRegExpMatchIsTrueishOnNonJSRegExp
struct _d4155; // EnumConstant kRegExpMatchIsFalseishOnJSRegExp
struct _d4156; // EnumConstant kDateGetTimezoneOffset
struct _d4157; // EnumConstant kStringNormalize
struct _d4158; // EnumConstant kUseCounterFeatureCount
struct _d4159; // Enum MessageErrorLevel
struct _d4160; // EnumConstant kMessageLog
struct _d4161; // EnumConstant kMessageDebug
struct _d4162; // EnumConstant kMessageInfo
struct _d4163; // EnumConstant kMessageError
struct _d4164; // EnumConstant kMessageWarning
struct _d4165; // EnumConstant kMessageAll
struct _d4166; // Typedef UseCounterCallback
struct _d4167; // CXXMethod Allocate
struct _d4168; // CXXMethod Initialize
struct _d4169; // ParmVar isolate
struct _d4170; // ParmVar params
struct _d4171; // CXXMethod New
struct _d4172; // ParmVar params
struct _d4173; // CXXMethod GetCurrent
struct _d4174; // Typedef AbortOnUncaughtExceptionCallback
struct _d4175; // CXXMethod SetAbortOnUncaughtExceptionCallback
struct _d4176; // ParmVar callback
struct _d4177; // CXXMethod SetHostImportModuleDynamicallyCallback
struct _d4178; // ParmVar callback
struct _d4179; // CXXMethod SetHostInitializeImportMetaObjectCallback
struct _d4180; // ParmVar callback
struct _d4181; // CXXMethod SetPrepareStackTraceCallback
struct _d4182; // ParmVar callback
struct _d4183; // CXXMethod MemoryPressureNotification
struct _d4184; // ParmVar level
struct _d4185; // CXXMethod Enter
struct _d4186; // CXXMethod Exit
struct _d4187; // CXXMethod Dispose
struct _d4188; // CXXMethod DumpAndResetStats
struct _d4189; // CXXMethod DiscardThreadSpecificMetadata
struct _d4190; // CXXMethod SetData
struct _d4191; // ParmVar slot
struct _d4192; // ParmVar data
struct _d4193; // CXXMethod GetData
struct _d4194; // ParmVar slot
struct _d4195; // CXXMethod GetNumberOfDataSlots
struct _d4196; // FunctionTemplate GetDataFromSnapshotOnce
struct _d4197; // TemplateTypeParm T
struct _d4198; // CXXMethod GetDataFromSnapshotOnce
struct _d4199; // ParmVar index
struct _d4200; // CXXMethod GetHeapStatistics
struct _d4201; // ParmVar heap_statistics
struct _d4202; // CXXMethod NumberOfHeapSpaces
struct _d4203; // CXXMethod GetHeapSpaceStatistics
struct _d4204; // ParmVar space_statistics
struct _d4205; // ParmVar index
struct _d4206; // CXXMethod NumberOfTrackedHeapObjectTypes
struct _d4207; // CXXMethod GetHeapObjectStatisticsAtLastGC
struct _d4208; // ParmVar object_statistics
struct _d4209; // ParmVar type_index
struct _d4210; // CXXMethod GetHeapCodeAndMetadataStatistics
struct _d4211; // ParmVar object_statistics
struct _d4212; // CXXMethod GetStackSample
struct _d4213; // ParmVar state
struct _d4214; // ParmVar frames
struct _d4215; // ParmVar frames_limit
struct _d4216; // ParmVar sample_info
struct _d4217; // CXXMethod AdjustAmountOfExternalAllocatedMemory
struct _d4218; // ParmVar change_in_bytes
struct _d4219; // CXXMethod NumberOfPhantomHandleResetsSinceLastCall
struct _d4220; // CXXMethod GetHeapProfiler
struct _d4221; // CXXMethod SetIdle
struct _d4222; // ParmVar is_idle
struct _d4223; // CXXMethod GetArrayBufferAllocator
struct _d4224; // CXXMethod InContext
struct _d4225; // CXXMethod GetCurrentContext
struct _d4226; // CXXMethod GetEnteredContext
struct _d4227; // CXXMethod GetEnteredOrMicrotaskContext
struct _d4228; // CXXMethod GetIncumbentContext
struct _d4229; // CXXMethod ThrowException
struct _d4230; // ParmVar exception
struct _d4231; // Typedef GCCallback
struct _d4232; // Typedef GCCallbackWithData
struct _d4233; // CXXMethod AddGCPrologueCallback
struct _d4234; // ParmVar callback
struct _d4235; // ParmVar data
struct _d4236; // ParmVar gc_type_filter
struct _d4237; // CXXMethod AddGCPrologueCallback
struct _d4238; // ParmVar callback
struct _d4239; // ParmVar gc_type_filter
struct _d4240; // CXXMethod RemoveGCPrologueCallback
struct _d4241; // ParmVar 
struct _d4242; // ParmVar data
struct _d4243; // CXXMethod RemoveGCPrologueCallback
struct _d4244; // ParmVar callback
struct _d4245; // CXXMethod SetEmbedderHeapTracer
struct _d4246; // ParmVar tracer
struct _d4247; // CXXMethod GetEmbedderHeapTracer
struct _d4248; // Enum AtomicsWaitEvent
struct _d4249; // EnumConstant kStartWait
struct _d4250; // EnumConstant kWokenUp
struct _d4251; // EnumConstant kTimedOut
struct _d4252; // EnumConstant kTerminatedExecution
struct _d4253; // EnumConstant kAPIStopped
struct _d4254; // EnumConstant kNotEqual
struct _d4255; // CXXRecord AtomicsWaitWakeHandle
struct _d4256; // CXXRecord AtomicsWaitWakeHandle
struct _d4257; // CXXMethod Wake
struct _d4258; // Typedef AtomicsWaitCallback
struct _d4259; // CXXMethod SetAtomicsWaitCallback
struct _d4260; // ParmVar callback
struct _d4261; // ParmVar data
struct _d4262; // CXXMethod AddGCEpilogueCallback
struct _d4263; // ParmVar callback
struct _d4264; // ParmVar data
struct _d4265; // ParmVar gc_type_filter
struct _d4266; // CXXMethod AddGCEpilogueCallback
struct _d4267; // ParmVar callback
struct _d4268; // ParmVar gc_type_filter
struct _d4269; // CXXMethod RemoveGCEpilogueCallback
struct _d4270; // ParmVar callback
struct _d4271; // ParmVar data
struct _d4272; // CXXMethod RemoveGCEpilogueCallback
struct _d4273; // ParmVar callback
struct _d4274; // Typedef GetExternallyAllocatedMemoryInBytesCallback
struct _d4275; // CXXMethod SetGetExternallyAllocatedMemoryInBytesCallback
struct _d4276; // ParmVar callback
struct _d4277; // CXXMethod TerminateExecution
struct _d4278; // CXXMethod IsExecutionTerminating
struct _d4279; // CXXMethod CancelTerminateExecution
struct _d4280; // CXXMethod RequestInterrupt
struct _d4281; // ParmVar callback
struct _d4282; // ParmVar data
struct _d4283; // CXXMethod RequestGarbageCollectionForTesting
struct _d4284; // ParmVar type
struct _d4285; // CXXMethod SetEventLogger
struct _d4286; // ParmVar that
struct _d4287; // CXXMethod AddBeforeCallEnteredCallback
struct _d4288; // ParmVar callback
struct _d4289; // CXXMethod RemoveBeforeCallEnteredCallback
struct _d4290; // ParmVar callback
struct _d4291; // CXXMethod AddCallCompletedCallback
struct _d4292; // ParmVar callback
struct _d4293; // CXXMethod RemoveCallCompletedCallback
struct _d4294; // ParmVar callback
struct _d4295; // CXXMethod SetPromiseHook
struct _d4296; // ParmVar hook
struct _d4297; // CXXMethod SetPromiseRejectCallback
struct _d4298; // ParmVar callback
struct _d4299; // CXXMethod RunMicrotasks
struct _d4300; // CXXMethod EnqueueMicrotask
struct _d4301; // ParmVar microtask
struct _d4302; // CXXMethod EnqueueMicrotask
struct _d4303; // ParmVar callback
struct _d4304; // ParmVar data
struct _d4305; // CXXMethod SetMicrotasksPolicy
struct _d4306; // ParmVar policy
struct _d4307; // CXXMethod GetMicrotasksPolicy
struct _d4308; // CXXMethod AddMicrotasksCompletedCallback
struct _d4309; // ParmVar callback
struct _d4310; // CXXMethod AddMicrotasksCompletedCallback
struct _d4311; // ParmVar callback
struct _d4312; // ParmVar data
struct _d4313; // CXXMethod RemoveMicrotasksCompletedCallback
struct _d4314; // ParmVar callback
struct _d4315; // CXXMethod RemoveMicrotasksCompletedCallback
struct _d4316; // ParmVar callback
struct _d4317; // ParmVar data
struct _d4318; // CXXMethod SetUseCounterCallback
struct _d4319; // ParmVar callback
struct _d4320; // CXXMethod SetCounterFunction
struct _d4321; // ParmVar 
struct _d4322; // CXXMethod SetCreateHistogramFunction
struct _d4323; // ParmVar 
struct _d4324; // CXXMethod SetAddHistogramSampleFunction
struct _d4325; // ParmVar 
struct _d4326; // CXXMethod IdleNotificationDeadline
struct _d4327; // ParmVar deadline_in_seconds
struct _d4328; // CXXMethod LowMemoryNotification
struct _d4329; // CXXMethod ContextDisposedNotification
struct _d4330; // ParmVar dependant_context
struct _d4331; // CXXMethod IsolateInForegroundNotification
struct _d4332; // CXXMethod IsolateInBackgroundNotification
struct _d4333; // CXXMethod EnableMemorySavingsMode
struct _d4334; // CXXMethod DisableMemorySavingsMode
struct _d4335; // CXXMethod SetRAILMode
struct _d4336; // ParmVar rail_mode
struct _d4337; // CXXMethod IncreaseHeapLimitForDebugging
struct _d4338; // CXXMethod RestoreOriginalHeapLimit
struct _d4339; // CXXMethod IsHeapLimitIncreasedForDebugging
struct _d4340; // CXXMethod SetJitCodeEventHandler
struct _d4341; // ParmVar options
struct _d4342; // ParmVar event_handler
struct _d4343; // CXXMethod SetStackLimit
struct _d4344; // ParmVar stack_limit
struct _d4345; // CXXMethod GetCodeRange
struct _d4346; // ParmVar start
struct _d4347; // ParmVar length_in_bytes
struct _d4348; // CXXMethod GetUnwindState
struct _d4349; // CXXMethod SetFatalErrorHandler
struct _d4350; // ParmVar that
struct _d4351; // CXXMethod SetOOMErrorHandler
struct _d4352; // ParmVar that
struct _d4353; // CXXMethod AddNearHeapLimitCallback
struct _d4354; // ParmVar callback
struct _d4355; // ParmVar data
struct _d4356; // CXXMethod RemoveNearHeapLimitCallback
struct _d4357; // ParmVar callback
struct _d4358; // ParmVar heap_limit
struct _d4359; // CXXMethod AutomaticallyRestoreInitialHeapLimit
struct _d4360; // ParmVar threshold_percent
struct _d4361; // CXXMethod SetAllowCodeGenerationFromStringsCallback
struct _d4362; // ParmVar callback
struct _d4363; // CXXMethod SetAllowWasmCodeGenerationCallback
struct _d4364; // ParmVar callback
struct _d4365; // CXXMethod SetWasmModuleCallback
struct _d4366; // ParmVar callback
struct _d4367; // CXXMethod SetWasmInstanceCallback
struct _d4368; // ParmVar callback
struct _d4369; // CXXMethod SetWasmStreamingCallback
struct _d4370; // ParmVar callback
struct _d4371; // CXXMethod SetWasmThreadsEnabledCallback
struct _d4372; // ParmVar callback
struct _d4373; // CXXMethod IsDead
struct _d4374; // CXXMethod AddMessageListener
struct _d4375; // ParmVar that
struct _d4376; // ParmVar data
struct _d4377; // CXXMethod AddMessageListenerWithErrorLevel
struct _d4378; // ParmVar that
struct _d4379; // ParmVar message_levels
struct _d4380; // ParmVar data
struct _d4381; // CXXMethod RemoveMessageListeners
struct _d4382; // ParmVar that
struct _d4383; // CXXMethod SetFailedAccessCheckCallbackFunction
struct _d4384; // ParmVar 
struct _d4385; // CXXMethod SetCaptureStackTraceForUncaughtExceptions
struct _d4386; // ParmVar capture
struct _d4387; // ParmVar frame_limit
struct _d4388; // ParmVar options
struct _d4389; // CXXMethod VisitExternalResources
struct _d4390; // ParmVar visitor
struct _d4391; // CXXMethod VisitHandlesWithClassIds
struct _d4392; // ParmVar visitor
struct _d4393; // CXXMethod VisitWeakHandles
struct _d4394; // ParmVar visitor
struct _d4395; // CXXMethod IsInUse
struct _d4396; // CXXMethod SetAllowAtomicsWait
struct _d4397; // ParmVar allow
struct _d4398; // Enum TimeZoneDetection
struct _d4399; // EnumConstant kSkip
struct _d4400; // EnumConstant kRedetect
struct _d4401; // CXXMethod DateTimeConfigurationChangeNotification
struct _d4402; // ParmVar time_zone_detection
struct _d4403; // CXXMethod LocaleConfigurationChangeNotification
struct _d4404; // CXXConstructor Isolate
struct _d4405; // CXXDestructor ~Isolate
struct _d4406; // CXXConstructor Isolate
struct _d4407; // ParmVar 
struct _d4408; // CXXMethod operator=
struct _d4409; // ParmVar 
struct _d4410; // CXXMethod operator new
struct _d4411; // ParmVar size
struct _d4412; // CXXMethod operator new[]
struct _d4413; // ParmVar size
struct _d4414; // CXXMethod operator delete
struct _d4415; // ParmVar 
struct _d4416; // ParmVar 
struct _d4417; // CXXMethod operator delete[]
struct _d4418; // ParmVar 
struct _d4419; // ParmVar 
struct _d4420; // CXXRecord StartupData
struct _d4421; // CXXMethod CanBeRehashed
struct _d4422; // Field data
struct _d4423; // Field raw_size
struct _d4424; // Typedef EntropySource
struct _d4425; // Typedef ReturnAddressLocationResolver
struct _d4426; // CXXRecord V8
struct _d4427; // CXXRecord V8
struct _d4428; // CXXMethod SetNativesDataBlob
struct _d4429; // ParmVar startup_blob
struct _d4430; // CXXMethod SetSnapshotDataBlob
struct _d4431; // ParmVar startup_blob
struct _d4432; // CXXMethod SetDcheckErrorHandler
struct _d4433; // ParmVar that
struct _d4434; // CXXMethod SetFlagsFromString
struct _d4435; // ParmVar str
struct _d4436; // CXXMethod SetFlagsFromString
struct _d4437; // ParmVar str
struct _d4438; // ParmVar length
struct _d4439; // CXXMethod SetFlagsFromString
struct _d4440; // ParmVar str
struct _d4441; // ParmVar length
struct _d4442; // CXXMethod SetFlagsFromCommandLine
struct _d4443; // ParmVar argc
struct _d4444; // ParmVar argv
struct _d4445; // ParmVar remove_flags
struct _d4446; // CXXMethod GetVersion
struct _d4447; // CXXMethod Initialize
struct _d4448; // CXXMethod SetEntropySource
struct _d4449; // ParmVar source
struct _d4450; // CXXMethod SetReturnAddressLocationResolver
struct _d4451; // ParmVar return_address_resolver
struct _d4452; // CXXMethod Dispose
struct _d4453; // CXXMethod InitializeICU
struct _d4454; // ParmVar icu_data_file
struct _d4455; // CXXMethod InitializeICUDefaultLocation
struct _d4456; // ParmVar exec_path
struct _d4457; // ParmVar icu_data_file
struct _d4458; // CXXMethod InitializeExternalStartupData
struct _d4459; // ParmVar directory_path
struct _d4460; // CXXMethod InitializeExternalStartupData
struct _d4461; // ParmVar natives_blob
struct _d4462; // ParmVar snapshot_blob
struct _d4463; // CXXMethod InitializePlatform
struct _d4464; // ParmVar platform
struct _d4465; // CXXMethod ShutdownPlatform
struct _d4466; // CXXMethod EnableWebAssemblyTrapHandler
struct _d4467; // ParmVar use_v8_signal_handler
struct _d4468; // CXXMethod SetUnhandledExceptionCallback
struct _d4469; // ParmVar unhandled_exception_callback
struct _d4470; // CXXRecord SnapshotCreator
struct _d4471; // CXXRecord SnapshotCreator
struct _d4472; // Enum FunctionCodeHandling
struct _d4473; // EnumConstant kClear
struct _d4474; // EnumConstant kKeep
struct _d4475; // CXXConstructor SnapshotCreator
struct _d4476; // ParmVar isolate
struct _d4477; // ParmVar external_references
struct _d4478; // ParmVar existing_blob
struct _d4479; // CXXConstructor SnapshotCreator
struct _d4480; // ParmVar external_references
struct _d4481; // ParmVar existing_blob
struct _d4482; // CXXDestructor ~SnapshotCreator
struct _d4483; // CXXMethod GetIsolate
struct _d4484; // CXXMethod SetDefaultContext
struct _d4485; // ParmVar context
struct _d4486; // ParmVar callback
struct _d4487; // CXXMethod AddContext
struct _d4488; // ParmVar context
struct _d4489; // ParmVar callback
struct _d4490; // CXXMethod AddTemplate
struct _d4491; // ParmVar template_obj
struct _d4492; // FunctionTemplate AddData
struct _d4493; // TemplateTypeParm T
struct _d4494; // CXXMethod AddData
struct _d4495; // ParmVar context
struct _d4496; // ParmVar object
struct _d4497; // FunctionTemplate AddData
struct _d4498; // TemplateTypeParm T
struct _d4499; // CXXMethod AddData
struct _d4500; // ParmVar object
struct _d4501; // CXXMethod CreateBlob
struct _d4502; // ParmVar function_code_handling
struct _d4503; // CXXConstructor SnapshotCreator
struct _d4504; // ParmVar 
struct _d4505; // CXXMethod operator=
struct _d4506; // ParmVar 
struct _d4507; // TemplateTypeParm T
struct _d4508; // CXXRecord Maybe
struct _d4509; // CXXMethod IsNothing
struct _d4510; // CXXMethod IsJust
struct _d4511; // CXXMethod ToChecked
struct _d4512; // CXXMethod Check
struct _d4513; // CXXMethod To
struct _d4514; // ParmVar out
struct _d4515; // CXXMethod FromJust
struct _d4516; // CXXMethod FromMaybe
struct _d4517; // ParmVar default_value
struct _d4518; // CXXMethod operator==
struct _d4519; // ParmVar other
struct _d4520; // CXXMethod operator!=
struct _d4521; // ParmVar other
struct _d4522; // FunctionTemplate Nothing
struct _d4523; // TemplateTypeParm T
struct _d4524; // Function Nothing
struct _d4525; // FunctionTemplate Just
struct _d4526; // TemplateTypeParm T
struct _d4527; // Function Just
struct _d4528; // ParmVar t
struct _d4529; // ClassTemplateSpecialization Maybe
struct _d4530; // CXXRecord Maybe
struct _d4531; // CXXMethod IsNothing
struct _d4532; // CXXMethod IsJust
struct _d4533; // CXXMethod operator==
struct _d4534; // ParmVar other
struct _d4535; // CXXMethod operator!=
struct _d4536; // ParmVar other
struct _d4537; // CXXConstructor Maybe
struct _d4538; // ParmVar 
struct _d4539; // CXXConstructor Maybe
struct _d4540; // ParmVar 
struct _d4541; // CXXDestructor ~Maybe
struct _d4542; // Function JustVoid
struct _d4543; // CXXRecord TryCatch
struct _d4544; // CXXRecord TryCatch
struct _d4545; // CXXConstructor TryCatch
struct _d4546; // ParmVar isolate
struct _d4547; // CXXDestructor ~TryCatch
struct _d4548; // CXXMethod HasCaught
struct _d4549; // CXXMethod CanContinue
struct _d4550; // CXXMethod HasTerminated
struct _d4551; // CXXMethod ReThrow
struct _d4552; // CXXMethod Exception
struct _d4553; // CXXMethod StackTrace
struct _d4554; // ParmVar context
struct _d4555; // CXXMethod Message
struct _d4556; // CXXMethod Reset
struct _d4557; // CXXMethod SetVerbose
struct _d4558; // ParmVar value
struct _d4559; // CXXMethod IsVerbose
struct _d4560; // CXXMethod SetCaptureMessage
struct _d4561; // ParmVar value
struct _d4562; // CXXMethod JSStackComparableAddress
struct _d4563; // ParmVar handler
struct _d4564; // CXXConstructor TryCatch
struct _d4565; // ParmVar 
struct _d4566; // CXXMethod operator=
struct _d4567; // ParmVar 
struct _d4568; // CXXRecord ExtensionConfiguration
struct _d4569; // CXXRecord ExtensionConfiguration
struct _d4570; // CXXConstructor ExtensionConfiguration
struct _d4571; // CXXConstructor ExtensionConfiguration
struct _d4572; // ParmVar name_count
struct _d4573; // ParmVar names
struct _d4574; // CXXMethod begin
struct _d4575; // CXXMethod end
struct _d4576; // CXXRecord Context
struct _d4577; // CXXMethod Global
struct _d4578; // CXXMethod DetachGlobal
struct _d4579; // CXXMethod New
struct _d4580; // ParmVar isolate
struct _d4581; // ParmVar extensions
struct _d4582; // ParmVar global_template
struct _d4583; // ParmVar global_object
struct _d4584; // ParmVar internal_fields_deserializer
struct _d4585; // ParmVar microtask_queue
struct _d4586; // CXXMethod FromSnapshot
struct _d4587; // ParmVar isolate
struct _d4588; // ParmVar context_snapshot_index
struct _d4589; // ParmVar embedder_fields_deserializer
struct _d4590; // ParmVar extensions
struct _d4591; // ParmVar global_object
struct _d4592; // ParmVar microtask_queue
struct _d4593; // CXXMethod NewRemoteContext
struct _d4594; // ParmVar isolate
struct _d4595; // ParmVar global_template
struct _d4596; // ParmVar global_object
struct _d4597; // CXXMethod SetSecurityToken
struct _d4598; // ParmVar token
struct _d4599; // CXXMethod UseDefaultSecurityToken
struct _d4600; // CXXMethod GetSecurityToken
struct _d4601; // CXXMethod Enter
struct _d4602; // CXXMethod Exit
struct _d4603; // CXXMethod GetIsolate
struct _d4604; // Enum EmbedderDataFields
struct _d4605; // EnumConstant kDebugIdIndex
struct _d4606; // CXXMethod GetNumberOfEmbedderDataFields
struct _d4607; // CXXMethod GetEmbedderData
struct _d4608; // ParmVar index
struct _d4609; // CXXMethod GetExtrasBindingObject
struct _d4610; // CXXMethod SetEmbedderData
struct _d4611; // ParmVar index
struct _d4612; // ParmVar value
struct _d4613; // CXXMethod GetAlignedPointerFromEmbedderData
struct _d4614; // ParmVar index
struct _d4615; // CXXMethod SetAlignedPointerInEmbedderData
struct _d4616; // ParmVar index
struct _d4617; // ParmVar value
struct _d4618; // CXXMethod AllowCodeGenerationFromStrings
struct _d4619; // ParmVar allow
struct _d4620; // CXXMethod IsCodeGenerationFromStringsAllowed
struct _d4621; // CXXMethod SetErrorMessageForCodeGenerationFromStrings
struct _d4622; // ParmVar message
struct _d4623; // FunctionTemplate GetDataFromSnapshotOnce
struct _d4624; // TemplateTypeParm T
struct _d4625; // CXXMethod GetDataFromSnapshotOnce
struct _d4626; // ParmVar index
struct _d4627; // Typedef AbortScriptExecutionCallback
struct _d4628; // CXXMethod SetAbortScriptExecution
struct _d4629; // ParmVar callback
struct _d4630; // CXXRecord Scope
struct _d4631; // CXXRecord Scope
struct _d4632; // CXXConstructor Scope
struct _d4633; // ParmVar context
struct _d4634; // CXXDestructor ~Scope
struct _d4635; // CXXRecord BackupIncumbentScope
struct _d4636; // CXXRecord BackupIncumbentScope
struct _d4637; // CXXConstructor BackupIncumbentScope
struct _d4638; // ParmVar backup_incumbent_context
struct _d4639; // CXXDestructor ~BackupIncumbentScope
struct _d4640; // CXXMethod JSStackComparableAddress
struct _d4641; // CXXRecord Unlocker
struct _d4642; // CXXRecord Unlocker
struct _d4643; // CXXConstructor Unlocker
struct _d4644; // ParmVar isolate
struct _d4645; // CXXDestructor ~Unlocker
struct _d4646; // CXXRecord Locker
struct _d4647; // CXXRecord Locker
struct _d4648; // CXXConstructor Locker
struct _d4649; // ParmVar isolate
struct _d4650; // CXXDestructor ~Locker
struct _d4651; // CXXMethod IsLocked
struct _d4652; // ParmVar isolate
struct _d4653; // CXXMethod IsActive
struct _d4654; // CXXConstructor Locker
struct _d4655; // ParmVar 
struct _d4656; // CXXMethod operator=
struct _d4657; // ParmVar 
struct _d4658; // CXXRecord Unwinder
struct _d4659; // CXXRecord Unwinder
struct _d4660; // CXXMethod TryUnwindV8Frames
struct _d4661; // ParmVar unwind_state
struct _d4662; // ParmVar register_state
struct _d4663; // ParmVar stack_base
struct _d4664; // CXXMethod PCIsInV8
struct _d4665; // ParmVar unwind_state
struct _d4666; // ParmVar pc
struct _d4667; // ParmVar isolate
struct _d4668; // ParmVar that
struct _d4669; // ParmVar isolate
struct _d4670; // ParmVar that
struct _d4671; // ParmVar isolate
struct _d4672; // ParmVar that
struct _d4673; // TemplateTypeParm S
struct _d4674; // ParmVar isolate
struct _d4675; // ParmVar handle
struct _d4676; // ParmVar isolate
struct _d4677; // ParmVar index
struct _d4678; // TemplateTypeParm S
struct _d4679; // ParmVar isolate
struct _d4680; // ParmVar other
struct _d4681; // TemplateTypeParm S
struct _d4682; // ParmVar isolate
struct _d4683; // ParmVar other
struct _d4684; // TemplateTypeParm P
struct _d4685; // ParmVar parameter
struct _d4686; // ParmVar callback
struct _d4687; // ParmVar type
struct _d4688; // TemplateTypeParm P
struct _d4689; // ParmVar label
struct _d4690; // ParmVar class_id
struct _d4691; // ParmVar other
struct _d4692; // TemplateTypeParm S
struct _d4693; // ParmVar rhs
struct _d4694; // TemplateTypeParm S
struct _d4695; // ParmVar isolate
struct _d4696; // ParmVar other
struct _d4697; // ParmVar other
struct _d4698; // TemplateTypeParm S
struct _d4699; // ParmVar rhs
struct _d4700; // ParmVar class_id
struct _d4701; // ParmVar parameter
struct _d4702; // ParmVar callback
struct _d4703; // TemplateTypeParm S
struct _d4704; // ParmVar handle
struct _d4705; // TemplateTypeParm S
struct _d4706; // ParmVar handle
struct _d4707; // TemplateTypeParm S
struct _d4708; // ParmVar handle
struct _d4709; // ParmVar i
struct _d4710; // ParmVar i
struct _d4711; // ParmVar i
struct _d4712; // ParmVar value
struct _d4713; // TemplateTypeParm S
struct _d4714; // ParmVar whatever
struct _d4715; // ParmVar implicit_args
struct _d4716; // ParmVar values
struct _d4717; // ParmVar length
struct _d4718; // ParmVar i
struct _d4719; // ParmVar resource_name
struct _d4720; // ParmVar resource_line_offset
struct _d4721; // ParmVar resource_column_offset
struct _d4722; // ParmVar resource_is_shared_cross_origin
struct _d4723; // ParmVar script_id
struct _d4724; // ParmVar source_map_url
struct _d4725; // ParmVar resource_is_opaque
struct _d4726; // ParmVar is_wasm
struct _d4727; // ParmVar is_module
struct _d4728; // ParmVar host_defined_options
struct _d4729; // ParmVar string
struct _d4730; // ParmVar origin
struct _d4731; // ParmVar data
struct _d4732; // ParmVar string
struct _d4733; // ParmVar data
struct _d4734; // ParmVar isolate
struct _d4735; // ParmVar value
struct _d4736; // ParmVar isolate
struct _d4737; // ParmVar name
struct _d4738; // ParmVar value
struct _d4739; // ParmVar data
struct _d4740; // ParmVar data
struct _d4741; // ParmVar data
struct _d4742; // ParmVar data
struct _d4743; // ParmVar index
struct _d4744; // ParmVar index
struct _d4745; // ParmVar value
struct _d4746; // ParmVar isolate
struct _d4747; // ParmVar encoding_out
struct _d4748; // TemplateTypeParm T
struct _d4749; // ParmVar value
struct _d4750; // ParmVar value
struct _d4751; // ParmVar value
struct _d4752; // ParmVar value
struct _d4753; // ParmVar data
struct _d4754; // ParmVar value
struct _d4755; // ParmVar value
struct _d4756; // ParmVar value
struct _d4757; // ParmVar value
struct _d4758; // ParmVar value
struct _d4759; // ParmVar value
struct _d4760; // ParmVar value
struct _d4761; // ParmVar value
struct _d4762; // ParmVar value
struct _d4763; // ParmVar value
struct _d4764; // ParmVar value
struct _d4765; // ParmVar value
struct _d4766; // ParmVar value
struct _d4767; // ParmVar value
struct _d4768; // ParmVar value
struct _d4769; // ParmVar value
struct _d4770; // ParmVar value
struct _d4771; // ParmVar value
struct _d4772; // ParmVar value
struct _d4773; // ParmVar value
struct _d4774; // ParmVar value
struct _d4775; // ParmVar value
struct _d4776; // ParmVar value
struct _d4777; // ParmVar value
struct _d4778; // ParmVar value
struct _d4779; // ParmVar value
struct _d4780; // ParmVar value
struct _d4781; // ParmVar value
struct _d4782; // ParmVar value
struct _d4783; // ParmVar value
struct _d4784; // ParmVar value
struct _d4785; // ParmVar value
struct _d4786; // ParmVar value
struct _d4787; // ParmVar value
struct _d4788; // ParmVar value
struct _d4789; // ParmVar value
struct _d4790; // ParmVar value
struct _d4791; // ParmVar value
struct _d4792; // ParmVar isolate
struct _d4793; // ParmVar isolate
struct _d4794; // ParmVar isolate
struct _d4795; // ParmVar isolate
struct _d4796; // ParmVar slot
struct _d4797; // ParmVar data
struct _d4798; // ParmVar slot
struct _d4799; // TemplateTypeParm T
struct _d4800; // ParmVar index
struct _d4801; // ParmVar change_in_bytes
struct _d4802; // ParmVar index
struct _d4803; // ParmVar index
struct _d4804; // TemplateTypeParm T
struct _d4805; // ParmVar index
struct _d4806; // TemplateTypeParm T
struct _d4807; // ParmVar context
struct _d4808; // ParmVar object
struct _d4809; // TemplateTypeParm T
struct _d4810; // ParmVar object
struct _d1: NamedDeclName<_s1> {}; // Namespace v8
struct _d2: NamedDeclName<_s2>, TypeDecl<_qty1> {}; // CXXRecord Context
struct _d3: NamedDeclName<_s3>, TypeDecl<_qty2> {}; // CXXRecord Data
struct _d4: NamedDeclName<_s4>, TypeDecl<_qty3> {}; // CXXRecord Isolate
struct _d5: NamedDeclName<_s5>, TypeDecl<_qty4> {}; // CXXRecord AccessorSignature
struct _d6: NamedDeclName<_s6>, TypeDecl<_qty5> {}; // CXXRecord Array
struct _d7: NamedDeclName<_s7>, TypeDecl<_qty6> {}; // CXXRecord ArrayBuffer
struct _d8: NamedDeclName<_s8>, TypeDecl<_qty7> {}; // CXXRecord BigInt
struct _d9: NamedDeclName<_s9>, TypeDecl<_qty8> {}; // CXXRecord BigIntObject
struct _d10: NamedDeclName<_s10>, TypeDecl<_qty9> {}; // CXXRecord Boolean
struct _d11: NamedDeclName<_s11>, TypeDecl<_qty10> {}; // CXXRecord BooleanObject
struct _d12: NamedDeclName<_s12>, TypeDecl<_qty11> {}; // CXXRecord Date
struct _d13: NamedDeclName<_s13>, TypeDecl<_qty12> {}; // CXXRecord External
struct _d14: NamedDeclName<_s14>, TypeDecl<_qty13> {}; // CXXRecord Function
struct _d15: NamedDeclName<_s15>, TypeDecl<_qty14> {}; // CXXRecord FunctionTemplate
struct _d16: NamedDeclName<_s16>, TypeDecl<_qty15> {}; // CXXRecord HeapProfiler
struct _d17: NamedDeclName<_s17>, TypeDecl<_qty16> {}; // CXXRecord ImplementationUtilities
struct _d18: NamedDeclName<_s18>, TypeDecl<_qty17> {}; // CXXRecord Int32
struct _d19: NamedDeclName<_s19>, TypeDecl<_qty18> {}; // CXXRecord Integer
struct _d20: NamedDeclName<_s20> {}; // ClassTemplate Maybe
struct _d21: NamedDeclName<_s21>, TypeDecl<_qty19> {}; // TemplateTypeParm T
struct _d22: NamedDeclName<_s20>, TypeDecl<_qty20> {}; // CXXRecord Maybe
struct _d23: NamedDeclName<_s20>, TypeDecl<_qty21> {}; // ClassTemplateSpecialization Maybe
struct _d24: NamedDeclName<_s20>, TypeDecl<_qty22> {}; // ClassTemplateSpecialization Maybe
struct _d25: NamedDeclName<_s20>, TypeDecl<_qty23> {}; // ClassTemplateSpecialization Maybe
struct _d26: NamedDeclName<_s20>, TypeDecl<_qty24> {}; // ClassTemplateSpecialization Maybe
struct _d27: NamedDeclName<_s20>, TypeDecl<_qty25> {}; // ClassTemplateSpecialization Maybe
struct _d28: NamedDeclName<_s20>, TypeDecl<_qty26> {}; // ClassTemplateSpecialization Maybe
struct _d29: NamedDeclName<_s22>, TypeDecl<_qty27> {}; // CXXRecord MicrotaskQueue
struct _d30: NamedDeclName<_s23>, TypeDecl<_qty28> {}; // CXXRecord Name
struct _d31: NamedDeclName<_s24>, TypeDecl<_qty29> {}; // CXXRecord Number
struct _d32: NamedDeclName<_s25>, TypeDecl<_qty30> {}; // CXXRecord NumberObject
struct _d33: NamedDeclName<_s26>, TypeDecl<_qty31> {}; // CXXRecord Object
struct _d34: NamedDeclName<_s27>, TypeDecl<_qty32> {}; // CXXRecord ObjectOperationDescriptor
struct _d35: NamedDeclName<_s28>, TypeDecl<_qty33> {}; // CXXRecord ObjectTemplate
struct _d36: NamedDeclName<_s29>, TypeDecl<_qty34> {}; // CXXRecord Platform
struct _d37: NamedDeclName<_s30>, TypeDecl<_qty35> {}; // CXXRecord Primitive
struct _d38: NamedDeclName<_s31>, TypeDecl<_qty36> {}; // CXXRecord Promise
struct _d39: NamedDeclName<_s32>, TypeDecl<_qty37> {}; // CXXRecord PropertyDescriptor
struct _d40: NamedDeclName<_s33>, TypeDecl<_qty38> {}; // CXXRecord Proxy
struct _d41: NamedDeclName<_s34>, TypeDecl<_qty39> {}; // CXXRecord RawOperationDescriptor
struct _d42: NamedDeclName<_s35>, TypeDecl<_qty40> {}; // CXXRecord Script
struct _d43: NamedDeclName<_s36>, TypeDecl<_qty41> {}; // CXXRecord SharedArrayBuffer
struct _d44: NamedDeclName<_s37>, TypeDecl<_qty42> {}; // CXXRecord Signature
struct _d45: NamedDeclName<_s38>, TypeDecl<_qty43> {}; // CXXRecord StartupData
struct _d46: NamedDeclName<_s39>, TypeDecl<_qty44> {}; // CXXRecord StackFrame
struct _d47: NamedDeclName<_s40>, TypeDecl<_qty45> {}; // CXXRecord StackTrace
struct _d48: NamedDeclName<_s41>, TypeDecl<_qty46> {}; // CXXRecord String
struct _d49: NamedDeclName<_s42>, TypeDecl<_qty47> {}; // CXXRecord StringObject
struct _d50: NamedDeclName<_s43>, TypeDecl<_qty48> {}; // CXXRecord Symbol
struct _d51: NamedDeclName<_s44>, TypeDecl<_qty49> {}; // CXXRecord SymbolObject
struct _d52: NamedDeclName<_s45>, TypeDecl<_qty50> {}; // CXXRecord PrimitiveArray
struct _d53: NamedDeclName<_s46>, TypeDecl<_qty51> {}; // CXXRecord Private
struct _d54: NamedDeclName<_s47>, TypeDecl<_qty52> {}; // CXXRecord Uint32
struct _d55: NamedDeclName<_s48>, TypeDecl<_qty53> {}; // CXXRecord Utils
struct _d56: NamedDeclName<_s49>, TypeDecl<_qty54> {}; // CXXRecord Value
struct _d57: NamedDeclName<_s50>, TypeDecl<_qty55> {}; // CXXRecord WasmModuleObject
struct _d58: NamedDeclName<_s51> {}; // ClassTemplate Local
struct _d59: NamedDeclName<_s21>, TypeDecl<_qty56> {}; // TemplateTypeParm T
struct _d60: NamedDeclName<_s51>, TypeDecl<_qty57> {}; // CXXRecord Local
struct _d61: NamedDeclName<_s51>, TypeDecl<_qty58> {}; // ClassTemplateSpecialization Local
struct _d62: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty61>, FunctionNoResult {}; // CXXConstructor Local
struct _d63: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d64: NamedDeclName<_s52>, TypeDecl<_qty62> {}; // TemplateTypeParm S
struct _d65: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty64, Pack<_d66>>, FunctionInstance<_qty61>, FunctionNoResult {}; // CXXConstructor Local
struct _d66: NamedDeclName<_s53> {}; // ParmVar that
struct _d67: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty66, Pack<_d68>>, FunctionInstance<_qty61>, FunctionNoResult {}; // CXXConstructor Local
struct _d68: NamedDeclName<_s53> {}; // ParmVar that
struct _d69: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty69>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d70: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty61>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d71: CXXMethodDecl, FunctionDecl<_ty70, Pack<>>, FunctionInstance<_qty69>, FunctionResult<_qty70, _qty70>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d72: CXXMethodDecl, FunctionDecl<_ty70, Pack<>>, FunctionInstance<_qty69>, FunctionResult<_qty70, _qty70>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d73: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d74: NamedDeclName<_s52>, TypeDecl<_qty72> {}; // TemplateTypeParm S
struct _d75: CXXMethodDecl, FunctionDecl<_ty76, Pack<_d76>>, FunctionInstance<_qty69>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d76: NamedDeclName<_s53> {}; // ParmVar that
struct _d77: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d78: NamedDeclName<_s52>, TypeDecl<_qty77> {}; // TemplateTypeParm S
struct _d79: CXXMethodDecl, FunctionDecl<_ty80, Pack<_d80>>, FunctionInstance<_qty69>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d80: NamedDeclName<_s53> {}; // ParmVar that
struct _d81: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d82: NamedDeclName<_s52>, TypeDecl<_qty82> {}; // TemplateTypeParm S
struct _d83: CXXMethodDecl, FunctionDecl<_ty84, Pack<_d84>>, FunctionInstance<_qty69>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d84: NamedDeclName<_s53> {}; // ParmVar that
struct _d85: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d86: NamedDeclName<_s52>, TypeDecl<_qty87> {}; // TemplateTypeParm S
struct _d87: CXXMethodDecl, FunctionDecl<_ty88, Pack<_d88>>, FunctionInstance<_qty69>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d88: NamedDeclName<_s53> {}; // ParmVar that
struct _d89: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d90: NamedDeclName<_s52>, TypeDecl<_qty92> {}; // TemplateTypeParm S
struct _d91: CXXMethodDecl, FunctionDecl<_ty91, Pack<_d92>>, FunctionNoInstance, FunctionResult<_qty94, _qty94>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d92: NamedDeclName<_s53> {}; // ParmVar that
struct _d93: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d94: NamedDeclName<_s52>, TypeDecl<_qty96> {}; // TemplateTypeParm S
struct _d95: CXXMethodDecl, FunctionDecl<_ty94, Pack<>>, FunctionInstance<_qty69>, FunctionResult<_qty97, _qty97>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d96: CXXMethodDecl, FunctionDecl<_ty98, Pack<_d97, _d98>>, FunctionNoInstance, FunctionResult<_qty101, _qty101>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d97: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d98: NamedDeclName<_s53> {}; // ParmVar that
struct _d99: CXXMethodDecl, FunctionDecl<_ty103, Pack<_d100, _d101>>, FunctionNoInstance, FunctionResult<_qty106, _qty106>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d100: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d101: NamedDeclName<_s53> {}; // ParmVar that
struct _d102: NamedDeclName<_s64>, TypeDecl<_qty105> {}; // ClassTemplateSpecialization PersistentBase
struct _d103: CXXMethodDecl, FunctionDecl<_ty108, Pack<_d104, _d105>>, FunctionNoInstance, FunctionResult<_qty111, _qty111>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d104: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d105: NamedDeclName<_s53> {}; // ParmVar that
struct _d106: NamedDeclName<_s65>, TypeDecl<_qty110> {}; // ClassTemplateSpecialization TracedGlobal
struct _d107: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty111, Pack<_d108>>, FunctionInstance<_qty61>, FunctionNoResult {}; // CXXConstructor Local
struct _d108: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d109: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty113, Pack<_d110>>, FunctionInstance<_qty61>, FunctionNoResult {}; // CXXConstructor Local
struct _d110: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d111: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty61>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d112: NamedDeclName<_s51>, TypeDecl<_qty119> {}; // ClassTemplateSpecialization Local
struct _d113: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty120>, FunctionNoResult {}; // CXXConstructor Local
struct _d114: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d115: NamedDeclName<_s52>, TypeDecl<_qty121> {}; // TemplateTypeParm S
struct _d116: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty119, Pack<_d117>>, FunctionInstance<_qty120>, FunctionNoResult {}; // CXXConstructor Local
struct _d117: NamedDeclName<_s53> {}; // ParmVar that
struct _d118: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty121, Pack<_d119>>, FunctionInstance<_qty120>, FunctionNoResult {}; // CXXConstructor Local
struct _d119: NamedDeclName<_s53> {}; // ParmVar that
struct _d120: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty126>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d121: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty120>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d122: CXXMethodDecl, FunctionDecl<_ty123, Pack<>>, FunctionInstance<_qty126>, FunctionResult<_qty127, _qty127>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d123: CXXMethodDecl, FunctionDecl<_ty123, Pack<>>, FunctionInstance<_qty126>, FunctionResult<_qty127, _qty127>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d124: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d125: NamedDeclName<_s52>, TypeDecl<_qty129> {}; // TemplateTypeParm S
struct _d126: CXXMethodDecl, FunctionDecl<_ty129, Pack<_d127>>, FunctionInstance<_qty126>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d127: NamedDeclName<_s53> {}; // ParmVar that
struct _d128: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d129: NamedDeclName<_s52>, TypeDecl<_qty134> {}; // TemplateTypeParm S
struct _d130: CXXMethodDecl, FunctionDecl<_ty133, Pack<_d131>>, FunctionInstance<_qty126>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d131: NamedDeclName<_s53> {}; // ParmVar that
struct _d132: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d133: NamedDeclName<_s52>, TypeDecl<_qty139> {}; // TemplateTypeParm S
struct _d134: CXXMethodDecl, FunctionDecl<_ty137, Pack<_d135>>, FunctionInstance<_qty126>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d135: NamedDeclName<_s53> {}; // ParmVar that
struct _d136: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d137: NamedDeclName<_s52>, TypeDecl<_qty144> {}; // TemplateTypeParm S
struct _d138: CXXMethodDecl, FunctionDecl<_ty141, Pack<_d139>>, FunctionInstance<_qty126>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d139: NamedDeclName<_s53> {}; // ParmVar that
struct _d140: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d141: NamedDeclName<_s52>, TypeDecl<_qty149> {}; // TemplateTypeParm S
struct _d142: CXXMethodDecl, FunctionDecl<_ty144, Pack<_d143>>, FunctionNoInstance, FunctionResult<_qty151, _qty151>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d143: NamedDeclName<_s53> {}; // ParmVar that
struct _d144: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d145: NamedDeclName<_s52>, TypeDecl<_qty153> {}; // TemplateTypeParm S
struct _d146: CXXMethodDecl, FunctionDecl<_ty147, Pack<>>, FunctionInstance<_qty126>, FunctionResult<_qty154, _qty154>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d147: CXXMethodDecl, FunctionDecl<_ty150, Pack<_d148, _d149>>, FunctionNoInstance, FunctionResult<_qty157, _qty157>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d148: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d149: NamedDeclName<_s53> {}; // ParmVar that
struct _d150: CXXMethodDecl, FunctionDecl<_ty155, Pack<_d151, _d152>>, FunctionNoInstance, FunctionResult<_qty162, _qty162>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d151: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d152: NamedDeclName<_s53> {}; // ParmVar that
struct _d153: NamedDeclName<_s64>, TypeDecl<_qty161> {}; // ClassTemplateSpecialization PersistentBase
struct _d154: CXXMethodDecl, FunctionDecl<_ty160, Pack<_d155, _d156>>, FunctionNoInstance, FunctionResult<_qty167, _qty167>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d155: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d156: NamedDeclName<_s53> {}; // ParmVar that
struct _d157: NamedDeclName<_s65>, TypeDecl<_qty166> {}; // ClassTemplateSpecialization TracedGlobal
struct _d158: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty163, Pack<_d159>>, FunctionInstance<_qty120>, FunctionNoResult {}; // CXXConstructor Local
struct _d159: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d160: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty165, Pack<_d161>>, FunctionInstance<_qty120>, FunctionNoResult {}; // CXXConstructor Local
struct _d161: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d162: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty120>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d163: NamedDeclName<_s51>, TypeDecl<_qty174> {}; // ClassTemplateSpecialization Local
struct _d164: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty175>, FunctionNoResult {}; // CXXConstructor Local
struct _d165: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d166: NamedDeclName<_s52>, TypeDecl<_qty176> {}; // TemplateTypeParm S
struct _d167: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty170, Pack<_d168>>, FunctionInstance<_qty175>, FunctionNoResult {}; // CXXConstructor Local
struct _d168: NamedDeclName<_s53> {}; // ParmVar that
struct _d169: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty172, Pack<_d170>>, FunctionInstance<_qty175>, FunctionNoResult {}; // CXXConstructor Local
struct _d170: NamedDeclName<_s53> {}; // ParmVar that
struct _d171: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty181>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d172: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty175>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d173: CXXMethodDecl, FunctionDecl<_ty174, Pack<>>, FunctionInstance<_qty181>, FunctionResult<_qty182, _qty182>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d174: CXXMethodDecl, FunctionDecl<_ty174, Pack<>>, FunctionInstance<_qty181>, FunctionResult<_qty182, _qty182>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d175: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d176: NamedDeclName<_s52>, TypeDecl<_qty184> {}; // TemplateTypeParm S
struct _d177: CXXMethodDecl, FunctionDecl<_ty180, Pack<_d178>>, FunctionInstance<_qty181>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d178: NamedDeclName<_s53> {}; // ParmVar that
struct _d179: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d180: NamedDeclName<_s52>, TypeDecl<_qty189> {}; // TemplateTypeParm S
struct _d181: CXXMethodDecl, FunctionDecl<_ty184, Pack<_d182>>, FunctionInstance<_qty181>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d182: NamedDeclName<_s53> {}; // ParmVar that
struct _d183: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d184: NamedDeclName<_s52>, TypeDecl<_qty194> {}; // TemplateTypeParm S
struct _d185: CXXMethodDecl, FunctionDecl<_ty188, Pack<_d186>>, FunctionInstance<_qty181>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d186: NamedDeclName<_s53> {}; // ParmVar that
struct _d187: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d188: NamedDeclName<_s52>, TypeDecl<_qty199> {}; // TemplateTypeParm S
struct _d189: CXXMethodDecl, FunctionDecl<_ty192, Pack<_d190>>, FunctionInstance<_qty181>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d190: NamedDeclName<_s53> {}; // ParmVar that
struct _d191: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d192: NamedDeclName<_s52>, TypeDecl<_qty204> {}; // TemplateTypeParm S
struct _d193: CXXMethodDecl, FunctionDecl<_ty195, Pack<_d194>>, FunctionNoInstance, FunctionResult<_qty206, _qty206>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d194: NamedDeclName<_s53> {}; // ParmVar that
struct _d195: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d196: NamedDeclName<_s52>, TypeDecl<_qty208> {}; // TemplateTypeParm S
struct _d197: CXXMethodDecl, FunctionDecl<_ty198, Pack<>>, FunctionInstance<_qty181>, FunctionResult<_qty209, _qty209>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d198: CXXMethodDecl, FunctionDecl<_ty201, Pack<_d199, _d200>>, FunctionNoInstance, FunctionResult<_qty212, _qty212>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d199: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d200: NamedDeclName<_s53> {}; // ParmVar that
struct _d201: CXXMethodDecl, FunctionDecl<_ty206, Pack<_d202, _d203>>, FunctionNoInstance, FunctionResult<_qty217, _qty217>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d202: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d203: NamedDeclName<_s53> {}; // ParmVar that
struct _d204: NamedDeclName<_s64>, TypeDecl<_qty216> {}; // ClassTemplateSpecialization PersistentBase
struct _d205: CXXMethodDecl, FunctionDecl<_ty211, Pack<_d206, _d207>>, FunctionNoInstance, FunctionResult<_qty222, _qty222>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d206: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d207: NamedDeclName<_s53> {}; // ParmVar that
struct _d208: NamedDeclName<_s65>, TypeDecl<_qty221> {}; // ClassTemplateSpecialization TracedGlobal
struct _d209: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty214, Pack<_d210>>, FunctionInstance<_qty175>, FunctionNoResult {}; // CXXConstructor Local
struct _d210: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d211: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty216, Pack<_d212>>, FunctionInstance<_qty175>, FunctionNoResult {}; // CXXConstructor Local
struct _d212: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d213: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty175>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d214: CXXMethodDecl, FunctionDecl<_ty217, Pack<_d215>>, FunctionInstance<_qty175>, FunctionResult<_qty229, _qty174>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d215: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d216: CXXMethodDecl, FunctionDecl<_ty219, Pack<_d217>>, FunctionInstance<_qty175>, FunctionResult<_qty229, _qty174>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d217: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d218: NamedDeclName<_s51>, TypeDecl<_qty232> {}; // ClassTemplateSpecialization Local
struct _d219: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty233>, FunctionNoResult {}; // CXXConstructor Local
struct _d220: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d221: NamedDeclName<_s52>, TypeDecl<_qty234> {}; // TemplateTypeParm S
struct _d222: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty224, Pack<_d223>>, FunctionInstance<_qty233>, FunctionNoResult {}; // CXXConstructor Local
struct _d223: NamedDeclName<_s53> {}; // ParmVar that
struct _d224: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty226, Pack<_d225>>, FunctionInstance<_qty233>, FunctionNoResult {}; // CXXConstructor Local
struct _d225: NamedDeclName<_s53> {}; // ParmVar that
struct _d226: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty239>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d227: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty233>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d228: CXXMethodDecl, FunctionDecl<_ty228, Pack<>>, FunctionInstance<_qty239>, FunctionResult<_qty240, _qty240>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d229: CXXMethodDecl, FunctionDecl<_ty228, Pack<>>, FunctionInstance<_qty239>, FunctionResult<_qty240, _qty240>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d230: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d231: NamedDeclName<_s52>, TypeDecl<_qty242> {}; // TemplateTypeParm S
struct _d232: CXXMethodDecl, FunctionDecl<_ty234, Pack<_d233>>, FunctionInstance<_qty239>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d233: NamedDeclName<_s53> {}; // ParmVar that
struct _d234: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d235: NamedDeclName<_s52>, TypeDecl<_qty247> {}; // TemplateTypeParm S
struct _d236: CXXMethodDecl, FunctionDecl<_ty238, Pack<_d237>>, FunctionInstance<_qty239>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d237: NamedDeclName<_s53> {}; // ParmVar that
struct _d238: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d239: NamedDeclName<_s52>, TypeDecl<_qty252> {}; // TemplateTypeParm S
struct _d240: CXXMethodDecl, FunctionDecl<_ty242, Pack<_d241>>, FunctionInstance<_qty239>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d241: NamedDeclName<_s53> {}; // ParmVar that
struct _d242: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d243: NamedDeclName<_s52>, TypeDecl<_qty257> {}; // TemplateTypeParm S
struct _d244: CXXMethodDecl, FunctionDecl<_ty246, Pack<_d245>>, FunctionInstance<_qty239>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d245: NamedDeclName<_s53> {}; // ParmVar that
struct _d246: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d247: NamedDeclName<_s52>, TypeDecl<_qty262> {}; // TemplateTypeParm S
struct _d248: CXXMethodDecl, FunctionDecl<_ty249, Pack<_d249>>, FunctionNoInstance, FunctionResult<_qty264, _qty264>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d249: NamedDeclName<_s53> {}; // ParmVar that
struct _d250: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d251: NamedDeclName<_s52>, TypeDecl<_qty266> {}; // TemplateTypeParm S
struct _d252: CXXMethodDecl, FunctionDecl<_ty252, Pack<>>, FunctionInstance<_qty239>, FunctionResult<_qty267, _qty267>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d253: CXXMethodDecl, FunctionDecl<_ty255, Pack<_d254, _d255>>, FunctionNoInstance, FunctionResult<_qty270, _qty270>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d254: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d255: NamedDeclName<_s53> {}; // ParmVar that
struct _d256: CXXMethodDecl, FunctionDecl<_ty260, Pack<_d257, _d258>>, FunctionNoInstance, FunctionResult<_qty275, _qty275>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d257: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d258: NamedDeclName<_s53> {}; // ParmVar that
struct _d259: NamedDeclName<_s64>, TypeDecl<_qty274> {}; // ClassTemplateSpecialization PersistentBase
struct _d260: CXXMethodDecl, FunctionDecl<_ty265, Pack<_d261, _d262>>, FunctionNoInstance, FunctionResult<_qty280, _qty280>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d261: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d262: NamedDeclName<_s53> {}; // ParmVar that
struct _d263: NamedDeclName<_s65>, TypeDecl<_qty279> {}; // ClassTemplateSpecialization TracedGlobal
struct _d264: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty268, Pack<_d265>>, FunctionInstance<_qty233>, FunctionNoResult {}; // CXXConstructor Local
struct _d265: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d266: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty270, Pack<_d267>>, FunctionInstance<_qty233>, FunctionNoResult {}; // CXXConstructor Local
struct _d267: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d268: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty233>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d269: CXXMethodDecl, FunctionDecl<_ty271, Pack<_d270>>, FunctionInstance<_qty233>, FunctionResult<_qty287, _qty232>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d270: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d271: CXXMethodDecl, FunctionDecl<_ty273, Pack<_d272>>, FunctionInstance<_qty233>, FunctionResult<_qty287, _qty232>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d272: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d273: NamedDeclName<_s51>, TypeDecl<_qty290> {}; // ClassTemplateSpecialization Local
struct _d274: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty291>, FunctionNoResult {}; // CXXConstructor Local
struct _d275: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d276: NamedDeclName<_s52>, TypeDecl<_qty292> {}; // TemplateTypeParm S
struct _d277: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty278, Pack<_d278>>, FunctionInstance<_qty291>, FunctionNoResult {}; // CXXConstructor Local
struct _d278: NamedDeclName<_s53> {}; // ParmVar that
struct _d279: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty280, Pack<_d280>>, FunctionInstance<_qty291>, FunctionNoResult {}; // CXXConstructor Local
struct _d280: NamedDeclName<_s53> {}; // ParmVar that
struct _d281: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty297>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d282: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty291>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d283: CXXMethodDecl, FunctionDecl<_ty282, Pack<>>, FunctionInstance<_qty297>, FunctionResult<_qty298, _qty298>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d284: CXXMethodDecl, FunctionDecl<_ty282, Pack<>>, FunctionInstance<_qty297>, FunctionResult<_qty298, _qty298>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d285: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d286: NamedDeclName<_s52>, TypeDecl<_qty300> {}; // TemplateTypeParm S
struct _d287: CXXMethodDecl, FunctionDecl<_ty288, Pack<_d288>>, FunctionInstance<_qty297>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d288: NamedDeclName<_s53> {}; // ParmVar that
struct _d289: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d290: NamedDeclName<_s52>, TypeDecl<_qty305> {}; // TemplateTypeParm S
struct _d291: CXXMethodDecl, FunctionDecl<_ty292, Pack<_d292>>, FunctionInstance<_qty297>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d292: NamedDeclName<_s53> {}; // ParmVar that
struct _d293: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d294: NamedDeclName<_s52>, TypeDecl<_qty310> {}; // TemplateTypeParm S
struct _d295: CXXMethodDecl, FunctionDecl<_ty296, Pack<_d296>>, FunctionInstance<_qty297>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d296: NamedDeclName<_s53> {}; // ParmVar that
struct _d297: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d298: NamedDeclName<_s52>, TypeDecl<_qty315> {}; // TemplateTypeParm S
struct _d299: CXXMethodDecl, FunctionDecl<_ty300, Pack<_d300>>, FunctionInstance<_qty297>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d300: NamedDeclName<_s53> {}; // ParmVar that
struct _d301: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d302: NamedDeclName<_s52>, TypeDecl<_qty320> {}; // TemplateTypeParm S
struct _d303: CXXMethodDecl, FunctionDecl<_ty303, Pack<_d304>>, FunctionNoInstance, FunctionResult<_qty322, _qty322>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d304: NamedDeclName<_s53> {}; // ParmVar that
struct _d305: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d306: NamedDeclName<_s52>, TypeDecl<_qty324> {}; // TemplateTypeParm S
struct _d307: CXXMethodDecl, FunctionDecl<_ty306, Pack<>>, FunctionInstance<_qty297>, FunctionResult<_qty325, _qty325>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d308: CXXMethodDecl, FunctionDecl<_ty309, Pack<_d309, _d310>>, FunctionNoInstance, FunctionResult<_qty328, _qty328>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d309: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d310: NamedDeclName<_s53> {}; // ParmVar that
struct _d311: CXXMethodDecl, FunctionDecl<_ty314, Pack<_d312, _d313>>, FunctionNoInstance, FunctionResult<_qty333, _qty333>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d312: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d313: NamedDeclName<_s53> {}; // ParmVar that
struct _d314: NamedDeclName<_s64>, TypeDecl<_qty332> {}; // ClassTemplateSpecialization PersistentBase
struct _d315: CXXMethodDecl, FunctionDecl<_ty319, Pack<_d316, _d317>>, FunctionNoInstance, FunctionResult<_qty338, _qty338>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d316: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d317: NamedDeclName<_s53> {}; // ParmVar that
struct _d318: NamedDeclName<_s65>, TypeDecl<_qty337> {}; // ClassTemplateSpecialization TracedGlobal
struct _d319: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty322, Pack<_d320>>, FunctionInstance<_qty291>, FunctionNoResult {}; // CXXConstructor Local
struct _d320: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d321: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty324, Pack<_d322>>, FunctionInstance<_qty291>, FunctionNoResult {}; // CXXConstructor Local
struct _d322: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d323: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty291>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d324: CXXMethodDecl, FunctionDecl<_ty325, Pack<_d325>>, FunctionInstance<_qty291>, FunctionResult<_qty345, _qty290>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d325: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d326: CXXMethodDecl, FunctionDecl<_ty327, Pack<_d327>>, FunctionInstance<_qty291>, FunctionResult<_qty345, _qty290>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d327: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d328: NamedDeclName<_s51>, TypeDecl<_qty348> {}; // ClassTemplateSpecialization Local
struct _d329: NamedDeclName<_s51>, TypeDecl<_qty349> {}; // ClassTemplateSpecialization Local
struct _d330: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty350>, FunctionNoResult {}; // CXXConstructor Local
struct _d331: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d332: NamedDeclName<_s52>, TypeDecl<_qty351> {}; // TemplateTypeParm S
struct _d333: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty333, Pack<_d334>>, FunctionInstance<_qty350>, FunctionNoResult {}; // CXXConstructor Local
struct _d334: NamedDeclName<_s53> {}; // ParmVar that
struct _d335: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty335, Pack<_d336>>, FunctionInstance<_qty350>, FunctionNoResult {}; // CXXConstructor Local
struct _d336: NamedDeclName<_s53> {}; // ParmVar that
struct _d337: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty356>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d338: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty350>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d339: CXXMethodDecl, FunctionDecl<_ty337, Pack<>>, FunctionInstance<_qty356>, FunctionResult<_qty357, _qty357>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d340: CXXMethodDecl, FunctionDecl<_ty337, Pack<>>, FunctionInstance<_qty356>, FunctionResult<_qty357, _qty357>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d341: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d342: NamedDeclName<_s52>, TypeDecl<_qty359> {}; // TemplateTypeParm S
struct _d343: CXXMethodDecl, FunctionDecl<_ty343, Pack<_d344>>, FunctionInstance<_qty356>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d344: NamedDeclName<_s53> {}; // ParmVar that
struct _d345: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d346: NamedDeclName<_s52>, TypeDecl<_qty364> {}; // TemplateTypeParm S
struct _d347: CXXMethodDecl, FunctionDecl<_ty347, Pack<_d348>>, FunctionInstance<_qty356>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d348: NamedDeclName<_s53> {}; // ParmVar that
struct _d349: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d350: NamedDeclName<_s52>, TypeDecl<_qty369> {}; // TemplateTypeParm S
struct _d351: CXXMethodDecl, FunctionDecl<_ty351, Pack<_d352>>, FunctionInstance<_qty356>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d352: NamedDeclName<_s53> {}; // ParmVar that
struct _d353: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d354: NamedDeclName<_s52>, TypeDecl<_qty374> {}; // TemplateTypeParm S
struct _d355: CXXMethodDecl, FunctionDecl<_ty355, Pack<_d356>>, FunctionInstance<_qty356>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d356: NamedDeclName<_s53> {}; // ParmVar that
struct _d357: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d358: NamedDeclName<_s52>, TypeDecl<_qty379> {}; // TemplateTypeParm S
struct _d359: CXXMethodDecl, FunctionDecl<_ty358, Pack<_d360>>, FunctionNoInstance, FunctionResult<_qty381, _qty381>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d360: NamedDeclName<_s53> {}; // ParmVar that
struct _d361: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d362: NamedDeclName<_s52>, TypeDecl<_qty383> {}; // TemplateTypeParm S
struct _d363: CXXMethodDecl, FunctionDecl<_ty361, Pack<>>, FunctionInstance<_qty356>, FunctionResult<_qty384, _qty384>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d364: CXXMethodDecl, FunctionDecl<_ty364, Pack<_d365, _d366>>, FunctionNoInstance, FunctionResult<_qty387, _qty387>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d365: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d366: NamedDeclName<_s53> {}; // ParmVar that
struct _d367: CXXMethodDecl, FunctionDecl<_ty369, Pack<_d368, _d369>>, FunctionNoInstance, FunctionResult<_qty392, _qty392>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d368: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d369: NamedDeclName<_s53> {}; // ParmVar that
struct _d370: NamedDeclName<_s64>, TypeDecl<_qty391> {}; // ClassTemplateSpecialization PersistentBase
struct _d371: CXXMethodDecl, FunctionDecl<_ty374, Pack<_d372, _d373>>, FunctionNoInstance, FunctionResult<_qty397, _qty397>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d372: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d373: NamedDeclName<_s53> {}; // ParmVar that
struct _d374: NamedDeclName<_s65>, TypeDecl<_qty396> {}; // ClassTemplateSpecialization TracedGlobal
struct _d375: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty377, Pack<_d376>>, FunctionInstance<_qty350>, FunctionNoResult {}; // CXXConstructor Local
struct _d376: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d377: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty379, Pack<_d378>>, FunctionInstance<_qty350>, FunctionNoResult {}; // CXXConstructor Local
struct _d378: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d379: CXXMethodDecl, FunctionDecl<_ty380, Pack<_d380>>, FunctionInstance<_qty350>, FunctionResult<_qty404, _qty349>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d380: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d381: CXXMethodDecl, FunctionDecl<_ty382, Pack<_d382>>, FunctionInstance<_qty350>, FunctionResult<_qty404, _qty349>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d382: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d383: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty350>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d384: NamedDeclName<_s51>, TypeDecl<_qty407> {}; // ClassTemplateSpecialization Local
struct _d385: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty408>, FunctionNoResult {}; // CXXConstructor Local
struct _d386: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d387: NamedDeclName<_s52>, TypeDecl<_qty409> {}; // TemplateTypeParm S
struct _d388: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty387, Pack<_d389>>, FunctionInstance<_qty408>, FunctionNoResult {}; // CXXConstructor Local
struct _d389: NamedDeclName<_s53> {}; // ParmVar that
struct _d390: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty389, Pack<_d391>>, FunctionInstance<_qty408>, FunctionNoResult {}; // CXXConstructor Local
struct _d391: NamedDeclName<_s53> {}; // ParmVar that
struct _d392: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty414>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d393: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty408>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d394: CXXMethodDecl, FunctionDecl<_ty391, Pack<>>, FunctionInstance<_qty414>, FunctionResult<_qty415, _qty415>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d395: CXXMethodDecl, FunctionDecl<_ty391, Pack<>>, FunctionInstance<_qty414>, FunctionResult<_qty415, _qty415>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d396: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d397: NamedDeclName<_s52>, TypeDecl<_qty417> {}; // TemplateTypeParm S
struct _d398: CXXMethodDecl, FunctionDecl<_ty397, Pack<_d399>>, FunctionInstance<_qty414>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d399: NamedDeclName<_s53> {}; // ParmVar that
struct _d400: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d401: NamedDeclName<_s52>, TypeDecl<_qty422> {}; // TemplateTypeParm S
struct _d402: CXXMethodDecl, FunctionDecl<_ty401, Pack<_d403>>, FunctionInstance<_qty414>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d403: NamedDeclName<_s53> {}; // ParmVar that
struct _d404: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d405: NamedDeclName<_s52>, TypeDecl<_qty427> {}; // TemplateTypeParm S
struct _d406: CXXMethodDecl, FunctionDecl<_ty405, Pack<_d407>>, FunctionInstance<_qty414>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d407: NamedDeclName<_s53> {}; // ParmVar that
struct _d408: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d409: NamedDeclName<_s52>, TypeDecl<_qty432> {}; // TemplateTypeParm S
struct _d410: CXXMethodDecl, FunctionDecl<_ty409, Pack<_d411>>, FunctionInstance<_qty414>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d411: NamedDeclName<_s53> {}; // ParmVar that
struct _d412: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d413: NamedDeclName<_s52>, TypeDecl<_qty437> {}; // TemplateTypeParm S
struct _d414: CXXMethodDecl, FunctionDecl<_ty412, Pack<_d415>>, FunctionNoInstance, FunctionResult<_qty439, _qty439>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d415: NamedDeclName<_s53> {}; // ParmVar that
struct _d416: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d417: NamedDeclName<_s52>, TypeDecl<_qty441> {}; // TemplateTypeParm S
struct _d418: CXXMethodDecl, FunctionDecl<_ty415, Pack<>>, FunctionInstance<_qty414>, FunctionResult<_qty442, _qty442>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d419: CXXMethodDecl, FunctionDecl<_ty418, Pack<_d420, _d421>>, FunctionNoInstance, FunctionResult<_qty445, _qty445>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d420: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d421: NamedDeclName<_s53> {}; // ParmVar that
struct _d422: CXXMethodDecl, FunctionDecl<_ty423, Pack<_d423, _d424>>, FunctionNoInstance, FunctionResult<_qty450, _qty450>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d423: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d424: NamedDeclName<_s53> {}; // ParmVar that
struct _d425: NamedDeclName<_s64>, TypeDecl<_qty449> {}; // ClassTemplateSpecialization PersistentBase
struct _d426: CXXMethodDecl, FunctionDecl<_ty428, Pack<_d427, _d428>>, FunctionNoInstance, FunctionResult<_qty455, _qty455>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d427: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d428: NamedDeclName<_s53> {}; // ParmVar that
struct _d429: NamedDeclName<_s65>, TypeDecl<_qty454> {}; // ClassTemplateSpecialization TracedGlobal
struct _d430: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty408>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d431: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty431, Pack<_d432>>, FunctionInstance<_qty408>, FunctionNoResult {}; // CXXConstructor Local
struct _d432: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d433: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty433, Pack<_d434>>, FunctionInstance<_qty408>, FunctionNoResult {}; // CXXConstructor Local
struct _d434: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d435: NamedDeclName<_s51>, TypeDecl<_qty462> {}; // ClassTemplateSpecialization Local
struct _d436: NamedDeclName<_s51>, TypeDecl<_qty463> {}; // ClassTemplateSpecialization Local
struct _d437: NamedDeclName<_s51>, TypeDecl<_qty464> {}; // ClassTemplateSpecialization Local
struct _d438: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty465>, FunctionNoResult {}; // CXXConstructor Local
struct _d439: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d440: NamedDeclName<_s52>, TypeDecl<_qty466> {}; // TemplateTypeParm S
struct _d441: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty440, Pack<_d442>>, FunctionInstance<_qty465>, FunctionNoResult {}; // CXXConstructor Local
struct _d442: NamedDeclName<_s53> {}; // ParmVar that
struct _d443: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty469>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d444: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty465>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d445: CXXMethodDecl, FunctionDecl<_ty442, Pack<>>, FunctionInstance<_qty469>, FunctionResult<_qty470, _qty470>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d446: NamedDeclName<_s68>, TypeDecl<_qty471> {}; // CXXRecord UnboundScript
struct _d447: CXXMethodDecl, FunctionDecl<_ty442, Pack<>>, FunctionInstance<_qty469>, FunctionResult<_qty470, _qty470>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d448: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d449: NamedDeclName<_s52>, TypeDecl<_qty473> {}; // TemplateTypeParm S
struct _d450: CXXMethodDecl, FunctionDecl<_ty449, Pack<_d451>>, FunctionInstance<_qty469>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d451: NamedDeclName<_s53> {}; // ParmVar that
struct _d452: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d453: NamedDeclName<_s52>, TypeDecl<_qty478> {}; // TemplateTypeParm S
struct _d454: CXXMethodDecl, FunctionDecl<_ty453, Pack<_d455>>, FunctionInstance<_qty469>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d455: NamedDeclName<_s53> {}; // ParmVar that
struct _d456: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d457: NamedDeclName<_s52>, TypeDecl<_qty483> {}; // TemplateTypeParm S
struct _d458: CXXMethodDecl, FunctionDecl<_ty457, Pack<_d459>>, FunctionInstance<_qty469>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d459: NamedDeclName<_s53> {}; // ParmVar that
struct _d460: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d461: NamedDeclName<_s52>, TypeDecl<_qty488> {}; // TemplateTypeParm S
struct _d462: CXXMethodDecl, FunctionDecl<_ty461, Pack<_d463>>, FunctionInstance<_qty469>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d463: NamedDeclName<_s53> {}; // ParmVar that
struct _d464: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d465: NamedDeclName<_s52>, TypeDecl<_qty493> {}; // TemplateTypeParm S
struct _d466: CXXMethodDecl, FunctionDecl<_ty464, Pack<_d467>>, FunctionNoInstance, FunctionResult<_qty495, _qty495>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d467: NamedDeclName<_s53> {}; // ParmVar that
struct _d468: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d469: NamedDeclName<_s52>, TypeDecl<_qty497> {}; // TemplateTypeParm S
struct _d470: CXXMethodDecl, FunctionDecl<_ty467, Pack<>>, FunctionInstance<_qty469>, FunctionResult<_qty498, _qty498>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d471: CXXMethodDecl, FunctionDecl<_ty470, Pack<_d472, _d473>>, FunctionNoInstance, FunctionResult<_qty501, _qty501>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d472: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d473: NamedDeclName<_s53> {}; // ParmVar that
struct _d474: CXXMethodDecl, FunctionDecl<_ty475, Pack<_d475, _d476>>, FunctionNoInstance, FunctionResult<_qty506, _qty506>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d475: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d476: NamedDeclName<_s53> {}; // ParmVar that
struct _d477: NamedDeclName<_s64>, TypeDecl<_qty505> {}; // ClassTemplateSpecialization PersistentBase
struct _d478: CXXMethodDecl, FunctionDecl<_ty480, Pack<_d479, _d480>>, FunctionNoInstance, FunctionResult<_qty511, _qty511>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d479: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d480: NamedDeclName<_s53> {}; // ParmVar that
struct _d481: NamedDeclName<_s65>, TypeDecl<_qty510> {}; // ClassTemplateSpecialization TracedGlobal
struct _d482: NamedDeclName<_s51>, TypeDecl<_qty513> {}; // ClassTemplateSpecialization Local
struct _d483: NamedDeclName<_s51>, TypeDecl<_qty514> {}; // ClassTemplateSpecialization Local
struct _d484: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty515>, FunctionNoResult {}; // CXXConstructor Local
struct _d485: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d486: NamedDeclName<_s52>, TypeDecl<_qty516> {}; // TemplateTypeParm S
struct _d487: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty487, Pack<_d488>>, FunctionInstance<_qty515>, FunctionNoResult {}; // CXXConstructor Local
struct _d488: NamedDeclName<_s53> {}; // ParmVar that
struct _d489: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty489, Pack<_d490>>, FunctionInstance<_qty515>, FunctionNoResult {}; // CXXConstructor Local
struct _d490: NamedDeclName<_s53> {}; // ParmVar that
struct _d491: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty521>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d492: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty515>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d493: CXXMethodDecl, FunctionDecl<_ty491, Pack<>>, FunctionInstance<_qty521>, FunctionResult<_qty522, _qty522>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d494: CXXMethodDecl, FunctionDecl<_ty491, Pack<>>, FunctionInstance<_qty521>, FunctionResult<_qty522, _qty522>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d495: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d496: NamedDeclName<_s52>, TypeDecl<_qty524> {}; // TemplateTypeParm S
struct _d497: CXXMethodDecl, FunctionDecl<_ty497, Pack<_d498>>, FunctionInstance<_qty521>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d498: NamedDeclName<_s53> {}; // ParmVar that
struct _d499: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d500: NamedDeclName<_s52>, TypeDecl<_qty529> {}; // TemplateTypeParm S
struct _d501: CXXMethodDecl, FunctionDecl<_ty501, Pack<_d502>>, FunctionInstance<_qty521>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d502: NamedDeclName<_s53> {}; // ParmVar that
struct _d503: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d504: NamedDeclName<_s52>, TypeDecl<_qty534> {}; // TemplateTypeParm S
struct _d505: CXXMethodDecl, FunctionDecl<_ty505, Pack<_d506>>, FunctionInstance<_qty521>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d506: NamedDeclName<_s53> {}; // ParmVar that
struct _d507: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d508: NamedDeclName<_s52>, TypeDecl<_qty539> {}; // TemplateTypeParm S
struct _d509: CXXMethodDecl, FunctionDecl<_ty509, Pack<_d510>>, FunctionInstance<_qty521>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d510: NamedDeclName<_s53> {}; // ParmVar that
struct _d511: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d512: NamedDeclName<_s52>, TypeDecl<_qty544> {}; // TemplateTypeParm S
struct _d513: CXXMethodDecl, FunctionDecl<_ty512, Pack<_d514>>, FunctionNoInstance, FunctionResult<_qty546, _qty546>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d514: NamedDeclName<_s53> {}; // ParmVar that
struct _d515: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d516: NamedDeclName<_s52>, TypeDecl<_qty548> {}; // TemplateTypeParm S
struct _d517: CXXMethodDecl, FunctionDecl<_ty515, Pack<>>, FunctionInstance<_qty521>, FunctionResult<_qty549, _qty549>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d518: CXXMethodDecl, FunctionDecl<_ty518, Pack<_d519, _d520>>, FunctionNoInstance, FunctionResult<_qty552, _qty552>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d519: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d520: NamedDeclName<_s53> {}; // ParmVar that
struct _d521: CXXMethodDecl, FunctionDecl<_ty523, Pack<_d522, _d523>>, FunctionNoInstance, FunctionResult<_qty557, _qty557>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d522: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d523: NamedDeclName<_s53> {}; // ParmVar that
struct _d524: NamedDeclName<_s64>, TypeDecl<_qty556> {}; // ClassTemplateSpecialization PersistentBase
struct _d525: CXXMethodDecl, FunctionDecl<_ty528, Pack<_d526, _d527>>, FunctionNoInstance, FunctionResult<_qty562, _qty562>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d526: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d527: NamedDeclName<_s53> {}; // ParmVar that
struct _d528: NamedDeclName<_s65>, TypeDecl<_qty561> {}; // ClassTemplateSpecialization TracedGlobal
struct _d529: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty531, Pack<_d530>>, FunctionInstance<_qty515>, FunctionNoResult {}; // CXXConstructor Local
struct _d530: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d531: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty533, Pack<_d532>>, FunctionInstance<_qty515>, FunctionNoResult {}; // CXXConstructor Local
struct _d532: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d533: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty515>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d534: NamedDeclName<_s51>, TypeDecl<_qty569> {}; // ClassTemplateSpecialization Local
struct _d535: NamedDeclName<_s51>, TypeDecl<_qty570> {}; // ClassTemplateSpecialization Local
struct _d536: NamedDeclName<_s51>, TypeDecl<_qty571> {}; // ClassTemplateSpecialization Local
struct _d537: NamedDeclName<_s51>, TypeDecl<_qty572> {}; // ClassTemplateSpecialization Local
struct _d538: NamedDeclName<_s51>, TypeDecl<_qty573> {}; // ClassTemplateSpecialization Local
struct _d539: NamedDeclName<_s51>, TypeDecl<_qty574> {}; // ClassTemplateSpecialization Local
struct _d540: NamedDeclName<_s51>, TypeDecl<_qty575> {}; // ClassTemplateSpecialization Local
struct _d541: NamedDeclName<_s51>, TypeDecl<_qty576> {}; // ClassTemplateSpecialization Local
struct _d542: NamedDeclName<_s51>, TypeDecl<_qty577> {}; // ClassTemplateSpecialization Local
struct _d543: NamedDeclName<_s51>, TypeDecl<_qty578> {}; // ClassTemplateSpecialization Local
struct _d544: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty579>, FunctionNoResult {}; // CXXConstructor Local
struct _d545: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d546: NamedDeclName<_s52>, TypeDecl<_qty580> {}; // TemplateTypeParm S
struct _d547: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty547, Pack<_d548>>, FunctionInstance<_qty579>, FunctionNoResult {}; // CXXConstructor Local
struct _d548: NamedDeclName<_s53> {}; // ParmVar that
struct _d549: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty549, Pack<_d550>>, FunctionInstance<_qty579>, FunctionNoResult {}; // CXXConstructor Local
struct _d550: NamedDeclName<_s53> {}; // ParmVar that
struct _d551: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty551, Pack<_d552>>, FunctionInstance<_qty579>, FunctionNoResult {}; // CXXConstructor Local
struct _d552: NamedDeclName<_s53> {}; // ParmVar that
struct _d553: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty587>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d554: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty579>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d555: CXXMethodDecl, FunctionDecl<_ty553, Pack<>>, FunctionInstance<_qty587>, FunctionResult<_qty588, _qty588>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d556: CXXMethodDecl, FunctionDecl<_ty553, Pack<>>, FunctionInstance<_qty587>, FunctionResult<_qty588, _qty588>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d557: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d558: NamedDeclName<_s52>, TypeDecl<_qty590> {}; // TemplateTypeParm S
struct _d559: CXXMethodDecl, FunctionDecl<_ty559, Pack<_d560>>, FunctionInstance<_qty587>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d560: NamedDeclName<_s53> {}; // ParmVar that
struct _d561: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d562: NamedDeclName<_s52>, TypeDecl<_qty595> {}; // TemplateTypeParm S
struct _d563: CXXMethodDecl, FunctionDecl<_ty563, Pack<_d564>>, FunctionInstance<_qty587>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d564: NamedDeclName<_s53> {}; // ParmVar that
struct _d565: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d566: NamedDeclName<_s52>, TypeDecl<_qty600> {}; // TemplateTypeParm S
struct _d567: CXXMethodDecl, FunctionDecl<_ty567, Pack<_d568>>, FunctionInstance<_qty587>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d568: NamedDeclName<_s53> {}; // ParmVar that
struct _d569: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d570: NamedDeclName<_s52>, TypeDecl<_qty605> {}; // TemplateTypeParm S
struct _d571: CXXMethodDecl, FunctionDecl<_ty571, Pack<_d572>>, FunctionInstance<_qty587>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d572: NamedDeclName<_s53> {}; // ParmVar that
struct _d573: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d574: NamedDeclName<_s52>, TypeDecl<_qty610> {}; // TemplateTypeParm S
struct _d575: CXXMethodDecl, FunctionDecl<_ty574, Pack<_d576>>, FunctionNoInstance, FunctionResult<_qty612, _qty612>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d576: NamedDeclName<_s53> {}; // ParmVar that
struct _d577: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d578: NamedDeclName<_s52>, TypeDecl<_qty614> {}; // TemplateTypeParm S
struct _d579: CXXMethodDecl, FunctionDecl<_ty577, Pack<>>, FunctionInstance<_qty587>, FunctionResult<_qty615, _qty615>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d580: CXXMethodDecl, FunctionDecl<_ty580, Pack<_d581, _d582>>, FunctionNoInstance, FunctionResult<_qty618, _qty618>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d581: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d582: NamedDeclName<_s53> {}; // ParmVar that
struct _d583: CXXMethodDecl, FunctionDecl<_ty585, Pack<_d584, _d585>>, FunctionNoInstance, FunctionResult<_qty623, _qty623>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d584: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d585: NamedDeclName<_s53> {}; // ParmVar that
struct _d586: NamedDeclName<_s64>, TypeDecl<_qty622> {}; // ClassTemplateSpecialization PersistentBase
struct _d587: CXXMethodDecl, FunctionDecl<_ty590, Pack<_d588, _d589>>, FunctionNoInstance, FunctionResult<_qty628, _qty628>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d588: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d589: NamedDeclName<_s53> {}; // ParmVar that
struct _d590: NamedDeclName<_s65>, TypeDecl<_qty627> {}; // ClassTemplateSpecialization TracedGlobal
struct _d591: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty593, Pack<_d592>>, FunctionInstance<_qty579>, FunctionNoResult {}; // CXXConstructor Local
struct _d592: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d593: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty595, Pack<_d594>>, FunctionInstance<_qty579>, FunctionNoResult {}; // CXXConstructor Local
struct _d594: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d595: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty579>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d596: NamedDeclName<_s51>, TypeDecl<_qty635> {}; // ClassTemplateSpecialization Local
struct _d597: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty636>, FunctionNoResult {}; // CXXConstructor Local
struct _d598: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d599: NamedDeclName<_s52>, TypeDecl<_qty637> {}; // TemplateTypeParm S
struct _d600: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty600, Pack<_d601>>, FunctionInstance<_qty636>, FunctionNoResult {}; // CXXConstructor Local
struct _d601: NamedDeclName<_s53> {}; // ParmVar that
struct _d602: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty602, Pack<_d603>>, FunctionInstance<_qty636>, FunctionNoResult {}; // CXXConstructor Local
struct _d603: NamedDeclName<_s53> {}; // ParmVar that
struct _d604: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty642>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d605: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty636>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d606: CXXMethodDecl, FunctionDecl<_ty604, Pack<>>, FunctionInstance<_qty642>, FunctionResult<_qty643, _qty643>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d607: CXXMethodDecl, FunctionDecl<_ty604, Pack<>>, FunctionInstance<_qty642>, FunctionResult<_qty643, _qty643>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d608: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d609: NamedDeclName<_s52>, TypeDecl<_qty645> {}; // TemplateTypeParm S
struct _d610: CXXMethodDecl, FunctionDecl<_ty610, Pack<_d611>>, FunctionInstance<_qty642>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d611: NamedDeclName<_s53> {}; // ParmVar that
struct _d612: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d613: NamedDeclName<_s52>, TypeDecl<_qty650> {}; // TemplateTypeParm S
struct _d614: CXXMethodDecl, FunctionDecl<_ty614, Pack<_d615>>, FunctionInstance<_qty642>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d615: NamedDeclName<_s53> {}; // ParmVar that
struct _d616: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d617: NamedDeclName<_s52>, TypeDecl<_qty655> {}; // TemplateTypeParm S
struct _d618: CXXMethodDecl, FunctionDecl<_ty618, Pack<_d619>>, FunctionInstance<_qty642>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d619: NamedDeclName<_s53> {}; // ParmVar that
struct _d620: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d621: NamedDeclName<_s52>, TypeDecl<_qty660> {}; // TemplateTypeParm S
struct _d622: CXXMethodDecl, FunctionDecl<_ty622, Pack<_d623>>, FunctionInstance<_qty642>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d623: NamedDeclName<_s53> {}; // ParmVar that
struct _d624: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d625: NamedDeclName<_s52>, TypeDecl<_qty665> {}; // TemplateTypeParm S
struct _d626: CXXMethodDecl, FunctionDecl<_ty625, Pack<_d627>>, FunctionNoInstance, FunctionResult<_qty667, _qty667>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d627: NamedDeclName<_s53> {}; // ParmVar that
struct _d628: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d629: NamedDeclName<_s52>, TypeDecl<_qty669> {}; // TemplateTypeParm S
struct _d630: CXXMethodDecl, FunctionDecl<_ty628, Pack<>>, FunctionInstance<_qty642>, FunctionResult<_qty670, _qty670>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d631: CXXMethodDecl, FunctionDecl<_ty631, Pack<_d632, _d633>>, FunctionNoInstance, FunctionResult<_qty673, _qty673>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d632: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d633: NamedDeclName<_s53> {}; // ParmVar that
struct _d634: CXXMethodDecl, FunctionDecl<_ty636, Pack<_d635, _d636>>, FunctionNoInstance, FunctionResult<_qty678, _qty678>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d635: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d636: NamedDeclName<_s53> {}; // ParmVar that
struct _d637: NamedDeclName<_s64>, TypeDecl<_qty677> {}; // ClassTemplateSpecialization PersistentBase
struct _d638: CXXMethodDecl, FunctionDecl<_ty641, Pack<_d639, _d640>>, FunctionNoInstance, FunctionResult<_qty683, _qty683>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d639: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d640: NamedDeclName<_s53> {}; // ParmVar that
struct _d641: NamedDeclName<_s65>, TypeDecl<_qty682> {}; // ClassTemplateSpecialization TracedGlobal
struct _d642: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty644, Pack<_d643>>, FunctionInstance<_qty636>, FunctionNoResult {}; // CXXConstructor Local
struct _d643: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d644: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty646, Pack<_d645>>, FunctionInstance<_qty636>, FunctionNoResult {}; // CXXConstructor Local
struct _d645: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d646: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty636>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d647: NamedDeclName<_s51>, TypeDecl<_qty690> {}; // ClassTemplateSpecialization Local
struct _d648: NamedDeclName<_s51>, TypeDecl<_qty691> {}; // ClassTemplateSpecialization Local
struct _d649: NamedDeclName<_s51>, TypeDecl<_qty692> {}; // ClassTemplateSpecialization Local
struct _d650: NamedDeclName<_s51>, TypeDecl<_qty693> {}; // ClassTemplateSpecialization Local
struct _d651: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty694>, FunctionNoResult {}; // CXXConstructor Local
struct _d652: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d653: NamedDeclName<_s52>, TypeDecl<_qty695> {}; // TemplateTypeParm S
struct _d654: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty654, Pack<_d655>>, FunctionInstance<_qty694>, FunctionNoResult {}; // CXXConstructor Local
struct _d655: NamedDeclName<_s53> {}; // ParmVar that
struct _d656: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty656, Pack<_d657>>, FunctionInstance<_qty694>, FunctionNoResult {}; // CXXConstructor Local
struct _d657: NamedDeclName<_s53> {}; // ParmVar that
struct _d658: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty700>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d659: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty694>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d660: CXXMethodDecl, FunctionDecl<_ty658, Pack<>>, FunctionInstance<_qty700>, FunctionResult<_qty701, _qty701>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d661: CXXMethodDecl, FunctionDecl<_ty658, Pack<>>, FunctionInstance<_qty700>, FunctionResult<_qty701, _qty701>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d662: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d663: NamedDeclName<_s52>, TypeDecl<_qty703> {}; // TemplateTypeParm S
struct _d664: CXXMethodDecl, FunctionDecl<_ty664, Pack<_d665>>, FunctionInstance<_qty700>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d665: NamedDeclName<_s53> {}; // ParmVar that
struct _d666: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d667: NamedDeclName<_s52>, TypeDecl<_qty708> {}; // TemplateTypeParm S
struct _d668: CXXMethodDecl, FunctionDecl<_ty668, Pack<_d669>>, FunctionInstance<_qty700>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d669: NamedDeclName<_s53> {}; // ParmVar that
struct _d670: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d671: NamedDeclName<_s52>, TypeDecl<_qty713> {}; // TemplateTypeParm S
struct _d672: CXXMethodDecl, FunctionDecl<_ty672, Pack<_d673>>, FunctionInstance<_qty700>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d673: NamedDeclName<_s53> {}; // ParmVar that
struct _d674: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d675: NamedDeclName<_s52>, TypeDecl<_qty718> {}; // TemplateTypeParm S
struct _d676: CXXMethodDecl, FunctionDecl<_ty676, Pack<_d677>>, FunctionInstance<_qty700>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d677: NamedDeclName<_s53> {}; // ParmVar that
struct _d678: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d679: NamedDeclName<_s52>, TypeDecl<_qty723> {}; // TemplateTypeParm S
struct _d680: CXXMethodDecl, FunctionDecl<_ty679, Pack<_d681>>, FunctionNoInstance, FunctionResult<_qty725, _qty725>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d681: NamedDeclName<_s53> {}; // ParmVar that
struct _d682: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d683: NamedDeclName<_s52>, TypeDecl<_qty727> {}; // TemplateTypeParm S
struct _d684: CXXMethodDecl, FunctionDecl<_ty682, Pack<>>, FunctionInstance<_qty700>, FunctionResult<_qty728, _qty728>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d685: CXXMethodDecl, FunctionDecl<_ty685, Pack<_d686, _d687>>, FunctionNoInstance, FunctionResult<_qty731, _qty731>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d686: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d687: NamedDeclName<_s53> {}; // ParmVar that
struct _d688: CXXMethodDecl, FunctionDecl<_ty690, Pack<_d689, _d690>>, FunctionNoInstance, FunctionResult<_qty736, _qty736>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d689: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d690: NamedDeclName<_s53> {}; // ParmVar that
struct _d691: NamedDeclName<_s64>, TypeDecl<_qty735> {}; // ClassTemplateSpecialization PersistentBase
struct _d692: CXXMethodDecl, FunctionDecl<_ty695, Pack<_d693, _d694>>, FunctionNoInstance, FunctionResult<_qty741, _qty741>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d693: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d694: NamedDeclName<_s53> {}; // ParmVar that
struct _d695: NamedDeclName<_s65>, TypeDecl<_qty740> {}; // ClassTemplateSpecialization TracedGlobal
struct _d696: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty698, Pack<_d697>>, FunctionInstance<_qty694>, FunctionNoResult {}; // CXXConstructor Local
struct _d697: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d698: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty700, Pack<_d699>>, FunctionInstance<_qty694>, FunctionNoResult {}; // CXXConstructor Local
struct _d699: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d700: NamedDeclName<_s51>, TypeDecl<_qty748> {}; // ClassTemplateSpecialization Local
struct _d701: NamedDeclName<_s51>, TypeDecl<_qty749> {}; // ClassTemplateSpecialization Local
struct _d702: NamedDeclName<_s51>, TypeDecl<_qty750> {}; // ClassTemplateSpecialization Local
struct _d703: NamedDeclName<_s51>, TypeDecl<_qty751> {}; // ClassTemplateSpecialization Local
struct _d704: NamedDeclName<_s51>, TypeDecl<_qty752> {}; // ClassTemplateSpecialization Local
struct _d705: NamedDeclName<_s51>, TypeDecl<_qty753> {}; // ClassTemplateSpecialization Local
struct _d706: NamedDeclName<_s51>, TypeDecl<_qty754> {}; // ClassTemplateSpecialization Local
struct _d707: NamedDeclName<_s51>, TypeDecl<_qty755> {}; // ClassTemplateSpecialization Local
struct _d708: NamedDeclName<_s51>, TypeDecl<_qty756> {}; // ClassTemplateSpecialization Local
struct _d709: NamedDeclName<_s51>, TypeDecl<_qty757> {}; // ClassTemplateSpecialization Local
struct _d710: NamedDeclName<_s51>, TypeDecl<_qty758> {}; // ClassTemplateSpecialization Local
struct _d711: NamedDeclName<_s51>, TypeDecl<_qty759> {}; // ClassTemplateSpecialization Local
struct _d712: NamedDeclName<_s51>, TypeDecl<_qty760> {}; // ClassTemplateSpecialization Local
struct _d713: NamedDeclName<_s51>, TypeDecl<_qty761> {}; // ClassTemplateSpecialization Local
struct _d714: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty762>, FunctionNoResult {}; // CXXConstructor Local
struct _d715: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d716: NamedDeclName<_s52>, TypeDecl<_qty763> {}; // TemplateTypeParm S
struct _d717: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty718, Pack<_d718>>, FunctionInstance<_qty762>, FunctionNoResult {}; // CXXConstructor Local
struct _d718: NamedDeclName<_s53> {}; // ParmVar that
struct _d719: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty720, Pack<_d720>>, FunctionInstance<_qty762>, FunctionNoResult {}; // CXXConstructor Local
struct _d720: NamedDeclName<_s53> {}; // ParmVar that
struct _d721: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty768>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d722: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty762>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d723: CXXMethodDecl, FunctionDecl<_ty722, Pack<>>, FunctionInstance<_qty768>, FunctionResult<_qty769, _qty769>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d724: CXXMethodDecl, FunctionDecl<_ty722, Pack<>>, FunctionInstance<_qty768>, FunctionResult<_qty769, _qty769>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d725: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d726: NamedDeclName<_s52>, TypeDecl<_qty771> {}; // TemplateTypeParm S
struct _d727: CXXMethodDecl, FunctionDecl<_ty728, Pack<_d728>>, FunctionInstance<_qty768>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d728: NamedDeclName<_s53> {}; // ParmVar that
struct _d729: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d730: NamedDeclName<_s52>, TypeDecl<_qty776> {}; // TemplateTypeParm S
struct _d731: CXXMethodDecl, FunctionDecl<_ty732, Pack<_d732>>, FunctionInstance<_qty768>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d732: NamedDeclName<_s53> {}; // ParmVar that
struct _d733: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d734: NamedDeclName<_s52>, TypeDecl<_qty781> {}; // TemplateTypeParm S
struct _d735: CXXMethodDecl, FunctionDecl<_ty736, Pack<_d736>>, FunctionInstance<_qty768>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d736: NamedDeclName<_s53> {}; // ParmVar that
struct _d737: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d738: NamedDeclName<_s52>, TypeDecl<_qty786> {}; // TemplateTypeParm S
struct _d739: CXXMethodDecl, FunctionDecl<_ty740, Pack<_d740>>, FunctionInstance<_qty768>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d740: NamedDeclName<_s53> {}; // ParmVar that
struct _d741: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d742: NamedDeclName<_s52>, TypeDecl<_qty791> {}; // TemplateTypeParm S
struct _d743: CXXMethodDecl, FunctionDecl<_ty743, Pack<_d744>>, FunctionNoInstance, FunctionResult<_qty793, _qty793>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d744: NamedDeclName<_s53> {}; // ParmVar that
struct _d745: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d746: NamedDeclName<_s52>, TypeDecl<_qty795> {}; // TemplateTypeParm S
struct _d747: CXXMethodDecl, FunctionDecl<_ty746, Pack<>>, FunctionInstance<_qty768>, FunctionResult<_qty796, _qty796>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d748: CXXMethodDecl, FunctionDecl<_ty749, Pack<_d749, _d750>>, FunctionNoInstance, FunctionResult<_qty799, _qty799>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d749: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d750: NamedDeclName<_s53> {}; // ParmVar that
struct _d751: CXXMethodDecl, FunctionDecl<_ty754, Pack<_d752, _d753>>, FunctionNoInstance, FunctionResult<_qty804, _qty804>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d752: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d753: NamedDeclName<_s53> {}; // ParmVar that
struct _d754: NamedDeclName<_s64>, TypeDecl<_qty803> {}; // ClassTemplateSpecialization PersistentBase
struct _d755: CXXMethodDecl, FunctionDecl<_ty759, Pack<_d756, _d757>>, FunctionNoInstance, FunctionResult<_qty809, _qty809>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d756: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d757: NamedDeclName<_s53> {}; // ParmVar that
struct _d758: NamedDeclName<_s65>, TypeDecl<_qty808> {}; // ClassTemplateSpecialization TracedGlobal
struct _d759: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty762, Pack<_d760>>, FunctionInstance<_qty762>, FunctionNoResult {}; // CXXConstructor Local
struct _d760: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d761: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty764, Pack<_d762>>, FunctionInstance<_qty762>, FunctionNoResult {}; // CXXConstructor Local
struct _d762: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d763: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty762>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d764: NamedDeclName<_s51>, TypeDecl<_qty816> {}; // ClassTemplateSpecialization Local
struct _d765: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty817>, FunctionNoResult {}; // CXXConstructor Local
struct _d766: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d767: NamedDeclName<_s52>, TypeDecl<_qty818> {}; // TemplateTypeParm S
struct _d768: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty769, Pack<_d769>>, FunctionInstance<_qty817>, FunctionNoResult {}; // CXXConstructor Local
struct _d769: NamedDeclName<_s53> {}; // ParmVar that
struct _d770: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty771, Pack<_d771>>, FunctionInstance<_qty817>, FunctionNoResult {}; // CXXConstructor Local
struct _d771: NamedDeclName<_s53> {}; // ParmVar that
struct _d772: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty823>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d773: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty817>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d774: CXXMethodDecl, FunctionDecl<_ty773, Pack<>>, FunctionInstance<_qty823>, FunctionResult<_qty824, _qty824>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d775: CXXMethodDecl, FunctionDecl<_ty773, Pack<>>, FunctionInstance<_qty823>, FunctionResult<_qty824, _qty824>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d776: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d777: NamedDeclName<_s52>, TypeDecl<_qty826> {}; // TemplateTypeParm S
struct _d778: CXXMethodDecl, FunctionDecl<_ty779, Pack<_d779>>, FunctionInstance<_qty823>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d779: NamedDeclName<_s53> {}; // ParmVar that
struct _d780: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d781: NamedDeclName<_s52>, TypeDecl<_qty831> {}; // TemplateTypeParm S
struct _d782: CXXMethodDecl, FunctionDecl<_ty783, Pack<_d783>>, FunctionInstance<_qty823>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d783: NamedDeclName<_s53> {}; // ParmVar that
struct _d784: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d785: NamedDeclName<_s52>, TypeDecl<_qty836> {}; // TemplateTypeParm S
struct _d786: CXXMethodDecl, FunctionDecl<_ty787, Pack<_d787>>, FunctionInstance<_qty823>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d787: NamedDeclName<_s53> {}; // ParmVar that
struct _d788: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d789: NamedDeclName<_s52>, TypeDecl<_qty841> {}; // TemplateTypeParm S
struct _d790: CXXMethodDecl, FunctionDecl<_ty791, Pack<_d791>>, FunctionInstance<_qty823>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d791: NamedDeclName<_s53> {}; // ParmVar that
struct _d792: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d793: NamedDeclName<_s52>, TypeDecl<_qty846> {}; // TemplateTypeParm S
struct _d794: CXXMethodDecl, FunctionDecl<_ty794, Pack<_d795>>, FunctionNoInstance, FunctionResult<_qty848, _qty848>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d795: NamedDeclName<_s53> {}; // ParmVar that
struct _d796: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d797: NamedDeclName<_s52>, TypeDecl<_qty850> {}; // TemplateTypeParm S
struct _d798: CXXMethodDecl, FunctionDecl<_ty797, Pack<>>, FunctionInstance<_qty823>, FunctionResult<_qty851, _qty851>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d799: CXXMethodDecl, FunctionDecl<_ty800, Pack<_d800, _d801>>, FunctionNoInstance, FunctionResult<_qty854, _qty854>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d800: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d801: NamedDeclName<_s53> {}; // ParmVar that
struct _d802: CXXMethodDecl, FunctionDecl<_ty805, Pack<_d803, _d804>>, FunctionNoInstance, FunctionResult<_qty859, _qty859>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d803: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d804: NamedDeclName<_s53> {}; // ParmVar that
struct _d805: NamedDeclName<_s64>, TypeDecl<_qty858> {}; // ClassTemplateSpecialization PersistentBase
struct _d806: CXXMethodDecl, FunctionDecl<_ty810, Pack<_d807, _d808>>, FunctionNoInstance, FunctionResult<_qty864, _qty864>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d807: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d808: NamedDeclName<_s53> {}; // ParmVar that
struct _d809: NamedDeclName<_s65>, TypeDecl<_qty863> {}; // ClassTemplateSpecialization TracedGlobal
struct _d810: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty813, Pack<_d811>>, FunctionInstance<_qty817>, FunctionNoResult {}; // CXXConstructor Local
struct _d811: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d812: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty815, Pack<_d813>>, FunctionInstance<_qty817>, FunctionNoResult {}; // CXXConstructor Local
struct _d813: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d814: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty817>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d815: NamedDeclName<_s51>, TypeDecl<_qty871> {}; // ClassTemplateSpecialization Local
struct _d816: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty872>, FunctionNoResult {}; // CXXConstructor Local
struct _d817: NamedDeclName<_s51> {}; // FunctionTemplate Local
struct _d818: NamedDeclName<_s52>, TypeDecl<_qty873> {}; // TemplateTypeParm S
struct _d819: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty820, Pack<_d820>>, FunctionInstance<_qty872>, FunctionNoResult {}; // CXXConstructor Local
struct _d820: NamedDeclName<_s53> {}; // ParmVar that
struct _d821: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty822, Pack<_d822>>, FunctionInstance<_qty872>, FunctionNoResult {}; // CXXConstructor Local
struct _d822: NamedDeclName<_s53> {}; // ParmVar that
struct _d823: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty878>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d824: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty872>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d825: CXXMethodDecl, FunctionDecl<_ty824, Pack<>>, FunctionInstance<_qty878>, FunctionResult<_qty879, _qty879>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d826: CXXMethodDecl, FunctionDecl<_ty824, Pack<>>, FunctionInstance<_qty878>, FunctionResult<_qty879, _qty879>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d827: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d828: NamedDeclName<_s52>, TypeDecl<_qty881> {}; // TemplateTypeParm S
struct _d829: CXXMethodDecl, FunctionDecl<_ty830, Pack<_d830>>, FunctionInstance<_qty878>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d830: NamedDeclName<_s53> {}; // ParmVar that
struct _d831: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d832: NamedDeclName<_s52>, TypeDecl<_qty886> {}; // TemplateTypeParm S
struct _d833: CXXMethodDecl, FunctionDecl<_ty834, Pack<_d834>>, FunctionInstance<_qty878>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d834: NamedDeclName<_s53> {}; // ParmVar that
struct _d835: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d836: NamedDeclName<_s52>, TypeDecl<_qty891> {}; // TemplateTypeParm S
struct _d837: CXXMethodDecl, FunctionDecl<_ty838, Pack<_d838>>, FunctionInstance<_qty878>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d838: NamedDeclName<_s53> {}; // ParmVar that
struct _d839: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d840: NamedDeclName<_s52>, TypeDecl<_qty896> {}; // TemplateTypeParm S
struct _d841: CXXMethodDecl, FunctionDecl<_ty842, Pack<_d842>>, FunctionInstance<_qty878>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d842: NamedDeclName<_s53> {}; // ParmVar that
struct _d843: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d844: NamedDeclName<_s52>, TypeDecl<_qty901> {}; // TemplateTypeParm S
struct _d845: CXXMethodDecl, FunctionDecl<_ty845, Pack<_d846>>, FunctionNoInstance, FunctionResult<_qty903, _qty903>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d846: NamedDeclName<_s53> {}; // ParmVar that
struct _d847: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d848: NamedDeclName<_s52>, TypeDecl<_qty905> {}; // TemplateTypeParm S
struct _d849: CXXMethodDecl, FunctionDecl<_ty848, Pack<>>, FunctionInstance<_qty878>, FunctionResult<_qty906, _qty906>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d850: CXXMethodDecl, FunctionDecl<_ty851, Pack<_d851, _d852>>, FunctionNoInstance, FunctionResult<_qty909, _qty909>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d851: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d852: NamedDeclName<_s53> {}; // ParmVar that
struct _d853: CXXMethodDecl, FunctionDecl<_ty856, Pack<_d854, _d855>>, FunctionNoInstance, FunctionResult<_qty914, _qty914>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d854: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d855: NamedDeclName<_s53> {}; // ParmVar that
struct _d856: NamedDeclName<_s64>, TypeDecl<_qty913> {}; // ClassTemplateSpecialization PersistentBase
struct _d857: CXXMethodDecl, FunctionDecl<_ty861, Pack<_d858, _d859>>, FunctionNoInstance, FunctionResult<_qty919, _qty919>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d858: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d859: NamedDeclName<_s53> {}; // ParmVar that
struct _d860: NamedDeclName<_s65>, TypeDecl<_qty918> {}; // ClassTemplateSpecialization TracedGlobal
struct _d861: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty864, Pack<_d862>>, FunctionInstance<_qty872>, FunctionNoResult {}; // CXXConstructor Local
struct _d862: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d863: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty866, Pack<_d864>>, FunctionInstance<_qty872>, FunctionNoResult {}; // CXXConstructor Local
struct _d864: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d865: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty872>, FunctionNoResult {}; // CXXDestructor ~Local
struct _d866: NamedDeclName<_s51>, TypeDecl<_qty926> {}; // ClassTemplateSpecialization Local
struct _d867: NamedDeclName<_s51>, TypeDecl<_qty927> {}; // ClassTemplateSpecialization Local
struct _d868: NamedDeclName<_s51>, TypeDecl<_qty928> {}; // ClassTemplateSpecialization Local
struct _d869: NamedDeclName<_s51>, TypeDecl<_qty929> {}; // ClassTemplateSpecialization Local
struct _d870: NamedDeclName<_s69> {}; // ClassTemplate MaybeLocal
struct _d871: NamedDeclName<_s21>, TypeDecl<_qty930> {}; // TemplateTypeParm T
struct _d872: NamedDeclName<_s69>, TypeDecl<_qty931> {}; // CXXRecord MaybeLocal
struct _d873: NamedDeclName<_s69>, TypeDecl<_qty932> {}; // ClassTemplateSpecialization MaybeLocal
struct _d874: NamedDeclName<_s69>, TypeDecl<_qty933> {}; // ClassTemplateSpecialization MaybeLocal
struct _d875: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty934>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d876: NamedDeclName<_s69> {}; // FunctionTemplate MaybeLocal
struct _d877: NamedDeclName<_s52>, TypeDecl<_qty935> {}; // TemplateTypeParm S
struct _d878: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty878, Pack<_d879>>, FunctionInstance<_qty934>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d879: NamedDeclName<_s53> {}; // ParmVar that
struct _d880: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty938>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d881: NamedDeclName<_s70> {}; // FunctionTemplate ToLocal
struct _d882: NamedDeclName<_s52>, TypeDecl<_qty939> {}; // TemplateTypeParm S
struct _d883: CXXMethodDecl, FunctionDecl<_ty883, Pack<_d884>>, FunctionInstance<_qty938>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s70> {}; // CXXMethod ToLocal
struct _d884: NamedDeclName<_s71> {}; // ParmVar out
struct _d885: CXXMethodDecl, FunctionDecl<_ty884, Pack<>>, FunctionInstance<_qty934>, FunctionResult<_qty943, _qty943>, NamedDeclName<_s72> {}; // CXXMethod ToLocalChecked
struct _d886: NamedDeclName<_s73> {}; // FunctionTemplate FromMaybe
struct _d887: NamedDeclName<_s52>, TypeDecl<_qty945> {}; // TemplateTypeParm S
struct _d888: CXXMethodDecl, FunctionDecl<_ty888, Pack<_d889>>, FunctionInstance<_qty938>, FunctionResult<_qty947, _qty947>, NamedDeclName<_s73> {}; // CXXMethod FromMaybe
struct _d889: NamedDeclName<_s74> {}; // ParmVar default_value
struct _d890: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty891, Pack<_d891>>, FunctionInstance<_qty934>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d891: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d892: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty893, Pack<_d893>>, FunctionInstance<_qty934>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d893: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d894: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty934>, FunctionNoResult {}; // CXXDestructor ~MaybeLocal
struct _d895: NamedDeclName<_s69>, TypeDecl<_qty954> {}; // ClassTemplateSpecialization MaybeLocal
struct _d896: NamedDeclName<_s69>, TypeDecl<_qty955> {}; // ClassTemplateSpecialization MaybeLocal
struct _d897: NamedDeclName<_s69>, TypeDecl<_qty956> {}; // ClassTemplateSpecialization MaybeLocal
struct _d898: NamedDeclName<_s69>, TypeDecl<_qty957> {}; // ClassTemplateSpecialization MaybeLocal
struct _d899: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty958>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d900: NamedDeclName<_s69> {}; // FunctionTemplate MaybeLocal
struct _d901: NamedDeclName<_s52>, TypeDecl<_qty959> {}; // TemplateTypeParm S
struct _d902: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty901, Pack<_d903>>, FunctionInstance<_qty958>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d903: NamedDeclName<_s53> {}; // ParmVar that
struct _d904: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty962>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d905: NamedDeclName<_s70> {}; // FunctionTemplate ToLocal
struct _d906: NamedDeclName<_s52>, TypeDecl<_qty963> {}; // TemplateTypeParm S
struct _d907: CXXMethodDecl, FunctionDecl<_ty906, Pack<_d908>>, FunctionInstance<_qty962>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s70> {}; // CXXMethod ToLocal
struct _d908: NamedDeclName<_s71> {}; // ParmVar out
struct _d909: CXXMethodDecl, FunctionDecl<_ty907, Pack<>>, FunctionInstance<_qty958>, FunctionResult<_qty967, _qty967>, NamedDeclName<_s72> {}; // CXXMethod ToLocalChecked
struct _d910: NamedDeclName<_s73> {}; // FunctionTemplate FromMaybe
struct _d911: NamedDeclName<_s52>, TypeDecl<_qty969> {}; // TemplateTypeParm S
struct _d912: CXXMethodDecl, FunctionDecl<_ty911, Pack<_d913>>, FunctionInstance<_qty962>, FunctionResult<_qty971, _qty971>, NamedDeclName<_s73> {}; // CXXMethod FromMaybe
struct _d913: NamedDeclName<_s74> {}; // ParmVar default_value
struct _d914: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty958>, FunctionNoResult {}; // CXXDestructor ~MaybeLocal
struct _d915: NamedDeclName<_s69>, TypeDecl<_qty973> {}; // ClassTemplateSpecialization MaybeLocal
struct _d916: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty974>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d917: NamedDeclName<_s69> {}; // FunctionTemplate MaybeLocal
struct _d918: NamedDeclName<_s52>, TypeDecl<_qty975> {}; // TemplateTypeParm S
struct _d919: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty917, Pack<_d920>>, FunctionInstance<_qty974>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d920: NamedDeclName<_s53> {}; // ParmVar that
struct _d921: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty978>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d922: NamedDeclName<_s70> {}; // FunctionTemplate ToLocal
struct _d923: NamedDeclName<_s52>, TypeDecl<_qty979> {}; // TemplateTypeParm S
struct _d924: CXXMethodDecl, FunctionDecl<_ty922, Pack<_d925>>, FunctionInstance<_qty978>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s70> {}; // CXXMethod ToLocal
struct _d925: NamedDeclName<_s71> {}; // ParmVar out
struct _d926: CXXMethodDecl, FunctionDecl<_ty923, Pack<>>, FunctionInstance<_qty974>, FunctionResult<_qty983, _qty983>, NamedDeclName<_s72> {}; // CXXMethod ToLocalChecked
struct _d927: NamedDeclName<_s73> {}; // FunctionTemplate FromMaybe
struct _d928: NamedDeclName<_s52>, TypeDecl<_qty985> {}; // TemplateTypeParm S
struct _d929: CXXMethodDecl, FunctionDecl<_ty927, Pack<_d930>>, FunctionInstance<_qty978>, FunctionResult<_qty987, _qty987>, NamedDeclName<_s73> {}; // CXXMethod FromMaybe
struct _d930: NamedDeclName<_s74> {}; // ParmVar default_value
struct _d931: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty974>, FunctionNoResult {}; // CXXDestructor ~MaybeLocal
struct _d932: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty930, Pack<_d933>>, FunctionInstance<_qty974>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d933: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d934: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty932, Pack<_d935>>, FunctionInstance<_qty974>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d935: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d936: NamedDeclName<_s69>, TypeDecl<_qty994> {}; // ClassTemplateSpecialization MaybeLocal
struct _d937: NamedDeclName<_s69>, TypeDecl<_qty995> {}; // ClassTemplateSpecialization MaybeLocal
struct _d938: NamedDeclName<_s69>, TypeDecl<_qty996> {}; // ClassTemplateSpecialization MaybeLocal
struct _d939: NamedDeclName<_s69>, TypeDecl<_qty997> {}; // ClassTemplateSpecialization MaybeLocal
struct _d940: NamedDeclName<_s69>, TypeDecl<_qty998> {}; // ClassTemplateSpecialization MaybeLocal
struct _d941: NamedDeclName<_s69>, TypeDecl<_qty999> {}; // ClassTemplateSpecialization MaybeLocal
struct _d942: NamedDeclName<_s69>, TypeDecl<_qty1000> {}; // ClassTemplateSpecialization MaybeLocal
struct _d943: NamedDeclName<_s69>, TypeDecl<_qty1001> {}; // ClassTemplateSpecialization MaybeLocal
struct _d944: NamedDeclName<_s69>, TypeDecl<_qty1002> {}; // ClassTemplateSpecialization MaybeLocal
struct _d945: NamedDeclName<_s69>, TypeDecl<_qty1003> {}; // ClassTemplateSpecialization MaybeLocal
struct _d946: NamedDeclName<_s69>, TypeDecl<_qty1004> {}; // ClassTemplateSpecialization MaybeLocal
struct _d947: NamedDeclName<_s69>, TypeDecl<_qty1005> {}; // ClassTemplateSpecialization MaybeLocal
struct _d948: NamedDeclName<_s69>, TypeDecl<_qty1006> {}; // ClassTemplateSpecialization MaybeLocal
struct _d949: NamedDeclName<_s69>, TypeDecl<_qty1007> {}; // ClassTemplateSpecialization MaybeLocal
struct _d950: NamedDeclName<_s69>, TypeDecl<_qty1008> {}; // ClassTemplateSpecialization MaybeLocal
struct _d951: NamedDeclName<_s69>, TypeDecl<_qty1009> {}; // ClassTemplateSpecialization MaybeLocal
struct _d952: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1010>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d953: NamedDeclName<_s69> {}; // FunctionTemplate MaybeLocal
struct _d954: NamedDeclName<_s52>, TypeDecl<_qty1011> {}; // TemplateTypeParm S
struct _d955: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty952, Pack<_d956>>, FunctionInstance<_qty1010>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d956: NamedDeclName<_s53> {}; // ParmVar that
struct _d957: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1014>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d958: NamedDeclName<_s70> {}; // FunctionTemplate ToLocal
struct _d959: NamedDeclName<_s52>, TypeDecl<_qty1015> {}; // TemplateTypeParm S
struct _d960: CXXMethodDecl, FunctionDecl<_ty957, Pack<_d961>>, FunctionInstance<_qty1014>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s70> {}; // CXXMethod ToLocal
struct _d961: NamedDeclName<_s71> {}; // ParmVar out
struct _d962: CXXMethodDecl, FunctionDecl<_ty958, Pack<>>, FunctionInstance<_qty1010>, FunctionResult<_qty1019, _qty1019>, NamedDeclName<_s72> {}; // CXXMethod ToLocalChecked
struct _d963: NamedDeclName<_s73> {}; // FunctionTemplate FromMaybe
struct _d964: NamedDeclName<_s52>, TypeDecl<_qty1021> {}; // TemplateTypeParm S
struct _d965: CXXMethodDecl, FunctionDecl<_ty962, Pack<_d966>>, FunctionInstance<_qty1014>, FunctionResult<_qty1023, _qty1023>, NamedDeclName<_s73> {}; // CXXMethod FromMaybe
struct _d966: NamedDeclName<_s74> {}; // ParmVar default_value
struct _d967: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty965, Pack<_d968>>, FunctionInstance<_qty1010>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d968: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d969: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty967, Pack<_d970>>, FunctionInstance<_qty1010>, FunctionNoResult {}; // CXXConstructor MaybeLocal
struct _d970: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d971: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty1010>, FunctionNoResult {}; // CXXDestructor ~MaybeLocal
struct _d972: NamedDeclName<_s69>, TypeDecl<_qty1030> {}; // ClassTemplateSpecialization MaybeLocal
struct _d973: NamedDeclName<_s75> {}; // ClassTemplate Eternal
struct _d974: NamedDeclName<_s21>, TypeDecl<_qty1031> {}; // TemplateTypeParm T
struct _d975: NamedDeclName<_s75>, TypeDecl<_qty1032> {}; // CXXRecord Eternal
struct _d976: NamedDeclName<_s76> {}; // ClassTemplate NonCopyablePersistentTraits
struct _d977: NamedDeclName<_s21>, TypeDecl<_qty1033> {}; // TemplateTypeParm T
struct _d978: NamedDeclName<_s76>, TypeDecl<_qty1034> {}; // CXXRecord NonCopyablePersistentTraits
struct _d979: NamedDeclName<_s76>, TypeDecl<_qty1035> {}; // ClassTemplateSpecialization NonCopyablePersistentTraits
struct _d980: NamedDeclName<_s76>, TypeDecl<_qty1036> {}; // ClassTemplateSpecialization NonCopyablePersistentTraits
struct _d981: NamedDeclName<_s64> {}; // ClassTemplate PersistentBase
struct _d982: NamedDeclName<_s21>, TypeDecl<_qty1037> {}; // TemplateTypeParm T
struct _d983: NamedDeclName<_s64>, TypeDecl<_qty1038> {}; // CXXRecord PersistentBase
struct _d984: NamedDeclName<_s64>, TypeDecl<_qty1039> {}; // ClassTemplateSpecialization PersistentBase
struct _d985: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d986: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d987: NamedDeclName<_s52>, TypeDecl<_qty1041> {}; // TemplateTypeParm S
struct _d988: CXXMethodDecl, FunctionDecl<_ty982, Pack<_d989, _d990>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d989: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d990: NamedDeclName<_s78> {}; // ParmVar other
struct _d991: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d992: NamedDeclName<_s52>, TypeDecl<_qty1046> {}; // TemplateTypeParm S
struct _d993: CXXMethodDecl, FunctionDecl<_ty986, Pack<_d994, _d995>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d994: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d995: NamedDeclName<_s78> {}; // ParmVar other
struct _d996: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1051>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d997: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s79> {}; // CXXMethod Empty
struct _d998: CXXMethodDecl, FunctionDecl<_ty988, Pack<_d999>>, FunctionInstance<_qty1051>, FunctionResult<_qty1052, _qty1052>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d999: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1000: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1001: NamedDeclName<_s52>, TypeDecl<_qty1054> {}; // TemplateTypeParm S
struct _d1002: CXXMethodDecl, FunctionDecl<_ty993, Pack<_d1003>>, FunctionInstance<_qty1051>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1003: NamedDeclName<_s53> {}; // ParmVar that
struct _d1004: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1005: NamedDeclName<_s52>, TypeDecl<_qty1059> {}; // TemplateTypeParm S
struct _d1006: CXXMethodDecl, FunctionDecl<_ty997, Pack<_d1007>>, FunctionInstance<_qty1051>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1007: NamedDeclName<_s53> {}; // ParmVar that
struct _d1008: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1009: NamedDeclName<_s52>, TypeDecl<_qty1064> {}; // TemplateTypeParm S
struct _d1010: CXXMethodDecl, FunctionDecl<_ty1001, Pack<_d1011>>, FunctionInstance<_qty1051>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1011: NamedDeclName<_s53> {}; // ParmVar that
struct _d1012: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1013: NamedDeclName<_s52>, TypeDecl<_qty1069> {}; // TemplateTypeParm S
struct _d1014: CXXMethodDecl, FunctionDecl<_ty1005, Pack<_d1015>>, FunctionInstance<_qty1051>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1015: NamedDeclName<_s53> {}; // ParmVar that
struct _d1016: NamedDeclName<_s81> {}; // FunctionTemplate SetWeak
struct _d1017: NamedDeclName<_s82>, TypeDecl<_qty1074> {}; // TemplateTypeParm P
struct _d1018: CXXMethodDecl, FunctionDecl<_ty1010, Pack<_d1019, _d1020, _d1021>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s81> {}; // CXXMethod SetWeak
struct _d1019: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d1020: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1021: NamedDeclName<_s85> {}; // ParmVar type
struct _d1022: NamedDeclName<_s86>, TypeDecl<_qty1077> {}; // Enum WeakCallbackType
struct _d1023: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s81> {}; // CXXMethod SetWeak
struct _d1024: NamedDeclName<_s87> {}; // FunctionTemplate ClearWeak
struct _d1025: NamedDeclName<_s82>, TypeDecl<_qty1079> {}; // TemplateTypeParm P
struct _d1026: CXXMethodDecl, FunctionDecl<_ty1012, Pack<>>, FunctionInstance<_qty1040>, FunctionResult<_qty1080, _qty1080>, NamedDeclName<_s87> {}; // CXXMethod ClearWeak
struct _d1027: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s87> {}; // CXXMethod ClearWeak
struct _d1028: CXXMethodDecl, FunctionDecl<_ty1016, Pack<_d1029>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s88> {}; // CXXMethod AnnotateStrongRetainer
struct _d1029: NamedDeclName<_s89> {}; // ParmVar label
struct _d1030: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1051>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s90> {}; // CXXMethod IsWeak
struct _d1031: CXXMethodDecl, FunctionDecl<_ty1019, Pack<_d1032>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s91> {}; // CXXMethod SetWrapperClassId
struct _d1032: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d1033: CXXMethodDecl, FunctionDecl<_ty1020, Pack<>>, FunctionInstance<_qty1051>, FunctionResult<_qty1085, _qty1085>, NamedDeclName<_s93> {}; // CXXMethod WrapperClassId
struct _d1034: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1022, Pack<_d1035>>, FunctionInstance<_qty1040>, FunctionNoResult {}; // CXXConstructor PersistentBase
struct _d1035: NamedDeclName<_s78> {}; // ParmVar other
struct _d1036: CXXMethodDecl, FunctionDecl<_ty1022, Pack<_d1037>>, FunctionInstance<_qty1040>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1037: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1038: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1039: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d1040: NamedDeclName<_s52>, TypeDecl<_qty1093> {}; // TemplateTypeParm S
struct _d1041: CXXMethodDecl, FunctionDecl<_ty1027, Pack<_d1042, _d1043>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1042: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1043: NamedDeclName<_s78> {}; // ParmVar other
struct _d1044: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d1045: NamedDeclName<_s52>, TypeDecl<_qty1098> {}; // TemplateTypeParm S
struct _d1046: CXXMethodDecl, FunctionDecl<_ty1031, Pack<_d1047, _d1048>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1047: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1048: NamedDeclName<_s78> {}; // ParmVar other
struct _d1049: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1103>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d1050: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s79> {}; // CXXMethod Empty
struct _d1051: CXXMethodDecl, FunctionDecl<_ty1033, Pack<_d1052>>, FunctionInstance<_qty1103>, FunctionResult<_qty1104, _qty1104>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d1052: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1053: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1054: NamedDeclName<_s52>, TypeDecl<_qty1106> {}; // TemplateTypeParm S
struct _d1055: CXXMethodDecl, FunctionDecl<_ty1038, Pack<_d1056>>, FunctionInstance<_qty1103>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1056: NamedDeclName<_s53> {}; // ParmVar that
struct _d1057: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1058: NamedDeclName<_s52>, TypeDecl<_qty1111> {}; // TemplateTypeParm S
struct _d1059: CXXMethodDecl, FunctionDecl<_ty1042, Pack<_d1060>>, FunctionInstance<_qty1103>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1060: NamedDeclName<_s53> {}; // ParmVar that
struct _d1061: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1062: NamedDeclName<_s52>, TypeDecl<_qty1116> {}; // TemplateTypeParm S
struct _d1063: CXXMethodDecl, FunctionDecl<_ty1046, Pack<_d1064>>, FunctionInstance<_qty1103>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1064: NamedDeclName<_s53> {}; // ParmVar that
struct _d1065: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1066: NamedDeclName<_s52>, TypeDecl<_qty1121> {}; // TemplateTypeParm S
struct _d1067: CXXMethodDecl, FunctionDecl<_ty1050, Pack<_d1068>>, FunctionInstance<_qty1103>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1068: NamedDeclName<_s53> {}; // ParmVar that
struct _d1069: NamedDeclName<_s81> {}; // FunctionTemplate SetWeak
struct _d1070: NamedDeclName<_s82>, TypeDecl<_qty1126> {}; // TemplateTypeParm P
struct _d1071: CXXMethodDecl, FunctionDecl<_ty1054, Pack<_d1072, _d1073, _d1074>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s81> {}; // CXXMethod SetWeak
struct _d1072: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d1073: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1074: NamedDeclName<_s85> {}; // ParmVar type
struct _d1075: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s81> {}; // CXXMethod SetWeak
struct _d1076: NamedDeclName<_s87> {}; // FunctionTemplate ClearWeak
struct _d1077: NamedDeclName<_s82>, TypeDecl<_qty1130> {}; // TemplateTypeParm P
struct _d1078: CXXMethodDecl, FunctionDecl<_ty1056, Pack<>>, FunctionInstance<_qty1092>, FunctionResult<_qty1131, _qty1131>, NamedDeclName<_s87> {}; // CXXMethod ClearWeak
struct _d1079: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s87> {}; // CXXMethod ClearWeak
struct _d1080: CXXMethodDecl, FunctionDecl<_ty1016, Pack<_d1081>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s88> {}; // CXXMethod AnnotateStrongRetainer
struct _d1081: NamedDeclName<_s89> {}; // ParmVar label
struct _d1082: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1103>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s90> {}; // CXXMethod IsWeak
struct _d1083: CXXMethodDecl, FunctionDecl<_ty1019, Pack<_d1084>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s91> {}; // CXXMethod SetWrapperClassId
struct _d1084: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d1085: CXXMethodDecl, FunctionDecl<_ty1020, Pack<>>, FunctionInstance<_qty1103>, FunctionResult<_qty1085, _qty1085>, NamedDeclName<_s93> {}; // CXXMethod WrapperClassId
struct _d1086: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1059, Pack<_d1087>>, FunctionInstance<_qty1092>, FunctionNoResult {}; // CXXConstructor PersistentBase
struct _d1087: NamedDeclName<_s78> {}; // ParmVar other
struct _d1088: CXXMethodDecl, FunctionDecl<_ty1059, Pack<_d1089>>, FunctionInstance<_qty1092>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1089: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1090: NamedDeclName<_s94> {}; // ClassTemplate Persistent
struct _d1091: NamedDeclName<_s21>, TypeDecl<_qty1136> {}; // TemplateTypeParm T
struct _d1092: NamedDeclName<_s95>, TypeDecl<_qty1137> {}; // TemplateTypeParm M
struct _d1093: NamedDeclName<_s94>, TypeDecl<_qty1138> {}; // CXXRecord Persistent
struct _d1094: NamedDeclName<_s94>, TypeDecl<_qty1139> {}; // ClassTemplateSpecialization Persistent
struct _d1095: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1140>, FunctionNoResult {}; // CXXConstructor Persistent
struct _d1096: NamedDeclName<_s94> {}; // FunctionTemplate Persistent
struct _d1097: NamedDeclName<_s52>, TypeDecl<_qty1141> {}; // TemplateTypeParm S
struct _d1098: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1067, Pack<_d1099, _d1100>>, FunctionInstance<_qty1140>, FunctionNoResult {}; // CXXConstructor Persistent
struct _d1099: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1100: NamedDeclName<_s53> {}; // ParmVar that
struct _d1101: NamedDeclName<_s94> {}; // FunctionTemplate Persistent
struct _d1102: NamedDeclName<_s52>, TypeDecl<_qty1144> {}; // TemplateTypeParm S
struct _d1103: NamedDeclName<_s96>, TypeDecl<_qty1145> {}; // TemplateTypeParm M2
struct _d1104: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1072, Pack<_d1105, _d1106>>, FunctionInstance<_qty1140>, FunctionNoResult {}; // CXXConstructor Persistent
struct _d1105: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1106: NamedDeclName<_s53> {}; // ParmVar that
struct _d1107: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1074, Pack<_d1108>>, FunctionInstance<_qty1140>, FunctionNoResult {}; // CXXConstructor Persistent
struct _d1108: NamedDeclName<_s53> {}; // ParmVar that
struct _d1109: NamedDeclName<_s94> {}; // FunctionTemplate Persistent
struct _d1110: NamedDeclName<_s52>, TypeDecl<_qty1153> {}; // TemplateTypeParm S
struct _d1111: NamedDeclName<_s96>, TypeDecl<_qty1154> {}; // TemplateTypeParm M2
struct _d1112: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1079, Pack<_d1113>>, FunctionInstance<_qty1140>, FunctionNoResult {}; // CXXConstructor Persistent
struct _d1113: NamedDeclName<_s53> {}; // ParmVar that
struct _d1114: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1082, Pack<_d1115>>, FunctionInstance<_qty1140>, FunctionNoResult {}; // CXXConstructor Persistent
struct _d1115: NamedDeclName<_s53> {}; // ParmVar that
struct _d1116: CXXMethodDecl, FunctionDecl<_ty1083, Pack<_d1117>>, FunctionInstance<_qty1140>, FunctionResult<_qty1162, _qty1139>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1117: NamedDeclName<_s53> {}; // ParmVar that
struct _d1118: NamedDeclName<_s67> {}; // FunctionTemplate operator=
struct _d1119: NamedDeclName<_s52>, TypeDecl<_qty1164> {}; // TemplateTypeParm S
struct _d1120: NamedDeclName<_s96>, TypeDecl<_qty1165> {}; // TemplateTypeParm M2
struct _d1121: CXXMethodDecl, FunctionDecl<_ty1089, Pack<_d1122>>, FunctionInstance<_qty1140>, FunctionResult<_qty1162, _qty1139>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1122: NamedDeclName<_s53> {}; // ParmVar that
struct _d1123: CXXMethodDecl, FunctionDecl<_ty1092, Pack<_d1124>>, FunctionInstance<_qty1140>, FunctionResult<_qty1162, _qty1139>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1124: NamedDeclName<_s53> {}; // ParmVar that
struct _d1125: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1093, Pack<>>, FunctionInstance<_qty1140>, FunctionNoResult {}; // CXXDestructor ~Persistent
struct _d1126: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d1127: NamedDeclName<_s52>, TypeDecl<_qty1174> {}; // TemplateTypeParm S
struct _d1128: CXXMethodDecl, FunctionDecl<_ty1097, Pack<_d1129>>, FunctionNoInstance, FunctionResult<_qty1178, _qty1179>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d1129: NamedDeclName<_s53> {}; // ParmVar that
struct _d1130: NamedDeclName<_s94>, TypeDecl<_qty1180> {}; // ClassTemplateSpecialization Persistent
struct _d1131: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d1132: NamedDeclName<_s52>, TypeDecl<_qty1182> {}; // TemplateTypeParm S
struct _d1133: CXXMethodDecl, FunctionDecl<_ty1102, Pack<>>, FunctionInstance<_qty1186>, FunctionResult<_qty1183, _qty1184>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d1134: NamedDeclName<_s94>, TypeDecl<_qty1187> {}; // ClassTemplateSpecialization Persistent
struct _d1135: NamedDeclName<_s97> {}; // ClassTemplate Global
struct _d1136: NamedDeclName<_s21>, TypeDecl<_qty1188> {}; // TemplateTypeParm T
struct _d1137: NamedDeclName<_s97>, TypeDecl<_qty1189> {}; // CXXRecord Global
struct _d1138: NamedDeclName<_s65> {}; // ClassTemplate TracedGlobal
struct _d1139: NamedDeclName<_s21>, TypeDecl<_qty1190> {}; // TemplateTypeParm T
struct _d1140: NamedDeclName<_s65>, TypeDecl<_qty1191> {}; // CXXRecord TracedGlobal
struct _d1141: NamedDeclName<_s65>, TypeDecl<_qty1192> {}; // ClassTemplateSpecialization TracedGlobal
struct _d1142: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1112, Pack<>>, FunctionInstance<_qty1194>, FunctionNoResult {}; // CXXConstructor TracedGlobal
struct _d1143: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1114, Pack<>>, FunctionInstance<_qty1194>, FunctionNoResult {}; // CXXDestructor ~TracedGlobal
struct _d1144: NamedDeclName<_s65> {}; // FunctionTemplate TracedGlobal
struct _d1145: NamedDeclName<_s52>, TypeDecl<_qty1196> {}; // TemplateTypeParm S
struct _d1146: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1117, Pack<_d1147, _d1148>>, FunctionInstance<_qty1194>, FunctionNoResult {}; // CXXConstructor TracedGlobal
struct _d1147: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1148: NamedDeclName<_s53> {}; // ParmVar that
struct _d1149: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1119, Pack<_d1150>>, FunctionInstance<_qty1194>, FunctionNoResult {}; // CXXConstructor TracedGlobal
struct _d1150: NamedDeclName<_s78> {}; // ParmVar other
struct _d1151: NamedDeclName<_s67> {}; // FunctionTemplate operator=
struct _d1152: NamedDeclName<_s52>, TypeDecl<_qty1201> {}; // TemplateTypeParm S
struct _d1153: CXXMethodDecl, FunctionDecl<_ty1123, Pack<_d1154>>, FunctionInstance<_qty1194>, FunctionResult<_qty1204, _qty1192>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1154: NamedDeclName<_s98> {}; // ParmVar rhs
struct _d1155: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1126, Pack<_d1156>>, FunctionInstance<_qty1194>, FunctionNoResult {}; // CXXConstructor TracedGlobal
struct _d1156: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1157: CXXMethodDecl, FunctionDecl<_ty1126, Pack<_d1158>>, FunctionInstance<_qty1194>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1158: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1159: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1209>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d1160: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1194>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1161: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d1162: NamedDeclName<_s52>, TypeDecl<_qty1210> {}; // TemplateTypeParm S
struct _d1163: CXXMethodDecl, FunctionDecl<_ty1131, Pack<_d1164, _d1165>>, FunctionInstance<_qty1194>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1164: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1165: NamedDeclName<_s78> {}; // ParmVar other
struct _d1166: CXXMethodDecl, FunctionDecl<_ty1132, Pack<_d1167>>, FunctionInstance<_qty1209>, FunctionResult<_qty1215, _qty1215>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d1167: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1168: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d1169: NamedDeclName<_s52>, TypeDecl<_qty1217> {}; // TemplateTypeParm S
struct _d1170: CXXMethodDecl, FunctionDecl<_ty1135, Pack<>>, FunctionInstance<_qty1209>, FunctionResult<_qty1218, _qty1219>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d1171: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1172: NamedDeclName<_s52>, TypeDecl<_qty1221> {}; // TemplateTypeParm S
struct _d1173: CXXMethodDecl, FunctionDecl<_ty1141, Pack<_d1174>>, FunctionInstance<_qty1209>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1174: NamedDeclName<_s53> {}; // ParmVar that
struct _d1175: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1176: NamedDeclName<_s52>, TypeDecl<_qty1226> {}; // TemplateTypeParm S
struct _d1177: CXXMethodDecl, FunctionDecl<_ty1145, Pack<_d1178>>, FunctionInstance<_qty1209>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1178: NamedDeclName<_s53> {}; // ParmVar that
struct _d1179: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1180: NamedDeclName<_s52>, TypeDecl<_qty1231> {}; // TemplateTypeParm S
struct _d1181: CXXMethodDecl, FunctionDecl<_ty1149, Pack<_d1182>>, FunctionInstance<_qty1209>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1182: NamedDeclName<_s53> {}; // ParmVar that
struct _d1183: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1184: NamedDeclName<_s52>, TypeDecl<_qty1236> {}; // TemplateTypeParm S
struct _d1185: CXXMethodDecl, FunctionDecl<_ty1153, Pack<_d1186>>, FunctionInstance<_qty1209>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1186: NamedDeclName<_s53> {}; // ParmVar that
struct _d1187: CXXMethodDecl, FunctionDecl<_ty1019, Pack<_d1188>>, FunctionInstance<_qty1194>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s91> {}; // CXXMethod SetWrapperClassId
struct _d1188: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d1189: CXXMethodDecl, FunctionDecl<_ty1020, Pack<>>, FunctionInstance<_qty1209>, FunctionResult<_qty1085, _qty1085>, NamedDeclName<_s93> {}; // CXXMethod WrapperClassId
struct _d1190: CXXMethodDecl, FunctionDecl<_ty1163, Pack<_d1191, _d1192>>, FunctionInstance<_qty1194>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s99> {}; // CXXMethod SetFinalizationCallback
struct _d1191: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d1192: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1193: NamedDeclName<_s100>, TypeDecl<_qty1245> {}; // ClassTemplateSpecialization WeakCallbackInfo
struct _d1194: NamedDeclName<_s101> {}; // ClassTemplate PersistentValueMap
struct _d1195: NamedDeclName<_s102>, TypeDecl<_qty1250> {}; // TemplateTypeParm K
struct _d1196: NamedDeclName<_s103>, TypeDecl<_qty1251> {}; // TemplateTypeParm V
struct _d1197: NamedDeclName<_s21>, TypeDecl<_qty1252> {}; // TemplateTypeParm T
struct _d1198: NamedDeclName<_s101>, TypeDecl<_qty1253> {}; // CXXRecord PersistentValueMap
struct _d1199: NamedDeclName<_s104> {}; // ClassTemplate PersistentValueMapBase
struct _d1200: NamedDeclName<_s102>, TypeDecl<_qty1254> {}; // TemplateTypeParm K
struct _d1201: NamedDeclName<_s103>, TypeDecl<_qty1255> {}; // TemplateTypeParm V
struct _d1202: NamedDeclName<_s21>, TypeDecl<_qty1256> {}; // TemplateTypeParm T
struct _d1203: NamedDeclName<_s104>, TypeDecl<_qty1257> {}; // CXXRecord PersistentValueMapBase
struct _d1204: NamedDeclName<_s105> {}; // ClassTemplate GlobalValueMap
struct _d1205: NamedDeclName<_s102>, TypeDecl<_qty1258> {}; // TemplateTypeParm K
struct _d1206: NamedDeclName<_s103>, TypeDecl<_qty1259> {}; // TemplateTypeParm V
struct _d1207: NamedDeclName<_s21>, TypeDecl<_qty1260> {}; // TemplateTypeParm T
struct _d1208: NamedDeclName<_s105>, TypeDecl<_qty1261> {}; // CXXRecord GlobalValueMap
struct _d1209: NamedDeclName<_s106> {}; // ClassTemplate PersistentValueVector
struct _d1210: NamedDeclName<_s103>, TypeDecl<_qty1262> {}; // TemplateTypeParm V
struct _d1211: NamedDeclName<_s21>, TypeDecl<_qty1263> {}; // TemplateTypeParm T
struct _d1212: NamedDeclName<_s106>, TypeDecl<_qty1264> {}; // CXXRecord PersistentValueVector
struct _d1213: NamedDeclName<_s107> {}; // ClassTemplate WeakCallbackObject
struct _d1214: NamedDeclName<_s21>, TypeDecl<_qty1265> {}; // TemplateTypeParm T
struct _d1215: NamedDeclName<_s82>, TypeDecl<_qty1266> {}; // TemplateTypeParm P
struct _d1216: NamedDeclName<_s107>, TypeDecl<_qty1267> {}; // CXXRecord WeakCallbackObject
struct _d1217: NamedDeclName<_s108> {}; // ClassTemplate FunctionCallbackInfo
struct _d1218: NamedDeclName<_s21>, TypeDecl<_qty1268> {}; // TemplateTypeParm T
struct _d1219: NamedDeclName<_s108>, TypeDecl<_qty1269> {}; // CXXRecord FunctionCallbackInfo
struct _d1220: NamedDeclName<_s108>, TypeDecl<_qty1270> {}; // ClassTemplateSpecialization FunctionCallbackInfo
struct _d1221: NamedDeclName<_s109> {}; // ClassTemplate PropertyCallbackInfo
struct _d1222: NamedDeclName<_s21>, TypeDecl<_qty1271> {}; // TemplateTypeParm T
struct _d1223: NamedDeclName<_s109>, TypeDecl<_qty1272> {}; // CXXRecord PropertyCallbackInfo
struct _d1224: NamedDeclName<_s109>, TypeDecl<_qty1273> {}; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1225: NamedDeclName<_s109>, TypeDecl<_qty1274> {}; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1226: NamedDeclName<_s109>, TypeDecl<_qty1275> {}; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1227: NamedDeclName<_s109>, TypeDecl<_qty1276> {}; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1228: NamedDeclName<_s109>, TypeDecl<_qty1277> {}; // ClassTemplateSpecialization PropertyCallbackInfo
struct _d1229: NamedDeclName<_s110>, TypeDecl<_qty1278> {}; // CXXRecord CallHandlerHelper
struct _d1230: NamedDeclName<_s111>, TypeDecl<_qty1279> {}; // CXXRecord EscapableHandleScope
struct _d1231: NamedDeclName<_s112> {}; // ClassTemplate ReturnValue
struct _d1232: NamedDeclName<_s21>, TypeDecl<_qty1280> {}; // TemplateTypeParm T
struct _d1233: NamedDeclName<_s112>, TypeDecl<_qty1281> {}; // CXXRecord ReturnValue
struct _d1234: NamedDeclName<_s113> {}; // Namespace debug
struct _d1235: NamedDeclName<_s114>, TypeDecl<_qty1282> {}; // CXXRecord ConsoleCallArguments
struct _d1236: NamedDeclName<_s21>, TypeDecl<_qty1283> {}; // TemplateTypeParm T
struct _d1237: NamedDeclName<_s51>, TypeDecl<_qty57> {}; // CXXRecord Local
struct _d1238: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1284>, FunctionNoResult {}; // CXXConstructor Local<T>
struct _d1239: NamedDeclName<_s115> {}; // FunctionTemplate Local<T>
struct _d1240: NamedDeclName<_s52>, TypeDecl<_qty1285> {}; // TemplateTypeParm S
struct _d1241: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1201, Pack<_d1242>>, FunctionInstance<_qty1284>, FunctionNoResult {}; // CXXConstructor Local<T>
struct _d1242: NamedDeclName<_s53> {}; // ParmVar that
struct _d1243: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1288>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d1244: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1284>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d1245: CXXMethodDecl, FunctionDecl<_ty1203, Pack<>>, FunctionInstance<_qty1288>, FunctionResult<_qty1289, _qty1289>, NamedDeclName<_s56> {}; // CXXMethod operator->
struct _d1246: CXXMethodDecl, FunctionDecl<_ty1203, Pack<>>, FunctionInstance<_qty1288>, FunctionResult<_qty1289, _qty1289>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d1247: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1248: NamedDeclName<_s52>, TypeDecl<_qty1291> {}; // TemplateTypeParm S
struct _d1249: CXXMethodDecl, FunctionDecl<_ty1208, Pack<_d1250>>, FunctionInstance<_qty1288>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1250: NamedDeclName<_s53> {}; // ParmVar that
struct _d1251: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1252: NamedDeclName<_s52>, TypeDecl<_qty1296> {}; // TemplateTypeParm S
struct _d1253: CXXMethodDecl, FunctionDecl<_ty1212, Pack<_d1254>>, FunctionInstance<_qty1288>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1254: NamedDeclName<_s53> {}; // ParmVar that
struct _d1255: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1256: NamedDeclName<_s52>, TypeDecl<_qty1301> {}; // TemplateTypeParm S
struct _d1257: CXXMethodDecl, FunctionDecl<_ty1216, Pack<_d1258>>, FunctionInstance<_qty1288>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1258: NamedDeclName<_s53> {}; // ParmVar that
struct _d1259: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1260: NamedDeclName<_s52>, TypeDecl<_qty1306> {}; // TemplateTypeParm S
struct _d1261: CXXMethodDecl, FunctionDecl<_ty1220, Pack<_d1262>>, FunctionInstance<_qty1288>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1262: NamedDeclName<_s53> {}; // ParmVar that
struct _d1263: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d1264: NamedDeclName<_s52>, TypeDecl<_qty1311> {}; // TemplateTypeParm S
struct _d1265: CXXMethodDecl, FunctionDecl<_ty1223, Pack<_d1266>>, FunctionNoInstance, FunctionResult<_qty1313, _qty1313>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d1266: NamedDeclName<_s53> {}; // ParmVar that
struct _d1267: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d1268: NamedDeclName<_s52>, TypeDecl<_qty1315> {}; // TemplateTypeParm S
struct _d1269: CXXMethodDecl, FunctionDecl<_ty1226, Pack<>>, FunctionInstance<_qty1288>, FunctionResult<_qty1316, _qty1316>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d1270: CXXMethodDecl, FunctionDecl<_ty1229, Pack<_d1271, _d1272>>, FunctionNoInstance, FunctionResult<_qty1319, _qty1319>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d1271: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1272: NamedDeclName<_s53> {}; // ParmVar that
struct _d1273: CXXMethodDecl, FunctionDecl<_ty1233, Pack<_d1274, _d1275>>, FunctionNoInstance, FunctionResult<_qty1324, _qty1324>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d1274: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1275: NamedDeclName<_s53> {}; // ParmVar that
struct _d1276: CXXMethodDecl, FunctionDecl<_ty1237, Pack<_d1277, _d1278>>, FunctionNoInstance, FunctionResult<_qty1329, _qty1329>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d1277: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1278: NamedDeclName<_s53> {}; // ParmVar that
struct _d1279: NamedDeclName<_s116> {}; // TypeAliasTemplate Handle
struct _d1280: NamedDeclName<_s116>, TypeDecl<_qty1331> {}; // TypeAlias Handle
struct _d1281: NamedDeclName<_s21>, TypeDecl<_qty1333> {}; // TemplateTypeParm T
struct _d1282: NamedDeclName<_s21>, TypeDecl<_qty1334> {}; // TemplateTypeParm T
struct _d1283: NamedDeclName<_s69>, TypeDecl<_qty931> {}; // CXXRecord MaybeLocal
struct _d1284: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1335>, FunctionNoResult {}; // CXXConstructor MaybeLocal<T>
struct _d1285: NamedDeclName<_s117> {}; // FunctionTemplate MaybeLocal<T>
struct _d1286: NamedDeclName<_s52>, TypeDecl<_qty1336> {}; // TemplateTypeParm S
struct _d1287: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1246, Pack<_d1288>>, FunctionInstance<_qty1335>, FunctionNoResult {}; // CXXConstructor MaybeLocal<T>
struct _d1288: NamedDeclName<_s53> {}; // ParmVar that
struct _d1289: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1339>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d1290: NamedDeclName<_s70> {}; // FunctionTemplate ToLocal
struct _d1291: NamedDeclName<_s52>, TypeDecl<_qty1340> {}; // TemplateTypeParm S
struct _d1292: CXXMethodDecl, FunctionDecl<_ty1251, Pack<_d1293>>, FunctionInstance<_qty1339>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s70> {}; // CXXMethod ToLocal
struct _d1293: NamedDeclName<_s71> {}; // ParmVar out
struct _d1294: CXXMethodDecl, FunctionDecl<_ty1252, Pack<>>, FunctionInstance<_qty1335>, FunctionResult<_qty1344, _qty1344>, NamedDeclName<_s72> {}; // CXXMethod ToLocalChecked
struct _d1295: NamedDeclName<_s73> {}; // FunctionTemplate FromMaybe
struct _d1296: NamedDeclName<_s52>, TypeDecl<_qty1346> {}; // TemplateTypeParm S
struct _d1297: CXXMethodDecl, FunctionDecl<_ty1256, Pack<_d1298>>, FunctionInstance<_qty1339>, FunctionResult<_qty1348, _qty1348>, NamedDeclName<_s73> {}; // CXXMethod FromMaybe
struct _d1298: NamedDeclName<_s74> {}; // ParmVar default_value
struct _d1299: NamedDeclName<_s21>, TypeDecl<_qty1350> {}; // TemplateTypeParm T
struct _d1300: NamedDeclName<_s75>, TypeDecl<_qty1032> {}; // CXXRecord Eternal
struct _d1301: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1351>, FunctionNoResult {}; // CXXConstructor Eternal<T>
struct _d1302: NamedDeclName<_s118> {}; // FunctionTemplate Eternal<T>
struct _d1303: NamedDeclName<_s52>, TypeDecl<_qty1352> {}; // TemplateTypeParm S
struct _d1304: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1262, Pack<_d1305, _d1306>>, FunctionInstance<_qty1351>, FunctionNoResult {}; // CXXConstructor Eternal<T>
struct _d1305: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1306: NamedDeclName<_s119> {}; // ParmVar handle
struct _d1307: CXXMethodDecl, FunctionDecl<_ty1263, Pack<_d1308>>, FunctionInstance<_qty1357>, FunctionResult<_qty1355, _qty1355>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d1308: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1309: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1357>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d1310: NamedDeclName<_s120> {}; // FunctionTemplate Set
struct _d1311: NamedDeclName<_s52>, TypeDecl<_qty1358> {}; // TemplateTypeParm S
struct _d1312: CXXMethodDecl, FunctionDecl<_ty1268, Pack<_d1313, _d1314>>, FunctionInstance<_qty1351>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d1313: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1314: NamedDeclName<_s119> {}; // ParmVar handle
struct _d1315: NamedDeclName<_s121> {}; // Var kInternalFieldsInWeakCallback
struct _d1316: NamedDeclName<_s122> {}; // Var kEmbedderFieldsInWeakCallback
struct _d1317: NamedDeclName<_s100> {}; // ClassTemplate WeakCallbackInfo
struct _d1318: NamedDeclName<_s21>, TypeDecl<_qty1363> {}; // TemplateTypeParm T
struct _d1319: NamedDeclName<_s100>, TypeDecl<_qty1364> {}; // CXXRecord WeakCallbackInfo
struct _d1320: NamedDeclName<_s100>, TypeDecl<_qty1364> {}; // CXXRecord WeakCallbackInfo
struct _d1321: NamedDeclName<_s123>, TypeDecl<_qty1365> {}; // Typedef Callback
struct _d1322: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1282, Pack<_d1323, _d1324, _d1325, _d1326>>, FunctionInstance<_qty1375>, FunctionNoResult {}; // CXXConstructor WeakCallbackInfo<T>
struct _d1323: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1324: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d1325: NamedDeclName<_s124> {}; // ParmVar embedder_fields
struct _d1326: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1327: CXXMethodDecl, FunctionDecl<_ty1284, Pack<>>, FunctionInstance<_qty1377>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d1328: CXXMethodDecl, FunctionDecl<_ty1286, Pack<>>, FunctionInstance<_qty1377>, FunctionResult<_qty1370, _qty1370>, NamedDeclName<_s126> {}; // CXXMethod GetParameter
struct _d1329: CXXMethodDecl, FunctionDecl<_ty1287, Pack<_d1330>>, FunctionInstance<_qty1377>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s127> {}; // CXXMethod GetInternalField
struct _d1330: NamedDeclName<_s128> {}; // ParmVar index
struct _d1331: CXXMethodDecl, FunctionDecl<_ty1288, Pack<_d1332>>, FunctionInstance<_qty1377>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s129> {}; // CXXMethod SetSecondPassCallback
struct _d1332: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1333: NamedDeclName<_s123>, TypeDecl<_qty1247> {}; // Typedef Callback
struct _d1334: NamedDeclName<_s130> {}; // ParmVar data
struct _d1335: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1292, Pack<_d1336, _d1337, _d1338, _d1339>>, FunctionInstance<_qty1384>, FunctionNoResult {}; // CXXConstructor WeakCallbackInfo
struct _d1336: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1337: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d1338: NamedDeclName<_s124> {}; // ParmVar embedder_fields
struct _d1339: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1340: CXXMethodDecl, FunctionDecl<_ty1284, Pack<>>, FunctionInstance<_qty1385>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d1341: CXXMethodDecl, FunctionDecl<_ty1295, Pack<>>, FunctionInstance<_qty1385>, FunctionResult<_qty1381, _qty1381>, NamedDeclName<_s126> {}; // CXXMethod GetParameter
struct _d1342: CXXMethodDecl, FunctionDecl<_ty1287, Pack<_d1343>>, FunctionInstance<_qty1385>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s127> {}; // CXXMethod GetInternalField
struct _d1343: NamedDeclName<_s128> {}; // ParmVar index
struct _d1344: CXXMethodDecl, FunctionDecl<_ty1296, Pack<_d1345>>, FunctionInstance<_qty1385>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s129> {}; // CXXMethod SetSecondPassCallback
struct _d1345: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1346: NamedDeclName<_s131> {}; // EnumConstant kParameter
struct _d1347: NamedDeclName<_s132> {}; // EnumConstant kInternalFields
struct _d1348: NamedDeclName<_s133> {}; // EnumConstant kFinalizer
struct _d1349: NamedDeclName<_s21>, TypeDecl<_qty1388> {}; // TemplateTypeParm T
struct _d1350: NamedDeclName<_s64>, TypeDecl<_qty1038> {}; // CXXRecord PersistentBase
struct _d1351: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1352: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d1353: NamedDeclName<_s52>, TypeDecl<_qty1390> {}; // TemplateTypeParm S
struct _d1354: CXXMethodDecl, FunctionDecl<_ty1302, Pack<_d1355, _d1356>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1355: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1356: NamedDeclName<_s78> {}; // ParmVar other
struct _d1357: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d1358: NamedDeclName<_s52>, TypeDecl<_qty1395> {}; // TemplateTypeParm S
struct _d1359: CXXMethodDecl, FunctionDecl<_ty1306, Pack<_d1360, _d1361>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1360: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1361: NamedDeclName<_s78> {}; // ParmVar other
struct _d1362: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1400>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d1363: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s79> {}; // CXXMethod Empty
struct _d1364: CXXMethodDecl, FunctionDecl<_ty1308, Pack<_d1365>>, FunctionInstance<_qty1400>, FunctionResult<_qty1401, _qty1401>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d1365: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1366: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1367: NamedDeclName<_s52>, TypeDecl<_qty1403> {}; // TemplateTypeParm S
struct _d1368: CXXMethodDecl, FunctionDecl<_ty1313, Pack<_d1369>>, FunctionInstance<_qty1400>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1369: NamedDeclName<_s53> {}; // ParmVar that
struct _d1370: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1371: NamedDeclName<_s52>, TypeDecl<_qty1408> {}; // TemplateTypeParm S
struct _d1372: CXXMethodDecl, FunctionDecl<_ty1317, Pack<_d1373>>, FunctionInstance<_qty1400>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1373: NamedDeclName<_s53> {}; // ParmVar that
struct _d1374: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1375: NamedDeclName<_s52>, TypeDecl<_qty1413> {}; // TemplateTypeParm S
struct _d1376: CXXMethodDecl, FunctionDecl<_ty1321, Pack<_d1377>>, FunctionInstance<_qty1400>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1377: NamedDeclName<_s53> {}; // ParmVar that
struct _d1378: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1379: NamedDeclName<_s52>, TypeDecl<_qty1418> {}; // TemplateTypeParm S
struct _d1380: CXXMethodDecl, FunctionDecl<_ty1325, Pack<_d1381>>, FunctionInstance<_qty1400>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1381: NamedDeclName<_s53> {}; // ParmVar that
struct _d1382: NamedDeclName<_s81> {}; // FunctionTemplate SetWeak
struct _d1383: NamedDeclName<_s82>, TypeDecl<_qty1423> {}; // TemplateTypeParm P
struct _d1384: CXXMethodDecl, FunctionDecl<_ty1329, Pack<_d1385, _d1386, _d1387>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s81> {}; // CXXMethod SetWeak
struct _d1385: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d1386: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1387: NamedDeclName<_s85> {}; // ParmVar type
struct _d1388: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s81> {}; // CXXMethod SetWeak
struct _d1389: NamedDeclName<_s87> {}; // FunctionTemplate ClearWeak
struct _d1390: NamedDeclName<_s82>, TypeDecl<_qty1427> {}; // TemplateTypeParm P
struct _d1391: CXXMethodDecl, FunctionDecl<_ty1331, Pack<>>, FunctionInstance<_qty1389>, FunctionResult<_qty1428, _qty1428>, NamedDeclName<_s87> {}; // CXXMethod ClearWeak
struct _d1392: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s87> {}; // CXXMethod ClearWeak
struct _d1393: CXXMethodDecl, FunctionDecl<_ty1016, Pack<_d1394>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s88> {}; // CXXMethod AnnotateStrongRetainer
struct _d1394: NamedDeclName<_s89> {}; // ParmVar label
struct _d1395: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1400>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s90> {}; // CXXMethod IsWeak
struct _d1396: CXXMethodDecl, FunctionDecl<_ty1019, Pack<_d1397>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s91> {}; // CXXMethod SetWrapperClassId
struct _d1397: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d1398: CXXMethodDecl, FunctionDecl<_ty1020, Pack<>>, FunctionInstance<_qty1400>, FunctionResult<_qty1085, _qty1085>, NamedDeclName<_s93> {}; // CXXMethod WrapperClassId
struct _d1399: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1334, Pack<_d1400>>, FunctionInstance<_qty1389>, FunctionNoResult {}; // CXXConstructor PersistentBase<T>
struct _d1400: NamedDeclName<_s78> {}; // ParmVar other
struct _d1401: CXXMethodDecl, FunctionDecl<_ty1334, Pack<_d1402>>, FunctionInstance<_qty1389>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1402: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1403: NamedDeclName<_s21>, TypeDecl<_qty1433> {}; // TemplateTypeParm T
struct _d1404: NamedDeclName<_s76>, TypeDecl<_qty1034> {}; // CXXRecord NonCopyablePersistentTraits
struct _d1405: NamedDeclName<_s134>, TypeDecl<_qty1434> {}; // Typedef NonCopyablePersistent
struct _d1406: NamedDeclName<_s135> {}; // Var kResetInDestructor
struct _d1407: NamedDeclName<_s136> {}; // FunctionTemplate Copy
struct _d1408: NamedDeclName<_s52>, TypeDecl<_qty1437> {}; // TemplateTypeParm S
struct _d1409: NamedDeclName<_s95>, TypeDecl<_qty1438> {}; // TemplateTypeParm M
struct _d1410: CXXMethodDecl, FunctionDecl<_ty1343, Pack<_d1411, _d1412>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s136> {}; // CXXMethod Copy
struct _d1411: NamedDeclName<_s137> {}; // ParmVar source
struct _d1412: NamedDeclName<_s138> {}; // ParmVar dest
struct _d1413: NamedDeclName<_s139> {}; // FunctionTemplate Uncompilable
struct _d1414: NamedDeclName<_s140>, TypeDecl<_qty1444> {}; // TemplateTypeParm O
struct _d1415: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s139> {}; // CXXMethod Uncompilable
struct _d1416: NamedDeclName<_s141> {}; // ClassTemplate CopyablePersistentTraits
struct _d1417: NamedDeclName<_s21>, TypeDecl<_qty1445> {}; // TemplateTypeParm T
struct _d1418: NamedDeclName<_s141>, TypeDecl<_qty1446> {}; // CXXRecord CopyablePersistentTraits
struct _d1419: NamedDeclName<_s141>, TypeDecl<_qty1446> {}; // CXXRecord CopyablePersistentTraits
struct _d1420: NamedDeclName<_s142>, TypeDecl<_qty1447> {}; // Typedef CopyablePersistent
struct _d1421: NamedDeclName<_s135> {}; // Var kResetInDestructor
struct _d1422: NamedDeclName<_s136> {}; // FunctionTemplate Copy
struct _d1423: NamedDeclName<_s52>, TypeDecl<_qty1449> {}; // TemplateTypeParm S
struct _d1424: NamedDeclName<_s95>, TypeDecl<_qty1450> {}; // TemplateTypeParm M
struct _d1425: CXXMethodDecl, FunctionDecl<_ty1354, Pack<_d1426, _d1427>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s136> {}; // CXXMethod Copy
struct _d1426: NamedDeclName<_s137> {}; // ParmVar source
struct _d1427: NamedDeclName<_s138> {}; // ParmVar dest
struct _d1428: NamedDeclName<_s141>, TypeDecl<_qty1456> {}; // ClassTemplateSpecialization CopyablePersistentTraits
struct _d1429: NamedDeclName<_s21>, TypeDecl<_qty1457> {}; // TemplateTypeParm T
struct _d1430: NamedDeclName<_s95>, TypeDecl<_qty1458> {}; // TemplateTypeParm M
struct _d1431: NamedDeclName<_s94>, TypeDecl<_qty1138> {}; // CXXRecord Persistent
struct _d1432: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1459>, FunctionNoResult {}; // CXXConstructor Persistent<T, M>
struct _d1433: NamedDeclName<_s143> {}; // FunctionTemplate Persistent<T, M>
struct _d1434: NamedDeclName<_s52>, TypeDecl<_qty1460> {}; // TemplateTypeParm S
struct _d1435: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1361, Pack<_d1436, _d1437>>, FunctionInstance<_qty1459>, FunctionNoResult {}; // CXXConstructor Persistent<T, M>
struct _d1436: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1437: NamedDeclName<_s53> {}; // ParmVar that
struct _d1438: NamedDeclName<_s143> {}; // FunctionTemplate Persistent<T, M>
struct _d1439: NamedDeclName<_s52>, TypeDecl<_qty1463> {}; // TemplateTypeParm S
struct _d1440: NamedDeclName<_s96>, TypeDecl<_qty1464> {}; // TemplateTypeParm M2
struct _d1441: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1366, Pack<_d1442, _d1443>>, FunctionInstance<_qty1459>, FunctionNoResult {}; // CXXConstructor Persistent<T, M>
struct _d1442: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1443: NamedDeclName<_s53> {}; // ParmVar that
struct _d1444: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1368, Pack<_d1445>>, FunctionInstance<_qty1459>, FunctionNoResult {}; // CXXConstructor Persistent<T, M>
struct _d1445: NamedDeclName<_s53> {}; // ParmVar that
struct _d1446: NamedDeclName<_s143> {}; // FunctionTemplate Persistent<T, M>
struct _d1447: NamedDeclName<_s52>, TypeDecl<_qty1472> {}; // TemplateTypeParm S
struct _d1448: NamedDeclName<_s96>, TypeDecl<_qty1473> {}; // TemplateTypeParm M2
struct _d1449: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1373, Pack<_d1450>>, FunctionInstance<_qty1459>, FunctionNoResult {}; // CXXConstructor Persistent<T, M>
struct _d1450: NamedDeclName<_s53> {}; // ParmVar that
struct _d1451: CXXMethodDecl, FunctionDecl<_ty1374, Pack<_d1452>>, FunctionInstance<_qty1459>, FunctionResult<_qty1478, _qty1138>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1452: NamedDeclName<_s53> {}; // ParmVar that
struct _d1453: NamedDeclName<_s67> {}; // FunctionTemplate operator=
struct _d1454: NamedDeclName<_s52>, TypeDecl<_qty1480> {}; // TemplateTypeParm S
struct _d1455: NamedDeclName<_s96>, TypeDecl<_qty1481> {}; // TemplateTypeParm M2
struct _d1456: CXXMethodDecl, FunctionDecl<_ty1380, Pack<_d1457>>, FunctionInstance<_qty1459>, FunctionResult<_qty1478, _qty1138>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1457: NamedDeclName<_s53> {}; // ParmVar that
struct _d1458: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1459>, FunctionNoResult {}; // CXXDestructor ~Persistent<T, M>
struct _d1459: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d1460: NamedDeclName<_s52>, TypeDecl<_qty1486> {}; // TemplateTypeParm S
struct _d1461: CXXMethodDecl, FunctionDecl<_ty1384, Pack<_d1462>>, FunctionNoInstance, FunctionResult<_qty1490, _qty1491>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d1462: NamedDeclName<_s53> {}; // ParmVar that
struct _d1463: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d1464: NamedDeclName<_s52>, TypeDecl<_qty1493> {}; // TemplateTypeParm S
struct _d1465: CXXMethodDecl, FunctionDecl<_ty1388, Pack<>>, FunctionInstance<_qty1497>, FunctionResult<_qty1494, _qty1495>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d1466: NamedDeclName<_s21>, TypeDecl<_qty1498> {}; // TemplateTypeParm T
struct _d1467: NamedDeclName<_s97>, TypeDecl<_qty1189> {}; // CXXRecord Global
struct _d1468: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1499>, FunctionNoResult {}; // CXXConstructor Global<T>
struct _d1469: NamedDeclName<_s144> {}; // FunctionTemplate Global<T>
struct _d1470: NamedDeclName<_s52>, TypeDecl<_qty1500> {}; // TemplateTypeParm S
struct _d1471: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1396, Pack<_d1472, _d1473>>, FunctionInstance<_qty1499>, FunctionNoResult {}; // CXXConstructor Global<T>
struct _d1472: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1473: NamedDeclName<_s53> {}; // ParmVar that
struct _d1474: NamedDeclName<_s144> {}; // FunctionTemplate Global<T>
struct _d1475: NamedDeclName<_s52>, TypeDecl<_qty1503> {}; // TemplateTypeParm S
struct _d1476: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1400, Pack<_d1477, _d1478>>, FunctionInstance<_qty1499>, FunctionNoResult {}; // CXXConstructor Global<T>
struct _d1477: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1478: NamedDeclName<_s53> {}; // ParmVar that
struct _d1479: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1402, Pack<_d1480>>, FunctionInstance<_qty1499>, FunctionNoResult {}; // CXXConstructor Global<T>
struct _d1480: NamedDeclName<_s78> {}; // ParmVar other
struct _d1481: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1499>, FunctionNoResult {}; // CXXDestructor ~Global<T>
struct _d1482: NamedDeclName<_s67> {}; // FunctionTemplate operator=
struct _d1483: NamedDeclName<_s52>, TypeDecl<_qty1510> {}; // TemplateTypeParm S
struct _d1484: CXXMethodDecl, FunctionDecl<_ty1406, Pack<_d1485>>, FunctionInstance<_qty1499>, FunctionResult<_qty1513, _qty1189>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1485: NamedDeclName<_s98> {}; // ParmVar rhs
struct _d1486: CXXMethodDecl, FunctionDecl<_ty1408, Pack<>>, FunctionInstance<_qty1499>, FunctionResult<_qty1189, _qty1189>, NamedDeclName<_s145> {}; // CXXMethod Pass
struct _d1487: NamedDeclName<_s146>, TypeDecl<_qty1516> {}; // Typedef MoveOnlyTypeForCPP03
struct _d1488: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1411, Pack<_d1489>>, FunctionInstance<_qty1499>, FunctionNoResult {}; // CXXConstructor Global<T>
struct _d1489: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1490: CXXMethodDecl, FunctionDecl<_ty1411, Pack<_d1491>>, FunctionInstance<_qty1499>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1491: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1492: NamedDeclName<_s147> {}; // TypeAliasTemplate UniquePersistent
struct _d1493: NamedDeclName<_s147>, TypeDecl<_qty1520> {}; // TypeAlias UniquePersistent
struct _d1494: NamedDeclName<_s21>, TypeDecl<_qty1522> {}; // TemplateTypeParm T
struct _d1495: NamedDeclName<_s21>, TypeDecl<_qty1523> {}; // TemplateTypeParm T
struct _d1496: NamedDeclName<_s65>, TypeDecl<_qty1191> {}; // CXXRecord TracedGlobal
struct _d1497: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1524>, FunctionNoResult {}; // CXXConstructor TracedGlobal<T>
struct _d1498: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1524>, FunctionNoResult {}; // CXXDestructor ~TracedGlobal<T>
struct _d1499: NamedDeclName<_s148> {}; // FunctionTemplate TracedGlobal<T>
struct _d1500: NamedDeclName<_s52>, TypeDecl<_qty1525> {}; // TemplateTypeParm S
struct _d1501: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1419, Pack<_d1502, _d1503>>, FunctionInstance<_qty1524>, FunctionNoResult {}; // CXXConstructor TracedGlobal<T>
struct _d1502: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1503: NamedDeclName<_s53> {}; // ParmVar that
struct _d1504: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1421, Pack<_d1505>>, FunctionInstance<_qty1524>, FunctionNoResult {}; // CXXConstructor TracedGlobal<T>
struct _d1505: NamedDeclName<_s78> {}; // ParmVar other
struct _d1506: NamedDeclName<_s67> {}; // FunctionTemplate operator=
struct _d1507: NamedDeclName<_s52>, TypeDecl<_qty1530> {}; // TemplateTypeParm S
struct _d1508: CXXMethodDecl, FunctionDecl<_ty1425, Pack<_d1509>>, FunctionInstance<_qty1524>, FunctionResult<_qty1533, _qty1191>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1509: NamedDeclName<_s98> {}; // ParmVar rhs
struct _d1510: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1428, Pack<_d1511>>, FunctionInstance<_qty1524>, FunctionNoResult {}; // CXXConstructor TracedGlobal<T>
struct _d1511: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1512: CXXMethodDecl, FunctionDecl<_ty1428, Pack<_d1513>>, FunctionInstance<_qty1524>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1513: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1514: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1538>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s54> {}; // CXXMethod IsEmpty
struct _d1515: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1524>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1516: NamedDeclName<_s77> {}; // FunctionTemplate Reset
struct _d1517: NamedDeclName<_s52>, TypeDecl<_qty1539> {}; // TemplateTypeParm S
struct _d1518: CXXMethodDecl, FunctionDecl<_ty1433, Pack<_d1519, _d1520>>, FunctionInstance<_qty1524>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d1519: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1520: NamedDeclName<_s78> {}; // ParmVar other
struct _d1521: CXXMethodDecl, FunctionDecl<_ty1434, Pack<_d1522>>, FunctionInstance<_qty1538>, FunctionResult<_qty1544, _qty1544>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d1522: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1523: NamedDeclName<_s61> {}; // FunctionTemplate As
struct _d1524: NamedDeclName<_s52>, TypeDecl<_qty1546> {}; // TemplateTypeParm S
struct _d1525: CXXMethodDecl, FunctionDecl<_ty1437, Pack<>>, FunctionInstance<_qty1538>, FunctionResult<_qty1547, _qty1548>, NamedDeclName<_s61> {}; // CXXMethod As
struct _d1526: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1527: NamedDeclName<_s52>, TypeDecl<_qty1550> {}; // TemplateTypeParm S
struct _d1528: CXXMethodDecl, FunctionDecl<_ty1443, Pack<_d1529>>, FunctionInstance<_qty1538>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1529: NamedDeclName<_s53> {}; // ParmVar that
struct _d1530: NamedDeclName<_s58> {}; // FunctionTemplate operator==
struct _d1531: NamedDeclName<_s52>, TypeDecl<_qty1555> {}; // TemplateTypeParm S
struct _d1532: CXXMethodDecl, FunctionDecl<_ty1447, Pack<_d1533>>, FunctionInstance<_qty1538>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d1533: NamedDeclName<_s53> {}; // ParmVar that
struct _d1534: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1535: NamedDeclName<_s52>, TypeDecl<_qty1560> {}; // TemplateTypeParm S
struct _d1536: CXXMethodDecl, FunctionDecl<_ty1451, Pack<_d1537>>, FunctionInstance<_qty1538>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1537: NamedDeclName<_s53> {}; // ParmVar that
struct _d1538: NamedDeclName<_s59> {}; // FunctionTemplate operator!=
struct _d1539: NamedDeclName<_s52>, TypeDecl<_qty1565> {}; // TemplateTypeParm S
struct _d1540: CXXMethodDecl, FunctionDecl<_ty1455, Pack<_d1541>>, FunctionInstance<_qty1538>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d1541: NamedDeclName<_s53> {}; // ParmVar that
struct _d1542: CXXMethodDecl, FunctionDecl<_ty1019, Pack<_d1543>>, FunctionInstance<_qty1524>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s91> {}; // CXXMethod SetWrapperClassId
struct _d1543: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d1544: CXXMethodDecl, FunctionDecl<_ty1020, Pack<>>, FunctionInstance<_qty1538>, FunctionResult<_qty1085, _qty1085>, NamedDeclName<_s93> {}; // CXXMethod WrapperClassId
struct _d1545: CXXMethodDecl, FunctionDecl<_ty1163, Pack<_d1546, _d1547>>, FunctionInstance<_qty1524>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s99> {}; // CXXMethod SetFinalizationCallback
struct _d1546: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d1547: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1548: NamedDeclName<_s149>, TypeDecl<_qty1570> {}; // CXXRecord HandleScope
struct _d1549: NamedDeclName<_s149>, TypeDecl<_qty1570> {}; // CXXRecord HandleScope
struct _d1550: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d1551>>, FunctionInstance<_qty1572>, FunctionNoResult {}; // CXXConstructor HandleScope
struct _d1551: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1552: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1459, Pack<>>, FunctionInstance<_qty1572>, FunctionNoResult {}; // CXXDestructor ~HandleScope
struct _d1553: CXXMethodDecl, FunctionDecl<_ty1460, Pack<_d1554>>, FunctionNoInstance, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s150> {}; // CXXMethod NumberOfHandles
struct _d1554: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1555: CXXMethodDecl, FunctionDecl<_ty1284, Pack<>>, FunctionInstance<_qty1575>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d1556: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1463, Pack<_d1557>>, FunctionInstance<_qty1572>, FunctionNoResult {}; // CXXConstructor HandleScope
struct _d1557: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1558: CXXMethodDecl, FunctionDecl<_ty1463, Pack<_d1559>>, FunctionInstance<_qty1572>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1559: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1560: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1464, Pack<>>, FunctionInstance<_qty1572>, FunctionNoResult {}; // CXXConstructor HandleScope
struct _d1561: CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d1562>>, FunctionInstance<_qty1572>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s151> {}; // CXXMethod Initialize
struct _d1562: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1563: CXXMethodDecl, FunctionDecl<_ty1472, Pack<_d1564, _d1566>>, FunctionNoInstance, FunctionResult<_qty1586, _qty1586>, NamedDeclName<_s152> {}; // CXXMethod CreateHandle
struct _d1564: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1565: NamedDeclName<_s4>, TypeDecl<_qty1581> {}; // CXXRecord Isolate
struct _d1566: NamedDeclName<_s153> {}; // ParmVar value
struct _d1567: NamedDeclName<_s111>, TypeDecl<_qty1279> {}; // CXXRecord EscapableHandleScope
struct _d1568: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d1569>>, FunctionInstance<_qty1588>, FunctionNoResult {}; // CXXConstructor EscapableHandleScope
struct _d1569: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1570: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1475, Pack<>>, FunctionInstance<_qty1588>, FunctionNoResult {}; // CXXDestructor ~EscapableHandleScope
struct _d1571: NamedDeclName<_s154> {}; // FunctionTemplate Escape
struct _d1572: NamedDeclName<_s21>, TypeDecl<_qty1590> {}; // TemplateTypeParm T
struct _d1573: CXXMethodDecl, FunctionDecl<_ty1478, Pack<_d1574>>, FunctionInstance<_qty1588>, FunctionResult<_qty1592, _qty1592>, NamedDeclName<_s154> {}; // CXXMethod Escape
struct _d1574: NamedDeclName<_s153> {}; // ParmVar value
struct _d1575: NamedDeclName<_s155> {}; // FunctionTemplate EscapeMaybe
struct _d1576: NamedDeclName<_s21>, TypeDecl<_qty1594> {}; // TemplateTypeParm T
struct _d1577: CXXMethodDecl, FunctionDecl<_ty1482, Pack<_d1578>>, FunctionInstance<_qty1588>, FunctionResult<_qty1596, _qty1596>, NamedDeclName<_s155> {}; // CXXMethod EscapeMaybe
struct _d1578: NamedDeclName<_s153> {}; // ParmVar value
struct _d1579: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1485, Pack<_d1580>>, FunctionInstance<_qty1588>, FunctionNoResult {}; // CXXConstructor EscapableHandleScope
struct _d1580: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1581: CXXMethodDecl, FunctionDecl<_ty1485, Pack<_d1582>>, FunctionInstance<_qty1588>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1582: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1583: NamedDeclName<_s156>, TypeDecl<_qty1601> {}; // CXXRecord SealHandleScope
struct _d1584: NamedDeclName<_s156>, TypeDecl<_qty1601> {}; // CXXRecord SealHandleScope
struct _d1585: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d1586>>, FunctionInstance<_qty1602>, FunctionNoResult {}; // CXXConstructor SealHandleScope
struct _d1586: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1587: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1488, Pack<>>, FunctionInstance<_qty1602>, FunctionNoResult {}; // CXXDestructor ~SealHandleScope
struct _d1588: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1490, Pack<_d1589>>, FunctionInstance<_qty1602>, FunctionNoResult {}; // CXXConstructor SealHandleScope
struct _d1589: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1590: CXXMethodDecl, FunctionDecl<_ty1490, Pack<_d1591>>, FunctionInstance<_qty1602>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1591: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1592: NamedDeclName<_s3>, TypeDecl<_qty2> {}; // CXXRecord Data
struct _d1593: NamedDeclName<_s157>, TypeDecl<_qty1607> {}; // CXXRecord ScriptOrModule
struct _d1594: NamedDeclName<_s157>, TypeDecl<_qty1607> {}; // CXXRecord ScriptOrModule
struct _d1595: CXXMethodDecl, FunctionDecl<_ty1492, Pack<>>, FunctionInstance<_qty1610>, FunctionResult<_qty1608, _qty1608>, NamedDeclName<_s158> {}; // CXXMethod GetResourceName
struct _d1596: CXXMethodDecl, FunctionDecl<_ty1495, Pack<>>, FunctionInstance<_qty1610>, FunctionResult<_qty1611, _qty1611>, NamedDeclName<_s159> {}; // CXXMethod GetHostDefinedOptions
struct _d1597: NamedDeclName<_s45>, TypeDecl<_qty50> {}; // CXXRecord PrimitiveArray
struct _d1598: CXXMethodDecl, FunctionDecl<_ty1497, Pack<_d1599, _d1600>>, FunctionNoInstance, FunctionResult<_qty1613, _qty1613>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d1599: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1600: NamedDeclName<_s160> {}; // ParmVar length
struct _d1601: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1616>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s161> {}; // CXXMethod Length
struct _d1602: CXXMethodDecl, FunctionDecl<_ty1502, Pack<_d1603, _d1604, _d1605>>, FunctionInstance<_qty1619>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d1603: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1604: NamedDeclName<_s128> {}; // ParmVar index
struct _d1605: NamedDeclName<_s162> {}; // ParmVar item
struct _d1606: CXXMethodDecl, FunctionDecl<_ty1504, Pack<_d1607, _d1608>>, FunctionInstance<_qty1619>, FunctionResult<_qty1620, _qty1620>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d1607: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1608: NamedDeclName<_s128> {}; // ParmVar index
struct _d1609: NamedDeclName<_s163>, TypeDecl<_qty1622> {}; // CXXRecord ScriptOriginOptions
struct _d1610: NamedDeclName<_s163>, TypeDecl<_qty1622> {}; // CXXRecord ScriptOriginOptions
struct _d1611: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1507, Pack<_d1612, _d1613, _d1614, _d1615>>, FunctionInstance<_qty1624>, FunctionNoResult {}; // CXXConstructor ScriptOriginOptions
struct _d1612: NamedDeclName<_s164> {}; // ParmVar is_shared_cross_origin
struct _d1613: NamedDeclName<_s165> {}; // ParmVar is_opaque
struct _d1614: NamedDeclName<_s166> {}; // ParmVar is_wasm
struct _d1615: NamedDeclName<_s167> {}; // ParmVar is_module
struct _d1616: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1509, Pack<_d1617>>, FunctionInstance<_qty1624>, FunctionNoResult {}; // CXXConstructor ScriptOriginOptions
struct _d1617: NamedDeclName<_s168> {}; // ParmVar flags
struct _d1618: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1626>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s169> {}; // CXXMethod IsSharedCrossOrigin
struct _d1619: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1626>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s170> {}; // CXXMethod IsOpaque
struct _d1620: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1626>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s171> {}; // CXXMethod IsWasm
struct _d1621: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1626>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s172> {}; // CXXMethod IsModule
struct _d1622: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1626>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s173> {}; // CXXMethod Flags
struct _d1623: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1512, Pack<_d1624>>, FunctionInstance<_qty1624>, FunctionNoResult {}; // CXXConstructor ScriptOriginOptions
struct _d1624: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1625: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1514, Pack<_d1626>>, FunctionInstance<_qty1624>, FunctionNoResult {}; // CXXConstructor ScriptOriginOptions
struct _d1626: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1627: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty1624>, FunctionNoResult {}; // CXXDestructor ~ScriptOriginOptions
struct _d1628: CXXMethodDecl, FunctionDecl<_ty1515, Pack<_d1629>>, FunctionInstance<_qty1624>, FunctionResult<_qty1632, _qty1622>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1629: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1630: CXXMethodDecl, FunctionDecl<_ty1517, Pack<_d1631>>, FunctionInstance<_qty1624>, FunctionResult<_qty1632, _qty1622>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1631: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1632: NamedDeclName<_s174>, TypeDecl<_qty1635> {}; // CXXRecord ScriptOrigin
struct _d1633: NamedDeclName<_s174>, TypeDecl<_qty1635> {}; // CXXRecord ScriptOrigin
struct _d1634: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1529, Pack<_d1635, _d1636, _d1637, _d1638, _d1639, _d1640, _d1641, _d1642, _d1643, _d1644>>, FunctionInstance<_qty1647>, FunctionNoResult {}; // CXXConstructor ScriptOrigin
struct _d1635: NamedDeclName<_s175> {}; // ParmVar resource_name
struct _d1636: NamedDeclName<_s176> {}; // ParmVar resource_line_offset
struct _d1637: NamedDeclName<_s177> {}; // ParmVar resource_column_offset
struct _d1638: NamedDeclName<_s178> {}; // ParmVar resource_is_shared_cross_origin
struct _d1639: NamedDeclName<_s179> {}; // ParmVar script_id
struct _d1640: NamedDeclName<_s180> {}; // ParmVar source_map_url
struct _d1641: NamedDeclName<_s181> {}; // ParmVar resource_is_opaque
struct _d1642: NamedDeclName<_s166> {}; // ParmVar is_wasm
struct _d1643: NamedDeclName<_s167> {}; // ParmVar is_module
struct _d1644: NamedDeclName<_s182> {}; // ParmVar host_defined_options
struct _d1645: CXXMethodDecl, FunctionDecl<_ty1531, Pack<>>, FunctionInstance<_qty1650>, FunctionResult<_qty1648, _qty1648>, NamedDeclName<_s183> {}; // CXXMethod ResourceName
struct _d1646: CXXMethodDecl, FunctionDecl<_ty1534, Pack<>>, FunctionInstance<_qty1650>, FunctionResult<_qty1651, _qty1651>, NamedDeclName<_s184> {}; // CXXMethod ResourceLineOffset
struct _d1647: CXXMethodDecl, FunctionDecl<_ty1536, Pack<>>, FunctionInstance<_qty1650>, FunctionResult<_qty1653, _qty1653>, NamedDeclName<_s185> {}; // CXXMethod ResourceColumnOffset
struct _d1648: CXXMethodDecl, FunctionDecl<_ty1538, Pack<>>, FunctionInstance<_qty1650>, FunctionResult<_qty1655, _qty1655>, NamedDeclName<_s186> {}; // CXXMethod ScriptID
struct _d1649: CXXMethodDecl, FunctionDecl<_ty1540, Pack<>>, FunctionInstance<_qty1650>, FunctionResult<_qty1657, _qty1657>, NamedDeclName<_s187> {}; // CXXMethod SourceMapUrl
struct _d1650: CXXMethodDecl, FunctionDecl<_ty1542, Pack<>>, FunctionInstance<_qty1650>, FunctionResult<_qty1659, _qty1659>, NamedDeclName<_s188> {}; // CXXMethod HostDefinedOptions
struct _d1651: CXXMethodDecl, FunctionDecl<_ty1544, Pack<>>, FunctionInstance<_qty1650>, FunctionResult<_qty1622, _qty1622>, NamedDeclName<_s189> {}; // CXXMethod Options
struct _d1652: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1546, Pack<_d1653>>, FunctionInstance<_qty1647>, FunctionNoResult {}; // CXXConstructor ScriptOrigin
struct _d1653: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1654: CXXMethodDecl, FunctionDecl<_ty1548, Pack<_d1655>>, FunctionInstance<_qty1647>, FunctionResult<_qty1666, _qty1635>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1655: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1656: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1550, Pack<_d1657>>, FunctionInstance<_qty1647>, FunctionNoResult {}; // CXXConstructor ScriptOrigin
struct _d1657: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1658: NamedDeclName<_s68>, TypeDecl<_qty471> {}; // CXXRecord UnboundScript
struct _d1659: CXXMethodDecl, FunctionDecl<_ty1551, Pack<>>, FunctionInstance<_qty1671>, FunctionResult<_qty1669, _qty1669>, NamedDeclName<_s190> {}; // CXXMethod BindToCurrentContext
struct _d1660: CXXMethodDecl, FunctionDecl<_ty1554, Pack<>>, FunctionInstance<_qty1671>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s191> {}; // CXXMethod GetId
struct _d1661: CXXMethodDecl, FunctionDecl<_ty1555, Pack<>>, FunctionInstance<_qty1671>, FunctionResult<_qty1673, _qty1673>, NamedDeclName<_s192> {}; // CXXMethod GetScriptName
struct _d1662: CXXMethodDecl, FunctionDecl<_ty1557, Pack<>>, FunctionInstance<_qty1671>, FunctionResult<_qty1675, _qty1675>, NamedDeclName<_s193> {}; // CXXMethod GetSourceURL
struct _d1663: CXXMethodDecl, FunctionDecl<_ty1559, Pack<>>, FunctionInstance<_qty1671>, FunctionResult<_qty1677, _qty1677>, NamedDeclName<_s194> {}; // CXXMethod GetSourceMappingURL
struct _d1664: CXXMethodDecl, FunctionDecl<_ty1561, Pack<_d1665>>, FunctionInstance<_qty1671>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s195> {}; // CXXMethod GetLineNumber
struct _d1665: NamedDeclName<_s196> {}; // ParmVar code_pos
struct _d1666: NamedDeclName<_s197> {}; // Var kNoScriptId
struct _d1667: NamedDeclName<_s198>, TypeDecl<_qty1680> {}; // CXXRecord UnboundModuleScript
struct _d1668: NamedDeclName<_s198>, TypeDecl<_qty1680> {}; // CXXRecord UnboundModuleScript
struct _d1669: NamedDeclName<_s199>, TypeDecl<_qty1681> {}; // CXXRecord Location
struct _d1670: NamedDeclName<_s199>, TypeDecl<_qty1681> {}; // CXXRecord Location
struct _d1671: CXXMethodDecl, FunctionDecl<_ty1554, Pack<>>, FunctionInstance<_qty1682>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s195> {}; // CXXMethod GetLineNumber
struct _d1672: CXXMethodDecl, FunctionDecl<_ty1554, Pack<>>, FunctionInstance<_qty1682>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s200> {}; // CXXMethod GetColumnNumber
struct _d1673: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1565, Pack<_d1674, _d1675>>, FunctionInstance<_qty1682>, FunctionNoResult {}; // CXXConstructor Location
struct _d1674: NamedDeclName<_s201> {}; // ParmVar line_number
struct _d1675: NamedDeclName<_s202> {}; // ParmVar column_number
struct _d1676: NamedDeclName<_s203>, TypeDecl<_qty1684> {}; // CXXRecord Module
struct _d1677: NamedDeclName<_s203>, TypeDecl<_qty1684> {}; // CXXRecord Module
struct _d1678: NamedDeclName<_s204>, TypeDecl<_qty1685> {}; // Enum Status
struct _d1679: NamedDeclName<_s205> {}; // EnumConstant kUninstantiated
struct _d1680: NamedDeclName<_s206> {}; // EnumConstant kInstantiating
struct _d1681: NamedDeclName<_s207> {}; // EnumConstant kInstantiated
struct _d1682: NamedDeclName<_s208> {}; // EnumConstant kEvaluating
struct _d1683: NamedDeclName<_s209> {}; // EnumConstant kEvaluated
struct _d1684: NamedDeclName<_s210> {}; // EnumConstant kErrored
struct _d1685: CXXMethodDecl, FunctionDecl<_ty1568, Pack<>>, FunctionInstance<_qty1687>, FunctionResult<_qty1685, _qty1685>, NamedDeclName<_s211> {}; // CXXMethod GetStatus
struct _d1686: CXXMethodDecl, FunctionDecl<_ty1570, Pack<>>, FunctionInstance<_qty1687>, FunctionResult<_qty1688, _qty1688>, NamedDeclName<_s212> {}; // CXXMethod GetException
struct _d1687: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1687>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s213> {}; // CXXMethod GetModuleRequestsLength
struct _d1688: CXXMethodDecl, FunctionDecl<_ty1572, Pack<_d1689>>, FunctionInstance<_qty1687>, FunctionResult<_qty1690, _qty1690>, NamedDeclName<_s214> {}; // CXXMethod GetModuleRequest
struct _d1689: NamedDeclName<_s215> {}; // ParmVar i
struct _d1690: CXXMethodDecl, FunctionDecl<_ty1574, Pack<_d1691>>, FunctionInstance<_qty1687>, FunctionResult<_qty1681, _qty1681>, NamedDeclName<_s216> {}; // CXXMethod GetModuleRequestLocation
struct _d1691: NamedDeclName<_s215> {}; // ParmVar i
struct _d1692: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1687>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s217> {}; // CXXMethod GetIdentityHash
struct _d1693: NamedDeclName<_s218>, TypeDecl<_qty1693> {}; // Typedef ResolveCallback
struct _d1694: CXXMethodDecl, FunctionDecl<_ty1584, Pack<_d1695, _d1696>>, FunctionInstance<_qty1703>, FunctionResult<_qty1701, _qty1701>, NamedDeclName<_s219> {}; // CXXMethod InstantiateModule
struct _d1695: NamedDeclName<_s220> {}; // ParmVar context
struct _d1696: NamedDeclName<_s84> {}; // ParmVar callback
struct _d1697: CXXMethodDecl, FunctionDecl<_ty1588, Pack<_d1698>>, FunctionInstance<_qty1703>, FunctionResult<_qty1705, _qty1705>, NamedDeclName<_s221> {}; // CXXMethod Evaluate
struct _d1698: NamedDeclName<_s220> {}; // ParmVar context
struct _d1699: CXXMethodDecl, FunctionDecl<_ty1590, Pack<>>, FunctionInstance<_qty1703>, FunctionResult<_qty1707, _qty1707>, NamedDeclName<_s222> {}; // CXXMethod GetModuleNamespace
struct _d1700: CXXMethodDecl, FunctionDecl<_ty1592, Pack<>>, FunctionInstance<_qty1703>, FunctionResult<_qty1709, _qty1709>, NamedDeclName<_s223> {}; // CXXMethod GetUnboundModuleScript
struct _d1701: NamedDeclName<_s35>, TypeDecl<_qty40> {}; // CXXRecord Script
struct _d1702: CXXMethodDecl, FunctionDecl<_ty1596, Pack<_d1703, _d1704, _d1705>>, FunctionNoInstance, FunctionResult<_qty1713, _qty1713>, NamedDeclName<_s224> {}; // CXXMethod Compile
struct _d1703: NamedDeclName<_s220> {}; // ParmVar context
struct _d1704: NamedDeclName<_s137> {}; // ParmVar source
struct _d1705: NamedDeclName<_s225> {}; // ParmVar origin
struct _d1706: CXXMethodDecl, FunctionDecl<_ty1599, Pack<_d1707>>, FunctionInstance<_qty1718>, FunctionResult<_qty1716, _qty1716>, NamedDeclName<_s226> {}; // CXXMethod Run
struct _d1707: NamedDeclName<_s220> {}; // ParmVar context
struct _d1708: CXXMethodDecl, FunctionDecl<_ty1602, Pack<>>, FunctionInstance<_qty1718>, FunctionResult<_qty1719, _qty1719>, NamedDeclName<_s227> {}; // CXXMethod GetUnboundScript
struct _d1709: NamedDeclName<_s228>, TypeDecl<_qty1721> {}; // CXXRecord ScriptCompiler
struct _d1710: NamedDeclName<_s228>, TypeDecl<_qty1721> {}; // CXXRecord ScriptCompiler
struct _d1711: NamedDeclName<_s229>, TypeDecl<_qty1722> {}; // CXXRecord CachedData
struct _d1712: NamedDeclName<_s229>, TypeDecl<_qty1722> {}; // CXXRecord CachedData
struct _d1713: NamedDeclName<_s230>, TypeDecl<_qty1723> {}; // Enum BufferPolicy
struct _d1714: NamedDeclName<_s231> {}; // EnumConstant BufferNotOwned
struct _d1715: NamedDeclName<_s232> {}; // EnumConstant BufferOwned
struct _d1716: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1724>, FunctionNoResult {}; // CXXConstructor CachedData
struct _d1717: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1611, Pack<_d1718, _d1719, _d1720>>, FunctionInstance<_qty1724>, FunctionNoResult {}; // CXXConstructor CachedData
struct _d1718: NamedDeclName<_s130> {}; // ParmVar data
struct _d1719: NamedDeclName<_s160> {}; // ParmVar length
struct _d1720: NamedDeclName<_s233> {}; // ParmVar buffer_policy
struct _d1721: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty1724>, FunctionNoResult {}; // CXXDestructor ~CachedData
struct _d1722: NamedDeclName<_s130> {}; // Field data
struct _d1723: NamedDeclName<_s160> {}; // Field length
struct _d1724: NamedDeclName<_s234> {}; // Field rejected
struct _d1725: NamedDeclName<_s233> {}; // Field buffer_policy
struct _d1726: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1613, Pack<_d1727>>, FunctionInstance<_qty1724>, FunctionNoResult {}; // CXXConstructor CachedData
struct _d1727: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1728: CXXMethodDecl, FunctionDecl<_ty1614, Pack<_d1729>>, FunctionInstance<_qty1724>, FunctionResult<_qty1731, _qty1722>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1729: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1730: NamedDeclName<_s235>, TypeDecl<_qty1733> {}; // CXXRecord Source
struct _d1731: NamedDeclName<_s235>, TypeDecl<_qty1733> {}; // CXXRecord Source
struct _d1732: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1618, Pack<_d1733, _d1734, _d1735>>, FunctionInstance<_qty1736>, FunctionNoResult {}; // CXXConstructor Source
struct _d1733: NamedDeclName<_s236> {}; // ParmVar source_string
struct _d1734: NamedDeclName<_s225> {}; // ParmVar origin
struct _d1735: NamedDeclName<_s237> {}; // ParmVar cached_data
struct _d1736: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1621, Pack<_d1737, _d1738>>, FunctionInstance<_qty1736>, FunctionNoResult {}; // CXXConstructor Source
struct _d1737: NamedDeclName<_s236> {}; // ParmVar source_string
struct _d1738: NamedDeclName<_s237> {}; // ParmVar cached_data
struct _d1739: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty1736>, FunctionNoResult {}; // CXXDestructor ~Source
struct _d1740: CXXMethodDecl, FunctionDecl<_ty1622, Pack<>>, FunctionInstance<_qty1741>, FunctionResult<_qty1739, _qty1739>, NamedDeclName<_s238> {}; // CXXMethod GetCachedData
struct _d1741: CXXMethodDecl, FunctionDecl<_ty1625, Pack<>>, FunctionInstance<_qty1741>, FunctionResult<_qty1627, _qty1628>, NamedDeclName<_s239> {}; // CXXMethod GetResourceOptions
struct _d1742: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1627, Pack<_d1743>>, FunctionInstance<_qty1736>, FunctionNoResult {}; // CXXConstructor Source
struct _d1743: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1744: CXXMethodDecl, FunctionDecl<_ty1628, Pack<_d1745>>, FunctionInstance<_qty1736>, FunctionResult<_qty1746, _qty1733>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1745: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1746: NamedDeclName<_s240>, TypeDecl<_qty1748> {}; // CXXRecord ExternalSourceStream
struct _d1747: NamedDeclName<_s240>, TypeDecl<_qty1748> {}; // CXXRecord ExternalSourceStream
struct _d1748: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1631, Pack<>>, FunctionInstance<_qty1750>, FunctionNoResult {}; // CXXDestructor ~ExternalSourceStream
struct _d1749: CXXMethodDecl, FunctionDecl<_ty1634, Pack<_d1750>>, FunctionInstance<_qty1750>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s241> {}; // CXXMethod GetMoreData
struct _d1750: NamedDeclName<_s242> {}; // ParmVar src
struct _d1751: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty1750>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s243> {}; // CXXMethod SetBookmark
struct _d1752: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1750>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s244> {}; // CXXMethod ResetToBookmark
struct _d1753: CXXMethodDecl, FunctionDecl<_ty1638, Pack<_d1754>>, FunctionInstance<_qty1750>, FunctionResult<_qty1757, _qty1748>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1754: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1755: NamedDeclName<_s245>, TypeDecl<_qty1759> {}; // CXXRecord StreamedSource
struct _d1756: NamedDeclName<_s245>, TypeDecl<_qty1759> {}; // CXXRecord StreamedSource
struct _d1757: NamedDeclName<_s246>, TypeDecl<_qty1760> {}; // Enum Encoding
struct _d1758: NamedDeclName<_s247> {}; // EnumConstant ONE_BYTE
struct _d1759: NamedDeclName<_s248> {}; // EnumConstant TWO_BYTE
struct _d1760: NamedDeclName<_s249> {}; // EnumConstant UTF8
struct _d1761: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1642, Pack<_d1762, _d1763>>, FunctionInstance<_qty1762>, FunctionNoResult {}; // CXXConstructor StreamedSource
struct _d1762: NamedDeclName<_s250> {}; // ParmVar source_stream
struct _d1763: NamedDeclName<_s251> {}; // ParmVar encoding
struct _d1764: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1647, Pack<_d1765, _d1767>>, FunctionInstance<_qty1762>, FunctionNoResult {}; // CXXConstructor StreamedSource
struct _d1765: NamedDeclName<_s250> {}; // ParmVar source_stream
struct _d1766: NamedDeclName<_s252>, TypeDecl<_qty1765> {}; // ClassTemplateSpecialization unique_ptr
struct _d1767: NamedDeclName<_s251> {}; // ParmVar encoding
struct _d1768: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1648, Pack<>>, FunctionInstance<_qty1762>, FunctionNoResult {}; // CXXDestructor ~StreamedSource
struct _d1769: CXXMethodDecl, FunctionDecl<_ty1649, Pack<>>, FunctionInstance<_qty1771>, FunctionResult<_qty1768, _qty1768>, NamedDeclName<_s253> {}; // CXXMethod impl
struct _d1770: NamedDeclName<_s254>, TypeDecl<_qty1769> {}; // CXXRecord ScriptStreamingData
struct _d1771: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1655, Pack<_d1772>>, FunctionInstance<_qty1762>, FunctionNoResult {}; // CXXConstructor StreamedSource
struct _d1772: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1773: CXXMethodDecl, FunctionDecl<_ty1656, Pack<_d1774>>, FunctionInstance<_qty1762>, FunctionResult<_qty1775, _qty1759>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1774: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1775: NamedDeclName<_s255>, TypeDecl<_qty1777> {}; // CXXRecord ScriptStreamingTask
struct _d1776: NamedDeclName<_s255>, TypeDecl<_qty1777> {}; // CXXRecord ScriptStreamingTask
struct _d1777: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1778>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s226> {}; // CXXMethod Run
struct _d1778: NamedDeclName<_s256>, TypeDecl<_qty1779> {}; // Enum CompileOptions
struct _d1779: NamedDeclName<_s257> {}; // EnumConstant kNoCompileOptions
struct _d1780: NamedDeclName<_s258> {}; // EnumConstant kConsumeCodeCache
struct _d1781: NamedDeclName<_s259> {}; // EnumConstant kEagerCompile
struct _d1782: NamedDeclName<_s260>, TypeDecl<_qty1780> {}; // Enum NoCacheReason
struct _d1783: NamedDeclName<_s261> {}; // EnumConstant kNoCacheNoReason
struct _d1784: NamedDeclName<_s262> {}; // EnumConstant kNoCacheBecauseCachingDisabled
struct _d1785: NamedDeclName<_s263> {}; // EnumConstant kNoCacheBecauseNoResource
struct _d1786: NamedDeclName<_s264> {}; // EnumConstant kNoCacheBecauseInlineScript
struct _d1787: NamedDeclName<_s265> {}; // EnumConstant kNoCacheBecauseModule
struct _d1788: NamedDeclName<_s266> {}; // EnumConstant kNoCacheBecauseStreamingSource
struct _d1789: NamedDeclName<_s267> {}; // EnumConstant kNoCacheBecauseInspector
struct _d1790: NamedDeclName<_s268> {}; // EnumConstant kNoCacheBecauseScriptTooSmall
struct _d1791: NamedDeclName<_s269> {}; // EnumConstant kNoCacheBecauseCacheTooCold
struct _d1792: NamedDeclName<_s270> {}; // EnumConstant kNoCacheBecauseV8Extension
struct _d1793: NamedDeclName<_s271> {}; // EnumConstant kNoCacheBecauseExtensionModule
struct _d1794: NamedDeclName<_s272> {}; // EnumConstant kNoCacheBecausePacScript
struct _d1795: NamedDeclName<_s273> {}; // EnumConstant kNoCacheBecauseInDocumentWrite
struct _d1796: NamedDeclName<_s274> {}; // EnumConstant kNoCacheBecauseResourceWithNoCacheHandler
struct _d1797: NamedDeclName<_s275> {}; // EnumConstant kNoCacheBecauseDeferredProduceCodeCache
struct _d1798: CXXMethodDecl, FunctionDecl<_ty1662, Pack<_d1799, _d1800, _d1801, _d1802>>, FunctionNoInstance, FunctionResult<_qty1781, _qty1781>, NamedDeclName<_s276> {}; // CXXMethod CompileUnboundScript
struct _d1799: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1800: NamedDeclName<_s137> {}; // ParmVar source
struct _d1801: NamedDeclName<_s277> {}; // ParmVar options
struct _d1802: NamedDeclName<_s278> {}; // ParmVar no_cache_reason
struct _d1803: CXXMethodDecl, FunctionDecl<_ty1665, Pack<_d1804, _d1805, _d1806, _d1807>>, FunctionNoInstance, FunctionResult<_qty1784, _qty1784>, NamedDeclName<_s224> {}; // CXXMethod Compile
struct _d1804: NamedDeclName<_s220> {}; // ParmVar context
struct _d1805: NamedDeclName<_s137> {}; // ParmVar source
struct _d1806: NamedDeclName<_s277> {}; // ParmVar options
struct _d1807: NamedDeclName<_s278> {}; // ParmVar no_cache_reason
struct _d1808: CXXMethodDecl, FunctionDecl<_ty1667, Pack<_d1809, _d1810, _d1811>>, FunctionNoInstance, FunctionResult<_qty1778, _qty1778>, NamedDeclName<_s279> {}; // CXXMethod StartStreamingScript
struct _d1809: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1810: NamedDeclName<_s137> {}; // ParmVar source
struct _d1811: NamedDeclName<_s277> {}; // ParmVar options
struct _d1812: CXXMethodDecl, FunctionDecl<_ty1670, Pack<_d1813, _d1814, _d1815, _d1816>>, FunctionNoInstance, FunctionResult<_qty1789, _qty1789>, NamedDeclName<_s224> {}; // CXXMethod Compile
struct _d1813: NamedDeclName<_s220> {}; // ParmVar context
struct _d1814: NamedDeclName<_s137> {}; // ParmVar source
struct _d1815: NamedDeclName<_s280> {}; // ParmVar full_source_string
struct _d1816: NamedDeclName<_s225> {}; // ParmVar origin
struct _d1817: CXXMethodDecl, FunctionDecl<_ty1672, Pack<>>, FunctionNoInstance, FunctionResult<_qty1791, _qty1791>, NamedDeclName<_s281> {}; // CXXMethod CachedDataVersionTag
struct _d1818: CXXMethodDecl, FunctionDecl<_ty1675, Pack<_d1819, _d1820, _d1821, _d1822>>, FunctionNoInstance, FunctionResult<_qty1794, _qty1794>, NamedDeclName<_s282> {}; // CXXMethod CompileModule
struct _d1819: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1820: NamedDeclName<_s137> {}; // ParmVar source
struct _d1821: NamedDeclName<_s277> {}; // ParmVar options
struct _d1822: NamedDeclName<_s278> {}; // ParmVar no_cache_reason
struct _d1823: CXXMethodDecl, FunctionDecl<_ty1684, Pack<_d1824, _d1825, _d1826, _d1827, _d1828, _d1829, _d1830, _d1831>>, FunctionNoInstance, FunctionResult<_qty1801, _qty1801>, NamedDeclName<_s283> {}; // CXXMethod CompileFunctionInContext
struct _d1824: NamedDeclName<_s220> {}; // ParmVar context
struct _d1825: NamedDeclName<_s137> {}; // ParmVar source
struct _d1826: NamedDeclName<_s284> {}; // ParmVar arguments_count
struct _d1827: NamedDeclName<_s285> {}; // ParmVar arguments
struct _d1828: NamedDeclName<_s286> {}; // ParmVar context_extension_count
struct _d1829: NamedDeclName<_s287> {}; // ParmVar context_extensions
struct _d1830: NamedDeclName<_s277> {}; // ParmVar options
struct _d1831: NamedDeclName<_s278> {}; // ParmVar no_cache_reason
struct _d1832: CXXMethodDecl, FunctionDecl<_ty1687, Pack<_d1833>>, FunctionNoInstance, FunctionResult<_qty1724, _qty1724>, NamedDeclName<_s288> {}; // CXXMethod CreateCodeCache
struct _d1833: NamedDeclName<_s289> {}; // ParmVar unbound_script
struct _d1834: CXXMethodDecl, FunctionDecl<_ty1689, Pack<_d1835>>, FunctionNoInstance, FunctionResult<_qty1724, _qty1724>, NamedDeclName<_s288> {}; // CXXMethod CreateCodeCache
struct _d1835: NamedDeclName<_s290> {}; // ParmVar unbound_module_script
struct _d1836: CXXMethodDecl, FunctionDecl<_ty1691, Pack<_d1837>>, FunctionNoInstance, FunctionResult<_qty1724, _qty1724>, NamedDeclName<_s291> {}; // CXXMethod CreateCodeCacheForFunction
struct _d1837: NamedDeclName<_s292> {}; // ParmVar function
struct _d1838: NamedDeclName<_s293>, TypeDecl<_qty1809> {}; // CXXRecord Message
struct _d1839: NamedDeclName<_s293>, TypeDecl<_qty1809> {}; // CXXRecord Message
struct _d1840: CXXMethodDecl, FunctionDecl<_ty1693, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1810, _qty1810>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d1841: CXXMethodDecl, FunctionDecl<_ty1284, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d1842: CXXMethodDecl, FunctionDecl<_ty1697, Pack<_d1843>>, FunctionInstance<_qty1812>, FunctionResult<_qty1814, _qty1814>, NamedDeclName<_s294> {}; // CXXMethod GetSourceLine
struct _d1843: NamedDeclName<_s220> {}; // ParmVar context
struct _d1844: CXXMethodDecl, FunctionDecl<_ty1699, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1635, _qty1635>, NamedDeclName<_s295> {}; // CXXMethod GetScriptOrigin
struct _d1845: CXXMethodDecl, FunctionDecl<_ty1700, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1817, _qty1817>, NamedDeclName<_s296> {}; // CXXMethod GetScriptResourceName
struct _d1846: CXXMethodDecl, FunctionDecl<_ty1702, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1819, _qty1819>, NamedDeclName<_s297> {}; // CXXMethod GetStackTrace
struct _d1847: CXXMethodDecl, FunctionDecl<_ty1705, Pack<_d1848>>, FunctionInstance<_qty1812>, FunctionResult<_qty1822, _qty1822>, NamedDeclName<_s195> {}; // CXXMethod GetLineNumber
struct _d1848: NamedDeclName<_s220> {}; // ParmVar context
struct _d1849: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s298> {}; // CXXMethod GetStartPosition
struct _d1850: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s299> {}; // CXXMethod GetEndPosition
struct _d1851: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s300> {}; // CXXMethod ErrorLevel
struct _d1852: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s301> {}; // CXXMethod GetStartColumn
struct _d1853: CXXMethodDecl, FunctionDecl<_ty1708, Pack<_d1854>>, FunctionInstance<_qty1812>, FunctionResult<_qty1825, _qty1825>, NamedDeclName<_s301> {}; // CXXMethod GetStartColumn
struct _d1854: NamedDeclName<_s220> {}; // ParmVar context
struct _d1855: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s302> {}; // CXXMethod GetEndColumn
struct _d1856: CXXMethodDecl, FunctionDecl<_ty1711, Pack<_d1857>>, FunctionInstance<_qty1812>, FunctionResult<_qty1828, _qty1828>, NamedDeclName<_s302> {}; // CXXMethod GetEndColumn
struct _d1857: NamedDeclName<_s220> {}; // ParmVar context
struct _d1858: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s169> {}; // CXXMethod IsSharedCrossOrigin
struct _d1859: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1812>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s170> {}; // CXXMethod IsOpaque
struct _d1860: CXXMethodDecl, FunctionDecl<_ty1717, Pack<_d1861, _d1862>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s303> {}; // CXXMethod PrintCurrentStackTrace
struct _d1861: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1862: NamedDeclName<_s71> {}; // ParmVar out
struct _d1863: NamedDeclName<_s304>, TypeDecl<_qty1832> {}; // CXXRecord _iobuf
struct _d1864: NamedDeclName<_s305> {}; // Var kNoLineNumberInfo
struct _d1865: NamedDeclName<_s306> {}; // Var kNoColumnInfo
struct _d1866: NamedDeclName<_s307> {}; // Var kNoScriptIdInfo
struct _d1867: NamedDeclName<_s40>, TypeDecl<_qty45> {}; // CXXRecord StackTrace
struct _d1868: NamedDeclName<_s308>, TypeDecl<_qty1834> {}; // Enum StackTraceOptions
struct _d1869: NamedDeclName<_s309> {}; // EnumConstant kLineNumber
struct _d1870: NamedDeclName<_s310> {}; // EnumConstant kColumnOffset
struct _d1871: NamedDeclName<_s311> {}; // EnumConstant kScriptName
struct _d1872: NamedDeclName<_s312> {}; // EnumConstant kFunctionName
struct _d1873: NamedDeclName<_s313> {}; // EnumConstant kIsEval
struct _d1874: NamedDeclName<_s314> {}; // EnumConstant kIsConstructor
struct _d1875: NamedDeclName<_s315> {}; // EnumConstant kScriptNameOrSourceURL
struct _d1876: NamedDeclName<_s316> {}; // EnumConstant kScriptId
struct _d1877: NamedDeclName<_s317> {}; // EnumConstant kExposeFramesAcrossSecurityOrigins
struct _d1878: NamedDeclName<_s318> {}; // EnumConstant kOverview
struct _d1879: NamedDeclName<_s319> {}; // EnumConstant kDetailed
struct _d1880: CXXMethodDecl, FunctionDecl<_ty1719, Pack<_d1881, _d1882>>, FunctionInstance<_qty1837>, FunctionResult<_qty1835, _qty1835>, NamedDeclName<_s320> {}; // CXXMethod GetFrame
struct _d1881: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1882: NamedDeclName<_s128> {}; // ParmVar index
struct _d1883: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1837>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s321> {}; // CXXMethod GetFrameCount
struct _d1884: CXXMethodDecl, FunctionDecl<_ty1722, Pack<_d1885, _d1886, _d1887>>, FunctionNoInstance, FunctionResult<_qty1838, _qty1838>, NamedDeclName<_s322> {}; // CXXMethod CurrentStackTrace
struct _d1885: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1886: NamedDeclName<_s323> {}; // ParmVar frame_limit
struct _d1887: NamedDeclName<_s277> {}; // ParmVar options
struct _d1888: NamedDeclName<_s39>, TypeDecl<_qty44> {}; // CXXRecord StackFrame
struct _d1889: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s195> {}; // CXXMethod GetLineNumber
struct _d1890: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s324> {}; // CXXMethod GetColumn
struct _d1891: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s325> {}; // CXXMethod GetScriptId
struct _d1892: CXXMethodDecl, FunctionDecl<_ty1725, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty1841, _qty1841>, NamedDeclName<_s192> {}; // CXXMethod GetScriptName
struct _d1893: CXXMethodDecl, FunctionDecl<_ty1727, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty1843, _qty1843>, NamedDeclName<_s326> {}; // CXXMethod GetScriptNameOrSourceURL
struct _d1894: CXXMethodDecl, FunctionDecl<_ty1729, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty1845, _qty1845>, NamedDeclName<_s327> {}; // CXXMethod GetFunctionName
struct _d1895: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s328> {}; // CXXMethod IsEval
struct _d1896: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s329> {}; // CXXMethod IsConstructor
struct _d1897: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s171> {}; // CXXMethod IsWasm
struct _d1898: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1840>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s330> {}; // CXXMethod IsUserJavaScript
struct _d1899: NamedDeclName<_s331>, TypeDecl<_qty1847> {}; // Enum StateTag
struct _d1900: NamedDeclName<_s332> {}; // EnumConstant JS
struct _d1901: NamedDeclName<_s333> {}; // EnumConstant GC
struct _d1902: NamedDeclName<_s334> {}; // EnumConstant PARSER
struct _d1903: NamedDeclName<_s335> {}; // EnumConstant BYTECODE_COMPILER
struct _d1904: NamedDeclName<_s336> {}; // EnumConstant COMPILER
struct _d1905: NamedDeclName<_s337> {}; // EnumConstant OTHER
struct _d1906: NamedDeclName<_s338> {}; // EnumConstant EXTERNAL
struct _d1907: NamedDeclName<_s339> {}; // EnumConstant IDLE
struct _d1908: NamedDeclName<_s340>, TypeDecl<_qty1848> {}; // CXXRecord RegisterState
struct _d1909: NamedDeclName<_s340>, TypeDecl<_qty1848> {}; // CXXRecord RegisterState
struct _d1910: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1849>, FunctionNoResult {}; // CXXConstructor RegisterState
struct _d1911: NamedDeclName<_s341> {}; // Field pc
struct _d1912: NamedDeclName<_s342> {}; // Field sp
struct _d1913: NamedDeclName<_s343> {}; // Field fp
struct _d1914: NamedDeclName<_s344> {}; // Field lr
struct _d1915: NamedDeclName<_s345>, TypeDecl<_qty1850> {}; // CXXRecord SampleInfo
struct _d1916: NamedDeclName<_s345>, TypeDecl<_qty1850> {}; // CXXRecord SampleInfo
struct _d1917: NamedDeclName<_s346> {}; // Field frames_count
struct _d1918: NamedDeclName<_s347> {}; // Field vm_state
struct _d1919: NamedDeclName<_s348> {}; // Field external_callback_entry
struct _d1920: NamedDeclName<_s349>, TypeDecl<_qty1851> {}; // CXXRecord MemoryRange
struct _d1921: NamedDeclName<_s349>, TypeDecl<_qty1851> {}; // CXXRecord MemoryRange
struct _d1922: NamedDeclName<_s350> {}; // Field start
struct _d1923: NamedDeclName<_s351> {}; // Field length_in_bytes
struct _d1924: NamedDeclName<_s352>, TypeDecl<_qty1853> {}; // CXXRecord JSEntryStub
struct _d1925: NamedDeclName<_s352>, TypeDecl<_qty1853> {}; // CXXRecord JSEntryStub
struct _d1926: NamedDeclName<_s353> {}; // Field code
struct _d1927: NamedDeclName<_s354>, TypeDecl<_qty1854> {}; // CXXRecord UnwindState
struct _d1928: NamedDeclName<_s354>, TypeDecl<_qty1854> {}; // CXXRecord UnwindState
struct _d1929: NamedDeclName<_s355> {}; // Field code_range
struct _d1930: NamedDeclName<_s356> {}; // Field embedded_code_range
struct _d1931: NamedDeclName<_s357> {}; // Field js_entry_stub
struct _d1932: NamedDeclName<_s358>, TypeDecl<_qty1855> {}; // CXXRecord JSON
struct _d1933: NamedDeclName<_s358>, TypeDecl<_qty1855> {}; // CXXRecord JSON
struct _d1934: CXXMethodDecl, FunctionDecl<_ty1742, Pack<_d1935, _d1936>>, FunctionNoInstance, FunctionResult<_qty1858, _qty1858>, NamedDeclName<_s359> {}; // CXXMethod Parse
struct _d1935: NamedDeclName<_s220> {}; // ParmVar context
struct _d1936: NamedDeclName<_s360> {}; // ParmVar json_string
struct _d1937: CXXMethodDecl, FunctionDecl<_ty1747, Pack<_d1938, _d1939, _d1940>>, FunctionNoInstance, FunctionResult<_qty1863, _qty1863>, NamedDeclName<_s361> {}; // CXXMethod Stringify
struct _d1938: NamedDeclName<_s220> {}; // ParmVar context
struct _d1939: NamedDeclName<_s362> {}; // ParmVar json_object
struct _d1940: NamedDeclName<_s363> {}; // ParmVar gap
struct _d1941: NamedDeclName<_s364>, TypeDecl<_qty1865> {}; // CXXRecord ValueSerializer
struct _d1942: NamedDeclName<_s364>, TypeDecl<_qty1865> {}; // CXXRecord ValueSerializer
struct _d1943: NamedDeclName<_s365>, TypeDecl<_qty1866> {}; // CXXRecord Delegate
struct _d1944: NamedDeclName<_s365>, TypeDecl<_qty1866> {}; // CXXRecord Delegate
struct _d1945: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1751, Pack<>>, FunctionInstance<_qty1868>, FunctionNoResult {}; // CXXDestructor ~Delegate
struct _d1946: CXXMethodDecl, FunctionDecl<_ty1754, Pack<_d1947>>, FunctionInstance<_qty1868>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s366> {}; // CXXMethod ThrowDataCloneError
struct _d1947: NamedDeclName<_s367> {}; // ParmVar message
struct _d1948: CXXMethodDecl, FunctionDecl<_ty1756, Pack<_d1949, _d1950>>, FunctionInstance<_qty1868>, FunctionResult<_qty1872, _qty1872>, NamedDeclName<_s368> {}; // CXXMethod WriteHostObject
struct _d1949: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1950: NamedDeclName<_s369> {}; // ParmVar object
struct _d1951: CXXMethodDecl, FunctionDecl<_ty1759, Pack<_d1952, _d1953>>, FunctionInstance<_qty1868>, FunctionResult<_qty1875, _qty1875>, NamedDeclName<_s370> {}; // CXXMethod GetSharedArrayBufferId
struct _d1952: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1953: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d1954: CXXMethodDecl, FunctionDecl<_ty1762, Pack<_d1955, _d1956>>, FunctionInstance<_qty1868>, FunctionResult<_qty1878, _qty1878>, NamedDeclName<_s372> {}; // CXXMethod GetWasmModuleTransferId
struct _d1955: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1956: NamedDeclName<_s373> {}; // ParmVar module
struct _d1957: CXXMethodDecl, FunctionDecl<_ty1765, Pack<_d1958, _d1959, _d1960>>, FunctionInstance<_qty1868>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s374> {}; // CXXMethod ReallocateBufferMemory
struct _d1958: NamedDeclName<_s375> {}; // ParmVar old_buffer
struct _d1959: NamedDeclName<_s376> {}; // ParmVar size
struct _d1960: NamedDeclName<_s377> {}; // ParmVar actual_size
struct _d1961: CXXMethodDecl, FunctionDecl<_ty1766, Pack<_d1962>>, FunctionInstance<_qty1868>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s378> {}; // CXXMethod FreeBufferMemory
struct _d1962: NamedDeclName<_s379> {}; // ParmVar buffer
struct _d1963: CXXMethodDecl, FunctionDecl<_ty1768, Pack<_d1964>>, FunctionInstance<_qty1868>, FunctionResult<_qty1885, _qty1866>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1964: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1965: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d1966>>, FunctionInstance<_qty1887>, FunctionNoResult {}; // CXXConstructor ValueSerializer
struct _d1966: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1967: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1771, Pack<_d1968, _d1969>>, FunctionInstance<_qty1887>, FunctionNoResult {}; // CXXConstructor ValueSerializer
struct _d1968: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d1969: NamedDeclName<_s380> {}; // ParmVar delegate
struct _d1970: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1772, Pack<>>, FunctionInstance<_qty1887>, FunctionNoResult {}; // CXXDestructor ~ValueSerializer
struct _d1971: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s381> {}; // CXXMethod WriteHeader
struct _d1972: CXXMethodDecl, FunctionDecl<_ty1775, Pack<_d1973, _d1974>>, FunctionInstance<_qty1887>, FunctionResult<_qty1892, _qty1892>, NamedDeclName<_s382> {}; // CXXMethod WriteValue
struct _d1973: NamedDeclName<_s220> {}; // ParmVar context
struct _d1974: NamedDeclName<_s153> {}; // ParmVar value
struct _d1975: CXXMethodDecl, FunctionDecl<_ty1777, Pack<>>, FunctionInstance<_qty1887>, FunctionResult<_qty1894, _qty1894>, NamedDeclName<_s383> {}; // CXXMethod Release
struct _d1976: NamedDeclName<_s384>, TypeDecl<_qty1896> {}; // ClassTemplateSpecialization pair
struct _d1977: CXXMethodDecl, FunctionDecl<_ty1782, Pack<_d1978, _d1979>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s385> {}; // CXXMethod TransferArrayBuffer
struct _d1978: NamedDeclName<_s386> {}; // ParmVar transfer_id
struct _d1979: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d1980: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d1981>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s388> {}; // CXXMethod SetTreatArrayBufferViewsAsHostObjects
struct _d1981: NamedDeclName<_s389> {}; // ParmVar mode
struct _d1982: CXXMethodDecl, FunctionDecl<_ty1784, Pack<_d1983>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s390> {}; // CXXMethod WriteUint32
struct _d1983: NamedDeclName<_s153> {}; // ParmVar value
struct _d1984: CXXMethodDecl, FunctionDecl<_ty1786, Pack<_d1985>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s391> {}; // CXXMethod WriteUint64
struct _d1985: NamedDeclName<_s153> {}; // ParmVar value
struct _d1986: CXXMethodDecl, FunctionDecl<_ty1788, Pack<_d1987>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s392> {}; // CXXMethod WriteDouble
struct _d1987: NamedDeclName<_s153> {}; // ParmVar value
struct _d1988: CXXMethodDecl, FunctionDecl<_ty1789, Pack<_d1989, _d1990>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s393> {}; // CXXMethod WriteRawBytes
struct _d1989: NamedDeclName<_s137> {}; // ParmVar source
struct _d1990: NamedDeclName<_s160> {}; // ParmVar length
struct _d1991: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1791, Pack<_d1992>>, FunctionInstance<_qty1887>, FunctionNoResult {}; // CXXConstructor ValueSerializer
struct _d1992: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1993: CXXMethodDecl, FunctionDecl<_ty1791, Pack<_d1994>>, FunctionInstance<_qty1887>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d1994: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d1995: NamedDeclName<_s394>, TypeDecl<_qty1910> {}; // CXXRecord ValueDeserializer
struct _d1996: NamedDeclName<_s394>, TypeDecl<_qty1910> {}; // CXXRecord ValueDeserializer
struct _d1997: NamedDeclName<_s365>, TypeDecl<_qty1911> {}; // CXXRecord Delegate
struct _d1998: NamedDeclName<_s365>, TypeDecl<_qty1911> {}; // CXXRecord Delegate
struct _d1999: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1794, Pack<>>, FunctionInstance<_qty1913>, FunctionNoResult {}; // CXXDestructor ~Delegate
struct _d2000: CXXMethodDecl, FunctionDecl<_ty1796, Pack<_d2001>>, FunctionInstance<_qty1913>, FunctionResult<_qty1914, _qty1914>, NamedDeclName<_s395> {}; // CXXMethod ReadHostObject
struct _d2001: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2002: CXXMethodDecl, FunctionDecl<_ty1798, Pack<_d2003, _d2004>>, FunctionInstance<_qty1913>, FunctionResult<_qty1916, _qty1916>, NamedDeclName<_s396> {}; // CXXMethod GetWasmModuleFromId
struct _d2003: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2004: NamedDeclName<_s386> {}; // ParmVar transfer_id
struct _d2005: CXXMethodDecl, FunctionDecl<_ty1800, Pack<_d2006, _d2007>>, FunctionInstance<_qty1913>, FunctionResult<_qty1918, _qty1918>, NamedDeclName<_s397> {}; // CXXMethod GetSharedArrayBufferFromId
struct _d2006: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2007: NamedDeclName<_s398> {}; // ParmVar clone_id
struct _d2008: CXXMethodDecl, FunctionDecl<_ty1803, Pack<_d2009>>, FunctionInstance<_qty1913>, FunctionResult<_qty1922, _qty1911>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2009: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2010: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1805, Pack<_d2011, _d2012, _d2013>>, FunctionInstance<_qty1925>, FunctionNoResult {}; // CXXConstructor ValueDeserializer
struct _d2011: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2012: NamedDeclName<_s130> {}; // ParmVar data
struct _d2013: NamedDeclName<_s376> {}; // ParmVar size
struct _d2014: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1807, Pack<_d2015, _d2016, _d2017, _d2018>>, FunctionInstance<_qty1925>, FunctionNoResult {}; // CXXConstructor ValueDeserializer
struct _d2015: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2016: NamedDeclName<_s130> {}; // ParmVar data
struct _d2017: NamedDeclName<_s376> {}; // ParmVar size
struct _d2018: NamedDeclName<_s380> {}; // ParmVar delegate
struct _d2019: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1808, Pack<>>, FunctionInstance<_qty1925>, FunctionNoResult {}; // CXXDestructor ~ValueDeserializer
struct _d2020: CXXMethodDecl, FunctionDecl<_ty1810, Pack<_d2021>>, FunctionInstance<_qty1925>, FunctionResult<_qty1929, _qty1929>, NamedDeclName<_s399> {}; // CXXMethod ReadHeader
struct _d2021: NamedDeclName<_s220> {}; // ParmVar context
struct _d2022: CXXMethodDecl, FunctionDecl<_ty1813, Pack<_d2023>>, FunctionInstance<_qty1925>, FunctionResult<_qty1932, _qty1932>, NamedDeclName<_s400> {}; // CXXMethod ReadValue
struct _d2023: NamedDeclName<_s220> {}; // ParmVar context
struct _d2024: CXXMethodDecl, FunctionDecl<_ty1816, Pack<_d2025, _d2026>>, FunctionInstance<_qty1925>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s385> {}; // CXXMethod TransferArrayBuffer
struct _d2025: NamedDeclName<_s386> {}; // ParmVar transfer_id
struct _d2026: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d2027: CXXMethodDecl, FunctionDecl<_ty1818, Pack<_d2028, _d2029>>, FunctionInstance<_qty1925>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s401> {}; // CXXMethod TransferSharedArrayBuffer
struct _d2028: NamedDeclName<_s402> {}; // ParmVar id
struct _d2029: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d2030: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d2031>>, FunctionInstance<_qty1925>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s403> {}; // CXXMethod SetSupportsLegacyWireFormat
struct _d2031: NamedDeclName<_s404> {}; // ParmVar supports_legacy_wire_format
struct _d2032: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d2033>>, FunctionInstance<_qty1925>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s405> {}; // CXXMethod SetExpectInlineWasm
struct _d2033: NamedDeclName<_s406> {}; // ParmVar allow_inline_wasm
struct _d2034: CXXMethodDecl, FunctionDecl<_ty1819, Pack<>>, FunctionInstance<_qty1939>, FunctionResult<_qty1791, _qty1791>, NamedDeclName<_s407> {}; // CXXMethod GetWireFormatVersion
struct _d2035: CXXMethodDecl, FunctionDecl<_ty1822, Pack<_d2036>>, FunctionInstance<_qty1925>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s408> {}; // CXXMethod ReadUint32
struct _d2036: NamedDeclName<_s153> {}; // ParmVar value
struct _d2037: CXXMethodDecl, FunctionDecl<_ty1824, Pack<_d2038>>, FunctionInstance<_qty1925>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s409> {}; // CXXMethod ReadUint64
struct _d2038: NamedDeclName<_s153> {}; // ParmVar value
struct _d2039: CXXMethodDecl, FunctionDecl<_ty1826, Pack<_d2040>>, FunctionInstance<_qty1925>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s410> {}; // CXXMethod ReadDouble
struct _d2040: NamedDeclName<_s153> {}; // ParmVar value
struct _d2041: CXXMethodDecl, FunctionDecl<_ty1828, Pack<_d2042, _d2043>>, FunctionInstance<_qty1925>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s411> {}; // CXXMethod ReadRawBytes
struct _d2042: NamedDeclName<_s160> {}; // ParmVar length
struct _d2043: NamedDeclName<_s130> {}; // ParmVar data
struct _d2044: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1830, Pack<_d2045>>, FunctionInstance<_qty1925>, FunctionNoResult {}; // CXXConstructor ValueDeserializer
struct _d2045: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2046: CXXMethodDecl, FunctionDecl<_ty1830, Pack<_d2047>>, FunctionInstance<_qty1925>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2047: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2048: NamedDeclName<_s49>, TypeDecl<_qty54> {}; // CXXRecord Value
struct _d2049: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s412> {}; // CXXMethod IsUndefined
struct _d2050: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s413> {}; // CXXMethod IsNull
struct _d2051: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s414> {}; // CXXMethod IsNullOrUndefined
struct _d2052: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s415> {}; // CXXMethod IsTrue
struct _d2053: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s416> {}; // CXXMethod IsFalse
struct _d2054: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s417> {}; // CXXMethod IsName
struct _d2055: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s418> {}; // CXXMethod IsString
struct _d2056: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s419> {}; // CXXMethod IsSymbol
struct _d2057: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s420> {}; // CXXMethod IsFunction
struct _d2058: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s421> {}; // CXXMethod IsArray
struct _d2059: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s422> {}; // CXXMethod IsObject
struct _d2060: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s423> {}; // CXXMethod IsBigInt
struct _d2061: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s424> {}; // CXXMethod IsBoolean
struct _d2062: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s425> {}; // CXXMethod IsNumber
struct _d2063: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s426> {}; // CXXMethod IsExternal
struct _d2064: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s427> {}; // CXXMethod IsInt32
struct _d2065: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s428> {}; // CXXMethod IsUint32
struct _d2066: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s429> {}; // CXXMethod IsDate
struct _d2067: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s430> {}; // CXXMethod IsArgumentsObject
struct _d2068: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s431> {}; // CXXMethod IsBigIntObject
struct _d2069: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s432> {}; // CXXMethod IsBooleanObject
struct _d2070: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s433> {}; // CXXMethod IsNumberObject
struct _d2071: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s434> {}; // CXXMethod IsStringObject
struct _d2072: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s435> {}; // CXXMethod IsSymbolObject
struct _d2073: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s436> {}; // CXXMethod IsNativeError
struct _d2074: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s437> {}; // CXXMethod IsRegExp
struct _d2075: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s438> {}; // CXXMethod IsAsyncFunction
struct _d2076: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s439> {}; // CXXMethod IsGeneratorFunction
struct _d2077: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s440> {}; // CXXMethod IsGeneratorObject
struct _d2078: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s441> {}; // CXXMethod IsPromise
struct _d2079: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s442> {}; // CXXMethod IsMap
struct _d2080: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s443> {}; // CXXMethod IsSet
struct _d2081: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s444> {}; // CXXMethod IsMapIterator
struct _d2082: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s445> {}; // CXXMethod IsSetIterator
struct _d2083: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s446> {}; // CXXMethod IsWeakMap
struct _d2084: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s447> {}; // CXXMethod IsWeakSet
struct _d2085: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s448> {}; // CXXMethod IsArrayBuffer
struct _d2086: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s449> {}; // CXXMethod IsArrayBufferView
struct _d2087: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s450> {}; // CXXMethod IsTypedArray
struct _d2088: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s451> {}; // CXXMethod IsUint8Array
struct _d2089: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s452> {}; // CXXMethod IsUint8ClampedArray
struct _d2090: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s453> {}; // CXXMethod IsInt8Array
struct _d2091: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s454> {}; // CXXMethod IsUint16Array
struct _d2092: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s455> {}; // CXXMethod IsInt16Array
struct _d2093: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s456> {}; // CXXMethod IsUint32Array
struct _d2094: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s457> {}; // CXXMethod IsInt32Array
struct _d2095: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s458> {}; // CXXMethod IsFloat32Array
struct _d2096: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s459> {}; // CXXMethod IsFloat64Array
struct _d2097: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s460> {}; // CXXMethod IsBigInt64Array
struct _d2098: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s461> {}; // CXXMethod IsBigUint64Array
struct _d2099: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s462> {}; // CXXMethod IsDataView
struct _d2100: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s463> {}; // CXXMethod IsSharedArrayBuffer
struct _d2101: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s464> {}; // CXXMethod IsProxy
struct _d2102: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s465> {}; // CXXMethod IsWebAssemblyCompiledModule
struct _d2103: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s466> {}; // CXXMethod IsModuleNamespaceObject
struct _d2104: CXXMethodDecl, FunctionDecl<_ty1833, Pack<_d2105>>, FunctionInstance<_qty1951>, FunctionResult<_qty1953, _qty1953>, NamedDeclName<_s467> {}; // CXXMethod ToBigInt
struct _d2105: NamedDeclName<_s220> {}; // ParmVar context
struct _d2106: CXXMethodDecl, FunctionDecl<_ty1836, Pack<_d2107>>, FunctionInstance<_qty1951>, FunctionResult<_qty1956, _qty1956>, NamedDeclName<_s468> {}; // CXXMethod ToNumber
struct _d2107: NamedDeclName<_s220> {}; // ParmVar context
struct _d2108: CXXMethodDecl, FunctionDecl<_ty1839, Pack<_d2109>>, FunctionInstance<_qty1951>, FunctionResult<_qty1959, _qty1959>, NamedDeclName<_s469> {}; // CXXMethod ToString
struct _d2109: NamedDeclName<_s220> {}; // ParmVar context
struct _d2110: CXXMethodDecl, FunctionDecl<_ty1842, Pack<_d2111>>, FunctionInstance<_qty1951>, FunctionResult<_qty1962, _qty1962>, NamedDeclName<_s470> {}; // CXXMethod ToDetailString
struct _d2111: NamedDeclName<_s220> {}; // ParmVar context
struct _d2112: CXXMethodDecl, FunctionDecl<_ty1845, Pack<_d2113>>, FunctionInstance<_qty1951>, FunctionResult<_qty1965, _qty1965>, NamedDeclName<_s471> {}; // CXXMethod ToObject
struct _d2113: NamedDeclName<_s220> {}; // ParmVar context
struct _d2114: CXXMethodDecl, FunctionDecl<_ty1848, Pack<_d2115>>, FunctionInstance<_qty1951>, FunctionResult<_qty1968, _qty1968>, NamedDeclName<_s472> {}; // CXXMethod ToInteger
struct _d2115: NamedDeclName<_s220> {}; // ParmVar context
struct _d2116: CXXMethodDecl, FunctionDecl<_ty1851, Pack<_d2117>>, FunctionInstance<_qty1951>, FunctionResult<_qty1971, _qty1971>, NamedDeclName<_s473> {}; // CXXMethod ToUint32
struct _d2117: NamedDeclName<_s220> {}; // ParmVar context
struct _d2118: CXXMethodDecl, FunctionDecl<_ty1854, Pack<_d2119>>, FunctionInstance<_qty1951>, FunctionResult<_qty1974, _qty1974>, NamedDeclName<_s474> {}; // CXXMethod ToInt32
struct _d2119: NamedDeclName<_s220> {}; // ParmVar context
struct _d2120: CXXMethodDecl, FunctionDecl<_ty1856, Pack<_d2121>>, FunctionInstance<_qty1951>, FunctionResult<_qty1976, _qty1976>, NamedDeclName<_s475> {}; // CXXMethod ToBoolean
struct _d2121: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2122: CXXMethodDecl, FunctionDecl<_ty1859, Pack<_d2123>>, FunctionInstance<_qty1951>, FunctionResult<_qty1979, _qty1979>, NamedDeclName<_s476> {}; // CXXMethod ToArrayIndex
struct _d2123: NamedDeclName<_s220> {}; // ParmVar context
struct _d2124: CXXMethodDecl, FunctionDecl<_ty1861, Pack<_d2125>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s477> {}; // CXXMethod BooleanValue
struct _d2125: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2126: CXXMethodDecl, FunctionDecl<_ty1863, Pack<_d2127>>, FunctionInstance<_qty1951>, FunctionResult<_qty1983, _qty1983>, NamedDeclName<_s478> {}; // CXXMethod NumberValue
struct _d2127: NamedDeclName<_s220> {}; // ParmVar context
struct _d2128: CXXMethodDecl, FunctionDecl<_ty1866, Pack<_d2129>>, FunctionInstance<_qty1951>, FunctionResult<_qty1986, _qty1986>, NamedDeclName<_s479> {}; // CXXMethod IntegerValue
struct _d2129: NamedDeclName<_s220> {}; // ParmVar context
struct _d2130: CXXMethodDecl, FunctionDecl<_ty1869, Pack<_d2131>>, FunctionInstance<_qty1951>, FunctionResult<_qty1989, _qty1989>, NamedDeclName<_s480> {}; // CXXMethod Uint32Value
struct _d2131: NamedDeclName<_s220> {}; // ParmVar context
struct _d2132: CXXMethodDecl, FunctionDecl<_ty1872, Pack<_d2133>>, FunctionInstance<_qty1951>, FunctionResult<_qty1992, _qty1992>, NamedDeclName<_s481> {}; // CXXMethod Int32Value
struct _d2133: NamedDeclName<_s220> {}; // ParmVar context
struct _d2134: CXXMethodDecl, FunctionDecl<_ty1876, Pack<_d2135, _d2136>>, FunctionInstance<_qty1951>, FunctionResult<_qty1996, _qty1996>, NamedDeclName<_s482> {}; // CXXMethod Equals
struct _d2135: NamedDeclName<_s220> {}; // ParmVar context
struct _d2136: NamedDeclName<_s53> {}; // ParmVar that
struct _d2137: CXXMethodDecl, FunctionDecl<_ty1879, Pack<_d2138>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s483> {}; // CXXMethod StrictEquals
struct _d2138: NamedDeclName<_s53> {}; // ParmVar that
struct _d2139: CXXMethodDecl, FunctionDecl<_ty1881, Pack<_d2140>>, FunctionInstance<_qty1951>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s484> {}; // CXXMethod SameValue
struct _d2140: NamedDeclName<_s53> {}; // ParmVar that
struct _d2141: NamedDeclName<_s60> {}; // FunctionTemplate Cast
struct _d2142: NamedDeclName<_s21>, TypeDecl<_qty2002> {}; // TemplateTypeParm T
struct _d2143: CXXMethodDecl, FunctionDecl<_ty1884, Pack<_d2144>>, FunctionNoInstance, FunctionResult<_qty2004, _qty2004>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2144: NamedDeclName<_s153> {}; // ParmVar value
struct _d2145: CXXMethodDecl, FunctionDecl<_ty1886, Pack<_d2146>>, FunctionInstance<_qty2004>, FunctionResult<_qty2006, _qty2006>, NamedDeclName<_s485> {}; // CXXMethod TypeOf
struct _d2146: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2147: CXXMethodDecl, FunctionDecl<_ty1890, Pack<_d2148, _d2149>>, FunctionInstance<_qty2004>, FunctionResult<_qty2010, _qty2010>, NamedDeclName<_s486> {}; // CXXMethod InstanceOf
struct _d2148: NamedDeclName<_s220> {}; // ParmVar context
struct _d2149: NamedDeclName<_s369> {}; // ParmVar object
struct _d2150: NamedDeclName<_s30>, TypeDecl<_qty35> {}; // CXXRecord Primitive
struct _d2151: NamedDeclName<_s10>, TypeDecl<_qty9> {}; // CXXRecord Boolean
struct _d2152: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2012>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s49> {}; // CXXMethod Value
struct _d2153: CXXMethodDecl, FunctionDecl<_ty1895, Pack<_d2154>>, FunctionNoInstance, FunctionResult<_qty2014, _qty2014>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2154: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2155: CXXMethodDecl, FunctionDecl<_ty1897, Pack<_d2156, _d2157>>, FunctionNoInstance, FunctionResult<_qty2016, _qty2016>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2156: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2157: NamedDeclName<_s153> {}; // ParmVar value
struct _d2158: NamedDeclName<_s23>, TypeDecl<_qty28> {}; // CXXRecord Name
struct _d2159: CXXMethodDecl, FunctionDecl<_ty1554, Pack<>>, FunctionInstance<_qty2018>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s217> {}; // CXXMethod GetIdentityHash
struct _d2160: CXXMethodDecl, FunctionDecl<_ty1900, Pack<_d2161>>, FunctionNoInstance, FunctionResult<_qty2018, _qty2018>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2161: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2162: NamedDeclName<_s488>, TypeDecl<_qty2020> {}; // Enum NewStringType
struct _d2163: NamedDeclName<_s489> {}; // EnumConstant kNormal
struct _d2164: NamedDeclName<_s490> {}; // EnumConstant kInternalized
struct _d2165: NamedDeclName<_s41>, TypeDecl<_qty46> {}; // CXXRecord String
struct _d2166: NamedDeclName<_s491> {}; // Var kMaxLength
struct _d2167: NamedDeclName<_s246>, TypeDecl<_qty2021> {}; // Enum Encoding
struct _d2168: NamedDeclName<_s492> {}; // EnumConstant UNKNOWN_ENCODING
struct _d2169: NamedDeclName<_s493> {}; // EnumConstant TWO_BYTE_ENCODING
struct _d2170: NamedDeclName<_s494> {}; // EnumConstant ONE_BYTE_ENCODING
struct _d2171: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2022>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s161> {}; // CXXMethod Length
struct _d2172: CXXMethodDecl, FunctionDecl<_ty1904, Pack<_d2173>>, FunctionInstance<_qty2022>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s495> {}; // CXXMethod Utf8Length
struct _d2173: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2174: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2022>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s496> {}; // CXXMethod IsOneByte
struct _d2175: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2022>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s497> {}; // CXXMethod ContainsOnlyOneByte
struct _d2176: NamedDeclName<_s498>, TypeDecl<_qty2024> {}; // Enum WriteOptions
struct _d2177: NamedDeclName<_s499> {}; // EnumConstant NO_OPTIONS
struct _d2178: NamedDeclName<_s500> {}; // EnumConstant HINT_MANY_WRITES_EXPECTED
struct _d2179: NamedDeclName<_s501> {}; // EnumConstant NO_NULL_TERMINATION
struct _d2180: NamedDeclName<_s502> {}; // EnumConstant PRESERVE_ONE_BYTE_NULL
struct _d2181: NamedDeclName<_s503> {}; // EnumConstant REPLACE_INVALID_UTF8
struct _d2182: CXXMethodDecl, FunctionDecl<_ty1907, Pack<_d2183, _d2184, _d2185, _d2186, _d2187>>, FunctionInstance<_qty2022>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s504> {}; // CXXMethod Write
struct _d2183: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2184: NamedDeclName<_s379> {}; // ParmVar buffer
struct _d2185: NamedDeclName<_s350> {}; // ParmVar start
struct _d2186: NamedDeclName<_s160> {}; // ParmVar length
struct _d2187: NamedDeclName<_s277> {}; // ParmVar options
struct _d2188: CXXMethodDecl, FunctionDecl<_ty1909, Pack<_d2189, _d2190, _d2191, _d2192, _d2193>>, FunctionInstance<_qty2022>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s505> {}; // CXXMethod WriteOneByte
struct _d2189: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2190: NamedDeclName<_s379> {}; // ParmVar buffer
struct _d2191: NamedDeclName<_s350> {}; // ParmVar start
struct _d2192: NamedDeclName<_s160> {}; // ParmVar length
struct _d2193: NamedDeclName<_s277> {}; // ParmVar options
struct _d2194: CXXMethodDecl, FunctionDecl<_ty1912, Pack<_d2195, _d2196, _d2197, _d2198, _d2199>>, FunctionInstance<_qty2022>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s506> {}; // CXXMethod WriteUtf8
struct _d2195: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2196: NamedDeclName<_s379> {}; // ParmVar buffer
struct _d2197: NamedDeclName<_s160> {}; // ParmVar length
struct _d2198: NamedDeclName<_s507> {}; // ParmVar nchars_ref
struct _d2199: NamedDeclName<_s277> {}; // ParmVar options
struct _d2200: CXXMethodDecl, FunctionDecl<_ty1913, Pack<_d2201>>, FunctionNoInstance, FunctionResult<_qty2032, _qty2032>, NamedDeclName<_s79> {}; // CXXMethod Empty
struct _d2201: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2202: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2022>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s426> {}; // CXXMethod IsExternal
struct _d2203: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2022>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s508> {}; // CXXMethod IsExternalOneByte
struct _d2204: NamedDeclName<_s509>, TypeDecl<_qty2034> {}; // CXXRecord ExternalStringResourceBase
struct _d2205: NamedDeclName<_s509>, TypeDecl<_qty2034> {}; // CXXRecord ExternalStringResourceBase
struct _d2206: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty2035>, FunctionNoResult {}; // CXXDestructor ~ExternalStringResourceBase
struct _d2207: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2036>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s510> {}; // CXXMethod IsCacheable
struct _d2208: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1919, Pack<_d2209>>, FunctionInstance<_qty2035>, FunctionNoResult {}; // CXXConstructor ExternalStringResourceBase
struct _d2209: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2210: CXXMethodDecl, FunctionDecl<_ty1919, Pack<_d2211>>, FunctionInstance<_qty2035>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2211: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2212: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1920, Pack<>>, FunctionInstance<_qty2035>, FunctionNoResult {}; // CXXConstructor ExternalStringResourceBase
struct _d2213: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2035>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s511> {}; // CXXMethod Dispose
struct _d2214: CXXMethodDecl, FunctionDecl<_ty1921, Pack<>>, FunctionInstance<_qty2036>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s512> {}; // CXXMethod Lock
struct _d2215: CXXMethodDecl, FunctionDecl<_ty1921, Pack<>>, FunctionInstance<_qty2036>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s513> {}; // CXXMethod Unlock
struct _d2216: NamedDeclName<_s514>, TypeDecl<_qty2042> {}; // CXXRecord ExternalStringResource
struct _d2217: NamedDeclName<_s514>, TypeDecl<_qty2042> {}; // CXXRecord ExternalStringResource
struct _d2218: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty2043>, FunctionNoResult {}; // CXXDestructor ~ExternalStringResource
struct _d2219: CXXMethodDecl, FunctionDecl<_ty1924, Pack<>>, FunctionInstance<_qty2046>, FunctionResult<_qty2044, _qty2044>, NamedDeclName<_s130> {}; // CXXMethod data
struct _d2220: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2046>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s160> {}; // CXXMethod length
struct _d2221: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1928, Pack<>>, FunctionInstance<_qty2043>, FunctionNoResult {}; // CXXConstructor ExternalStringResource
struct _d2222: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1930, Pack<_d2223>>, FunctionInstance<_qty2043>, FunctionNoResult {}; // CXXConstructor ExternalStringResource
struct _d2223: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2224: CXXMethodDecl, FunctionDecl<_ty1931, Pack<_d2225>>, FunctionInstance<_qty2043>, FunctionResult<_qty2052, _qty2042>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2225: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2226: NamedDeclName<_s515>, TypeDecl<_qty2054> {}; // CXXRecord ExternalOneByteStringResource
struct _d2227: NamedDeclName<_s515>, TypeDecl<_qty2054> {}; // CXXRecord ExternalOneByteStringResource
struct _d2228: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty2055>, FunctionNoResult {}; // CXXDestructor ~ExternalOneByteStringResource
struct _d2229: CXXMethodDecl, FunctionDecl<_ty1935, Pack<>>, FunctionInstance<_qty2057>, FunctionResult<_qty1082, _qty1082>, NamedDeclName<_s130> {}; // CXXMethod data
struct _d2230: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2057>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s160> {}; // CXXMethod length
struct _d2231: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1937, Pack<>>, FunctionInstance<_qty2055>, FunctionNoResult {}; // CXXConstructor ExternalOneByteStringResource
struct _d2232: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1939, Pack<_d2233>>, FunctionInstance<_qty2055>, FunctionNoResult {}; // CXXConstructor ExternalOneByteStringResource
struct _d2233: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2234: CXXMethodDecl, FunctionDecl<_ty1940, Pack<_d2235>>, FunctionInstance<_qty2055>, FunctionResult<_qty2062, _qty2054>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2235: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2236: CXXMethodDecl, FunctionDecl<_ty1943, Pack<_d2237>>, FunctionInstance<_qty2022>, FunctionResult<_qty2035, _qty2035>, NamedDeclName<_s516> {}; // CXXMethod GetExternalStringResourceBase
struct _d2237: NamedDeclName<_s517> {}; // ParmVar encoding_out
struct _d2238: CXXMethodDecl, FunctionDecl<_ty1944, Pack<>>, FunctionInstance<_qty2022>, FunctionResult<_qty2043, _qty2043>, NamedDeclName<_s518> {}; // CXXMethod GetExternalStringResource
struct _d2239: CXXMethodDecl, FunctionDecl<_ty1945, Pack<>>, FunctionInstance<_qty2022>, FunctionResult<_qty2057, _qty2057>, NamedDeclName<_s519> {}; // CXXMethod GetExternalOneByteStringResource
struct _d2240: CXXMethodDecl, FunctionDecl<_ty1946, Pack<_d2241>>, FunctionNoInstance, FunctionResult<_qty2068, _qty2068>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2241: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2242: CXXMethodDecl, FunctionDecl<_ty1948, Pack<_d2243, _d2244, _d2245, _d2246>>, FunctionNoInstance, FunctionResult<_qty2070, _qty2070>, NamedDeclName<_s520> {}; // CXXMethod NewFromUtf8
struct _d2243: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2244: NamedDeclName<_s130> {}; // ParmVar data
struct _d2245: NamedDeclName<_s85> {}; // ParmVar type
struct _d2246: NamedDeclName<_s160> {}; // ParmVar length
struct _d2247: CXXMethodDecl, FunctionDecl<_ty1950, Pack<_d2248, _d2249, _d2250, _d2251>>, FunctionNoInstance, FunctionResult<_qty2072, _qty2072>, NamedDeclName<_s521> {}; // CXXMethod NewFromOneByte
struct _d2248: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2249: NamedDeclName<_s130> {}; // ParmVar data
struct _d2250: NamedDeclName<_s85> {}; // ParmVar type
struct _d2251: NamedDeclName<_s160> {}; // ParmVar length
struct _d2252: CXXMethodDecl, FunctionDecl<_ty1952, Pack<_d2253, _d2254, _d2255, _d2256>>, FunctionNoInstance, FunctionResult<_qty2074, _qty2074>, NamedDeclName<_s522> {}; // CXXMethod NewFromTwoByte
struct _d2253: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2254: NamedDeclName<_s130> {}; // ParmVar data
struct _d2255: NamedDeclName<_s85> {}; // ParmVar type
struct _d2256: NamedDeclName<_s160> {}; // ParmVar length
struct _d2257: CXXMethodDecl, FunctionDecl<_ty1956, Pack<_d2258, _d2259, _d2260>>, FunctionNoInstance, FunctionResult<_qty2078, _qty2078>, NamedDeclName<_s523> {}; // CXXMethod Concat
struct _d2258: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2259: NamedDeclName<_s524> {}; // ParmVar left
struct _d2260: NamedDeclName<_s525> {}; // ParmVar right
struct _d2261: CXXMethodDecl, FunctionDecl<_ty1958, Pack<_d2262, _d2263>>, FunctionNoInstance, FunctionResult<_qty2080, _qty2080>, NamedDeclName<_s526> {}; // CXXMethod NewExternalTwoByte
struct _d2262: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2263: NamedDeclName<_s527> {}; // ParmVar resource
struct _d2264: CXXMethodDecl, FunctionDecl<_ty1960, Pack<_d2265>>, FunctionInstance<_qty2068>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s528> {}; // CXXMethod MakeExternal
struct _d2265: NamedDeclName<_s527> {}; // ParmVar resource
struct _d2266: CXXMethodDecl, FunctionDecl<_ty1961, Pack<_d2267, _d2268>>, FunctionNoInstance, FunctionResult<_qty2083, _qty2083>, NamedDeclName<_s529> {}; // CXXMethod NewExternalOneByte
struct _d2267: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2268: NamedDeclName<_s527> {}; // ParmVar resource
struct _d2269: CXXMethodDecl, FunctionDecl<_ty1963, Pack<_d2270>>, FunctionInstance<_qty2068>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s528> {}; // CXXMethod MakeExternal
struct _d2270: NamedDeclName<_s527> {}; // ParmVar resource
struct _d2271: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty2068>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s530> {}; // CXXMethod CanMakeExternal
struct _d2272: CXXMethodDecl, FunctionDecl<_ty1965, Pack<_d2273>>, FunctionInstance<_qty2068>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s531> {}; // CXXMethod StringEquals
struct _d2273: NamedDeclName<_s532> {}; // ParmVar str
struct _d2274: NamedDeclName<_s533>, TypeDecl<_qty2088> {}; // CXXRecord Utf8Value
struct _d2275: NamedDeclName<_s533>, TypeDecl<_qty2088> {}; // CXXRecord Utf8Value
struct _d2276: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1968, Pack<_d2277, _d2278>>, FunctionInstance<_qty2091>, FunctionNoResult {}; // CXXConstructor Utf8Value
struct _d2277: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2278: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2279: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1970, Pack<>>, FunctionInstance<_qty2091>, FunctionNoResult {}; // CXXDestructor ~Utf8Value
struct _d2280: CXXMethodDecl, FunctionDecl<_ty1971, Pack<>>, FunctionInstance<_qty2091>, FunctionResult<_qty2029, _qty2029>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d2281: CXXMethodDecl, FunctionDecl<_ty1935, Pack<>>, FunctionInstance<_qty2094>, FunctionResult<_qty1082, _qty1082>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d2282: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2094>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s160> {}; // CXXMethod length
struct _d2283: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1974, Pack<_d2284>>, FunctionInstance<_qty2091>, FunctionNoResult {}; // CXXConstructor Utf8Value
struct _d2284: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2285: CXXMethodDecl, FunctionDecl<_ty1974, Pack<_d2286>>, FunctionInstance<_qty2091>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2286: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2287: NamedDeclName<_s49>, TypeDecl<_qty2098> {}; // CXXRecord Value
struct _d2288: NamedDeclName<_s49>, TypeDecl<_qty2098> {}; // CXXRecord Value
struct _d2289: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1977, Pack<_d2290, _d2291>>, FunctionInstance<_qty2101>, FunctionNoResult {}; // CXXConstructor Value
struct _d2290: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2291: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2292: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty1979, Pack<>>, FunctionInstance<_qty2101>, FunctionNoResult {}; // CXXDestructor ~Value
struct _d2293: CXXMethodDecl, FunctionDecl<_ty1980, Pack<>>, FunctionInstance<_qty2101>, FunctionResult<_qty2025, _qty2025>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d2294: CXXMethodDecl, FunctionDecl<_ty1924, Pack<>>, FunctionInstance<_qty2104>, FunctionResult<_qty2044, _qty2044>, NamedDeclName<_s57> {}; // CXXMethod operator*
struct _d2295: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2104>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s160> {}; // CXXMethod length
struct _d2296: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1983, Pack<_d2297>>, FunctionInstance<_qty2101>, FunctionNoResult {}; // CXXConstructor Value
struct _d2297: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2298: CXXMethodDecl, FunctionDecl<_ty1983, Pack<_d2299>>, FunctionInstance<_qty2101>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2299: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2300: NamedDeclName<_s43>, TypeDecl<_qty48> {}; // CXXRecord Symbol
struct _d2301: CXXMethodDecl, FunctionDecl<_ty1984, Pack<>>, FunctionInstance<_qty2110>, FunctionResult<_qty2108, _qty2108>, NamedDeclName<_s23> {}; // CXXMethod Name
struct _d2302: CXXMethodDecl, FunctionDecl<_ty1988, Pack<_d2303, _d2304>>, FunctionNoInstance, FunctionResult<_qty2112, _qty2112>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2303: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2304: NamedDeclName<_s534> {}; // ParmVar name
struct _d2305: CXXMethodDecl, FunctionDecl<_ty1991, Pack<_d2306, _d2307>>, FunctionNoInstance, FunctionResult<_qty2115, _qty2115>, NamedDeclName<_s535> {}; // CXXMethod For
struct _d2306: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2307: NamedDeclName<_s534> {}; // ParmVar name
struct _d2308: CXXMethodDecl, FunctionDecl<_ty1994, Pack<_d2309, _d2310>>, FunctionNoInstance, FunctionResult<_qty2118, _qty2118>, NamedDeclName<_s536> {}; // CXXMethod ForApi
struct _d2309: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2310: NamedDeclName<_s534> {}; // ParmVar name
struct _d2311: CXXMethodDecl, FunctionDecl<_ty1996, Pack<_d2312>>, FunctionNoInstance, FunctionResult<_qty2120, _qty2120>, NamedDeclName<_s537> {}; // CXXMethod GetAsyncIterator
struct _d2312: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2313: CXXMethodDecl, FunctionDecl<_ty1998, Pack<_d2314>>, FunctionNoInstance, FunctionResult<_qty2122, _qty2122>, NamedDeclName<_s538> {}; // CXXMethod GetHasInstance
struct _d2314: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2315: CXXMethodDecl, FunctionDecl<_ty2000, Pack<_d2316>>, FunctionNoInstance, FunctionResult<_qty2124, _qty2124>, NamedDeclName<_s539> {}; // CXXMethod GetIsConcatSpreadable
struct _d2316: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2317: CXXMethodDecl, FunctionDecl<_ty2002, Pack<_d2318>>, FunctionNoInstance, FunctionResult<_qty2126, _qty2126>, NamedDeclName<_s540> {}; // CXXMethod GetIterator
struct _d2318: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2319: CXXMethodDecl, FunctionDecl<_ty2004, Pack<_d2320>>, FunctionNoInstance, FunctionResult<_qty2128, _qty2128>, NamedDeclName<_s541> {}; // CXXMethod GetMatch
struct _d2320: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2321: CXXMethodDecl, FunctionDecl<_ty2006, Pack<_d2322>>, FunctionNoInstance, FunctionResult<_qty2130, _qty2130>, NamedDeclName<_s542> {}; // CXXMethod GetReplace
struct _d2322: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2323: CXXMethodDecl, FunctionDecl<_ty2008, Pack<_d2324>>, FunctionNoInstance, FunctionResult<_qty2132, _qty2132>, NamedDeclName<_s543> {}; // CXXMethod GetSearch
struct _d2324: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2325: CXXMethodDecl, FunctionDecl<_ty2010, Pack<_d2326>>, FunctionNoInstance, FunctionResult<_qty2134, _qty2134>, NamedDeclName<_s544> {}; // CXXMethod GetSplit
struct _d2326: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2327: CXXMethodDecl, FunctionDecl<_ty2012, Pack<_d2328>>, FunctionNoInstance, FunctionResult<_qty2136, _qty2136>, NamedDeclName<_s545> {}; // CXXMethod GetToPrimitive
struct _d2328: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2329: CXXMethodDecl, FunctionDecl<_ty2014, Pack<_d2330>>, FunctionNoInstance, FunctionResult<_qty2138, _qty2138>, NamedDeclName<_s546> {}; // CXXMethod GetToStringTag
struct _d2330: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2331: CXXMethodDecl, FunctionDecl<_ty2016, Pack<_d2332>>, FunctionNoInstance, FunctionResult<_qty2140, _qty2140>, NamedDeclName<_s547> {}; // CXXMethod GetUnscopables
struct _d2332: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2333: CXXMethodDecl, FunctionDecl<_ty2018, Pack<_d2334>>, FunctionNoInstance, FunctionResult<_qty2142, _qty2142>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2334: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2335: NamedDeclName<_s46>, TypeDecl<_qty51> {}; // CXXRecord Private
struct _d2336: CXXMethodDecl, FunctionDecl<_ty2020, Pack<>>, FunctionInstance<_qty2146>, FunctionResult<_qty2144, _qty2144>, NamedDeclName<_s23> {}; // CXXMethod Name
struct _d2337: CXXMethodDecl, FunctionDecl<_ty2024, Pack<_d2338, _d2339>>, FunctionNoInstance, FunctionResult<_qty2148, _qty2148>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2338: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2339: NamedDeclName<_s534> {}; // ParmVar name
struct _d2340: CXXMethodDecl, FunctionDecl<_ty2027, Pack<_d2341, _d2342>>, FunctionNoInstance, FunctionResult<_qty2151, _qty2151>, NamedDeclName<_s536> {}; // CXXMethod ForApi
struct _d2341: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2342: NamedDeclName<_s534> {}; // ParmVar name
struct _d2343: CXXMethodDecl, FunctionDecl<_ty2030, Pack<_d2344>>, FunctionNoInstance, FunctionResult<_qty2154, _qty2154>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2344: NamedDeclName<_s130> {}; // ParmVar data
struct _d2345: NamedDeclName<_s24>, TypeDecl<_qty29> {}; // CXXRecord Number
struct _d2346: CXXMethodDecl, FunctionDecl<_ty2032, Pack<>>, FunctionInstance<_qty2157>, FunctionResult<_qty1904, _qty1904>, NamedDeclName<_s49> {}; // CXXMethod Value
struct _d2347: CXXMethodDecl, FunctionDecl<_ty2034, Pack<_d2348, _d2349>>, FunctionNoInstance, FunctionResult<_qty2158, _qty2158>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2348: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2349: NamedDeclName<_s153> {}; // ParmVar value
struct _d2350: CXXMethodDecl, FunctionDecl<_ty2036, Pack<_d2351>>, FunctionNoInstance, FunctionResult<_qty2160, _qty2160>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2351: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2352: NamedDeclName<_s19>, TypeDecl<_qty18> {}; // CXXRecord Integer
struct _d2353: CXXMethodDecl, FunctionDecl<_ty2039, Pack<_d2354, _d2355>>, FunctionNoInstance, FunctionResult<_qty2163, _qty2163>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2354: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2355: NamedDeclName<_s153> {}; // ParmVar value
struct _d2356: CXXMethodDecl, FunctionDecl<_ty2041, Pack<_d2357, _d2358>>, FunctionNoInstance, FunctionResult<_qty2165, _qty2165>, NamedDeclName<_s548> {}; // CXXMethod NewFromUnsigned
struct _d2357: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2358: NamedDeclName<_s153> {}; // ParmVar value
struct _d2359: CXXMethodDecl, FunctionDecl<_ty2043, Pack<>>, FunctionInstance<_qty2170>, FunctionResult<_qty2167, _qty2167>, NamedDeclName<_s49> {}; // CXXMethod Value
struct _d2360: CXXMethodDecl, FunctionDecl<_ty2047, Pack<_d2361>>, FunctionNoInstance, FunctionResult<_qty2171, _qty2171>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2361: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2362: NamedDeclName<_s18>, TypeDecl<_qty17> {}; // CXXRecord Int32
struct _d2363: CXXMethodDecl, FunctionDecl<_ty2049, Pack<>>, FunctionInstance<_qty2174>, FunctionResult<_qty2162, _qty2162>, NamedDeclName<_s49> {}; // CXXMethod Value
struct _d2364: CXXMethodDecl, FunctionDecl<_ty2051, Pack<_d2365>>, FunctionNoInstance, FunctionResult<_qty2175, _qty2175>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2365: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2366: NamedDeclName<_s47>, TypeDecl<_qty52> {}; // CXXRecord Uint32
struct _d2367: CXXMethodDecl, FunctionDecl<_ty1819, Pack<>>, FunctionInstance<_qty2177>, FunctionResult<_qty1791, _qty1791>, NamedDeclName<_s49> {}; // CXXMethod Value
struct _d2368: CXXMethodDecl, FunctionDecl<_ty2054, Pack<_d2369>>, FunctionNoInstance, FunctionResult<_qty2178, _qty2178>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2369: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2370: NamedDeclName<_s8>, TypeDecl<_qty7> {}; // CXXRecord BigInt
struct _d2371: CXXMethodDecl, FunctionDecl<_ty2056, Pack<_d2372, _d2373>>, FunctionNoInstance, FunctionResult<_qty2180, _qty2180>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2372: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2373: NamedDeclName<_s153> {}; // ParmVar value
struct _d2374: CXXMethodDecl, FunctionDecl<_ty2058, Pack<_d2375, _d2376>>, FunctionNoInstance, FunctionResult<_qty2182, _qty2182>, NamedDeclName<_s548> {}; // CXXMethod NewFromUnsigned
struct _d2375: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2376: NamedDeclName<_s153> {}; // ParmVar value
struct _d2377: CXXMethodDecl, FunctionDecl<_ty2062, Pack<_d2378, _d2379, _d2380, _d2381>>, FunctionNoInstance, FunctionResult<_qty2186, _qty2186>, NamedDeclName<_s549> {}; // CXXMethod NewFromWords
struct _d2378: NamedDeclName<_s220> {}; // ParmVar context
struct _d2379: NamedDeclName<_s550> {}; // ParmVar sign_bit
struct _d2380: NamedDeclName<_s551> {}; // ParmVar word_count
struct _d2381: NamedDeclName<_s552> {}; // ParmVar words
struct _d2382: CXXMethodDecl, FunctionDecl<_ty2065, Pack<_d2383>>, FunctionInstance<_qty2190>, FunctionResult<_qty1902, _qty1902>, NamedDeclName<_s553> {}; // CXXMethod Uint64Value
struct _d2383: NamedDeclName<_s554> {}; // ParmVar lossless
struct _d2384: CXXMethodDecl, FunctionDecl<_ty2067, Pack<_d2385>>, FunctionInstance<_qty2190>, FunctionResult<_qty2167, _qty2167>, NamedDeclName<_s555> {}; // CXXMethod Int64Value
struct _d2385: NamedDeclName<_s554> {}; // ParmVar lossless
struct _d2386: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2190>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s556> {}; // CXXMethod WordCount
struct _d2387: CXXMethodDecl, FunctionDecl<_ty2068, Pack<_d2388, _d2389, _d2390>>, FunctionInstance<_qty2190>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s557> {}; // CXXMethod ToWordsArray
struct _d2388: NamedDeclName<_s550> {}; // ParmVar sign_bit
struct _d2389: NamedDeclName<_s551> {}; // ParmVar word_count
struct _d2390: NamedDeclName<_s552> {}; // ParmVar words
struct _d2391: CXXMethodDecl, FunctionDecl<_ty2069, Pack<_d2392>>, FunctionNoInstance, FunctionResult<_qty2193, _qty2193>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2392: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2393: NamedDeclName<_s558>, TypeDecl<_qty2195> {}; // Enum PropertyAttribute
struct _d2394: NamedDeclName<_s559> {}; // EnumConstant None
struct _d2395: NamedDeclName<_s560> {}; // EnumConstant ReadOnly
struct _d2396: NamedDeclName<_s561> {}; // EnumConstant DontEnum
struct _d2397: NamedDeclName<_s562> {}; // EnumConstant DontDelete
struct _d2398: NamedDeclName<_s563>, TypeDecl<_qty2196> {}; // Typedef AccessorGetterCallback
struct _d2399: NamedDeclName<_s564>, TypeDecl<_qty2202> {}; // Typedef AccessorNameGetterCallback
struct _d2400: NamedDeclName<_s565>, TypeDecl<_qty2208> {}; // Typedef AccessorSetterCallback
struct _d2401: NamedDeclName<_s566>, TypeDecl<_qty2215> {}; // Typedef AccessorNameSetterCallback
struct _d2402: NamedDeclName<_s567>, TypeDecl<_qty2222> {}; // Enum AccessControl
struct _d2403: NamedDeclName<_s568> {}; // EnumConstant DEFAULT
struct _d2404: NamedDeclName<_s569> {}; // EnumConstant ALL_CAN_READ
struct _d2405: NamedDeclName<_s570> {}; // EnumConstant ALL_CAN_WRITE
struct _d2406: NamedDeclName<_s571> {}; // EnumConstant PROHIBITS_OVERWRITING
struct _d2407: NamedDeclName<_s572>, TypeDecl<_qty2223> {}; // Enum PropertyFilter
struct _d2408: NamedDeclName<_s573> {}; // EnumConstant ALL_PROPERTIES
struct _d2409: NamedDeclName<_s574> {}; // EnumConstant ONLY_WRITABLE
struct _d2410: NamedDeclName<_s575> {}; // EnumConstant ONLY_ENUMERABLE
struct _d2411: NamedDeclName<_s576> {}; // EnumConstant ONLY_CONFIGURABLE
struct _d2412: NamedDeclName<_s577> {}; // EnumConstant SKIP_STRINGS
struct _d2413: NamedDeclName<_s578> {}; // EnumConstant SKIP_SYMBOLS
struct _d2414: NamedDeclName<_s579>, TypeDecl<_qty2224> {}; // Enum SideEffectType
struct _d2415: NamedDeclName<_s580> {}; // EnumConstant kHasSideEffect
struct _d2416: NamedDeclName<_s581> {}; // EnumConstant kHasNoSideEffect
struct _d2417: NamedDeclName<_s582> {}; // EnumConstant kHasSideEffectToReceiver
struct _d2418: NamedDeclName<_s583>, TypeDecl<_qty2225> {}; // Enum KeyCollectionMode
struct _d2419: NamedDeclName<_s584> {}; // EnumConstant kOwnOnly
struct _d2420: NamedDeclName<_s585> {}; // EnumConstant kIncludePrototypes
struct _d2421: NamedDeclName<_s586>, TypeDecl<_qty2226> {}; // Enum IndexFilter
struct _d2422: NamedDeclName<_s587> {}; // EnumConstant kIncludeIndices
struct _d2423: NamedDeclName<_s588> {}; // EnumConstant kSkipIndices
struct _d2424: NamedDeclName<_s589>, TypeDecl<_qty2227> {}; // Enum KeyConversionMode
struct _d2425: NamedDeclName<_s590> {}; // EnumConstant kConvertToString
struct _d2426: NamedDeclName<_s591> {}; // EnumConstant kKeepNumbers
struct _d2427: NamedDeclName<_s592>, TypeDecl<_qty2228> {}; // Enum IntegrityLevel
struct _d2428: NamedDeclName<_s593> {}; // EnumConstant kFrozen
struct _d2429: NamedDeclName<_s594> {}; // EnumConstant kSealed
struct _d2430: NamedDeclName<_s26>, TypeDecl<_qty31> {}; // CXXRecord Object
struct _d2431: CXXMethodDecl, FunctionDecl<_ty2111, Pack<_d2432, _d2433>>, FunctionInstance<_qty2232>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2432: NamedDeclName<_s595> {}; // ParmVar key
struct _d2433: NamedDeclName<_s153> {}; // ParmVar value
struct _d2434: CXXMethodDecl, FunctionDecl<_ty2116, Pack<_d2435, _d2436, _d2437>>, FunctionInstance<_qty2232>, FunctionResult<_qty2236, _qty2236>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2435: NamedDeclName<_s220> {}; // ParmVar context
struct _d2436: NamedDeclName<_s595> {}; // ParmVar key
struct _d2437: NamedDeclName<_s153> {}; // ParmVar value
struct _d2438: CXXMethodDecl, FunctionDecl<_ty2119, Pack<_d2439, _d2440>>, FunctionInstance<_qty2232>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2439: NamedDeclName<_s128> {}; // ParmVar index
struct _d2440: NamedDeclName<_s153> {}; // ParmVar value
struct _d2441: CXXMethodDecl, FunctionDecl<_ty2122, Pack<_d2442, _d2443, _d2444>>, FunctionInstance<_qty2232>, FunctionResult<_qty2242, _qty2242>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2442: NamedDeclName<_s220> {}; // ParmVar context
struct _d2443: NamedDeclName<_s128> {}; // ParmVar index
struct _d2444: NamedDeclName<_s153> {}; // ParmVar value
struct _d2445: CXXMethodDecl, FunctionDecl<_ty2127, Pack<_d2446, _d2447, _d2448>>, FunctionInstance<_qty2232>, FunctionResult<_qty2247, _qty2247>, NamedDeclName<_s596> {}; // CXXMethod CreateDataProperty
struct _d2446: NamedDeclName<_s220> {}; // ParmVar context
struct _d2447: NamedDeclName<_s595> {}; // ParmVar key
struct _d2448: NamedDeclName<_s153> {}; // ParmVar value
struct _d2449: CXXMethodDecl, FunctionDecl<_ty2131, Pack<_d2450, _d2451, _d2452>>, FunctionInstance<_qty2232>, FunctionResult<_qty2251, _qty2251>, NamedDeclName<_s596> {}; // CXXMethod CreateDataProperty
struct _d2450: NamedDeclName<_s220> {}; // ParmVar context
struct _d2451: NamedDeclName<_s128> {}; // ParmVar index
struct _d2452: NamedDeclName<_s153> {}; // ParmVar value
struct _d2453: CXXMethodDecl, FunctionDecl<_ty2136, Pack<_d2454, _d2455, _d2456, _d2457>>, FunctionInstance<_qty2232>, FunctionResult<_qty2256, _qty2256>, NamedDeclName<_s597> {}; // CXXMethod DefineOwnProperty
struct _d2454: NamedDeclName<_s220> {}; // ParmVar context
struct _d2455: NamedDeclName<_s595> {}; // ParmVar key
struct _d2456: NamedDeclName<_s153> {}; // ParmVar value
struct _d2457: NamedDeclName<_s598> {}; // ParmVar attributes
struct _d2458: CXXMethodDecl, FunctionDecl<_ty2141, Pack<_d2459, _d2460, _d2461>>, FunctionInstance<_qty2232>, FunctionResult<_qty2261, _qty2261>, NamedDeclName<_s599> {}; // CXXMethod DefineProperty
struct _d2459: NamedDeclName<_s220> {}; // ParmVar context
struct _d2460: NamedDeclName<_s595> {}; // ParmVar key
struct _d2461: NamedDeclName<_s600> {}; // ParmVar descriptor
struct _d2462: CXXMethodDecl, FunctionDecl<_ty2144, Pack<_d2463>>, FunctionInstance<_qty2232>, FunctionResult<_qty2264, _qty2264>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d2463: NamedDeclName<_s595> {}; // ParmVar key
struct _d2464: CXXMethodDecl, FunctionDecl<_ty2148, Pack<_d2465, _d2466>>, FunctionInstance<_qty2232>, FunctionResult<_qty2268, _qty2268>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d2465: NamedDeclName<_s220> {}; // ParmVar context
struct _d2466: NamedDeclName<_s595> {}; // ParmVar key
struct _d2467: CXXMethodDecl, FunctionDecl<_ty2150, Pack<_d2468>>, FunctionInstance<_qty2232>, FunctionResult<_qty2270, _qty2270>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d2468: NamedDeclName<_s128> {}; // ParmVar index
struct _d2469: CXXMethodDecl, FunctionDecl<_ty2153, Pack<_d2470, _d2471>>, FunctionInstance<_qty2232>, FunctionResult<_qty2273, _qty2273>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d2470: NamedDeclName<_s220> {}; // ParmVar context
struct _d2471: NamedDeclName<_s128> {}; // ParmVar index
struct _d2472: CXXMethodDecl, FunctionDecl<_ty2157, Pack<_d2473, _d2474>>, FunctionInstance<_qty2232>, FunctionResult<_qty2277, _qty2277>, NamedDeclName<_s601> {}; // CXXMethod GetPropertyAttributes
struct _d2473: NamedDeclName<_s220> {}; // ParmVar context
struct _d2474: NamedDeclName<_s595> {}; // ParmVar key
struct _d2475: CXXMethodDecl, FunctionDecl<_ty2161, Pack<_d2476, _d2477>>, FunctionInstance<_qty2232>, FunctionResult<_qty2281, _qty2281>, NamedDeclName<_s602> {}; // CXXMethod GetOwnPropertyDescriptor
struct _d2476: NamedDeclName<_s220> {}; // ParmVar context
struct _d2477: NamedDeclName<_s595> {}; // ParmVar key
struct _d2478: CXXMethodDecl, FunctionDecl<_ty2165, Pack<_d2479, _d2480>>, FunctionInstance<_qty2232>, FunctionResult<_qty2285, _qty2285>, NamedDeclName<_s603> {}; // CXXMethod Has
struct _d2479: NamedDeclName<_s220> {}; // ParmVar context
struct _d2480: NamedDeclName<_s595> {}; // ParmVar key
struct _d2481: CXXMethodDecl, FunctionDecl<_ty2169, Pack<_d2482, _d2483>>, FunctionInstance<_qty2232>, FunctionResult<_qty2289, _qty2289>, NamedDeclName<_s604> {}; // CXXMethod Delete
struct _d2482: NamedDeclName<_s220> {}; // ParmVar context
struct _d2483: NamedDeclName<_s595> {}; // ParmVar key
struct _d2484: CXXMethodDecl, FunctionDecl<_ty2172, Pack<_d2485, _d2486>>, FunctionInstance<_qty2232>, FunctionResult<_qty2292, _qty2292>, NamedDeclName<_s603> {}; // CXXMethod Has
struct _d2485: NamedDeclName<_s220> {}; // ParmVar context
struct _d2486: NamedDeclName<_s128> {}; // ParmVar index
struct _d2487: CXXMethodDecl, FunctionDecl<_ty2175, Pack<_d2488, _d2489>>, FunctionInstance<_qty2232>, FunctionResult<_qty2295, _qty2295>, NamedDeclName<_s604> {}; // CXXMethod Delete
struct _d2488: NamedDeclName<_s220> {}; // ParmVar context
struct _d2489: NamedDeclName<_s128> {}; // ParmVar index
struct _d2490: CXXMethodDecl, FunctionDecl<_ty2180, Pack<_d2491, _d2492, _d2493, _d2494, _d2495, _d2496, _d2497, _d2498, _d2499>>, FunctionInstance<_qty2232>, FunctionResult<_qty2300, _qty2300>, NamedDeclName<_s605> {}; // CXXMethod SetAccessor
struct _d2491: NamedDeclName<_s220> {}; // ParmVar context
struct _d2492: NamedDeclName<_s534> {}; // ParmVar name
struct _d2493: NamedDeclName<_s606> {}; // ParmVar getter
struct _d2494: NamedDeclName<_s607> {}; // ParmVar setter
struct _d2495: NamedDeclName<_s130> {}; // ParmVar data
struct _d2496: NamedDeclName<_s608> {}; // ParmVar settings
struct _d2497: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d2498: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d2499: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d2500: CXXMethodDecl, FunctionDecl<_ty2185, Pack<_d2501, _d2502, _d2503, _d2504, _d2505>>, FunctionInstance<_qty2232>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s612> {}; // CXXMethod SetAccessorProperty
struct _d2501: NamedDeclName<_s534> {}; // ParmVar name
struct _d2502: NamedDeclName<_s606> {}; // ParmVar getter
struct _d2503: NamedDeclName<_s607> {}; // ParmVar setter
struct _d2504: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d2505: NamedDeclName<_s608> {}; // ParmVar settings
struct _d2506: CXXMethodDecl, FunctionDecl<_ty2189, Pack<_d2507, _d2508, _d2509, _d2510, _d2511, _d2512, _d2513, _d2514>>, FunctionInstance<_qty2232>, FunctionResult<_qty2309, _qty2309>, NamedDeclName<_s613> {}; // CXXMethod SetNativeDataProperty
struct _d2507: NamedDeclName<_s220> {}; // ParmVar context
struct _d2508: NamedDeclName<_s534> {}; // ParmVar name
struct _d2509: NamedDeclName<_s606> {}; // ParmVar getter
struct _d2510: NamedDeclName<_s607> {}; // ParmVar setter
struct _d2511: NamedDeclName<_s130> {}; // ParmVar data
struct _d2512: NamedDeclName<_s598> {}; // ParmVar attributes
struct _d2513: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d2514: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d2515: CXXMethodDecl, FunctionDecl<_ty2194, Pack<_d2516, _d2517, _d2518, _d2519, _d2520, _d2521, _d2522>>, FunctionInstance<_qty2232>, FunctionResult<_qty2314, _qty2314>, NamedDeclName<_s614> {}; // CXXMethod SetLazyDataProperty
struct _d2516: NamedDeclName<_s220> {}; // ParmVar context
struct _d2517: NamedDeclName<_s534> {}; // ParmVar name
struct _d2518: NamedDeclName<_s606> {}; // ParmVar getter
struct _d2519: NamedDeclName<_s130> {}; // ParmVar data
struct _d2520: NamedDeclName<_s598> {}; // ParmVar attributes
struct _d2521: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d2522: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d2523: CXXMethodDecl, FunctionDecl<_ty2198, Pack<_d2524, _d2525>>, FunctionInstance<_qty2232>, FunctionResult<_qty2318, _qty2318>, NamedDeclName<_s615> {}; // CXXMethod HasPrivate
struct _d2524: NamedDeclName<_s220> {}; // ParmVar context
struct _d2525: NamedDeclName<_s595> {}; // ParmVar key
struct _d2526: CXXMethodDecl, FunctionDecl<_ty2203, Pack<_d2527, _d2528, _d2529>>, FunctionInstance<_qty2232>, FunctionResult<_qty2323, _qty2323>, NamedDeclName<_s616> {}; // CXXMethod SetPrivate
struct _d2527: NamedDeclName<_s220> {}; // ParmVar context
struct _d2528: NamedDeclName<_s595> {}; // ParmVar key
struct _d2529: NamedDeclName<_s153> {}; // ParmVar value
struct _d2530: CXXMethodDecl, FunctionDecl<_ty2207, Pack<_d2531, _d2532>>, FunctionInstance<_qty2232>, FunctionResult<_qty2327, _qty2327>, NamedDeclName<_s617> {}; // CXXMethod DeletePrivate
struct _d2531: NamedDeclName<_s220> {}; // ParmVar context
struct _d2532: NamedDeclName<_s595> {}; // ParmVar key
struct _d2533: CXXMethodDecl, FunctionDecl<_ty2211, Pack<_d2534, _d2535>>, FunctionInstance<_qty2232>, FunctionResult<_qty2331, _qty2331>, NamedDeclName<_s618> {}; // CXXMethod GetPrivate
struct _d2534: NamedDeclName<_s220> {}; // ParmVar context
struct _d2535: NamedDeclName<_s595> {}; // ParmVar key
struct _d2536: CXXMethodDecl, FunctionDecl<_ty2214, Pack<_d2537>>, FunctionInstance<_qty2232>, FunctionResult<_qty2334, _qty2334>, NamedDeclName<_s619> {}; // CXXMethod GetPropertyNames
struct _d2537: NamedDeclName<_s220> {}; // ParmVar context
struct _d2538: CXXMethodDecl, FunctionDecl<_ty2217, Pack<_d2539, _d2540, _d2541, _d2542, _d2543>>, FunctionInstance<_qty2232>, FunctionResult<_qty2337, _qty2337>, NamedDeclName<_s619> {}; // CXXMethod GetPropertyNames
struct _d2539: NamedDeclName<_s220> {}; // ParmVar context
struct _d2540: NamedDeclName<_s389> {}; // ParmVar mode
struct _d2541: NamedDeclName<_s620> {}; // ParmVar property_filter
struct _d2542: NamedDeclName<_s621> {}; // ParmVar index_filter
struct _d2543: NamedDeclName<_s622> {}; // ParmVar key_conversion
struct _d2544: CXXMethodDecl, FunctionDecl<_ty2220, Pack<_d2545>>, FunctionInstance<_qty2232>, FunctionResult<_qty2340, _qty2340>, NamedDeclName<_s623> {}; // CXXMethod GetOwnPropertyNames
struct _d2545: NamedDeclName<_s220> {}; // ParmVar context
struct _d2546: CXXMethodDecl, FunctionDecl<_ty2223, Pack<_d2547, _d2548, _d2549>>, FunctionInstance<_qty2232>, FunctionResult<_qty2343, _qty2343>, NamedDeclName<_s623> {}; // CXXMethod GetOwnPropertyNames
struct _d2547: NamedDeclName<_s220> {}; // ParmVar context
struct _d2548: NamedDeclName<_s624> {}; // ParmVar filter
struct _d2549: NamedDeclName<_s622> {}; // ParmVar key_conversion
struct _d2550: CXXMethodDecl, FunctionDecl<_ty2225, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty2345, _qty2345>, NamedDeclName<_s625> {}; // CXXMethod GetPrototype
struct _d2551: CXXMethodDecl, FunctionDecl<_ty2229, Pack<_d2552, _d2553>>, FunctionInstance<_qty2232>, FunctionResult<_qty2349, _qty2349>, NamedDeclName<_s626> {}; // CXXMethod SetPrototype
struct _d2552: NamedDeclName<_s220> {}; // ParmVar context
struct _d2553: NamedDeclName<_s627> {}; // ParmVar prototype
struct _d2554: CXXMethodDecl, FunctionDecl<_ty2232, Pack<_d2555>>, FunctionInstance<_qty2232>, FunctionResult<_qty2352, _qty2352>, NamedDeclName<_s628> {}; // CXXMethod FindInstanceInPrototypeChain
struct _d2555: NamedDeclName<_s629> {}; // ParmVar tmpl
struct _d2556: CXXMethodDecl, FunctionDecl<_ty2235, Pack<_d2557>>, FunctionInstance<_qty2232>, FunctionResult<_qty2355, _qty2355>, NamedDeclName<_s630> {}; // CXXMethod ObjectProtoToString
struct _d2557: NamedDeclName<_s220> {}; // ParmVar context
struct _d2558: CXXMethodDecl, FunctionDecl<_ty2237, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty2357, _qty2357>, NamedDeclName<_s631> {}; // CXXMethod GetConstructorName
struct _d2559: CXXMethodDecl, FunctionDecl<_ty2240, Pack<_d2560, _d2561>>, FunctionInstance<_qty2232>, FunctionResult<_qty2360, _qty2360>, NamedDeclName<_s632> {}; // CXXMethod SetIntegrityLevel
struct _d2560: NamedDeclName<_s220> {}; // ParmVar context
struct _d2561: NamedDeclName<_s633> {}; // ParmVar level
struct _d2562: CXXMethodDecl, FunctionDecl<_ty1554, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s634> {}; // CXXMethod InternalFieldCount
struct _d2563: CXXMethodDecl, FunctionDecl<_ty2244, Pack<_d2564>>, FunctionNoInstance, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s634> {}; // CXXMethod InternalFieldCount
struct _d2564: NamedDeclName<_s369> {}; // ParmVar object
struct _d2565: CXXMethodDecl, FunctionDecl<_ty2247, Pack<_d2566>>, FunctionNoInstance, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s634> {}; // CXXMethod InternalFieldCount
struct _d2566: NamedDeclName<_s369> {}; // ParmVar object
struct _d2567: CXXMethodDecl, FunctionDecl<_ty2248, Pack<_d2568>>, FunctionInstance<_qty2232>, FunctionResult<_qty2368, _qty2368>, NamedDeclName<_s127> {}; // CXXMethod GetInternalField
struct _d2568: NamedDeclName<_s128> {}; // ParmVar index
struct _d2569: CXXMethodDecl, FunctionDecl<_ty2251, Pack<_d2570, _d2571>>, FunctionInstance<_qty2232>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s635> {}; // CXXMethod SetInternalField
struct _d2570: NamedDeclName<_s128> {}; // ParmVar index
struct _d2571: NamedDeclName<_s153> {}; // ParmVar value
struct _d2572: CXXMethodDecl, FunctionDecl<_ty2252, Pack<_d2573>>, FunctionInstance<_qty2232>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s636> {}; // CXXMethod GetAlignedPointerFromInternalField
struct _d2573: NamedDeclName<_s128> {}; // ParmVar index
struct _d2574: CXXMethodDecl, FunctionDecl<_ty2255, Pack<_d2575, _d2576>>, FunctionNoInstance, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s636> {}; // CXXMethod GetAlignedPointerFromInternalField
struct _d2575: NamedDeclName<_s369> {}; // ParmVar object
struct _d2576: NamedDeclName<_s128> {}; // ParmVar index
struct _d2577: CXXMethodDecl, FunctionDecl<_ty2258, Pack<_d2578, _d2579>>, FunctionNoInstance, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s636> {}; // CXXMethod GetAlignedPointerFromInternalField
struct _d2578: NamedDeclName<_s369> {}; // ParmVar object
struct _d2579: NamedDeclName<_s128> {}; // ParmVar index
struct _d2580: CXXMethodDecl, FunctionDecl<_ty2259, Pack<_d2581, _d2582>>, FunctionInstance<_qty2232>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s637> {}; // CXXMethod SetAlignedPointerInInternalField
struct _d2581: NamedDeclName<_s128> {}; // ParmVar index
struct _d2582: NamedDeclName<_s153> {}; // ParmVar value
struct _d2583: CXXMethodDecl, FunctionDecl<_ty2262, Pack<_d2584, _d2585, _d2586>>, FunctionInstance<_qty2232>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s638> {}; // CXXMethod SetAlignedPointerInInternalFields
struct _d2584: NamedDeclName<_s639> {}; // ParmVar argc
struct _d2585: NamedDeclName<_s640> {}; // ParmVar indices
struct _d2586: NamedDeclName<_s641> {}; // ParmVar values
struct _d2587: CXXMethodDecl, FunctionDecl<_ty2265, Pack<_d2588, _d2589>>, FunctionInstance<_qty2232>, FunctionResult<_qty2385, _qty2385>, NamedDeclName<_s642> {}; // CXXMethod HasOwnProperty
struct _d2588: NamedDeclName<_s220> {}; // ParmVar context
struct _d2589: NamedDeclName<_s595> {}; // ParmVar key
struct _d2590: CXXMethodDecl, FunctionDecl<_ty2268, Pack<_d2591, _d2592>>, FunctionInstance<_qty2232>, FunctionResult<_qty2388, _qty2388>, NamedDeclName<_s642> {}; // CXXMethod HasOwnProperty
struct _d2591: NamedDeclName<_s220> {}; // ParmVar context
struct _d2592: NamedDeclName<_s128> {}; // ParmVar index
struct _d2593: CXXMethodDecl, FunctionDecl<_ty2272, Pack<_d2594, _d2595>>, FunctionInstance<_qty2232>, FunctionResult<_qty2392, _qty2392>, NamedDeclName<_s643> {}; // CXXMethod HasRealNamedProperty
struct _d2594: NamedDeclName<_s220> {}; // ParmVar context
struct _d2595: NamedDeclName<_s595> {}; // ParmVar key
struct _d2596: CXXMethodDecl, FunctionDecl<_ty2275, Pack<_d2597, _d2598>>, FunctionInstance<_qty2232>, FunctionResult<_qty2395, _qty2395>, NamedDeclName<_s644> {}; // CXXMethod HasRealIndexedProperty
struct _d2597: NamedDeclName<_s220> {}; // ParmVar context
struct _d2598: NamedDeclName<_s128> {}; // ParmVar index
struct _d2599: CXXMethodDecl, FunctionDecl<_ty2279, Pack<_d2600, _d2601>>, FunctionInstance<_qty2232>, FunctionResult<_qty2399, _qty2399>, NamedDeclName<_s645> {}; // CXXMethod HasRealNamedCallbackProperty
struct _d2600: NamedDeclName<_s220> {}; // ParmVar context
struct _d2601: NamedDeclName<_s595> {}; // ParmVar key
struct _d2602: CXXMethodDecl, FunctionDecl<_ty2283, Pack<_d2603, _d2604>>, FunctionInstance<_qty2232>, FunctionResult<_qty2403, _qty2403>, NamedDeclName<_s646> {}; // CXXMethod GetRealNamedPropertyInPrototypeChain
struct _d2603: NamedDeclName<_s220> {}; // ParmVar context
struct _d2604: NamedDeclName<_s595> {}; // ParmVar key
struct _d2605: CXXMethodDecl, FunctionDecl<_ty2287, Pack<_d2606, _d2607>>, FunctionInstance<_qty2232>, FunctionResult<_qty2407, _qty2407>, NamedDeclName<_s647> {}; // CXXMethod GetRealNamedPropertyAttributesInPrototypeChain
struct _d2606: NamedDeclName<_s220> {}; // ParmVar context
struct _d2607: NamedDeclName<_s595> {}; // ParmVar key
struct _d2608: CXXMethodDecl, FunctionDecl<_ty2291, Pack<_d2609, _d2610>>, FunctionInstance<_qty2232>, FunctionResult<_qty2411, _qty2411>, NamedDeclName<_s648> {}; // CXXMethod GetRealNamedProperty
struct _d2609: NamedDeclName<_s220> {}; // ParmVar context
struct _d2610: NamedDeclName<_s595> {}; // ParmVar key
struct _d2611: CXXMethodDecl, FunctionDecl<_ty2295, Pack<_d2612, _d2613>>, FunctionInstance<_qty2232>, FunctionResult<_qty2415, _qty2415>, NamedDeclName<_s649> {}; // CXXMethod GetRealNamedPropertyAttributes
struct _d2612: NamedDeclName<_s220> {}; // ParmVar context
struct _d2613: NamedDeclName<_s595> {}; // ParmVar key
struct _d2614: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s650> {}; // CXXMethod HasNamedLookupInterceptor
struct _d2615: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s651> {}; // CXXMethod HasIndexedLookupInterceptor
struct _d2616: CXXMethodDecl, FunctionDecl<_ty1554, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s217> {}; // CXXMethod GetIdentityHash
struct _d2617: CXXMethodDecl, FunctionDecl<_ty2297, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty2417, _qty2417>, NamedDeclName<_s652> {}; // CXXMethod Clone
struct _d2618: CXXMethodDecl, FunctionDecl<_ty2299, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty2419, _qty2419>, NamedDeclName<_s653> {}; // CXXMethod CreationContext
struct _d2619: CXXMethodDecl, FunctionDecl<_ty2303, Pack<_d2620>>, FunctionNoInstance, FunctionResult<_qty2423, _qty2423>, NamedDeclName<_s653> {}; // CXXMethod CreationContext
struct _d2620: NamedDeclName<_s369> {}; // ParmVar object
struct _d2621: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s654> {}; // CXXMethod IsCallable
struct _d2622: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s329> {}; // CXXMethod IsConstructor
struct _d2623: CXXMethodDecl, FunctionDecl<_ty2310, Pack<_d2624, _d2625, _d2626, _d2627>>, FunctionInstance<_qty2232>, FunctionResult<_qty2429, _qty2429>, NamedDeclName<_s655> {}; // CXXMethod CallAsFunction
struct _d2624: NamedDeclName<_s220> {}; // ParmVar context
struct _d2625: NamedDeclName<_s656> {}; // ParmVar recv
struct _d2626: NamedDeclName<_s639> {}; // ParmVar argc
struct _d2627: NamedDeclName<_s657> {}; // ParmVar argv
struct _d2628: CXXMethodDecl, FunctionDecl<_ty2316, Pack<_d2629, _d2630, _d2631>>, FunctionInstance<_qty2232>, FunctionResult<_qty2434, _qty2434>, NamedDeclName<_s658> {}; // CXXMethod CallAsConstructor
struct _d2629: NamedDeclName<_s220> {}; // ParmVar context
struct _d2630: NamedDeclName<_s639> {}; // ParmVar argc
struct _d2631: NamedDeclName<_s657> {}; // ParmVar argv
struct _d2632: CXXMethodDecl, FunctionDecl<_ty2318, Pack<>>, FunctionInstance<_qty2232>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d2633: CXXMethodDecl, FunctionDecl<_ty2319, Pack<_d2634>>, FunctionInstance<_qty2232>, FunctionResult<_qty2437, _qty2437>, NamedDeclName<_s659> {}; // CXXMethod PreviewEntries
struct _d2634: NamedDeclName<_s660> {}; // ParmVar is_key_value
struct _d2635: CXXMethodDecl, FunctionDecl<_ty2321, Pack<_d2636>>, FunctionNoInstance, FunctionResult<_qty2439, _qty2439>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2636: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2637: CXXMethodDecl, FunctionDecl<_ty2328, Pack<_d2638, _d2639, _d2640, _d2641, _d2642>>, FunctionNoInstance, FunctionResult<_qty2444, _qty2444>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2638: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2639: NamedDeclName<_s661> {}; // ParmVar prototype_or_null
struct _d2640: NamedDeclName<_s662> {}; // ParmVar names
struct _d2641: NamedDeclName<_s641> {}; // ParmVar values
struct _d2642: NamedDeclName<_s160> {}; // ParmVar length
struct _d2643: CXXMethodDecl, FunctionDecl<_ty2330, Pack<_d2644>>, FunctionNoInstance, FunctionResult<_qty2232, _qty2232>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2644: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2645: NamedDeclName<_s6>, TypeDecl<_qty5> {}; // CXXRecord Array
struct _d2646: CXXMethodDecl, FunctionDecl<_ty1819, Pack<>>, FunctionInstance<_qty2447>, FunctionResult<_qty1791, _qty1791>, NamedDeclName<_s161> {}; // CXXMethod Length
struct _d2647: CXXMethodDecl, FunctionDecl<_ty2332, Pack<_d2648, _d2649>>, FunctionNoInstance, FunctionResult<_qty2448, _qty2448>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2648: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2649: NamedDeclName<_s160> {}; // ParmVar length
struct _d2650: CXXMethodDecl, FunctionDecl<_ty2336, Pack<_d2651, _d2652, _d2653>>, FunctionNoInstance, FunctionResult<_qty2451, _qty2451>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2651: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2652: NamedDeclName<_s663> {}; // ParmVar elements
struct _d2653: NamedDeclName<_s160> {}; // ParmVar length
struct _d2654: CXXMethodDecl, FunctionDecl<_ty2338, Pack<_d2655>>, FunctionNoInstance, FunctionResult<_qty2453, _qty2453>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2655: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2656: NamedDeclName<_s664>, TypeDecl<_qty2455> {}; // CXXRecord Map
struct _d2657: NamedDeclName<_s664>, TypeDecl<_qty2455> {}; // CXXRecord Map
struct _d2658: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2456>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s665> {}; // CXXMethod Size
struct _d2659: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2457>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d2660: CXXMethodDecl, FunctionDecl<_ty2345, Pack<_d2661, _d2662>>, FunctionInstance<_qty2457>, FunctionResult<_qty2460, _qty2460>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d2661: NamedDeclName<_s220> {}; // ParmVar context
struct _d2662: NamedDeclName<_s595> {}; // ParmVar key
struct _d2663: CXXMethodDecl, FunctionDecl<_ty2350, Pack<_d2664, _d2665, _d2666>>, FunctionInstance<_qty2457>, FunctionResult<_qty2465, _qty2465>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2664: NamedDeclName<_s220> {}; // ParmVar context
struct _d2665: NamedDeclName<_s595> {}; // ParmVar key
struct _d2666: NamedDeclName<_s153> {}; // ParmVar value
struct _d2667: CXXMethodDecl, FunctionDecl<_ty2354, Pack<_d2668, _d2669>>, FunctionInstance<_qty2457>, FunctionResult<_qty2469, _qty2469>, NamedDeclName<_s603> {}; // CXXMethod Has
struct _d2668: NamedDeclName<_s220> {}; // ParmVar context
struct _d2669: NamedDeclName<_s595> {}; // ParmVar key
struct _d2670: CXXMethodDecl, FunctionDecl<_ty2358, Pack<_d2671, _d2672>>, FunctionInstance<_qty2457>, FunctionResult<_qty2473, _qty2473>, NamedDeclName<_s604> {}; // CXXMethod Delete
struct _d2671: NamedDeclName<_s220> {}; // ParmVar context
struct _d2672: NamedDeclName<_s595> {}; // ParmVar key
struct _d2673: CXXMethodDecl, FunctionDecl<_ty2360, Pack<>>, FunctionInstance<_qty2456>, FunctionResult<_qty2475, _qty2475>, NamedDeclName<_s666> {}; // CXXMethod AsArray
struct _d2674: CXXMethodDecl, FunctionDecl<_ty2362, Pack<_d2675>>, FunctionNoInstance, FunctionResult<_qty2477, _qty2477>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2675: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2676: CXXMethodDecl, FunctionDecl<_ty2364, Pack<_d2677>>, FunctionNoInstance, FunctionResult<_qty2457, _qty2457>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2677: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2678: NamedDeclName<_s120>, TypeDecl<_qty2480> {}; // CXXRecord Set
struct _d2679: NamedDeclName<_s120>, TypeDecl<_qty2480> {}; // CXXRecord Set
struct _d2680: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2481>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s665> {}; // CXXMethod Size
struct _d2681: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2482>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s55> {}; // CXXMethod Clear
struct _d2682: CXXMethodDecl, FunctionDecl<_ty2370, Pack<_d2683, _d2684>>, FunctionInstance<_qty2482>, FunctionResult<_qty2485, _qty2485>, NamedDeclName<_s667> {}; // CXXMethod Add
struct _d2683: NamedDeclName<_s220> {}; // ParmVar context
struct _d2684: NamedDeclName<_s595> {}; // ParmVar key
struct _d2685: CXXMethodDecl, FunctionDecl<_ty2374, Pack<_d2686, _d2687>>, FunctionInstance<_qty2482>, FunctionResult<_qty2489, _qty2489>, NamedDeclName<_s603> {}; // CXXMethod Has
struct _d2686: NamedDeclName<_s220> {}; // ParmVar context
struct _d2687: NamedDeclName<_s595> {}; // ParmVar key
struct _d2688: CXXMethodDecl, FunctionDecl<_ty2378, Pack<_d2689, _d2690>>, FunctionInstance<_qty2482>, FunctionResult<_qty2493, _qty2493>, NamedDeclName<_s604> {}; // CXXMethod Delete
struct _d2689: NamedDeclName<_s220> {}; // ParmVar context
struct _d2690: NamedDeclName<_s595> {}; // ParmVar key
struct _d2691: CXXMethodDecl, FunctionDecl<_ty2380, Pack<>>, FunctionInstance<_qty2481>, FunctionResult<_qty2495, _qty2495>, NamedDeclName<_s666> {}; // CXXMethod AsArray
struct _d2692: CXXMethodDecl, FunctionDecl<_ty2382, Pack<_d2693>>, FunctionNoInstance, FunctionResult<_qty2497, _qty2497>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2693: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2694: CXXMethodDecl, FunctionDecl<_ty2384, Pack<_d2695>>, FunctionNoInstance, FunctionResult<_qty2482, _qty2482>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2695: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2696: NamedDeclName<_s21>, TypeDecl<_qty2500> {}; // TemplateTypeParm T
struct _d2697: NamedDeclName<_s112>, TypeDecl<_qty1281> {}; // CXXRecord ReturnValue
struct _d2698: NamedDeclName<_s668> {}; // FunctionTemplate ReturnValue<T>
struct _d2699: NamedDeclName<_s52>, TypeDecl<_qty2501> {}; // TemplateTypeParm S
struct _d2700: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2389, Pack<_d2701>>, FunctionInstance<_qty2506>, FunctionNoResult {}; // CXXConstructor ReturnValue<T>
struct _d2701: NamedDeclName<_s53> {}; // ParmVar that
struct _d2702: NamedDeclName<_s120> {}; // FunctionTemplate Set
struct _d2703: NamedDeclName<_s52>, TypeDecl<_qty2507> {}; // TemplateTypeParm S
struct _d2704: CXXMethodDecl, FunctionDecl<_ty2394, Pack<_d2705>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2705: NamedDeclName<_s119> {}; // ParmVar handle
struct _d2706: NamedDeclName<_s120> {}; // FunctionTemplate Set
struct _d2707: NamedDeclName<_s52>, TypeDecl<_qty2512> {}; // TemplateTypeParm S
struct _d2708: CXXMethodDecl, FunctionDecl<_ty2398, Pack<_d2709>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2709: NamedDeclName<_s119> {}; // ParmVar handle
struct _d2710: NamedDeclName<_s120> {}; // FunctionTemplate Set
struct _d2711: NamedDeclName<_s52>, TypeDecl<_qty2517> {}; // TemplateTypeParm S
struct _d2712: CXXMethodDecl, FunctionDecl<_ty2401, Pack<_d2713>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2713: NamedDeclName<_s119> {}; // ParmVar handle
struct _d2714: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d2715>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2715: NamedDeclName<_s153> {}; // ParmVar value
struct _d2716: CXXMethodDecl, FunctionDecl<_ty1788, Pack<_d2717>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2717: NamedDeclName<_s215> {}; // ParmVar i
struct _d2718: CXXMethodDecl, FunctionDecl<_ty2402, Pack<_d2719>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2719: NamedDeclName<_s215> {}; // ParmVar i
struct _d2720: CXXMethodDecl, FunctionDecl<_ty1784, Pack<_d2721>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2721: NamedDeclName<_s215> {}; // ParmVar i
struct _d2722: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s669> {}; // CXXMethod SetNull
struct _d2723: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s670> {}; // CXXMethod SetUndefined
struct _d2724: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s671> {}; // CXXMethod SetEmptyString
struct _d2725: CXXMethodDecl, FunctionDecl<_ty1284, Pack<>>, FunctionInstance<_qty2522>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d2726: NamedDeclName<_s120> {}; // FunctionTemplate Set
struct _d2727: NamedDeclName<_s52>, TypeDecl<_qty2523> {}; // TemplateTypeParm S
struct _d2728: CXXMethodDecl, FunctionDecl<_ty2406, Pack<_d2729>>, FunctionInstance<_qty2506>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d2729: NamedDeclName<_s672> {}; // ParmVar whatever
struct _d2730: CXXMethodDecl, FunctionDecl<_ty2407, Pack<>>, FunctionInstance<_qty2522>, FunctionResult<_qty2526, _qty2526>, NamedDeclName<_s80> {}; // CXXMethod Get
struct _d2731: NamedDeclName<_s21>, TypeDecl<_qty2528> {}; // TemplateTypeParm T
struct _d2732: NamedDeclName<_s108>, TypeDecl<_qty1269> {}; // CXXRecord FunctionCallbackInfo
struct _d2733: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s161> {}; // CXXMethod Length
struct _d2734: CXXMethodDecl, FunctionDecl<_ty2411, Pack<_d2735>>, FunctionInstance<_qty2529>, FunctionResult<_qty2530, _qty2530>, NamedDeclName<_s673> {}; // CXXMethod operator[]
struct _d2735: NamedDeclName<_s215> {}; // ParmVar i
struct _d2736: CXXMethodDecl, FunctionDecl<_ty2413, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty2532, _qty2532>, NamedDeclName<_s674> {}; // CXXMethod This
struct _d2737: CXXMethodDecl, FunctionDecl<_ty2415, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty2534, _qty2534>, NamedDeclName<_s675> {}; // CXXMethod Holder
struct _d2738: CXXMethodDecl, FunctionDecl<_ty2417, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty2536, _qty2536>, NamedDeclName<_s676> {}; // CXXMethod NewTarget
struct _d2739: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s677> {}; // CXXMethod IsConstructCall
struct _d2740: CXXMethodDecl, FunctionDecl<_ty2419, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty2538, _qty2538>, NamedDeclName<_s3> {}; // CXXMethod Data
struct _d2741: CXXMethodDecl, FunctionDecl<_ty1284, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d2742: CXXMethodDecl, FunctionDecl<_ty2421, Pack<>>, FunctionInstance<_qty2529>, FunctionResult<_qty2540, _qty2540>, NamedDeclName<_s678> {}; // CXXMethod GetReturnValue
struct _d2743: NamedDeclName<_s679> {}; // Var kArgsLength
struct _d2744: NamedDeclName<_s680> {}; // Var kHolderIndex
struct _d2745: NamedDeclName<_s681> {}; // Var kIsolateIndex
struct _d2746: NamedDeclName<_s682> {}; // Var kReturnValueDefaultValueIndex
struct _d2747: NamedDeclName<_s683> {}; // Var kReturnValueIndex
struct _d2748: NamedDeclName<_s684> {}; // Var kDataIndex
struct _d2749: NamedDeclName<_s685> {}; // Var kNewTargetIndex
struct _d2750: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2423, Pack<_d2751, _d2752, _d2753>>, FunctionInstance<_qty2543>, FunctionNoResult {}; // CXXConstructor FunctionCallbackInfo<T>
struct _d2751: NamedDeclName<_s686> {}; // ParmVar implicit_args
struct _d2752: NamedDeclName<_s641> {}; // ParmVar values
struct _d2753: NamedDeclName<_s160> {}; // ParmVar length
struct _d2754: NamedDeclName<_s687> {}; // Field implicit_args_
struct _d2755: NamedDeclName<_s688> {}; // Field values_
struct _d2756: NamedDeclName<_s689> {}; // Field length_
struct _d2757: NamedDeclName<_s21>, TypeDecl<_qty2544> {}; // TemplateTypeParm T
struct _d2758: NamedDeclName<_s109>, TypeDecl<_qty1272> {}; // CXXRecord PropertyCallbackInfo
struct _d2759: CXXMethodDecl, FunctionDecl<_ty1284, Pack<>>, FunctionInstance<_qty2545>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d2760: CXXMethodDecl, FunctionDecl<_ty2427, Pack<>>, FunctionInstance<_qty2545>, FunctionResult<_qty2546, _qty2546>, NamedDeclName<_s3> {}; // CXXMethod Data
struct _d2761: CXXMethodDecl, FunctionDecl<_ty2429, Pack<>>, FunctionInstance<_qty2545>, FunctionResult<_qty2548, _qty2548>, NamedDeclName<_s674> {}; // CXXMethod This
struct _d2762: CXXMethodDecl, FunctionDecl<_ty2431, Pack<>>, FunctionInstance<_qty2545>, FunctionResult<_qty2550, _qty2550>, NamedDeclName<_s675> {}; // CXXMethod Holder
struct _d2763: CXXMethodDecl, FunctionDecl<_ty2433, Pack<>>, FunctionInstance<_qty2545>, FunctionResult<_qty2552, _qty2552>, NamedDeclName<_s678> {}; // CXXMethod GetReturnValue
struct _d2764: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2545>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s690> {}; // CXXMethod ShouldThrowOnError
struct _d2765: NamedDeclName<_s679> {}; // Var kArgsLength
struct _d2766: NamedDeclName<_s691> {}; // Var kShouldThrowOnErrorIndex
struct _d2767: NamedDeclName<_s680> {}; // Var kHolderIndex
struct _d2768: NamedDeclName<_s681> {}; // Var kIsolateIndex
struct _d2769: NamedDeclName<_s682> {}; // Var kReturnValueDefaultValueIndex
struct _d2770: NamedDeclName<_s683> {}; // Var kReturnValueIndex
struct _d2771: NamedDeclName<_s684> {}; // Var kDataIndex
struct _d2772: NamedDeclName<_s692> {}; // Var kThisIndex
struct _d2773: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2435, Pack<_d2774>>, FunctionInstance<_qty2555>, FunctionNoResult {}; // CXXConstructor PropertyCallbackInfo<T>
struct _d2774: NamedDeclName<_s693> {}; // ParmVar args
struct _d2775: NamedDeclName<_s694> {}; // Field args_
struct _d2776: NamedDeclName<_s695>, TypeDecl<_qty2556> {}; // Typedef FunctionCallback
struct _d2777: NamedDeclName<_s696>, TypeDecl<_qty2561> {}; // Enum ConstructorBehavior
struct _d2778: NamedDeclName<_s697> {}; // EnumConstant kThrow
struct _d2779: NamedDeclName<_s698> {}; // EnumConstant kAllow
struct _d2780: NamedDeclName<_s14>, TypeDecl<_qty13> {}; // CXXRecord Function
struct _d2781: CXXMethodDecl, FunctionDecl<_ty2446, Pack<_d2782, _d2783, _d2784, _d2785, _d2786, _d2787>>, FunctionNoInstance, FunctionResult<_qty2564, _qty2564>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2782: NamedDeclName<_s220> {}; // ParmVar context
struct _d2783: NamedDeclName<_s84> {}; // ParmVar callback
struct _d2784: NamedDeclName<_s130> {}; // ParmVar data
struct _d2785: NamedDeclName<_s160> {}; // ParmVar length
struct _d2786: NamedDeclName<_s699> {}; // ParmVar behavior
struct _d2787: NamedDeclName<_s700> {}; // ParmVar side_effect_type
struct _d2788: CXXMethodDecl, FunctionDecl<_ty2452, Pack<_d2789, _d2790, _d2791>>, FunctionInstance<_qty2571>, FunctionResult<_qty2569, _qty2569>, NamedDeclName<_s701> {}; // CXXMethod NewInstance
struct _d2789: NamedDeclName<_s220> {}; // ParmVar context
struct _d2790: NamedDeclName<_s639> {}; // ParmVar argc
struct _d2791: NamedDeclName<_s657> {}; // ParmVar argv
struct _d2792: CXXMethodDecl, FunctionDecl<_ty2456, Pack<_d2793>>, FunctionInstance<_qty2571>, FunctionResult<_qty2573, _qty2573>, NamedDeclName<_s701> {}; // CXXMethod NewInstance
struct _d2793: NamedDeclName<_s220> {}; // ParmVar context
struct _d2794: CXXMethodDecl, FunctionDecl<_ty2462, Pack<_d2795, _d2796, _d2797, _d2798>>, FunctionInstance<_qty2571>, FunctionResult<_qty2578, _qty2578>, NamedDeclName<_s702> {}; // CXXMethod NewInstanceWithSideEffectType
struct _d2795: NamedDeclName<_s220> {}; // ParmVar context
struct _d2796: NamedDeclName<_s639> {}; // ParmVar argc
struct _d2797: NamedDeclName<_s657> {}; // ParmVar argv
struct _d2798: NamedDeclName<_s700> {}; // ParmVar side_effect_type
struct _d2799: CXXMethodDecl, FunctionDecl<_ty2469, Pack<_d2800, _d2801, _d2802, _d2803>>, FunctionInstance<_qty2586>, FunctionResult<_qty2584, _qty2584>, NamedDeclName<_s703> {}; // CXXMethod Call
struct _d2800: NamedDeclName<_s220> {}; // ParmVar context
struct _d2801: NamedDeclName<_s656> {}; // ParmVar recv
struct _d2802: NamedDeclName<_s639> {}; // ParmVar argc
struct _d2803: NamedDeclName<_s657> {}; // ParmVar argv
struct _d2804: CXXMethodDecl, FunctionDecl<_ty2473, Pack<_d2805>>, FunctionInstance<_qty2586>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s704> {}; // CXXMethod SetName
struct _d2805: NamedDeclName<_s534> {}; // ParmVar name
struct _d2806: CXXMethodDecl, FunctionDecl<_ty2474, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty2589, _qty2589>, NamedDeclName<_s705> {}; // CXXMethod GetName
struct _d2807: CXXMethodDecl, FunctionDecl<_ty2476, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty2591, _qty2591>, NamedDeclName<_s706> {}; // CXXMethod GetInferredName
struct _d2808: CXXMethodDecl, FunctionDecl<_ty2478, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty2593, _qty2593>, NamedDeclName<_s707> {}; // CXXMethod GetDebugName
struct _d2809: CXXMethodDecl, FunctionDecl<_ty2480, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty2595, _qty2595>, NamedDeclName<_s708> {}; // CXXMethod GetDisplayName
struct _d2810: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s709> {}; // CXXMethod GetScriptLineNumber
struct _d2811: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s710> {}; // CXXMethod GetScriptColumnNumber
struct _d2812: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s711> {}; // CXXMethod ScriptId
struct _d2813: CXXMethodDecl, FunctionDecl<_ty2482, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty2597, _qty2597>, NamedDeclName<_s712> {}; // CXXMethod GetBoundFunction
struct _d2814: CXXMethodDecl, FunctionDecl<_ty1699, Pack<>>, FunctionInstance<_qty2571>, FunctionResult<_qty1635, _qty1635>, NamedDeclName<_s295> {}; // CXXMethod GetScriptOrigin
struct _d2815: CXXMethodDecl, FunctionDecl<_ty2484, Pack<_d2816>>, FunctionNoInstance, FunctionResult<_qty2586, _qty2586>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2816: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2817: NamedDeclName<_s713> {}; // Var kLineOffsetNotFound
struct _d2818: NamedDeclName<_s31>, TypeDecl<_qty36> {}; // CXXRecord Promise
struct _d2819: NamedDeclName<_s714>, TypeDecl<_qty2600> {}; // Enum PromiseState
struct _d2820: NamedDeclName<_s715> {}; // EnumConstant kPending
struct _d2821: NamedDeclName<_s716> {}; // EnumConstant kFulfilled
struct _d2822: NamedDeclName<_s717> {}; // EnumConstant kRejected
struct _d2823: NamedDeclName<_s718>, TypeDecl<_qty2601> {}; // CXXRecord Resolver
struct _d2824: NamedDeclName<_s718>, TypeDecl<_qty2601> {}; // CXXRecord Resolver
struct _d2825: CXXMethodDecl, FunctionDecl<_ty2488, Pack<_d2826>>, FunctionNoInstance, FunctionResult<_qty2603, _qty2603>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2826: NamedDeclName<_s220> {}; // ParmVar context
struct _d2827: CXXMethodDecl, FunctionDecl<_ty2490, Pack<>>, FunctionInstance<_qty2607>, FunctionResult<_qty2605, _qty2605>, NamedDeclName<_s719> {}; // CXXMethod GetPromise
struct _d2828: CXXMethodDecl, FunctionDecl<_ty2495, Pack<_d2829, _d2830>>, FunctionInstance<_qty2607>, FunctionResult<_qty2610, _qty2610>, NamedDeclName<_s720> {}; // CXXMethod Resolve
struct _d2829: NamedDeclName<_s220> {}; // ParmVar context
struct _d2830: NamedDeclName<_s153> {}; // ParmVar value
struct _d2831: CXXMethodDecl, FunctionDecl<_ty2499, Pack<_d2832, _d2833>>, FunctionInstance<_qty2607>, FunctionResult<_qty2614, _qty2614>, NamedDeclName<_s721> {}; // CXXMethod Reject
struct _d2832: NamedDeclName<_s220> {}; // ParmVar context
struct _d2833: NamedDeclName<_s153> {}; // ParmVar value
struct _d2834: CXXMethodDecl, FunctionDecl<_ty2501, Pack<_d2835>>, FunctionNoInstance, FunctionResult<_qty2607, _qty2607>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2835: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2836: CXXMethodDecl, FunctionDecl<_ty2504, Pack<_d2837, _d2838>>, FunctionInstance<_qty2621>, FunctionResult<_qty2619, _qty2619>, NamedDeclName<_s722> {}; // CXXMethod Catch
struct _d2837: NamedDeclName<_s220> {}; // ParmVar context
struct _d2838: NamedDeclName<_s723> {}; // ParmVar handler
struct _d2839: CXXMethodDecl, FunctionDecl<_ty2509, Pack<_d2840, _d2841>>, FunctionInstance<_qty2621>, FunctionResult<_qty2624, _qty2624>, NamedDeclName<_s724> {}; // CXXMethod Then
struct _d2840: NamedDeclName<_s220> {}; // ParmVar context
struct _d2841: NamedDeclName<_s723> {}; // ParmVar handler
struct _d2842: CXXMethodDecl, FunctionDecl<_ty2514, Pack<_d2843, _d2844, _d2845>>, FunctionInstance<_qty2621>, FunctionResult<_qty2629, _qty2629>, NamedDeclName<_s724> {}; // CXXMethod Then
struct _d2843: NamedDeclName<_s220> {}; // ParmVar context
struct _d2844: NamedDeclName<_s725> {}; // ParmVar on_fulfilled
struct _d2845: NamedDeclName<_s726> {}; // ParmVar on_rejected
struct _d2846: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty2621>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s727> {}; // CXXMethod HasHandler
struct _d2847: CXXMethodDecl, FunctionDecl<_ty2516, Pack<>>, FunctionInstance<_qty2621>, FunctionResult<_qty2631, _qty2631>, NamedDeclName<_s728> {}; // CXXMethod Result
struct _d2848: CXXMethodDecl, FunctionDecl<_ty2518, Pack<>>, FunctionInstance<_qty2621>, FunctionResult<_qty2600, _qty2600>, NamedDeclName<_s729> {}; // CXXMethod State
struct _d2849: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2621>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s730> {}; // CXXMethod MarkAsHandled
struct _d2850: CXXMethodDecl, FunctionDecl<_ty2519, Pack<_d2851>>, FunctionNoInstance, FunctionResult<_qty2621, _qty2621>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2851: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2852: NamedDeclName<_s731> {}; // Var kEmbedderFieldCount
struct _d2853: NamedDeclName<_s32>, TypeDecl<_qty37> {}; // CXXRecord PropertyDescriptor
struct _d2854: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2635>, FunctionNoResult {}; // CXXConstructor PropertyDescriptor
struct _d2855: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2522, Pack<_d2856>>, FunctionInstance<_qty2635>, FunctionNoResult {}; // CXXConstructor PropertyDescriptor
struct _d2856: NamedDeclName<_s153> {}; // ParmVar value
struct _d2857: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2524, Pack<_d2858, _d2859>>, FunctionInstance<_qty2635>, FunctionNoResult {}; // CXXConstructor PropertyDescriptor
struct _d2858: NamedDeclName<_s153> {}; // ParmVar value
struct _d2859: NamedDeclName<_s732> {}; // ParmVar writable
struct _d2860: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2527, Pack<_d2861, _d2862>>, FunctionInstance<_qty2635>, FunctionNoResult {}; // CXXConstructor PropertyDescriptor
struct _d2861: NamedDeclName<_s733> {}; // ParmVar get
struct _d2862: NamedDeclName<_s734> {}; // ParmVar set
struct _d2863: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty2528, Pack<>>, FunctionInstance<_qty2635>, FunctionNoResult {}; // CXXDestructor ~PropertyDescriptor
struct _d2864: CXXMethodDecl, FunctionDecl<_ty2529, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty2644, _qty2644>, NamedDeclName<_s153> {}; // CXXMethod value
struct _d2865: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s735> {}; // CXXMethod has_value
struct _d2866: CXXMethodDecl, FunctionDecl<_ty2532, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty2647, _qty2647>, NamedDeclName<_s733> {}; // CXXMethod get
struct _d2867: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s736> {}; // CXXMethod has_get
struct _d2868: CXXMethodDecl, FunctionDecl<_ty2534, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty2649, _qty2649>, NamedDeclName<_s734> {}; // CXXMethod set
struct _d2869: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s737> {}; // CXXMethod has_set
struct _d2870: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d2871>>, FunctionInstance<_qty2635>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s738> {}; // CXXMethod set_enumerable
struct _d2871: NamedDeclName<_s739> {}; // ParmVar enumerable
struct _d2872: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s739> {}; // CXXMethod enumerable
struct _d2873: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s740> {}; // CXXMethod has_enumerable
struct _d2874: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d2875>>, FunctionInstance<_qty2635>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s741> {}; // CXXMethod set_configurable
struct _d2875: NamedDeclName<_s742> {}; // ParmVar configurable
struct _d2876: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s742> {}; // CXXMethod configurable
struct _d2877: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s743> {}; // CXXMethod has_configurable
struct _d2878: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s732> {}; // CXXMethod writable
struct _d2879: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s744> {}; // CXXMethod has_writable
struct _d2880: NamedDeclName<_s745>, TypeDecl<_qty2651> {}; // CXXRecord PrivateData
struct _d2881: CXXMethodDecl, FunctionDecl<_ty2537, Pack<>>, FunctionInstance<_qty2646>, FunctionResult<_qty2652, _qty2652>, NamedDeclName<_s746> {}; // CXXMethod get_private
struct _d2882: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2540, Pack<_d2883>>, FunctionInstance<_qty2635>, FunctionNoResult {}; // CXXConstructor PropertyDescriptor
struct _d2883: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2884: CXXMethodDecl, FunctionDecl<_ty2540, Pack<_d2885>>, FunctionInstance<_qty2635>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2885: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2886: NamedDeclName<_s33>, TypeDecl<_qty38> {}; // CXXRecord Proxy
struct _d2887: CXXMethodDecl, FunctionDecl<_ty2541, Pack<>>, FunctionInstance<_qty2659>, FunctionResult<_qty2657, _qty2657>, NamedDeclName<_s747> {}; // CXXMethod GetTarget
struct _d2888: CXXMethodDecl, FunctionDecl<_ty2544, Pack<>>, FunctionInstance<_qty2659>, FunctionResult<_qty2660, _qty2660>, NamedDeclName<_s748> {}; // CXXMethod GetHandler
struct _d2889: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty2659>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s749> {}; // CXXMethod IsRevoked
struct _d2890: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2659>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s750> {}; // CXXMethod Revoke
struct _d2891: CXXMethodDecl, FunctionDecl<_ty2549, Pack<_d2892, _d2893, _d2894>>, FunctionNoInstance, FunctionResult<_qty2665, _qty2665>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d2892: NamedDeclName<_s220> {}; // ParmVar context
struct _d2893: NamedDeclName<_s751> {}; // ParmVar local_target
struct _d2894: NamedDeclName<_s752> {}; // ParmVar local_handler
struct _d2895: CXXMethodDecl, FunctionDecl<_ty2551, Pack<_d2896>>, FunctionNoInstance, FunctionResult<_qty2659, _qty2659>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2896: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2897: NamedDeclName<_s753> {}; // ClassTemplate MemorySpan
struct _d2898: NamedDeclName<_s21>, TypeDecl<_qty2668> {}; // TemplateTypeParm T
struct _d2899: NamedDeclName<_s753>, TypeDecl<_qty2669> {}; // CXXRecord MemorySpan
struct _d2900: NamedDeclName<_s753>, TypeDecl<_qty2669> {}; // CXXRecord MemorySpan
struct _d2901: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2670>, FunctionNoResult {}; // CXXConstructor MemorySpan<T>
struct _d2902: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2556, Pack<_d2903, _d2904>>, FunctionInstance<_qty2670>, FunctionNoResult {}; // CXXConstructor MemorySpan<T>
struct _d2903: NamedDeclName<_s130> {}; // ParmVar data
struct _d2904: NamedDeclName<_s376> {}; // ParmVar size
struct _d2905: CXXMethodDecl, FunctionDecl<_ty2557, Pack<>>, FunctionInstance<_qty2674>, FunctionResult<_qty2671, _qty2671>, NamedDeclName<_s130> {}; // CXXMethod data
struct _d2906: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2674>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s376> {}; // CXXMethod size
struct _d2907: NamedDeclName<_s753>, TypeDecl<_qty2675> {}; // ClassTemplateSpecialization MemorySpan
struct _d2908: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2560, Pack<>>, FunctionInstance<_qty2677>, FunctionNoResult {}; // CXXConstructor MemorySpan
struct _d2909: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2564, Pack<_d2910, _d2911>>, FunctionInstance<_qty2677>, FunctionNoResult {}; // CXXConstructor MemorySpan
struct _d2910: NamedDeclName<_s130> {}; // ParmVar data
struct _d2911: NamedDeclName<_s376> {}; // ParmVar size
struct _d2912: CXXMethodDecl, FunctionDecl<_ty2565, Pack<>>, FunctionInstance<_qty2682>, FunctionResult<_qty2678, _qty2678>, NamedDeclName<_s130> {}; // CXXMethod data
struct _d2913: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2682>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s376> {}; // CXXMethod size
struct _d2914: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2568, Pack<_d2915>>, FunctionInstance<_qty2677>, FunctionNoResult {}; // CXXConstructor MemorySpan
struct _d2915: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2916: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2570, Pack<_d2917>>, FunctionInstance<_qty2677>, FunctionNoResult {}; // CXXConstructor MemorySpan
struct _d2917: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2918: NamedDeclName<_s754>, TypeDecl<_qty2688> {}; // CXXRecord OwnedBuffer
struct _d2919: NamedDeclName<_s754>, TypeDecl<_qty2688> {}; // CXXRecord OwnedBuffer
struct _d2920: NamedDeclName<_s379> {}; // Field buffer
struct _d2921: NamedDeclName<_s252>, TypeDecl<_qty2691> {}; // ClassTemplateSpecialization unique_ptr
struct _d2922: NamedDeclName<_s376> {}; // Field size
struct _d2923: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2577, Pack<_d2924, _d2925>>, FunctionInstance<_qty2695>, FunctionNoResult {}; // CXXConstructor OwnedBuffer
struct _d2924: NamedDeclName<_s379> {}; // ParmVar buffer
struct _d2925: NamedDeclName<_s376> {}; // ParmVar size
struct _d2926: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2579, Pack<>>, FunctionInstance<_qty2695>, FunctionNoResult {}; // CXXConstructor OwnedBuffer
struct _d2927: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2581, Pack<_d2928>>, FunctionInstance<_qty2695>, FunctionNoResult {}; // CXXConstructor OwnedBuffer
struct _d2928: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2929: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2583, Pack<_d2930>>, FunctionInstance<_qty2695>, FunctionNoResult {}; // CXXConstructor OwnedBuffer
struct _d2930: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2931: CXXMethodDecl, FunctionDecl<_ty2584, Pack<_d2932>>, FunctionInstance<_qty2695>, FunctionResult<_qty2702, _qty2688>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2932: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2933: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty2695>, FunctionNoResult {}; // CXXDestructor ~OwnedBuffer
struct _d2934: CXXMethodDecl, FunctionDecl<_ty2586, Pack<_d2935>>, FunctionInstance<_qty2695>, FunctionResult<_qty2702, _qty2688>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2935: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2936: NamedDeclName<_s755>, TypeDecl<_qty2705> {}; // CXXRecord CompiledWasmModule
struct _d2937: NamedDeclName<_s755>, TypeDecl<_qty2705> {}; // CXXRecord CompiledWasmModule
struct _d2938: CXXMethodDecl, FunctionDecl<_ty2588, Pack<>>, FunctionInstance<_qty2707>, FunctionResult<_qty2688, _qty2688>, NamedDeclName<_s756> {}; // CXXMethod Serialize
struct _d2939: CXXMethodDecl, FunctionDecl<_ty2590, Pack<>>, FunctionInstance<_qty2707>, FunctionResult<_qty2708, _qty2708>, NamedDeclName<_s757> {}; // CXXMethod GetWireBytesRef
struct _d2940: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2593, Pack<_d2941>>, FunctionInstance<_qty2707>, FunctionNoResult {}; // CXXConstructor CompiledWasmModule
struct _d2941: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2942: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2595, Pack<_d2943>>, FunctionInstance<_qty2707>, FunctionNoResult {}; // CXXConstructor CompiledWasmModule
struct _d2943: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2944: CXXMethodDecl, FunctionDecl<_ty2596, Pack<_d2945>>, FunctionInstance<_qty2707>, FunctionResult<_qty2715, _qty2705>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2945: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2946: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty2598, Pack<>>, FunctionInstance<_qty2707>, FunctionNoResult {}; // CXXDestructor ~CompiledWasmModule
struct _d2947: NamedDeclName<_s50>, TypeDecl<_qty55> {}; // CXXRecord WasmModuleObject
struct _d2948: NamedDeclName<_s758>, TypeDecl<_qty2718> {}; // CXXRecord TransferrableModule
struct _d2949: NamedDeclName<_s758>, TypeDecl<_qty2718> {}; // CXXRecord TransferrableModule
struct _d2950: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2601, Pack<_d2951>>, FunctionInstance<_qty2721>, FunctionNoResult {}; // CXXConstructor TransferrableModule
struct _d2951: NamedDeclName<_s242> {}; // ParmVar src
struct _d2952: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2604, Pack<_d2953>>, FunctionInstance<_qty2721>, FunctionNoResult {}; // CXXConstructor TransferrableModule
struct _d2953: NamedDeclName<_s242> {}; // ParmVar src
struct _d2954: CXXMethodDecl, FunctionDecl<_ty2605, Pack<_d2955>>, FunctionInstance<_qty2721>, FunctionResult<_qty2725, _qty2718>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2955: NamedDeclName<_s242> {}; // ParmVar src
struct _d2956: CXXMethodDecl, FunctionDecl<_ty2607, Pack<_d2957>>, FunctionInstance<_qty2721>, FunctionResult<_qty2725, _qty2718>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2957: NamedDeclName<_s242> {}; // ParmVar src
struct _d2958: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty2608, Pack<>>, FunctionInstance<_qty2721>, FunctionNoResult {}; // CXXDestructor ~TransferrableModule
struct _d2959: CXXMethodDecl, FunctionDecl<_ty2609, Pack<>>, FunctionInstance<_qty2730>, FunctionResult<_qty2718, _qty2718>, NamedDeclName<_s759> {}; // CXXMethod GetTransferrableModule
struct _d2960: CXXMethodDecl, FunctionDecl<_ty2611, Pack<_d2961, _d2962>>, FunctionNoInstance, FunctionResult<_qty2731, _qty2731>, NamedDeclName<_s760> {}; // CXXMethod FromTransferrableModule
struct _d2961: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2962: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2963: CXXMethodDecl, FunctionDecl<_ty2613, Pack<>>, FunctionInstance<_qty2730>, FunctionResult<_qty2705, _qty2705>, NamedDeclName<_s761> {}; // CXXMethod GetCompiledModule
struct _d2964: CXXMethodDecl, FunctionDecl<_ty2616, Pack<_d2965, _d2966, _d2967>>, FunctionNoInstance, FunctionResult<_qty2736, _qty2736>, NamedDeclName<_s762> {}; // CXXMethod DeserializeOrCompile
struct _d2965: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2966: NamedDeclName<_s763> {}; // ParmVar serialized_module
struct _d2967: NamedDeclName<_s764> {}; // ParmVar wire_bytes
struct _d2968: CXXMethodDecl, FunctionDecl<_ty2618, Pack<_d2969>>, FunctionNoInstance, FunctionResult<_qty2730, _qty2730>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d2969: NamedDeclName<_s487> {}; // ParmVar obj
struct _d2970: NamedDeclName<_s765>, TypeDecl<_qty2739> {}; // CXXRecord WasmStreaming
struct _d2971: NamedDeclName<_s765>, TypeDecl<_qty2739> {}; // CXXRecord WasmStreaming
struct _d2972: NamedDeclName<_s766>, TypeDecl<_qty2740> {}; // CXXRecord WasmStreamingImpl
struct _d2973: NamedDeclName<_s767>, TypeDecl<_qty2741> {}; // CXXRecord Client
struct _d2974: NamedDeclName<_s767>, TypeDecl<_qty2741> {}; // CXXRecord Client
struct _d2975: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty2622, Pack<>>, FunctionInstance<_qty2743>, FunctionNoResult {}; // CXXDestructor ~Client
struct _d2976: CXXMethodDecl, FunctionDecl<_ty2624, Pack<_d2977>>, FunctionInstance<_qty2743>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s768> {}; // CXXMethod OnModuleCompiled
struct _d2977: NamedDeclName<_s769> {}; // ParmVar compiled_module
struct _d2978: CXXMethodDecl, FunctionDecl<_ty2626, Pack<_d2979>>, FunctionInstance<_qty2743>, FunctionResult<_qty2747, _qty2741>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d2979: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d2980: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2631, Pack<_d2981>>, FunctionInstance<_qty2753>, FunctionNoResult {}; // CXXConstructor WasmStreaming
struct _d2981: NamedDeclName<_s253> {}; // ParmVar impl
struct _d2982: NamedDeclName<_s252>, TypeDecl<_qty2751> {}; // ClassTemplateSpecialization unique_ptr
struct _d2983: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty2633, Pack<>>, FunctionInstance<_qty2753>, FunctionNoResult {}; // CXXDestructor ~WasmStreaming
struct _d2984: CXXMethodDecl, FunctionDecl<_ty2634, Pack<_d2985, _d2986>>, FunctionInstance<_qty2753>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s770> {}; // CXXMethod OnBytesReceived
struct _d2985: NamedDeclName<_s771> {}; // ParmVar bytes
struct _d2986: NamedDeclName<_s376> {}; // ParmVar size
struct _d2987: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2753>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s772> {}; // CXXMethod Finish
struct _d2988: CXXMethodDecl, FunctionDecl<_ty2636, Pack<_d2989>>, FunctionInstance<_qty2753>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s773> {}; // CXXMethod Abort
struct _d2989: NamedDeclName<_s774> {}; // ParmVar exception
struct _d2990: CXXMethodDecl, FunctionDecl<_ty2637, Pack<_d2991, _d2992>>, FunctionInstance<_qty2753>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s775> {}; // CXXMethod SetCompiledModuleBytes
struct _d2991: NamedDeclName<_s771> {}; // ParmVar bytes
struct _d2992: NamedDeclName<_s376> {}; // ParmVar size
struct _d2993: CXXMethodDecl, FunctionDecl<_ty2641, Pack<_d2994>>, FunctionInstance<_qty2753>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s776> {}; // CXXMethod SetClient
struct _d2994: NamedDeclName<_s777> {}; // ParmVar client
struct _d2995: NamedDeclName<_s778>, TypeDecl<_qty2761> {}; // ClassTemplateSpecialization shared_ptr
struct _d2996: CXXMethodDecl, FunctionDecl<_ty2643, Pack<_d2997, _d2998>>, FunctionNoInstance, FunctionResult<_qty2764, _qty2764>, NamedDeclName<_s779> {}; // CXXMethod Unpack
struct _d2997: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d2998: NamedDeclName<_s153> {}; // ParmVar value
struct _d2999: NamedDeclName<_s778>, TypeDecl<_qty2766> {}; // ClassTemplateSpecialization shared_ptr
struct _d3000: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty2648, Pack<_d3001>>, FunctionInstance<_qty2753>, FunctionNoResult {}; // CXXConstructor WasmStreaming
struct _d3001: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3002: NamedDeclName<_s780>, TypeDecl<_qty2771> {}; // CXXRecord WasmModuleObjectBuilderStreaming
struct _d3003: NamedDeclName<_s780>, TypeDecl<_qty2771> {}; // CXXRecord WasmModuleObjectBuilderStreaming
struct _d3004: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d3005>>, FunctionInstance<_qty2772>, FunctionNoResult {}; // CXXConstructor WasmModuleObjectBuilderStreaming
struct _d3005: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3006: CXXMethodDecl, FunctionDecl<_ty2634, Pack<_d3007, _d3008>>, FunctionInstance<_qty2772>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s770> {}; // CXXMethod OnBytesReceived
struct _d3007: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3008: NamedDeclName<_s376> {}; // ParmVar size
struct _d3009: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2772>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s772> {}; // CXXMethod Finish
struct _d3010: CXXMethodDecl, FunctionDecl<_ty2652, Pack<_d3011>>, FunctionInstance<_qty2772>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s773> {}; // CXXMethod Abort
struct _d3011: NamedDeclName<_s774> {}; // ParmVar exception
struct _d3012: CXXMethodDecl, FunctionDecl<_ty2653, Pack<>>, FunctionInstance<_qty2772>, FunctionResult<_qty2775, _qty2775>, NamedDeclName<_s719> {}; // CXXMethod GetPromise
struct _d3013: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty2655, Pack<>>, FunctionInstance<_qty2772>, FunctionNoResult {}; // CXXDestructor ~WasmModuleObjectBuilderStreaming
struct _d3014: NamedDeclName<_s781>, TypeDecl<_qty2778> {}; // Enum ArrayBufferCreationMode
struct _d3015: NamedDeclName<_s490> {}; // EnumConstant kInternalized
struct _d3016: NamedDeclName<_s782> {}; // EnumConstant kExternalized
struct _d3017: NamedDeclName<_s7>, TypeDecl<_qty6> {}; // CXXRecord ArrayBuffer
struct _d3018: NamedDeclName<_s783>, TypeDecl<_qty2779> {}; // CXXRecord Allocator
struct _d3019: NamedDeclName<_s783>, TypeDecl<_qty2779> {}; // CXXRecord Allocator
struct _d3020: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty2658, Pack<>>, FunctionInstance<_qty2781>, FunctionNoResult {}; // CXXDestructor ~Allocator
struct _d3021: CXXMethodDecl, FunctionDecl<_ty2660, Pack<_d3022>>, FunctionInstance<_qty2781>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s784> {}; // CXXMethod Allocate
struct _d3022: NamedDeclName<_s160> {}; // ParmVar length
struct _d3023: CXXMethodDecl, FunctionDecl<_ty2660, Pack<_d3024>>, FunctionInstance<_qty2781>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s785> {}; // CXXMethod AllocateUninitialized
struct _d3024: NamedDeclName<_s160> {}; // ParmVar length
struct _d3025: CXXMethodDecl, FunctionDecl<_ty2661, Pack<_d3026, _d3027>>, FunctionInstance<_qty2781>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s786> {}; // CXXMethod Free
struct _d3026: NamedDeclName<_s130> {}; // ParmVar data
struct _d3027: NamedDeclName<_s160> {}; // ParmVar length
struct _d3028: NamedDeclName<_s787>, TypeDecl<_qty2784> {}; // Enum AllocationMode
struct _d3029: NamedDeclName<_s489> {}; // EnumConstant kNormal
struct _d3030: NamedDeclName<_s788> {}; // EnumConstant kReservation
struct _d3031: CXXMethodDecl, FunctionDecl<_ty2663, Pack<>>, FunctionNoInstance, FunctionResult<_qty2781, _qty2781>, NamedDeclName<_s789> {}; // CXXMethod NewDefaultAllocator
struct _d3032: CXXMethodDecl, FunctionDecl<_ty2665, Pack<_d3033>>, FunctionInstance<_qty2781>, FunctionResult<_qty2788, _qty2779>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3033: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3034: NamedDeclName<_s790>, TypeDecl<_qty2790> {}; // CXXRecord Contents
struct _d3035: NamedDeclName<_s790>, TypeDecl<_qty2790> {}; // CXXRecord Contents
struct _d3036: NamedDeclName<_s791>, TypeDecl<_qty2791> {}; // TypeAlias DeleterCallback
struct _d3037: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2794>, FunctionNoResult {}; // CXXConstructor Contents
struct _d3038: CXXMethodDecl, FunctionDecl<_ty2673, Pack<>>, FunctionInstance<_qty2796>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s792> {}; // CXXMethod AllocationBase
struct _d3039: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2796>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s793> {}; // CXXMethod AllocationLength
struct _d3040: CXXMethodDecl, FunctionDecl<_ty2675, Pack<>>, FunctionInstance<_qty2796>, FunctionResult<_qty2797, _qty2797>, NamedDeclName<_s787> {}; // CXXMethod AllocationMode
struct _d3041: CXXMethodDecl, FunctionDecl<_ty2673, Pack<>>, FunctionInstance<_qty2796>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s3> {}; // CXXMethod Data
struct _d3042: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2796>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s794> {}; // CXXMethod ByteLength
struct _d3043: CXXMethodDecl, FunctionDecl<_ty2677, Pack<>>, FunctionInstance<_qty2796>, FunctionResult<_qty2791, _qty2791>, NamedDeclName<_s795> {}; // CXXMethod Deleter
struct _d3044: CXXMethodDecl, FunctionDecl<_ty2673, Pack<>>, FunctionInstance<_qty2796>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s796> {}; // CXXMethod DeleterData
struct _d3045: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2800>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s794> {}; // CXXMethod ByteLength
struct _d3046: CXXMethodDecl, FunctionDecl<_ty2679, Pack<_d3047, _d3048>>, FunctionNoInstance, FunctionResult<_qty2801, _qty2801>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3047: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3048: NamedDeclName<_s797> {}; // ParmVar byte_length
struct _d3049: CXXMethodDecl, FunctionDecl<_ty2681, Pack<_d3050, _d3051, _d3052, _d3053>>, FunctionNoInstance, FunctionResult<_qty2803, _qty2803>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3050: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3051: NamedDeclName<_s130> {}; // ParmVar data
struct _d3052: NamedDeclName<_s797> {}; // ParmVar byte_length
struct _d3053: NamedDeclName<_s389> {}; // ParmVar mode
struct _d3054: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2800>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s426> {}; // CXXMethod IsExternal
struct _d3055: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2800>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s798> {}; // CXXMethod IsDetachable
struct _d3056: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2800>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s799> {}; // CXXMethod IsNeuterable
struct _d3057: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2805>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s800> {}; // CXXMethod Detach
struct _d3058: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2805>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s801> {}; // CXXMethod Neuter
struct _d3059: CXXMethodDecl, FunctionDecl<_ty2684, Pack<>>, FunctionInstance<_qty2805>, FunctionResult<_qty2790, _qty2790>, NamedDeclName<_s802> {}; // CXXMethod Externalize
struct _d3060: CXXMethodDecl, FunctionDecl<_ty2684, Pack<>>, FunctionInstance<_qty2805>, FunctionResult<_qty2790, _qty2790>, NamedDeclName<_s803> {}; // CXXMethod GetContents
struct _d3061: CXXMethodDecl, FunctionDecl<_ty2685, Pack<_d3062>>, FunctionNoInstance, FunctionResult<_qty2805, _qty2805>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3062: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3063: NamedDeclName<_s804> {}; // Var kInternalFieldCount
struct _d3064: NamedDeclName<_s731> {}; // Var kEmbedderFieldCount
struct _d3065: NamedDeclName<_s805>, TypeDecl<_qty2808> {}; // CXXRecord ArrayBufferView
struct _d3066: NamedDeclName<_s805>, TypeDecl<_qty2808> {}; // CXXRecord ArrayBufferView
struct _d3067: CXXMethodDecl, FunctionDecl<_ty2687, Pack<>>, FunctionInstance<_qty2811>, FunctionResult<_qty2809, _qty2809>, NamedDeclName<_s806> {}; // CXXMethod Buffer
struct _d3068: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty2811>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s807> {}; // CXXMethod ByteOffset
struct _d3069: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty2811>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s794> {}; // CXXMethod ByteLength
struct _d3070: CXXMethodDecl, FunctionDecl<_ty2691, Pack<_d3071, _d3072>>, FunctionInstance<_qty2811>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s808> {}; // CXXMethod CopyContents
struct _d3071: NamedDeclName<_s138> {}; // ParmVar dest
struct _d3072: NamedDeclName<_s797> {}; // ParmVar byte_length
struct _d3073: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2814>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s809> {}; // CXXMethod HasBuffer
struct _d3074: CXXMethodDecl, FunctionDecl<_ty2693, Pack<_d3075>>, FunctionNoInstance, FunctionResult<_qty2811, _qty2811>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3075: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3076: NamedDeclName<_s804> {}; // Var kInternalFieldCount
struct _d3077: NamedDeclName<_s731> {}; // Var kEmbedderFieldCount
struct _d3078: NamedDeclName<_s810>, TypeDecl<_qty2816> {}; // CXXRecord TypedArray
struct _d3079: NamedDeclName<_s810>, TypeDecl<_qty2816> {}; // CXXRecord TypedArray
struct _d3080: NamedDeclName<_s491> {}; // Var kMaxLength
struct _d3081: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty2818>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s161> {}; // CXXMethod Length
struct _d3082: CXXMethodDecl, FunctionDecl<_ty2696, Pack<_d3083>>, FunctionNoInstance, FunctionResult<_qty2818, _qty2818>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3083: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3084: NamedDeclName<_s811>, TypeDecl<_qty2820> {}; // CXXRecord Uint8Array
struct _d3085: NamedDeclName<_s811>, TypeDecl<_qty2820> {}; // CXXRecord Uint8Array
struct _d3086: CXXMethodDecl, FunctionDecl<_ty2699, Pack<_d3087, _d3088, _d3089>>, FunctionNoInstance, FunctionResult<_qty2822, _qty2822>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3087: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3088: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3089: NamedDeclName<_s160> {}; // ParmVar length
struct _d3090: CXXMethodDecl, FunctionDecl<_ty2702, Pack<_d3091, _d3092, _d3093>>, FunctionNoInstance, FunctionResult<_qty2825, _qty2825>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3091: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3092: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3093: NamedDeclName<_s160> {}; // ParmVar length
struct _d3094: CXXMethodDecl, FunctionDecl<_ty2704, Pack<_d3095>>, FunctionNoInstance, FunctionResult<_qty2827, _qty2827>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3095: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3096: NamedDeclName<_s813>, TypeDecl<_qty2829> {}; // CXXRecord Uint8ClampedArray
struct _d3097: NamedDeclName<_s813>, TypeDecl<_qty2829> {}; // CXXRecord Uint8ClampedArray
struct _d3098: CXXMethodDecl, FunctionDecl<_ty2708, Pack<_d3099, _d3100, _d3101>>, FunctionNoInstance, FunctionResult<_qty2831, _qty2831>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3099: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3100: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3101: NamedDeclName<_s160> {}; // ParmVar length
struct _d3102: CXXMethodDecl, FunctionDecl<_ty2711, Pack<_d3103, _d3104, _d3105>>, FunctionNoInstance, FunctionResult<_qty2834, _qty2834>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3103: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3104: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3105: NamedDeclName<_s160> {}; // ParmVar length
struct _d3106: CXXMethodDecl, FunctionDecl<_ty2713, Pack<_d3107>>, FunctionNoInstance, FunctionResult<_qty2836, _qty2836>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3107: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3108: NamedDeclName<_s814>, TypeDecl<_qty2838> {}; // CXXRecord Int8Array
struct _d3109: NamedDeclName<_s814>, TypeDecl<_qty2838> {}; // CXXRecord Int8Array
struct _d3110: CXXMethodDecl, FunctionDecl<_ty2717, Pack<_d3111, _d3112, _d3113>>, FunctionNoInstance, FunctionResult<_qty2840, _qty2840>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3111: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3112: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3113: NamedDeclName<_s160> {}; // ParmVar length
struct _d3114: CXXMethodDecl, FunctionDecl<_ty2720, Pack<_d3115, _d3116, _d3117>>, FunctionNoInstance, FunctionResult<_qty2843, _qty2843>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3115: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3116: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3117: NamedDeclName<_s160> {}; // ParmVar length
struct _d3118: CXXMethodDecl, FunctionDecl<_ty2722, Pack<_d3119>>, FunctionNoInstance, FunctionResult<_qty2845, _qty2845>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3119: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3120: NamedDeclName<_s815>, TypeDecl<_qty2847> {}; // CXXRecord Uint16Array
struct _d3121: NamedDeclName<_s815>, TypeDecl<_qty2847> {}; // CXXRecord Uint16Array
struct _d3122: CXXMethodDecl, FunctionDecl<_ty2726, Pack<_d3123, _d3124, _d3125>>, FunctionNoInstance, FunctionResult<_qty2849, _qty2849>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3123: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3124: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3125: NamedDeclName<_s160> {}; // ParmVar length
struct _d3126: CXXMethodDecl, FunctionDecl<_ty2729, Pack<_d3127, _d3128, _d3129>>, FunctionNoInstance, FunctionResult<_qty2852, _qty2852>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3127: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3128: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3129: NamedDeclName<_s160> {}; // ParmVar length
struct _d3130: CXXMethodDecl, FunctionDecl<_ty2731, Pack<_d3131>>, FunctionNoInstance, FunctionResult<_qty2854, _qty2854>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3131: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3132: NamedDeclName<_s816>, TypeDecl<_qty2856> {}; // CXXRecord Int16Array
struct _d3133: NamedDeclName<_s816>, TypeDecl<_qty2856> {}; // CXXRecord Int16Array
struct _d3134: CXXMethodDecl, FunctionDecl<_ty2735, Pack<_d3135, _d3136, _d3137>>, FunctionNoInstance, FunctionResult<_qty2858, _qty2858>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3135: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3136: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3137: NamedDeclName<_s160> {}; // ParmVar length
struct _d3138: CXXMethodDecl, FunctionDecl<_ty2738, Pack<_d3139, _d3140, _d3141>>, FunctionNoInstance, FunctionResult<_qty2861, _qty2861>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3139: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3140: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3141: NamedDeclName<_s160> {}; // ParmVar length
struct _d3142: CXXMethodDecl, FunctionDecl<_ty2740, Pack<_d3143>>, FunctionNoInstance, FunctionResult<_qty2863, _qty2863>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3143: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3144: NamedDeclName<_s817>, TypeDecl<_qty2865> {}; // CXXRecord Uint32Array
struct _d3145: NamedDeclName<_s817>, TypeDecl<_qty2865> {}; // CXXRecord Uint32Array
struct _d3146: CXXMethodDecl, FunctionDecl<_ty2744, Pack<_d3147, _d3148, _d3149>>, FunctionNoInstance, FunctionResult<_qty2867, _qty2867>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3147: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3148: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3149: NamedDeclName<_s160> {}; // ParmVar length
struct _d3150: CXXMethodDecl, FunctionDecl<_ty2747, Pack<_d3151, _d3152, _d3153>>, FunctionNoInstance, FunctionResult<_qty2870, _qty2870>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3151: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3152: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3153: NamedDeclName<_s160> {}; // ParmVar length
struct _d3154: CXXMethodDecl, FunctionDecl<_ty2749, Pack<_d3155>>, FunctionNoInstance, FunctionResult<_qty2872, _qty2872>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3155: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3156: NamedDeclName<_s818>, TypeDecl<_qty2874> {}; // CXXRecord Int32Array
struct _d3157: NamedDeclName<_s818>, TypeDecl<_qty2874> {}; // CXXRecord Int32Array
struct _d3158: CXXMethodDecl, FunctionDecl<_ty2753, Pack<_d3159, _d3160, _d3161>>, FunctionNoInstance, FunctionResult<_qty2876, _qty2876>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3159: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3160: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3161: NamedDeclName<_s160> {}; // ParmVar length
struct _d3162: CXXMethodDecl, FunctionDecl<_ty2756, Pack<_d3163, _d3164, _d3165>>, FunctionNoInstance, FunctionResult<_qty2879, _qty2879>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3163: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3164: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3165: NamedDeclName<_s160> {}; // ParmVar length
struct _d3166: CXXMethodDecl, FunctionDecl<_ty2758, Pack<_d3167>>, FunctionNoInstance, FunctionResult<_qty2881, _qty2881>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3167: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3168: NamedDeclName<_s819>, TypeDecl<_qty2883> {}; // CXXRecord Float32Array
struct _d3169: NamedDeclName<_s819>, TypeDecl<_qty2883> {}; // CXXRecord Float32Array
struct _d3170: CXXMethodDecl, FunctionDecl<_ty2762, Pack<_d3171, _d3172, _d3173>>, FunctionNoInstance, FunctionResult<_qty2885, _qty2885>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3171: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3172: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3173: NamedDeclName<_s160> {}; // ParmVar length
struct _d3174: CXXMethodDecl, FunctionDecl<_ty2765, Pack<_d3175, _d3176, _d3177>>, FunctionNoInstance, FunctionResult<_qty2888, _qty2888>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3175: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3176: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3177: NamedDeclName<_s160> {}; // ParmVar length
struct _d3178: CXXMethodDecl, FunctionDecl<_ty2767, Pack<_d3179>>, FunctionNoInstance, FunctionResult<_qty2890, _qty2890>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3179: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3180: NamedDeclName<_s820>, TypeDecl<_qty2892> {}; // CXXRecord Float64Array
struct _d3181: NamedDeclName<_s820>, TypeDecl<_qty2892> {}; // CXXRecord Float64Array
struct _d3182: CXXMethodDecl, FunctionDecl<_ty2771, Pack<_d3183, _d3184, _d3185>>, FunctionNoInstance, FunctionResult<_qty2894, _qty2894>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3183: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3184: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3185: NamedDeclName<_s160> {}; // ParmVar length
struct _d3186: CXXMethodDecl, FunctionDecl<_ty2774, Pack<_d3187, _d3188, _d3189>>, FunctionNoInstance, FunctionResult<_qty2897, _qty2897>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3187: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3188: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3189: NamedDeclName<_s160> {}; // ParmVar length
struct _d3190: CXXMethodDecl, FunctionDecl<_ty2776, Pack<_d3191>>, FunctionNoInstance, FunctionResult<_qty2899, _qty2899>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3191: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3192: NamedDeclName<_s821>, TypeDecl<_qty2901> {}; // CXXRecord BigInt64Array
struct _d3193: NamedDeclName<_s821>, TypeDecl<_qty2901> {}; // CXXRecord BigInt64Array
struct _d3194: CXXMethodDecl, FunctionDecl<_ty2780, Pack<_d3195, _d3196, _d3197>>, FunctionNoInstance, FunctionResult<_qty2903, _qty2903>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3195: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3196: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3197: NamedDeclName<_s160> {}; // ParmVar length
struct _d3198: CXXMethodDecl, FunctionDecl<_ty2783, Pack<_d3199, _d3200, _d3201>>, FunctionNoInstance, FunctionResult<_qty2906, _qty2906>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3199: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3200: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3201: NamedDeclName<_s160> {}; // ParmVar length
struct _d3202: CXXMethodDecl, FunctionDecl<_ty2785, Pack<_d3203>>, FunctionNoInstance, FunctionResult<_qty2908, _qty2908>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3203: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3204: NamedDeclName<_s822>, TypeDecl<_qty2910> {}; // CXXRecord BigUint64Array
struct _d3205: NamedDeclName<_s822>, TypeDecl<_qty2910> {}; // CXXRecord BigUint64Array
struct _d3206: CXXMethodDecl, FunctionDecl<_ty2789, Pack<_d3207, _d3208, _d3209>>, FunctionNoInstance, FunctionResult<_qty2912, _qty2912>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3207: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3208: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3209: NamedDeclName<_s160> {}; // ParmVar length
struct _d3210: CXXMethodDecl, FunctionDecl<_ty2792, Pack<_d3211, _d3212, _d3213>>, FunctionNoInstance, FunctionResult<_qty2915, _qty2915>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3211: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3212: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3213: NamedDeclName<_s160> {}; // ParmVar length
struct _d3214: CXXMethodDecl, FunctionDecl<_ty2794, Pack<_d3215>>, FunctionNoInstance, FunctionResult<_qty2917, _qty2917>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3215: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3216: NamedDeclName<_s823>, TypeDecl<_qty2919> {}; // CXXRecord DataView
struct _d3217: NamedDeclName<_s823>, TypeDecl<_qty2919> {}; // CXXRecord DataView
struct _d3218: CXXMethodDecl, FunctionDecl<_ty2798, Pack<_d3219, _d3220, _d3221>>, FunctionNoInstance, FunctionResult<_qty2921, _qty2921>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3219: NamedDeclName<_s387> {}; // ParmVar array_buffer
struct _d3220: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3221: NamedDeclName<_s160> {}; // ParmVar length
struct _d3222: CXXMethodDecl, FunctionDecl<_ty2801, Pack<_d3223, _d3224, _d3225>>, FunctionNoInstance, FunctionResult<_qty2924, _qty2924>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3223: NamedDeclName<_s371> {}; // ParmVar shared_array_buffer
struct _d3224: NamedDeclName<_s812> {}; // ParmVar byte_offset
struct _d3225: NamedDeclName<_s160> {}; // ParmVar length
struct _d3226: CXXMethodDecl, FunctionDecl<_ty2803, Pack<_d3227>>, FunctionNoInstance, FunctionResult<_qty2926, _qty2926>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3227: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3228: NamedDeclName<_s36>, TypeDecl<_qty41> {}; // CXXRecord SharedArrayBuffer
struct _d3229: NamedDeclName<_s790>, TypeDecl<_qty2928> {}; // CXXRecord Contents
struct _d3230: NamedDeclName<_s790>, TypeDecl<_qty2928> {}; // CXXRecord Contents
struct _d3231: NamedDeclName<_s783>, TypeDecl<_qty2929> {}; // TypeAlias Allocator
struct _d3232: NamedDeclName<_s791>, TypeDecl<_qty2931> {}; // TypeAlias DeleterCallback
struct _d3233: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty2932>, FunctionNoResult {}; // CXXConstructor Contents
struct _d3234: CXXMethodDecl, FunctionDecl<_ty2673, Pack<>>, FunctionInstance<_qty2933>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s792> {}; // CXXMethod AllocationBase
struct _d3235: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2933>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s793> {}; // CXXMethod AllocationLength
struct _d3236: CXXMethodDecl, FunctionDecl<_ty2811, Pack<>>, FunctionInstance<_qty2933>, FunctionResult<_qty2934, _qty2934>, NamedDeclName<_s787> {}; // CXXMethod AllocationMode
struct _d3237: CXXMethodDecl, FunctionDecl<_ty2673, Pack<>>, FunctionInstance<_qty2933>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s3> {}; // CXXMethod Data
struct _d3238: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2933>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s794> {}; // CXXMethod ByteLength
struct _d3239: CXXMethodDecl, FunctionDecl<_ty2813, Pack<>>, FunctionInstance<_qty2933>, FunctionResult<_qty2931, _qty2931>, NamedDeclName<_s795> {}; // CXXMethod Deleter
struct _d3240: CXXMethodDecl, FunctionDecl<_ty2673, Pack<>>, FunctionInstance<_qty2933>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s796> {}; // CXXMethod DeleterData
struct _d3241: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty2937>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s794> {}; // CXXMethod ByteLength
struct _d3242: CXXMethodDecl, FunctionDecl<_ty2815, Pack<_d3243, _d3244>>, FunctionNoInstance, FunctionResult<_qty2938, _qty2938>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3243: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3244: NamedDeclName<_s797> {}; // ParmVar byte_length
struct _d3245: CXXMethodDecl, FunctionDecl<_ty2817, Pack<_d3246, _d3247, _d3248, _d3249>>, FunctionNoInstance, FunctionResult<_qty2940, _qty2940>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3246: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3247: NamedDeclName<_s130> {}; // ParmVar data
struct _d3248: NamedDeclName<_s797> {}; // ParmVar byte_length
struct _d3249: NamedDeclName<_s389> {}; // ParmVar mode
struct _d3250: CXXMethodDecl, FunctionDecl<_ty2821, Pack<_d3251, _d3252, _d3253>>, FunctionNoInstance, FunctionResult<_qty2944, _qty2944>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3251: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3252: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3253: NamedDeclName<_s389> {}; // ParmVar mode
struct _d3254: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2937>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s426> {}; // CXXMethod IsExternal
struct _d3255: CXXMethodDecl, FunctionDecl<_ty2823, Pack<>>, FunctionInstance<_qty2947>, FunctionResult<_qty2928, _qty2928>, NamedDeclName<_s802> {}; // CXXMethod Externalize
struct _d3256: CXXMethodDecl, FunctionDecl<_ty2823, Pack<>>, FunctionInstance<_qty2947>, FunctionResult<_qty2928, _qty2928>, NamedDeclName<_s803> {}; // CXXMethod GetContents
struct _d3257: CXXMethodDecl, FunctionDecl<_ty2825, Pack<_d3258>>, FunctionNoInstance, FunctionResult<_qty2947, _qty2947>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3258: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3259: NamedDeclName<_s804> {}; // Var kInternalFieldCount
struct _d3260: NamedDeclName<_s12>, TypeDecl<_qty11> {}; // CXXRecord Date
struct _d3261: CXXMethodDecl, FunctionDecl<_ty2827, Pack<_d3262, _d3263>>, FunctionNoInstance, FunctionResult<_qty2950, _qty2950>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3262: NamedDeclName<_s220> {}; // ParmVar context
struct _d3263: NamedDeclName<_s824> {}; // ParmVar time
struct _d3264: CXXMethodDecl, FunctionDecl<_ty2032, Pack<>>, FunctionInstance<_qty2952>, FunctionResult<_qty1904, _qty1904>, NamedDeclName<_s825> {}; // CXXMethod ValueOf
struct _d3265: CXXMethodDecl, FunctionDecl<_ty2830, Pack<_d3266>>, FunctionNoInstance, FunctionResult<_qty2953, _qty2953>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3266: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3267: NamedDeclName<_s25>, TypeDecl<_qty30> {}; // CXXRecord NumberObject
struct _d3268: CXXMethodDecl, FunctionDecl<_ty2832, Pack<_d3269, _d3270>>, FunctionNoInstance, FunctionResult<_qty2955, _qty2955>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3269: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3270: NamedDeclName<_s153> {}; // ParmVar value
struct _d3271: CXXMethodDecl, FunctionDecl<_ty2032, Pack<>>, FunctionInstance<_qty2957>, FunctionResult<_qty1904, _qty1904>, NamedDeclName<_s825> {}; // CXXMethod ValueOf
struct _d3272: CXXMethodDecl, FunctionDecl<_ty2835, Pack<_d3273>>, FunctionNoInstance, FunctionResult<_qty2958, _qty2958>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3273: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3274: NamedDeclName<_s9>, TypeDecl<_qty8> {}; // CXXRecord BigIntObject
struct _d3275: CXXMethodDecl, FunctionDecl<_ty2837, Pack<_d3276, _d3277>>, FunctionNoInstance, FunctionResult<_qty2960, _qty2960>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3276: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3277: NamedDeclName<_s153> {}; // ParmVar value
struct _d3278: CXXMethodDecl, FunctionDecl<_ty2839, Pack<>>, FunctionInstance<_qty2964>, FunctionResult<_qty2962, _qty2962>, NamedDeclName<_s825> {}; // CXXMethod ValueOf
struct _d3279: CXXMethodDecl, FunctionDecl<_ty2842, Pack<_d3280>>, FunctionNoInstance, FunctionResult<_qty2965, _qty2965>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3280: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3281: NamedDeclName<_s11>, TypeDecl<_qty10> {}; // CXXRecord BooleanObject
struct _d3282: CXXMethodDecl, FunctionDecl<_ty2844, Pack<_d3283, _d3284>>, FunctionNoInstance, FunctionResult<_qty2967, _qty2967>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3283: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3284: NamedDeclName<_s153> {}; // ParmVar value
struct _d3285: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty2969>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s825> {}; // CXXMethod ValueOf
struct _d3286: CXXMethodDecl, FunctionDecl<_ty2847, Pack<_d3287>>, FunctionNoInstance, FunctionResult<_qty2970, _qty2970>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3287: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3288: NamedDeclName<_s42>, TypeDecl<_qty47> {}; // CXXRecord StringObject
struct _d3289: CXXMethodDecl, FunctionDecl<_ty2850, Pack<_d3290, _d3291>>, FunctionNoInstance, FunctionResult<_qty2973, _qty2973>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3290: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3291: NamedDeclName<_s153> {}; // ParmVar value
struct _d3292: CXXMethodDecl, FunctionDecl<_ty2852, Pack<>>, FunctionInstance<_qty2977>, FunctionResult<_qty2975, _qty2975>, NamedDeclName<_s825> {}; // CXXMethod ValueOf
struct _d3293: CXXMethodDecl, FunctionDecl<_ty2855, Pack<_d3294>>, FunctionNoInstance, FunctionResult<_qty2978, _qty2978>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3294: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3295: NamedDeclName<_s44>, TypeDecl<_qty49> {}; // CXXRecord SymbolObject
struct _d3296: CXXMethodDecl, FunctionDecl<_ty2858, Pack<_d3297, _d3298>>, FunctionNoInstance, FunctionResult<_qty2981, _qty2981>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3297: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3298: NamedDeclName<_s153> {}; // ParmVar value
struct _d3299: CXXMethodDecl, FunctionDecl<_ty2860, Pack<>>, FunctionInstance<_qty2985>, FunctionResult<_qty2983, _qty2983>, NamedDeclName<_s825> {}; // CXXMethod ValueOf
struct _d3300: CXXMethodDecl, FunctionDecl<_ty2863, Pack<_d3301>>, FunctionNoInstance, FunctionResult<_qty2986, _qty2986>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3301: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3302: NamedDeclName<_s826>, TypeDecl<_qty2988> {}; // CXXRecord RegExp
struct _d3303: NamedDeclName<_s826>, TypeDecl<_qty2988> {}; // CXXRecord RegExp
struct _d3304: NamedDeclName<_s173>, TypeDecl<_qty2989> {}; // Enum Flags
struct _d3305: NamedDeclName<_s827> {}; // EnumConstant kNone
struct _d3306: NamedDeclName<_s828> {}; // EnumConstant kGlobal
struct _d3307: NamedDeclName<_s829> {}; // EnumConstant kIgnoreCase
struct _d3308: NamedDeclName<_s830> {}; // EnumConstant kMultiline
struct _d3309: NamedDeclName<_s831> {}; // EnumConstant kSticky
struct _d3310: NamedDeclName<_s832> {}; // EnumConstant kUnicode
struct _d3311: NamedDeclName<_s833> {}; // EnumConstant kDotAll
struct _d3312: CXXMethodDecl, FunctionDecl<_ty2869, Pack<_d3313, _d3314, _d3315>>, FunctionNoInstance, FunctionResult<_qty2992, _qty2992>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3313: NamedDeclName<_s220> {}; // ParmVar context
struct _d3314: NamedDeclName<_s834> {}; // ParmVar pattern
struct _d3315: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3316: CXXMethodDecl, FunctionDecl<_ty2871, Pack<>>, FunctionInstance<_qty2996>, FunctionResult<_qty2994, _qty2994>, NamedDeclName<_s835> {}; // CXXMethod GetSource
struct _d3317: CXXMethodDecl, FunctionDecl<_ty2874, Pack<>>, FunctionInstance<_qty2996>, FunctionResult<_qty2989, _qty2989>, NamedDeclName<_s836> {}; // CXXMethod GetFlags
struct _d3318: CXXMethodDecl, FunctionDecl<_ty2875, Pack<_d3319>>, FunctionNoInstance, FunctionResult<_qty2998, _qty2998>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3319: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3320: NamedDeclName<_s13>, TypeDecl<_qty12> {}; // CXXRecord External
struct _d3321: CXXMethodDecl, FunctionDecl<_ty2877, Pack<_d3322, _d3323>>, FunctionNoInstance, FunctionResult<_qty3000, _qty3000>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3322: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3323: NamedDeclName<_s153> {}; // ParmVar value
struct _d3324: CXXMethodDecl, FunctionDecl<_ty2879, Pack<_d3325>>, FunctionNoInstance, FunctionResult<_qty3002, _qty3002>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3325: NamedDeclName<_s487> {}; // ParmVar obj
struct _d3326: CXXMethodDecl, FunctionDecl<_ty2673, Pack<>>, FunctionInstance<_qty3004>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s49> {}; // CXXMethod Value
struct _d3327: NamedDeclName<_s837>, TypeDecl<_qty3005> {}; // Enum Intrinsic
struct _d3328: NamedDeclName<_s838> {}; // EnumConstant kArrayProto_entries
struct _d3329: NamedDeclName<_s839> {}; // EnumConstant kArrayProto_forEach
struct _d3330: NamedDeclName<_s840> {}; // EnumConstant kArrayProto_keys
struct _d3331: NamedDeclName<_s841> {}; // EnumConstant kArrayProto_values
struct _d3332: NamedDeclName<_s842> {}; // EnumConstant kErrorPrototype
struct _d3333: NamedDeclName<_s843> {}; // EnumConstant kIteratorPrototype
struct _d3334: NamedDeclName<_s844>, TypeDecl<_qty3006> {}; // CXXRecord Template
struct _d3335: NamedDeclName<_s844>, TypeDecl<_qty3006> {}; // CXXRecord Template
struct _d3336: CXXMethodDecl, FunctionDecl<_ty2886, Pack<_d3337, _d3338, _d3339>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d3337: NamedDeclName<_s534> {}; // ParmVar name
struct _d3338: NamedDeclName<_s153> {}; // ParmVar value
struct _d3339: NamedDeclName<_s598> {}; // ParmVar attributes
struct _d3340: CXXMethodDecl, FunctionDecl<_ty2890, Pack<_d3341, _d3342, _d3343>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s616> {}; // CXXMethod SetPrivate
struct _d3341: NamedDeclName<_s534> {}; // ParmVar name
struct _d3342: NamedDeclName<_s153> {}; // ParmVar value
struct _d3343: NamedDeclName<_s598> {}; // ParmVar attributes
struct _d3344: CXXMethodDecl, FunctionDecl<_ty2892, Pack<_d3345, _d3346, _d3347>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s120> {}; // CXXMethod Set
struct _d3345: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3346: NamedDeclName<_s534> {}; // ParmVar name
struct _d3347: NamedDeclName<_s153> {}; // ParmVar value
struct _d3348: CXXMethodDecl, FunctionDecl<_ty2896, Pack<_d3349, _d3350, _d3351, _d3352, _d3353>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s612> {}; // CXXMethod SetAccessorProperty
struct _d3349: NamedDeclName<_s534> {}; // ParmVar name
struct _d3350: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3351: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3352: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d3353: NamedDeclName<_s608> {}; // ParmVar settings
struct _d3354: CXXMethodDecl, FunctionDecl<_ty2900, Pack<_d3355, _d3356, _d3357, _d3358, _d3359, _d3360, _d3361, _d3362, _d3363>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s613> {}; // CXXMethod SetNativeDataProperty
struct _d3355: NamedDeclName<_s534> {}; // ParmVar name
struct _d3356: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3357: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3358: NamedDeclName<_s130> {}; // ParmVar data
struct _d3359: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d3360: NamedDeclName<_s845> {}; // ParmVar signature
struct _d3361: NamedDeclName<_s608> {}; // ParmVar settings
struct _d3362: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d3363: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d3364: CXXMethodDecl, FunctionDecl<_ty2904, Pack<_d3365, _d3366, _d3367, _d3368, _d3369, _d3370, _d3371, _d3372, _d3373>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s613> {}; // CXXMethod SetNativeDataProperty
struct _d3365: NamedDeclName<_s534> {}; // ParmVar name
struct _d3366: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3367: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3368: NamedDeclName<_s130> {}; // ParmVar data
struct _d3369: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d3370: NamedDeclName<_s845> {}; // ParmVar signature
struct _d3371: NamedDeclName<_s608> {}; // ParmVar settings
struct _d3372: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d3373: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d3374: CXXMethodDecl, FunctionDecl<_ty2907, Pack<_d3375, _d3376, _d3377, _d3378, _d3379, _d3380>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s614> {}; // CXXMethod SetLazyDataProperty
struct _d3375: NamedDeclName<_s534> {}; // ParmVar name
struct _d3376: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3377: NamedDeclName<_s130> {}; // ParmVar data
struct _d3378: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d3379: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d3380: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d3381: CXXMethodDecl, FunctionDecl<_ty2909, Pack<_d3382, _d3383, _d3384>>, FunctionInstance<_qty3010>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s846> {}; // CXXMethod SetIntrinsicDataProperty
struct _d3382: NamedDeclName<_s534> {}; // ParmVar name
struct _d3383: NamedDeclName<_s847> {}; // ParmVar intrinsic
struct _d3384: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d3385: NamedDeclName<_s848>, TypeDecl<_qty3033> {}; // Typedef GenericNamedPropertyGetterCallback
struct _d3386: NamedDeclName<_s849>, TypeDecl<_qty3039> {}; // Typedef GenericNamedPropertySetterCallback
struct _d3387: NamedDeclName<_s850>, TypeDecl<_qty3046> {}; // Typedef GenericNamedPropertyQueryCallback
struct _d3388: NamedDeclName<_s851>, TypeDecl<_qty3052> {}; // Typedef GenericNamedPropertyDeleterCallback
struct _d3389: NamedDeclName<_s852>, TypeDecl<_qty3058> {}; // Typedef GenericNamedPropertyEnumeratorCallback
struct _d3390: NamedDeclName<_s853>, TypeDecl<_qty3063> {}; // Typedef GenericNamedPropertyDefinerCallback
struct _d3391: NamedDeclName<_s854>, TypeDecl<_qty3069> {}; // Typedef GenericNamedPropertyDescriptorCallback
struct _d3392: NamedDeclName<_s855>, TypeDecl<_qty3075> {}; // Typedef IndexedPropertyGetterCallback
struct _d3393: NamedDeclName<_s856>, TypeDecl<_qty3080> {}; // Typedef IndexedPropertySetterCallback
struct _d3394: NamedDeclName<_s857>, TypeDecl<_qty3086> {}; // Typedef IndexedPropertyQueryCallback
struct _d3395: NamedDeclName<_s858>, TypeDecl<_qty3091> {}; // Typedef IndexedPropertyDeleterCallback
struct _d3396: NamedDeclName<_s859>, TypeDecl<_qty3096> {}; // Typedef IndexedPropertyEnumeratorCallback
struct _d3397: NamedDeclName<_s860>, TypeDecl<_qty3101> {}; // Typedef IndexedPropertyDefinerCallback
struct _d3398: NamedDeclName<_s861>, TypeDecl<_qty3106> {}; // Typedef IndexedPropertyDescriptorCallback
struct _d3399: NamedDeclName<_s862>, TypeDecl<_qty3111> {}; // Enum AccessType
struct _d3400: NamedDeclName<_s863> {}; // EnumConstant ACCESS_GET
struct _d3401: NamedDeclName<_s864> {}; // EnumConstant ACCESS_SET
struct _d3402: NamedDeclName<_s865> {}; // EnumConstant ACCESS_HAS
struct _d3403: NamedDeclName<_s866> {}; // EnumConstant ACCESS_DELETE
struct _d3404: NamedDeclName<_s867> {}; // EnumConstant ACCESS_KEYS
struct _d3405: NamedDeclName<_s868>, TypeDecl<_qty3112> {}; // Typedef AccessCheckCallback
struct _d3406: NamedDeclName<_s15>, TypeDecl<_qty14> {}; // CXXRecord FunctionTemplate
struct _d3407: CXXMethodDecl, FunctionDecl<_ty3012, Pack<_d3408, _d3409, _d3410, _d3411, _d3412, _d3413, _d3414>>, FunctionNoInstance, FunctionResult<_qty3120, _qty3120>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3408: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3409: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3410: NamedDeclName<_s130> {}; // ParmVar data
struct _d3411: NamedDeclName<_s845> {}; // ParmVar signature
struct _d3412: NamedDeclName<_s160> {}; // ParmVar length
struct _d3413: NamedDeclName<_s699> {}; // ParmVar behavior
struct _d3414: NamedDeclName<_s700> {}; // ParmVar side_effect_type
struct _d3415: CXXMethodDecl, FunctionDecl<_ty3014, Pack<_d3416, _d3417>>, FunctionNoInstance, FunctionResult<_qty3122, _qty3122>, NamedDeclName<_s869> {}; // CXXMethod FromSnapshot
struct _d3416: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3417: NamedDeclName<_s128> {}; // ParmVar index
struct _d3418: CXXMethodDecl, FunctionDecl<_ty3019, Pack<_d3419, _d3420, _d3421, _d3422, _d3423, _d3424, _d3425>>, FunctionNoInstance, FunctionResult<_qty3127, _qty3127>, NamedDeclName<_s870> {}; // CXXMethod NewWithCache
struct _d3419: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3420: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3421: NamedDeclName<_s871> {}; // ParmVar cache_property
struct _d3422: NamedDeclName<_s130> {}; // ParmVar data
struct _d3423: NamedDeclName<_s845> {}; // ParmVar signature
struct _d3424: NamedDeclName<_s160> {}; // ParmVar length
struct _d3425: NamedDeclName<_s700> {}; // ParmVar side_effect_type
struct _d3426: CXXMethodDecl, FunctionDecl<_ty3022, Pack<_d3427>>, FunctionInstance<_qty3132>, FunctionResult<_qty3130, _qty3130>, NamedDeclName<_s872> {}; // CXXMethod GetFunction
struct _d3427: NamedDeclName<_s220> {}; // ParmVar context
struct _d3428: CXXMethodDecl, FunctionDecl<_ty3025, Pack<>>, FunctionInstance<_qty3132>, FunctionResult<_qty3133, _qty3133>, NamedDeclName<_s873> {}; // CXXMethod NewRemoteInstance
struct _d3429: CXXMethodDecl, FunctionDecl<_ty3028, Pack<_d3430, _d3431, _d3432>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s874> {}; // CXXMethod SetCallHandler
struct _d3430: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3431: NamedDeclName<_s130> {}; // ParmVar data
struct _d3432: NamedDeclName<_s700> {}; // ParmVar side_effect_type
struct _d3433: CXXMethodDecl, FunctionDecl<_ty1509, Pack<_d3434>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s875> {}; // CXXMethod SetLength
struct _d3434: NamedDeclName<_s160> {}; // ParmVar length
struct _d3435: CXXMethodDecl, FunctionDecl<_ty3029, Pack<>>, FunctionInstance<_qty3132>, FunctionResult<_qty3137, _qty3137>, NamedDeclName<_s876> {}; // CXXMethod InstanceTemplate
struct _d3436: CXXMethodDecl, FunctionDecl<_ty3032, Pack<_d3437>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s877> {}; // CXXMethod Inherit
struct _d3437: NamedDeclName<_s878> {}; // ParmVar parent
struct _d3438: CXXMethodDecl, FunctionDecl<_ty3033, Pack<>>, FunctionInstance<_qty3132>, FunctionResult<_qty3141, _qty3141>, NamedDeclName<_s879> {}; // CXXMethod PrototypeTemplate
struct _d3439: CXXMethodDecl, FunctionDecl<_ty3036, Pack<_d3440>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s880> {}; // CXXMethod SetPrototypeProviderTemplate
struct _d3440: NamedDeclName<_s881> {}; // ParmVar prototype_provider
struct _d3441: CXXMethodDecl, FunctionDecl<_ty3038, Pack<_d3442>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s882> {}; // CXXMethod SetClassName
struct _d3442: NamedDeclName<_s534> {}; // ParmVar name
struct _d3443: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d3444>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s883> {}; // CXXMethod SetAcceptAnyReceiver
struct _d3444: NamedDeclName<_s153> {}; // ParmVar value
struct _d3445: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s884> {}; // CXXMethod ReadOnlyPrototype
struct _d3446: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3132>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s885> {}; // CXXMethod RemovePrototype
struct _d3447: CXXMethodDecl, FunctionDecl<_ty3040, Pack<_d3448>>, FunctionInstance<_qty3132>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s886> {}; // CXXMethod HasInstance
struct _d3448: NamedDeclName<_s369> {}; // ParmVar object
struct _d3449: CXXMethodDecl, FunctionDecl<_ty3041, Pack<_d3450>>, FunctionNoInstance, FunctionResult<_qty3132, _qty3132>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3450: NamedDeclName<_s130> {}; // ParmVar data
struct _d3451: NamedDeclName<_s887>, TypeDecl<_qty3150> {}; // Enum PropertyHandlerFlags
struct _d3452: NamedDeclName<_s827> {}; // EnumConstant kNone
struct _d3453: NamedDeclName<_s888> {}; // EnumConstant kAllCanRead
struct _d3454: NamedDeclName<_s889> {}; // EnumConstant kNonMasking
struct _d3455: NamedDeclName<_s890> {}; // EnumConstant kOnlyInterceptStrings
struct _d3456: NamedDeclName<_s581> {}; // EnumConstant kHasNoSideEffect
struct _d3457: NamedDeclName<_s891>, TypeDecl<_qty3151> {}; // CXXRecord NamedPropertyHandlerConfiguration
struct _d3458: NamedDeclName<_s891>, TypeDecl<_qty3151> {}; // CXXRecord NamedPropertyHandlerConfiguration
struct _d3459: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3045, Pack<_d3460, _d3461, _d3462, _d3463, _d3464, _d3465, _d3466, _d3467, _d3468>>, FunctionInstance<_qty3154>, FunctionNoResult {}; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3460: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3461: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3462: NamedDeclName<_s892> {}; // ParmVar query
struct _d3463: NamedDeclName<_s893> {}; // ParmVar deleter
struct _d3464: NamedDeclName<_s894> {}; // ParmVar enumerator
struct _d3465: NamedDeclName<_s895> {}; // ParmVar definer
struct _d3466: NamedDeclName<_s600> {}; // ParmVar descriptor
struct _d3467: NamedDeclName<_s130> {}; // ParmVar data
struct _d3468: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3469: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3048, Pack<_d3470, _d3471, _d3472, _d3473, _d3474, _d3475, _d3476>>, FunctionInstance<_qty3154>, FunctionNoResult {}; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3470: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3471: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3472: NamedDeclName<_s892> {}; // ParmVar query
struct _d3473: NamedDeclName<_s893> {}; // ParmVar deleter
struct _d3474: NamedDeclName<_s894> {}; // ParmVar enumerator
struct _d3475: NamedDeclName<_s130> {}; // ParmVar data
struct _d3476: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3477: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3050, Pack<_d3478, _d3479, _d3480, _d3481, _d3482, _d3483, _d3484, _d3485>>, FunctionInstance<_qty3154>, FunctionNoResult {}; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3478: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3479: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3480: NamedDeclName<_s600> {}; // ParmVar descriptor
struct _d3481: NamedDeclName<_s893> {}; // ParmVar deleter
struct _d3482: NamedDeclName<_s894> {}; // ParmVar enumerator
struct _d3483: NamedDeclName<_s895> {}; // ParmVar definer
struct _d3484: NamedDeclName<_s130> {}; // ParmVar data
struct _d3485: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3486: NamedDeclName<_s606> {}; // Field getter
struct _d3487: NamedDeclName<_s607> {}; // Field setter
struct _d3488: NamedDeclName<_s892> {}; // Field query
struct _d3489: NamedDeclName<_s893> {}; // Field deleter
struct _d3490: NamedDeclName<_s894> {}; // Field enumerator
struct _d3491: NamedDeclName<_s895> {}; // Field definer
struct _d3492: NamedDeclName<_s600> {}; // Field descriptor
struct _d3493: NamedDeclName<_s130> {}; // Field data
struct _d3494: NamedDeclName<_s168> {}; // Field flags
struct _d3495: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3053, Pack<_d3496>>, FunctionInstance<_qty3154>, FunctionNoResult {}; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3496: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3497: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3055, Pack<_d3498>>, FunctionInstance<_qty3154>, FunctionNoResult {}; // CXXConstructor NamedPropertyHandlerConfiguration
struct _d3498: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3499: NamedDeclName<_s896>, TypeDecl<_qty3165> {}; // CXXRecord IndexedPropertyHandlerConfiguration
struct _d3500: NamedDeclName<_s896>, TypeDecl<_qty3165> {}; // CXXRecord IndexedPropertyHandlerConfiguration
struct _d3501: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3058, Pack<_d3502, _d3503, _d3504, _d3505, _d3506, _d3507, _d3508, _d3509, _d3510>>, FunctionInstance<_qty3168>, FunctionNoResult {}; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3502: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3503: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3504: NamedDeclName<_s892> {}; // ParmVar query
struct _d3505: NamedDeclName<_s893> {}; // ParmVar deleter
struct _d3506: NamedDeclName<_s894> {}; // ParmVar enumerator
struct _d3507: NamedDeclName<_s895> {}; // ParmVar definer
struct _d3508: NamedDeclName<_s600> {}; // ParmVar descriptor
struct _d3509: NamedDeclName<_s130> {}; // ParmVar data
struct _d3510: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3511: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3061, Pack<_d3512, _d3513, _d3514, _d3515, _d3516, _d3517, _d3518>>, FunctionInstance<_qty3168>, FunctionNoResult {}; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3512: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3513: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3514: NamedDeclName<_s892> {}; // ParmVar query
struct _d3515: NamedDeclName<_s893> {}; // ParmVar deleter
struct _d3516: NamedDeclName<_s894> {}; // ParmVar enumerator
struct _d3517: NamedDeclName<_s130> {}; // ParmVar data
struct _d3518: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3519: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3063, Pack<_d3520, _d3521, _d3522, _d3523, _d3524, _d3525, _d3526, _d3527>>, FunctionInstance<_qty3168>, FunctionNoResult {}; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3520: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3521: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3522: NamedDeclName<_s600> {}; // ParmVar descriptor
struct _d3523: NamedDeclName<_s893> {}; // ParmVar deleter
struct _d3524: NamedDeclName<_s894> {}; // ParmVar enumerator
struct _d3525: NamedDeclName<_s895> {}; // ParmVar definer
struct _d3526: NamedDeclName<_s130> {}; // ParmVar data
struct _d3527: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3528: NamedDeclName<_s606> {}; // Field getter
struct _d3529: NamedDeclName<_s607> {}; // Field setter
struct _d3530: NamedDeclName<_s892> {}; // Field query
struct _d3531: NamedDeclName<_s893> {}; // Field deleter
struct _d3532: NamedDeclName<_s894> {}; // Field enumerator
struct _d3533: NamedDeclName<_s895> {}; // Field definer
struct _d3534: NamedDeclName<_s600> {}; // Field descriptor
struct _d3535: NamedDeclName<_s130> {}; // Field data
struct _d3536: NamedDeclName<_s168> {}; // Field flags
struct _d3537: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3066, Pack<_d3538>>, FunctionInstance<_qty3168>, FunctionNoResult {}; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3538: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3539: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3068, Pack<_d3540>>, FunctionInstance<_qty3168>, FunctionNoResult {}; // CXXConstructor IndexedPropertyHandlerConfiguration
struct _d3540: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3541: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3168>, FunctionNoResult {}; // CXXDestructor ~IndexedPropertyHandlerConfiguration
struct _d3542: NamedDeclName<_s28>, TypeDecl<_qty33> {}; // CXXRecord ObjectTemplate
struct _d3543: CXXMethodDecl, FunctionDecl<_ty3070, Pack<_d3544, _d3545>>, FunctionNoInstance, FunctionResult<_qty3180, _qty3180>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3544: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3545: NamedDeclName<_s897> {}; // ParmVar constructor
struct _d3546: CXXMethodDecl, FunctionDecl<_ty3072, Pack<_d3547, _d3548>>, FunctionNoInstance, FunctionResult<_qty3182, _qty3182>, NamedDeclName<_s869> {}; // CXXMethod FromSnapshot
struct _d3547: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3548: NamedDeclName<_s128> {}; // ParmVar index
struct _d3549: CXXMethodDecl, FunctionDecl<_ty3075, Pack<_d3550>>, FunctionInstance<_qty3187>, FunctionResult<_qty3185, _qty3185>, NamedDeclName<_s701> {}; // CXXMethod NewInstance
struct _d3550: NamedDeclName<_s220> {}; // ParmVar context
struct _d3551: CXXMethodDecl, FunctionDecl<_ty3081, Pack<_d3552, _d3553, _d3554, _d3555, _d3556, _d3557, _d3558, _d3559, _d3560>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s605> {}; // CXXMethod SetAccessor
struct _d3552: NamedDeclName<_s534> {}; // ParmVar name
struct _d3553: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3554: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3555: NamedDeclName<_s130> {}; // ParmVar data
struct _d3556: NamedDeclName<_s608> {}; // ParmVar settings
struct _d3557: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d3558: NamedDeclName<_s845> {}; // ParmVar signature
struct _d3559: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d3560: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d3561: CXXMethodDecl, FunctionDecl<_ty3085, Pack<_d3562, _d3563, _d3564, _d3565, _d3566, _d3567, _d3568, _d3569, _d3570>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s605> {}; // CXXMethod SetAccessor
struct _d3562: NamedDeclName<_s534> {}; // ParmVar name
struct _d3563: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3564: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3565: NamedDeclName<_s130> {}; // ParmVar data
struct _d3566: NamedDeclName<_s608> {}; // ParmVar settings
struct _d3567: NamedDeclName<_s609> {}; // ParmVar attribute
struct _d3568: NamedDeclName<_s845> {}; // ParmVar signature
struct _d3569: NamedDeclName<_s610> {}; // ParmVar getter_side_effect_type
struct _d3570: NamedDeclName<_s611> {}; // ParmVar setter_side_effect_type
struct _d3571: CXXMethodDecl, FunctionDecl<_ty3086, Pack<_d3572>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s898> {}; // CXXMethod SetHandler
struct _d3572: NamedDeclName<_s899> {}; // ParmVar configuration
struct _d3573: CXXMethodDecl, FunctionDecl<_ty3088, Pack<_d3574, _d3575, _d3576, _d3577, _d3578, _d3579>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s900> {}; // CXXMethod SetIndexedPropertyHandler
struct _d3574: NamedDeclName<_s606> {}; // ParmVar getter
struct _d3575: NamedDeclName<_s607> {}; // ParmVar setter
struct _d3576: NamedDeclName<_s892> {}; // ParmVar query
struct _d3577: NamedDeclName<_s893> {}; // ParmVar deleter
struct _d3578: NamedDeclName<_s894> {}; // ParmVar enumerator
struct _d3579: NamedDeclName<_s130> {}; // ParmVar data
struct _d3580: CXXMethodDecl, FunctionDecl<_ty3089, Pack<_d3581>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s898> {}; // CXXMethod SetHandler
struct _d3581: NamedDeclName<_s899> {}; // ParmVar configuration
struct _d3582: CXXMethodDecl, FunctionDecl<_ty3091, Pack<_d3583, _d3584>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s901> {}; // CXXMethod SetCallAsFunctionHandler
struct _d3583: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3584: NamedDeclName<_s130> {}; // ParmVar data
struct _d3585: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s902> {}; // CXXMethod MarkAsUndetectable
struct _d3586: CXXMethodDecl, FunctionDecl<_ty3093, Pack<_d3587, _d3588>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s903> {}; // CXXMethod SetAccessCheckCallback
struct _d3587: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3588: NamedDeclName<_s130> {}; // ParmVar data
struct _d3589: CXXMethodDecl, FunctionDecl<_ty3095, Pack<_d3590, _d3591, _d3592, _d3593>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s904> {}; // CXXMethod SetAccessCheckCallbackAndHandler
struct _d3590: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3591: NamedDeclName<_s905> {}; // ParmVar named_handler
struct _d3592: NamedDeclName<_s906> {}; // ParmVar indexed_handler
struct _d3593: NamedDeclName<_s130> {}; // ParmVar data
struct _d3594: CXXMethodDecl, FunctionDecl<_ty1554, Pack<>>, FunctionInstance<_qty3187>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s634> {}; // CXXMethod InternalFieldCount
struct _d3595: CXXMethodDecl, FunctionDecl<_ty1509, Pack<_d3596>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s907> {}; // CXXMethod SetInternalFieldCount
struct _d3596: NamedDeclName<_s153> {}; // ParmVar value
struct _d3597: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty3187>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s908> {}; // CXXMethod IsImmutableProto
struct _d3598: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3187>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s909> {}; // CXXMethod SetImmutableProto
struct _d3599: CXXMethodDecl, FunctionDecl<_ty3096, Pack<_d3600>>, FunctionNoInstance, FunctionResult<_qty3187, _qty3187>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3600: NamedDeclName<_s130> {}; // ParmVar data
struct _d3601: NamedDeclName<_s37>, TypeDecl<_qty42> {}; // CXXRecord Signature
struct _d3602: CXXMethodDecl, FunctionDecl<_ty3098, Pack<_d3603, _d3604>>, FunctionNoInstance, FunctionResult<_qty3208, _qty3208>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3603: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3604: NamedDeclName<_s910> {}; // ParmVar receiver
struct _d3605: CXXMethodDecl, FunctionDecl<_ty3100, Pack<_d3606>>, FunctionNoInstance, FunctionResult<_qty3210, _qty3210>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3606: NamedDeclName<_s130> {}; // ParmVar data
struct _d3607: NamedDeclName<_s5>, TypeDecl<_qty4> {}; // CXXRecord AccessorSignature
struct _d3608: CXXMethodDecl, FunctionDecl<_ty3103, Pack<_d3609, _d3610>>, FunctionNoInstance, FunctionResult<_qty3213, _qty3213>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3609: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3610: NamedDeclName<_s910> {}; // ParmVar receiver
struct _d3611: CXXMethodDecl, FunctionDecl<_ty3105, Pack<_d3612>>, FunctionNoInstance, FunctionResult<_qty3215, _qty3215>, NamedDeclName<_s60> {}; // CXXMethod Cast
struct _d3612: NamedDeclName<_s130> {}; // ParmVar data
struct _d3613: NamedDeclName<_s911>, TypeDecl<_qty3217> {}; // CXXRecord Extension
struct _d3614: NamedDeclName<_s911>, TypeDecl<_qty3217> {}; // CXXRecord Extension
struct _d3615: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3109, Pack<_d3616, _d3617, _d3618, _d3619, _d3620>>, FunctionInstance<_qty3220>, FunctionNoResult {}; // CXXConstructor Extension
struct _d3616: NamedDeclName<_s534> {}; // ParmVar name
struct _d3617: NamedDeclName<_s137> {}; // ParmVar source
struct _d3618: NamedDeclName<_s912> {}; // ParmVar dep_count
struct _d3619: NamedDeclName<_s913> {}; // ParmVar deps
struct _d3620: NamedDeclName<_s914> {}; // ParmVar source_length
struct _d3621: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3220>, FunctionNoResult {}; // CXXDestructor ~Extension
struct _d3622: CXXMethodDecl, FunctionDecl<_ty3112, Pack<_d3623, _d3624>>, FunctionInstance<_qty3220>, FunctionResult<_qty3222, _qty3222>, NamedDeclName<_s915> {}; // CXXMethod GetNativeFunctionTemplate
struct _d3623: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3624: NamedDeclName<_s534> {}; // ParmVar name
struct _d3625: CXXMethodDecl, FunctionDecl<_ty1935, Pack<>>, FunctionInstance<_qty3224>, FunctionResult<_qty1082, _qty1082>, NamedDeclName<_s534> {}; // CXXMethod name
struct _d3626: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3224>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s914> {}; // CXXMethod source_length
struct _d3627: CXXMethodDecl, FunctionDecl<_ty3115, Pack<>>, FunctionInstance<_qty3224>, FunctionResult<_qty3225, _qty3225>, NamedDeclName<_s137> {}; // CXXMethod source
struct _d3628: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty3224>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s916> {}; // CXXMethod dependency_count
struct _d3629: CXXMethodDecl, FunctionDecl<_ty3118, Pack<>>, FunctionInstance<_qty3224>, FunctionResult<_qty3218, _qty3218>, NamedDeclName<_s917> {}; // CXXMethod dependencies
struct _d3630: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d3631>>, FunctionInstance<_qty3220>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s918> {}; // CXXMethod set_auto_enable
struct _d3631: NamedDeclName<_s153> {}; // ParmVar value
struct _d3632: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty3220>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s919> {}; // CXXMethod auto_enable
struct _d3633: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3120, Pack<_d3634>>, FunctionInstance<_qty3220>, FunctionNoResult {}; // CXXConstructor Extension
struct _d3634: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3635: CXXMethodDecl, FunctionDecl<_ty3120, Pack<_d3636>>, FunctionInstance<_qty3220>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3636: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3637: FunctionDecl<_ty3124, Pack<_d3638>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s920> {}; // Function RegisterExtension
struct _d3638: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3639: NamedDeclName<_s252>, TypeDecl<_qty3233> {}; // ClassTemplateSpecialization unique_ptr
struct _d3640: FunctionDecl<_ty3125, Pack<_d3641>>, FunctionNoInstance, FunctionResult<_qty3235, _qty3235>, NamedDeclName<_s921> {}; // Function Undefined
struct _d3641: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3642: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3643: FunctionDecl<_ty3127, Pack<_d3644>>, FunctionNoInstance, FunctionResult<_qty3237, _qty3237>, NamedDeclName<_s922> {}; // Function Null
struct _d3644: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3645: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3646: FunctionDecl<_ty3129, Pack<_d3647>>, FunctionNoInstance, FunctionResult<_qty3239, _qty3239>, NamedDeclName<_s923> {}; // Function True
struct _d3647: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3648: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3649: FunctionDecl<_ty3131, Pack<_d3650>>, FunctionNoInstance, FunctionResult<_qty3241, _qty3241>, NamedDeclName<_s924> {}; // Function False
struct _d3650: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3651: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3652: NamedDeclName<_s925>, TypeDecl<_qty3243> {}; // CXXRecord ResourceConstraints
struct _d3653: NamedDeclName<_s925>, TypeDecl<_qty3243> {}; // CXXRecord ResourceConstraints
struct _d3654: CXXMethodDecl, FunctionDecl<_ty3134, Pack<_d3655, _d3656>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s926> {}; // CXXMethod ConfigureDefaultsFromHeapSize
struct _d3655: NamedDeclName<_s927> {}; // ParmVar initial_heap_size_in_bytes
struct _d3656: NamedDeclName<_s928> {}; // ParmVar maximum_heap_size_in_bytes
struct _d3657: CXXMethodDecl, FunctionDecl<_ty3136, Pack<_d3658, _d3659>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s929> {}; // CXXMethod ConfigureDefaults
struct _d3658: NamedDeclName<_s930> {}; // ParmVar physical_memory
struct _d3659: NamedDeclName<_s931> {}; // ParmVar virtual_memory_limit
struct _d3660: CXXMethodDecl, FunctionDecl<_ty3137, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1940, _qty1940>, NamedDeclName<_s932> {}; // CXXMethod stack_limit
struct _d3661: CXXMethodDecl, FunctionDecl<_ty3139, Pack<_d3662>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s933> {}; // CXXMethod set_stack_limit
struct _d3662: NamedDeclName<_s153> {}; // ParmVar value
struct _d3663: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s934> {}; // CXXMethod code_range_size_in_bytes
struct _d3664: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3665>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s935> {}; // CXXMethod set_code_range_size_in_bytes
struct _d3665: NamedDeclName<_s936> {}; // ParmVar limit
struct _d3666: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s937> {}; // CXXMethod max_old_generation_size_in_bytes
struct _d3667: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3668>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s938> {}; // CXXMethod set_max_old_generation_size_in_bytes
struct _d3668: NamedDeclName<_s936> {}; // ParmVar limit
struct _d3669: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s939> {}; // CXXMethod max_young_generation_size_in_bytes
struct _d3670: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3671>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s940> {}; // CXXMethod set_max_young_generation_size_in_bytes
struct _d3671: NamedDeclName<_s936> {}; // ParmVar limit
struct _d3672: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s941> {}; // CXXMethod initial_old_generation_size_in_bytes
struct _d3673: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3674>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s942> {}; // CXXMethod set_initial_old_generation_size_in_bytes
struct _d3674: NamedDeclName<_s943> {}; // ParmVar initial_size
struct _d3675: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s944> {}; // CXXMethod initial_young_generation_size_in_bytes
struct _d3676: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3677>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s945> {}; // CXXMethod set_initial_young_generation_size_in_bytes
struct _d3677: NamedDeclName<_s943> {}; // ParmVar initial_size
struct _d3678: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s946> {}; // CXXMethod code_range_size
struct _d3679: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3680>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s947> {}; // CXXMethod set_code_range_size
struct _d3680: NamedDeclName<_s948> {}; // ParmVar limit_in_mb
struct _d3681: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s949> {}; // CXXMethod max_semi_space_size_in_kb
struct _d3682: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3683>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s950> {}; // CXXMethod set_max_semi_space_size_in_kb
struct _d3683: NamedDeclName<_s951> {}; // ParmVar limit_in_kb
struct _d3684: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s952> {}; // CXXMethod max_old_space_size
struct _d3685: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3686>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s953> {}; // CXXMethod set_max_old_space_size
struct _d3686: NamedDeclName<_s948> {}; // ParmVar limit_in_mb
struct _d3687: CXXMethodDecl, FunctionDecl<_ty1927, Pack<>>, FunctionInstance<_qty3248>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s954> {}; // CXXMethod max_zone_pool_size
struct _d3688: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3689>>, FunctionInstance<_qty3245>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s955> {}; // CXXMethod set_max_zone_pool_size
struct _d3689: NamedDeclName<_s771> {}; // ParmVar bytes
struct _d3690: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3245>, FunctionNoResult {}; // CXXConstructor ResourceConstraints
struct _d3691: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3142, Pack<_d3692>>, FunctionInstance<_qty3245>, FunctionNoResult {}; // CXXConstructor ResourceConstraints
struct _d3692: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3693: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3144, Pack<_d3694>>, FunctionInstance<_qty3245>, FunctionNoResult {}; // CXXConstructor ResourceConstraints
struct _d3694: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3695: NamedDeclName<_s956>, TypeDecl<_qty3256> {}; // Typedef FatalErrorCallback
struct _d3696: NamedDeclName<_s957>, TypeDecl<_qty3259> {}; // Typedef OOMErrorCallback
struct _d3697: NamedDeclName<_s958>, TypeDecl<_qty3262> {}; // Typedef DcheckErrorCallback
struct _d3698: NamedDeclName<_s959>, TypeDecl<_qty3265> {}; // Typedef MessageCallback
struct _d3699: NamedDeclName<_s960>, TypeDecl<_qty3270> {}; // Typedef LogEventCallback
struct _d3700: NamedDeclName<_s961>, TypeDecl<_qty3273> {}; // CXXRecord Exception
struct _d3701: NamedDeclName<_s961>, TypeDecl<_qty3273> {}; // CXXRecord Exception
struct _d3702: CXXMethodDecl, FunctionDecl<_ty3169, Pack<_d3703>>, FunctionNoInstance, FunctionResult<_qty3275, _qty3275>, NamedDeclName<_s962> {}; // CXXMethod RangeError
struct _d3703: NamedDeclName<_s367> {}; // ParmVar message
struct _d3704: CXXMethodDecl, FunctionDecl<_ty3172, Pack<_d3705>>, FunctionNoInstance, FunctionResult<_qty3278, _qty3278>, NamedDeclName<_s963> {}; // CXXMethod ReferenceError
struct _d3705: NamedDeclName<_s367> {}; // ParmVar message
struct _d3706: CXXMethodDecl, FunctionDecl<_ty3175, Pack<_d3707>>, FunctionNoInstance, FunctionResult<_qty3281, _qty3281>, NamedDeclName<_s964> {}; // CXXMethod SyntaxError
struct _d3707: NamedDeclName<_s367> {}; // ParmVar message
struct _d3708: CXXMethodDecl, FunctionDecl<_ty3178, Pack<_d3709>>, FunctionNoInstance, FunctionResult<_qty3284, _qty3284>, NamedDeclName<_s965> {}; // CXXMethod TypeError
struct _d3709: NamedDeclName<_s367> {}; // ParmVar message
struct _d3710: CXXMethodDecl, FunctionDecl<_ty3181, Pack<_d3711>>, FunctionNoInstance, FunctionResult<_qty3287, _qty3287>, NamedDeclName<_s966> {}; // CXXMethod Error
struct _d3711: NamedDeclName<_s367> {}; // ParmVar message
struct _d3712: CXXMethodDecl, FunctionDecl<_ty3184, Pack<_d3713, _d3714>>, FunctionNoInstance, FunctionResult<_qty3290, _qty3290>, NamedDeclName<_s967> {}; // CXXMethod CreateMessage
struct _d3713: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3714: NamedDeclName<_s774> {}; // ParmVar exception
struct _d3715: CXXMethodDecl, FunctionDecl<_ty3187, Pack<_d3716>>, FunctionNoInstance, FunctionResult<_qty3293, _qty3293>, NamedDeclName<_s297> {}; // CXXMethod GetStackTrace
struct _d3716: NamedDeclName<_s774> {}; // ParmVar exception
struct _d3717: NamedDeclName<_s968>, TypeDecl<_qty3295> {}; // Typedef CounterLookupCallback
struct _d3718: NamedDeclName<_s969>, TypeDecl<_qty3298> {}; // Typedef CreateHistogramCallback
struct _d3719: NamedDeclName<_s970>, TypeDecl<_qty3301> {}; // Typedef AddHistogramSampleCallback
struct _d3720: NamedDeclName<_s971>, TypeDecl<_qty3304> {}; // Typedef BeforeCallEnteredCallback
struct _d3721: NamedDeclName<_s972>, TypeDecl<_qty3306> {}; // Typedef CallCompletedCallback
struct _d3722: NamedDeclName<_s973>, TypeDecl<_qty3307> {}; // Typedef HostImportModuleDynamicallyCallback
struct _d3723: NamedDeclName<_s974>, TypeDecl<_qty3314> {}; // Typedef HostInitializeImportMetaObjectCallback
struct _d3724: NamedDeclName<_s975>, TypeDecl<_qty3320> {}; // Typedef PrepareStackTraceCallback
struct _d3725: NamedDeclName<_s976>, TypeDecl<_qty3327> {}; // Enum PromiseHookType
struct _d3726: NamedDeclName<_s977> {}; // EnumConstant kInit
struct _d3727: NamedDeclName<_s978> {}; // EnumConstant kResolve
struct _d3728: NamedDeclName<_s979> {}; // EnumConstant kBefore
struct _d3729: NamedDeclName<_s980> {}; // EnumConstant kAfter
struct _d3730: NamedDeclName<_s981>, TypeDecl<_qty3328> {}; // Typedef PromiseHook
struct _d3731: NamedDeclName<_s982>, TypeDecl<_qty3333> {}; // Enum PromiseRejectEvent
struct _d3732: NamedDeclName<_s983> {}; // EnumConstant kPromiseRejectWithNoHandler
struct _d3733: NamedDeclName<_s984> {}; // EnumConstant kPromiseHandlerAddedAfterReject
struct _d3734: NamedDeclName<_s985> {}; // EnumConstant kPromiseRejectAfterResolved
struct _d3735: NamedDeclName<_s986> {}; // EnumConstant kPromiseResolveAfterResolved
struct _d3736: NamedDeclName<_s987>, TypeDecl<_qty3334> {}; // CXXRecord PromiseRejectMessage
struct _d3737: NamedDeclName<_s987>, TypeDecl<_qty3334> {}; // CXXRecord PromiseRejectMessage
struct _d3738: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3239, Pack<_d3739, _d3740, _d3741>>, FunctionInstance<_qty3338>, FunctionNoResult {}; // CXXConstructor PromiseRejectMessage
struct _d3739: NamedDeclName<_s988> {}; // ParmVar promise
struct _d3740: NamedDeclName<_s989> {}; // ParmVar event
struct _d3741: NamedDeclName<_s153> {}; // ParmVar value
struct _d3742: CXXMethodDecl, FunctionDecl<_ty3241, Pack<>>, FunctionInstance<_qty3341>, FunctionResult<_qty3339, _qty3339>, NamedDeclName<_s719> {}; // CXXMethod GetPromise
struct _d3743: CXXMethodDecl, FunctionDecl<_ty3244, Pack<>>, FunctionInstance<_qty3341>, FunctionResult<_qty3333, _qty3333>, NamedDeclName<_s990> {}; // CXXMethod GetEvent
struct _d3744: CXXMethodDecl, FunctionDecl<_ty3245, Pack<>>, FunctionInstance<_qty3341>, FunctionResult<_qty3343, _qty3343>, NamedDeclName<_s991> {}; // CXXMethod GetValue
struct _d3745: NamedDeclName<_s992>, TypeDecl<_qty3345> {}; // Typedef PromiseRejectCallback
struct _d3746: NamedDeclName<_s993>, TypeDecl<_qty3348> {}; // Typedef MicrotasksCompletedCallback
struct _d3747: NamedDeclName<_s994>, TypeDecl<_qty3349> {}; // Typedef MicrotasksCompletedCallbackWithData
struct _d3748: NamedDeclName<_s995>, TypeDecl<_qty3352> {}; // Typedef MicrotaskCallback
struct _d3749: NamedDeclName<_s996>, TypeDecl<_qty3354> {}; // Enum MicrotasksPolicy
struct _d3750: NamedDeclName<_s997> {}; // EnumConstant kExplicit
struct _d3751: NamedDeclName<_s998> {}; // EnumConstant kScoped
struct _d3752: NamedDeclName<_s999> {}; // EnumConstant kAuto
struct _d3753: NamedDeclName<_s22>, TypeDecl<_qty27> {}; // CXXRecord MicrotaskQueue
struct _d3754: CXXMethodDecl, FunctionDecl<_ty3260, Pack<_d3755, _d3756>>, FunctionNoInstance, FunctionResult<_qty3355, _qty3355>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d3755: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3756: NamedDeclName<_s1000> {}; // ParmVar policy
struct _d3757: NamedDeclName<_s252>, TypeDecl<_qty3357> {}; // ClassTemplateSpecialization unique_ptr
struct _d3758: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3264, Pack<>>, FunctionInstance<_qty3360>, FunctionNoResult {}; // CXXDestructor ~MicrotaskQueue
struct _d3759: CXXMethodDecl, FunctionDecl<_ty3267, Pack<_d3760, _d3761>>, FunctionInstance<_qty3360>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1001> {}; // CXXMethod EnqueueMicrotask
struct _d3760: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3761: NamedDeclName<_s1002> {}; // ParmVar microtask
struct _d3762: CXXMethodDecl, FunctionDecl<_ty3270, Pack<_d3763, _d3764, _d3765>>, FunctionInstance<_qty3360>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1001> {}; // CXXMethod EnqueueMicrotask
struct _d3763: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3764: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3765: NamedDeclName<_s130> {}; // ParmVar data
struct _d3766: CXXMethodDecl, FunctionDecl<_ty3271, Pack<_d3767, _d3768>>, FunctionInstance<_qty3360>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1003> {}; // CXXMethod AddMicrotasksCompletedCallback
struct _d3767: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3768: NamedDeclName<_s130> {}; // ParmVar data
struct _d3769: CXXMethodDecl, FunctionDecl<_ty3271, Pack<_d3770, _d3771>>, FunctionInstance<_qty3360>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1004> {}; // CXXMethod RemoveMicrotasksCompletedCallback
struct _d3770: NamedDeclName<_s84> {}; // ParmVar callback
struct _d3771: NamedDeclName<_s130> {}; // ParmVar data
struct _d3772: CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d3773>>, FunctionInstance<_qty3360>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1005> {}; // CXXMethod PerformCheckpoint
struct _d3773: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3774: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3366>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1006> {}; // CXXMethod IsRunningMicrotasks
struct _d3775: CXXMethodDecl, FunctionDecl<_ty1499, Pack<>>, FunctionInstance<_qty3366>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s1007> {}; // CXXMethod GetMicrotasksScopeDepth
struct _d3776: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3274, Pack<_d3777>>, FunctionInstance<_qty3360>, FunctionNoResult {}; // CXXConstructor MicrotaskQueue
struct _d3777: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3778: CXXMethodDecl, FunctionDecl<_ty3275, Pack<_d3779>>, FunctionInstance<_qty3360>, FunctionResult<_qty3370, _qty27>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3779: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3780: NamedDeclName<_s1008>, TypeDecl<_qty3372> {}; // CXXRecord MicrotasksScope
struct _d3781: NamedDeclName<_s1008>, TypeDecl<_qty3372> {}; // CXXRecord MicrotasksScope
struct _d3782: NamedDeclName<_s1009>, TypeDecl<_qty3373> {}; // Enum Type
struct _d3783: NamedDeclName<_s1010> {}; // EnumConstant kRunMicrotasks
struct _d3784: NamedDeclName<_s1011> {}; // EnumConstant kDoNotRunMicrotasks
struct _d3785: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3279, Pack<_d3786, _d3787>>, FunctionInstance<_qty3375>, FunctionNoResult {}; // CXXConstructor MicrotasksScope
struct _d3786: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3787: NamedDeclName<_s85> {}; // ParmVar type
struct _d3788: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3281, Pack<_d3789, _d3790, _d3791>>, FunctionInstance<_qty3375>, FunctionNoResult {}; // CXXConstructor MicrotasksScope
struct _d3789: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3790: NamedDeclName<_s1012> {}; // ParmVar microtask_queue
struct _d3791: NamedDeclName<_s85> {}; // ParmVar type
struct _d3792: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3282, Pack<>>, FunctionInstance<_qty3375>, FunctionNoResult {}; // CXXDestructor ~MicrotasksScope
struct _d3793: CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d3794>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1005> {}; // CXXMethod PerformCheckpoint
struct _d3794: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3795: CXXMethodDecl, FunctionDecl<_ty1460, Pack<_d3796>>, FunctionNoInstance, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s1013> {}; // CXXMethod GetCurrentDepth
struct _d3796: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3797: CXXMethodDecl, FunctionDecl<_ty3283, Pack<_d3798>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1006> {}; // CXXMethod IsRunningMicrotasks
struct _d3798: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d3799: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3285, Pack<_d3800>>, FunctionInstance<_qty3375>, FunctionNoResult {}; // CXXConstructor MicrotasksScope
struct _d3800: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3801: CXXMethodDecl, FunctionDecl<_ty3286, Pack<_d3802>>, FunctionInstance<_qty3375>, FunctionResult<_qty3382, _qty3372>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3802: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3803: NamedDeclName<_s1014>, TypeDecl<_qty3384> {}; // Typedef FailedAccessCheckCallback
struct _d3804: NamedDeclName<_s1015>, TypeDecl<_qty3389> {}; // Typedef AllowCodeGenerationFromStringsCallback
struct _d3805: NamedDeclName<_s1016>, TypeDecl<_qty3394> {}; // Typedef ExtensionCallback
struct _d3806: NamedDeclName<_s1017>, TypeDecl<_qty3399> {}; // Typedef AllowWasmCodeGenerationCallback
struct _d3807: NamedDeclName<_s1018>, TypeDecl<_qty3404> {}; // Typedef ApiImplementationCallback
struct _d3808: NamedDeclName<_s1019>, TypeDecl<_qty3409> {}; // Typedef WasmStreamingCallback
struct _d3809: NamedDeclName<_s1020>, TypeDecl<_qty3414> {}; // Typedef WasmThreadsEnabledCallback
struct _d3810: NamedDeclName<_s1021>, TypeDecl<_qty3418> {}; // Enum GCType
struct _d3811: NamedDeclName<_s1022> {}; // EnumConstant kGCTypeScavenge
struct _d3812: NamedDeclName<_s1023> {}; // EnumConstant kGCTypeMarkSweepCompact
struct _d3813: NamedDeclName<_s1024> {}; // EnumConstant kGCTypeIncrementalMarking
struct _d3814: NamedDeclName<_s1025> {}; // EnumConstant kGCTypeProcessWeakCallbacks
struct _d3815: NamedDeclName<_s1026> {}; // EnumConstant kGCTypeAll
struct _d3816: NamedDeclName<_s1027>, TypeDecl<_qty3419> {}; // Enum GCCallbackFlags
struct _d3817: NamedDeclName<_s1028> {}; // EnumConstant kNoGCCallbackFlags
struct _d3818: NamedDeclName<_s1029> {}; // EnumConstant kGCCallbackFlagConstructRetainedObjectInfos
struct _d3819: NamedDeclName<_s1030> {}; // EnumConstant kGCCallbackFlagForced
struct _d3820: NamedDeclName<_s1031> {}; // EnumConstant kGCCallbackFlagSynchronousPhantomCallbackProcessing
struct _d3821: NamedDeclName<_s1032> {}; // EnumConstant kGCCallbackFlagCollectAllAvailableGarbage
struct _d3822: NamedDeclName<_s1033> {}; // EnumConstant kGCCallbackFlagCollectAllExternalMemory
struct _d3823: NamedDeclName<_s1034> {}; // EnumConstant kGCCallbackScheduleIdleGarbageCollection
struct _d3824: NamedDeclName<_s1035>, TypeDecl<_qty3420> {}; // Typedef GCCallback
struct _d3825: NamedDeclName<_s1036>, TypeDecl<_qty3423> {}; // Typedef InterruptCallback
struct _d3826: NamedDeclName<_s1037>, TypeDecl<_qty3424> {}; // Typedef NearHeapLimitCallback
struct _d3827: NamedDeclName<_s1038>, TypeDecl<_qty3427> {}; // CXXRecord HeapStatistics
struct _d3828: NamedDeclName<_s1038>, TypeDecl<_qty3427> {}; // CXXRecord HeapStatistics
struct _d3829: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3428>, FunctionNoResult {}; // CXXConstructor HeapStatistics
struct _d3830: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1039> {}; // CXXMethod total_heap_size
struct _d3831: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1040> {}; // CXXMethod total_heap_size_executable
struct _d3832: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1041> {}; // CXXMethod total_physical_size
struct _d3833: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1042> {}; // CXXMethod total_available_size
struct _d3834: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1043> {}; // CXXMethod used_heap_size
struct _d3835: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1044> {}; // CXXMethod heap_size_limit
struct _d3836: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1045> {}; // CXXMethod malloced_memory
struct _d3837: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1046> {}; // CXXMethod external_memory
struct _d3838: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1047> {}; // CXXMethod peak_malloced_memory
struct _d3839: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1048> {}; // CXXMethod number_of_native_contexts
struct _d3840: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1049> {}; // CXXMethod number_of_detached_contexts
struct _d3841: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3428>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1050> {}; // CXXMethod does_zap_garbage
struct _d3842: NamedDeclName<_s1051>, TypeDecl<_qty3429> {}; // CXXRecord HeapSpaceStatistics
struct _d3843: NamedDeclName<_s1051>, TypeDecl<_qty3429> {}; // CXXRecord HeapSpaceStatistics
struct _d3844: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3430>, FunctionNoResult {}; // CXXConstructor HeapSpaceStatistics
struct _d3845: CXXMethodDecl, FunctionDecl<_ty3344, Pack<>>, FunctionInstance<_qty3430>, FunctionResult<_qty1082, _qty1082>, NamedDeclName<_s1052> {}; // CXXMethod space_name
struct _d3846: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3430>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1053> {}; // CXXMethod space_size
struct _d3847: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3430>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1054> {}; // CXXMethod space_used_size
struct _d3848: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3430>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1055> {}; // CXXMethod space_available_size
struct _d3849: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3430>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1056> {}; // CXXMethod physical_space_size
struct _d3850: NamedDeclName<_s1057>, TypeDecl<_qty3432> {}; // CXXRecord HeapObjectStatistics
struct _d3851: NamedDeclName<_s1057>, TypeDecl<_qty3432> {}; // CXXRecord HeapObjectStatistics
struct _d3852: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3433>, FunctionNoResult {}; // CXXConstructor HeapObjectStatistics
struct _d3853: CXXMethodDecl, FunctionDecl<_ty3344, Pack<>>, FunctionInstance<_qty3433>, FunctionResult<_qty1082, _qty1082>, NamedDeclName<_s1058> {}; // CXXMethod object_type
struct _d3854: CXXMethodDecl, FunctionDecl<_ty3344, Pack<>>, FunctionInstance<_qty3433>, FunctionResult<_qty1082, _qty1082>, NamedDeclName<_s1059> {}; // CXXMethod object_sub_type
struct _d3855: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3433>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1060> {}; // CXXMethod object_count
struct _d3856: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3433>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1061> {}; // CXXMethod object_size
struct _d3857: NamedDeclName<_s1062>, TypeDecl<_qty3434> {}; // CXXRecord HeapCodeStatistics
struct _d3858: NamedDeclName<_s1062>, TypeDecl<_qty3434> {}; // CXXRecord HeapCodeStatistics
struct _d3859: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3435>, FunctionNoResult {}; // CXXConstructor HeapCodeStatistics
struct _d3860: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3435>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1063> {}; // CXXMethod code_and_metadata_size
struct _d3861: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3435>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1064> {}; // CXXMethod bytecode_and_metadata_size
struct _d3862: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty3435>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1065> {}; // CXXMethod external_script_source_size
struct _d3863: NamedDeclName<_s1066>, TypeDecl<_qty3436> {}; // CXXRecord JitCodeEvent
struct _d3864: NamedDeclName<_s1066>, TypeDecl<_qty3436> {}; // CXXRecord JitCodeEvent
struct _d3865: NamedDeclName<_s1067>, TypeDecl<_qty3437> {}; // Enum EventType
struct _d3866: NamedDeclName<_s1068> {}; // EnumConstant CODE_ADDED
struct _d3867: NamedDeclName<_s1069> {}; // EnumConstant CODE_MOVED
struct _d3868: NamedDeclName<_s1070> {}; // EnumConstant CODE_REMOVED
struct _d3869: NamedDeclName<_s1071> {}; // EnumConstant CODE_ADD_LINE_POS_INFO
struct _d3870: NamedDeclName<_s1072> {}; // EnumConstant CODE_START_LINE_INFO_RECORDING
struct _d3871: NamedDeclName<_s1073> {}; // EnumConstant CODE_END_LINE_INFO_RECORDING
struct _d3872: NamedDeclName<_s1074>, TypeDecl<_qty3438> {}; // Enum PositionType
struct _d3873: NamedDeclName<_s1075> {}; // EnumConstant POSITION
struct _d3874: NamedDeclName<_s1076> {}; // EnumConstant STATEMENT_POSITION
struct _d3875: NamedDeclName<_s1077>, TypeDecl<_qty3439> {}; // Enum CodeType
struct _d3876: NamedDeclName<_s1078> {}; // EnumConstant BYTE_CODE
struct _d3877: NamedDeclName<_s1079> {}; // EnumConstant JIT_CODE
struct _d3878: NamedDeclName<_s85> {}; // Field type
struct _d3879: NamedDeclName<_s1080> {}; // Field code_type
struct _d3880: NamedDeclName<_s1081> {}; // Field code_start
struct _d3881: NamedDeclName<_s1082> {}; // Field code_len
struct _d3882: NamedDeclName<_s1083> {}; // Field script
struct _d3883: NamedDeclName<_s1084> {}; // Field user_data
struct _d3884: NamedDeclName<_s1085>, TypeDecl<_qty3441> {}; // CXXRecord name_t
struct _d3885: NamedDeclName<_s1085>, TypeDecl<_qty3441> {}; // CXXRecord name_t
struct _d3886: NamedDeclName<_s532> {}; // Field str
struct _d3887: NamedDeclName<_s1086> {}; // Field len
struct _d3888: NamedDeclName<_s1087>, TypeDecl<_qty3442> {}; // CXXRecord line_info_t
struct _d3889: NamedDeclName<_s1087>, TypeDecl<_qty3442> {}; // CXXRecord line_info_t
struct _d3890: NamedDeclName<_s1088> {}; // Field offset
struct _d3891: NamedDeclName<_s1089> {}; // Field pos
struct _d3892: NamedDeclName<_s1090> {}; // Field position_type
struct _d3893: NamedDeclAnon<_s66>, TypeDecl<_qty3443> {}; // CXXRecord 
struct _d3894: NamedDeclName<_s534> {}; // Field name
struct _d3895: NamedDeclName<_s1091> {}; // Field line_info
struct _d3896: NamedDeclName<_s1092> {}; // Field new_code_start
struct _d3897: NamedDeclAnon<_s66> {}; // Field 
struct _d3898: NamedDeclName<_s534> {}; // IndirectField name
struct _d3899: NamedDeclName<_s1091> {}; // IndirectField line_info
struct _d3900: NamedDeclName<_s1092> {}; // IndirectField new_code_start
struct _d3901: NamedDeclName<_s63> {}; // Field isolate
struct _d3902: NamedDeclName<_s1093>, TypeDecl<_qty3446> {}; // Enum RAILMode
struct _d3903: NamedDeclName<_s1094> {}; // EnumConstant PERFORMANCE_RESPONSE
struct _d3904: NamedDeclName<_s1095> {}; // EnumConstant PERFORMANCE_ANIMATION
struct _d3905: NamedDeclName<_s1096> {}; // EnumConstant PERFORMANCE_IDLE
struct _d3906: NamedDeclName<_s1097> {}; // EnumConstant PERFORMANCE_LOAD
struct _d3907: NamedDeclName<_s1098>, TypeDecl<_qty3447> {}; // Enum JitCodeEventOptions
struct _d3908: NamedDeclName<_s1099> {}; // EnumConstant kJitCodeEventDefault
struct _d3909: NamedDeclName<_s1100> {}; // EnumConstant kJitCodeEventEnumExisting
struct _d3910: NamedDeclName<_s1101>, TypeDecl<_qty3448> {}; // Typedef JitCodeEventHandler
struct _d3911: NamedDeclName<_s1102>, TypeDecl<_qty3452> {}; // Typedef UnhandledExceptionCallback
struct _d3912: NamedDeclName<_s1103>, TypeDecl<_qty3454> {}; // CXXRecord _EXCEPTION_POINTERS
struct _d3913: NamedDeclName<_s1104>, TypeDecl<_qty3457> {}; // CXXRecord ExternalResourceVisitor
struct _d3914: NamedDeclName<_s1104>, TypeDecl<_qty3457> {}; // CXXRecord ExternalResourceVisitor
struct _d3915: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3373, Pack<>>, FunctionInstance<_qty3459>, FunctionNoResult {}; // CXXDestructor ~ExternalResourceVisitor
struct _d3916: CXXMethodDecl, FunctionDecl<_ty3376, Pack<_d3917>>, FunctionInstance<_qty3459>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1105> {}; // CXXMethod VisitExternalString
struct _d3917: NamedDeclName<_s1106> {}; // ParmVar string
struct _d3918: CXXMethodDecl, FunctionDecl<_ty3378, Pack<_d3919>>, FunctionInstance<_qty3459>, FunctionResult<_qty3464, _qty3457>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3919: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3920: NamedDeclName<_s1107>, TypeDecl<_qty3466> {}; // CXXRecord PersistentHandleVisitor
struct _d3921: NamedDeclName<_s1107>, TypeDecl<_qty3466> {}; // CXXRecord PersistentHandleVisitor
struct _d3922: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3381, Pack<>>, FunctionInstance<_qty3468>, FunctionNoResult {}; // CXXDestructor ~PersistentHandleVisitor
struct _d3923: CXXMethodDecl, FunctionDecl<_ty3385, Pack<_d3924, _d3925>>, FunctionInstance<_qty3468>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1108> {}; // CXXMethod VisitPersistentHandle
struct _d3924: NamedDeclName<_s153> {}; // ParmVar value
struct _d3925: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d3926: CXXMethodDecl, FunctionDecl<_ty3387, Pack<_d3927>>, FunctionInstance<_qty3468>, FunctionResult<_qty3473, _qty3466>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3927: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3928: NamedDeclName<_s1109>, TypeDecl<_qty3475> {}; // Enum MemoryPressureLevel
struct _d3929: NamedDeclName<_s827> {}; // EnumConstant kNone
struct _d3930: NamedDeclName<_s1110> {}; // EnumConstant kModerate
struct _d3931: NamedDeclName<_s1111> {}; // EnumConstant kCritical
struct _d3932: NamedDeclName<_s1112>, TypeDecl<_qty3476> {}; // CXXRecord EmbedderHeapTracer
struct _d3933: NamedDeclName<_s1112>, TypeDecl<_qty3476> {}; // CXXRecord EmbedderHeapTracer
struct _d3934: NamedDeclName<_s1113>, TypeDecl<_qty3477> {}; // Enum TraceFlags
struct _d3935: NamedDeclName<_s1114> {}; // EnumConstant kNoFlags
struct _d3936: NamedDeclName<_s1115> {}; // EnumConstant kReduceMemory
struct _d3937: NamedDeclName<_s1116>, TypeDecl<_qty3478> {}; // Enum EmbedderStackState
struct _d3938: NamedDeclName<_s1117> {}; // EnumConstant kUnknown
struct _d3939: NamedDeclName<_s1118> {}; // EnumConstant kNonEmpty
struct _d3940: NamedDeclName<_s1119> {}; // EnumConstant kEmpty
struct _d3941: NamedDeclName<_s1120>, TypeDecl<_qty3479> {}; // CXXRecord TracedGlobalHandleVisitor
struct _d3942: NamedDeclName<_s1120>, TypeDecl<_qty3479> {}; // CXXRecord TracedGlobalHandleVisitor
struct _d3943: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3394, Pack<>>, FunctionInstance<_qty3481>, FunctionNoResult {}; // CXXDestructor ~TracedGlobalHandleVisitor
struct _d3944: CXXMethodDecl, FunctionDecl<_ty3398, Pack<_d3945>>, FunctionInstance<_qty3481>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1121> {}; // CXXMethod VisitTracedGlobalHandle
struct _d3945: NamedDeclName<_s153> {}; // ParmVar value
struct _d3946: CXXMethodDecl, FunctionDecl<_ty3400, Pack<_d3947>>, FunctionInstance<_qty3481>, FunctionResult<_qty3487, _qty3479>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3947: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3948: NamedDeclName<_s1122>, TypeDecl<_qty3489> {}; // CXXRecord TraceSummary
struct _d3949: NamedDeclName<_s1122>, TypeDecl<_qty3489> {}; // CXXRecord TraceSummary
struct _d3950: NamedDeclName<_s824> {}; // Field time
struct _d3951: NamedDeclName<_s1123> {}; // Field allocated_size
struct _d3952: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3403, Pack<>>, FunctionInstance<_qty3491>, FunctionNoResult {}; // CXXDestructor ~EmbedderHeapTracer
struct _d3953: CXXMethodDecl, FunctionDecl<_ty3405, Pack<_d3954>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1124> {}; // CXXMethod IterateTracedGlobalHandles
struct _d3954: NamedDeclName<_s1125> {}; // ParmVar visitor
struct _d3955: CXXMethodDecl, FunctionDecl<_ty3410, Pack<_d3956>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1126> {}; // CXXMethod RegisterV8References
struct _d3956: NamedDeclName<_s124> {}; // ParmVar embedder_fields
struct _d3957: NamedDeclName<_s1127>, TypeDecl<_qty3496> {}; // ClassTemplateSpecialization vector
struct _d3958: CXXMethodDecl, FunctionDecl<_ty3413, Pack<_d3959>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1128> {}; // CXXMethod RegisterEmbedderReference
struct _d3959: NamedDeclName<_s1129> {}; // ParmVar ref
struct _d3960: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1130> {}; // CXXMethod TracePrologue
struct _d3961: CXXMethodDecl, FunctionDecl<_ty3414, Pack<_d3962>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1130> {}; // CXXMethod TracePrologue
struct _d3962: NamedDeclName<_s168> {}; // ParmVar flags
struct _d3963: CXXMethodDecl, FunctionDecl<_ty3415, Pack<_d3964>>, FunctionInstance<_qty3491>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1131> {}; // CXXMethod AdvanceTracing
struct _d3964: NamedDeclName<_s1132> {}; // ParmVar deadline_in_ms
struct _d3965: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty3491>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1133> {}; // CXXMethod IsTracingDone
struct _d3966: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1134> {}; // CXXMethod TraceEpilogue
struct _d3967: CXXMethodDecl, FunctionDecl<_ty3417, Pack<_d3968>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1134> {}; // CXXMethod TraceEpilogue
struct _d3968: NamedDeclName<_s1135> {}; // ParmVar trace_summary
struct _d3969: CXXMethodDecl, FunctionDecl<_ty3418, Pack<_d3970>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1136> {}; // CXXMethod EnterFinalPause
struct _d3970: NamedDeclName<_s1137> {}; // ParmVar stack_state
struct _d3971: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1138> {}; // CXXMethod FinalizeTracing
struct _d3972: CXXMethodDecl, FunctionDecl<_ty3422, Pack<_d3973>>, FunctionInstance<_qty3491>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1139> {}; // CXXMethod IsRootForNonTracingGC
struct _d3973: NamedDeclName<_s119> {}; // ParmVar handle
struct _d3974: CXXMethodDecl, FunctionDecl<_ty3418, Pack<_d3975>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1140> {}; // CXXMethod GarbageCollectionForTesting
struct _d3975: NamedDeclName<_s1137> {}; // ParmVar stack_state
struct _d3976: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3977>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1141> {}; // CXXMethod IncreaseAllocatedSize
struct _d3977: NamedDeclName<_s771> {}; // ParmVar bytes
struct _d3978: CXXMethodDecl, FunctionDecl<_ty3140, Pack<_d3979>>, FunctionInstance<_qty3491>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1142> {}; // CXXMethod DecreaseAllocatedSize
struct _d3979: NamedDeclName<_s771> {}; // ParmVar bytes
struct _d3980: CXXMethodDecl, FunctionDecl<_ty3423, Pack<>>, FunctionInstance<_qty3511>, FunctionResult<_qty3363, _qty3363>, NamedDeclName<_s63> {}; // CXXMethod isolate
struct _d3981: NamedDeclName<_s1143> {}; // Field isolate_
struct _d3982: CXXMethodDecl, FunctionDecl<_ty3426, Pack<_d3983>>, FunctionInstance<_qty3491>, FunctionResult<_qty3514, _qty3476>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d3983: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3984: NamedDeclName<_s1144>, TypeDecl<_qty3516> {}; // CXXRecord SerializeInternalFieldsCallback
struct _d3985: NamedDeclName<_s1144>, TypeDecl<_qty3516> {}; // CXXRecord SerializeInternalFieldsCallback
struct _d3986: NamedDeclName<_s1145>, TypeDecl<_qty3517> {}; // Typedef CallbackFunction
struct _d3987: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3434, Pack<_d3988, _d3989>>, FunctionInstance<_qty3522>, FunctionNoResult {}; // CXXConstructor SerializeInternalFieldsCallback
struct _d3988: NamedDeclName<_s292> {}; // ParmVar function
struct _d3989: NamedDeclName<_s1146> {}; // ParmVar data_arg
struct _d3990: NamedDeclName<_s84> {}; // Field callback
struct _d3991: NamedDeclName<_s130> {}; // Field data
struct _d3992: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3437, Pack<_d3993>>, FunctionInstance<_qty3522>, FunctionNoResult {}; // CXXConstructor SerializeInternalFieldsCallback
struct _d3993: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3994: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3439, Pack<_d3995>>, FunctionInstance<_qty3522>, FunctionNoResult {}; // CXXConstructor SerializeInternalFieldsCallback
struct _d3995: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d3996: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3522>, FunctionNoResult {}; // CXXDestructor ~SerializeInternalFieldsCallback
struct _d3997: NamedDeclName<_s1147>, TypeDecl<_qty3528> {}; // Typedef SerializeEmbedderFieldsCallback
struct _d3998: NamedDeclName<_s1148>, TypeDecl<_qty3529> {}; // CXXRecord DeserializeInternalFieldsCallback
struct _d3999: NamedDeclName<_s1148>, TypeDecl<_qty3529> {}; // CXXRecord DeserializeInternalFieldsCallback
struct _d4000: NamedDeclName<_s1145>, TypeDecl<_qty3530> {}; // Typedef CallbackFunction
struct _d4001: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3447, Pack<_d4002, _d4003>>, FunctionInstance<_qty3535>, FunctionNoResult {}; // CXXConstructor DeserializeInternalFieldsCallback
struct _d4002: NamedDeclName<_s292> {}; // ParmVar function
struct _d4003: NamedDeclName<_s1146> {}; // ParmVar data_arg
struct _d4004: NamedDeclName<_s84> {}; // Field callback
struct _d4005: NamedDeclName<_s130> {}; // Field data
struct _d4006: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3454, Pack<_d4007>>, FunctionInstance<_qty3535>, FunctionNoResult {}; // CXXConstructor DeserializeInternalFieldsCallback
struct _d4007: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4008: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3456, Pack<_d4009>>, FunctionInstance<_qty3535>, FunctionNoResult {}; // CXXConstructor DeserializeInternalFieldsCallback
struct _d4009: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4010: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3535>, FunctionNoResult {}; // CXXDestructor ~DeserializeInternalFieldsCallback
struct _d4011: NamedDeclName<_s1149>, TypeDecl<_qty3544> {}; // Typedef DeserializeEmbedderFieldsCallback
struct _d4012: NamedDeclName<_s4>, TypeDecl<_qty3> {}; // CXXRecord Isolate
struct _d4013: NamedDeclName<_s1150>, TypeDecl<_qty3545> {}; // CXXRecord CreateParams
struct _d4014: NamedDeclName<_s1150>, TypeDecl<_qty3545> {}; // CXXRecord CreateParams
struct _d4015: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3546>, FunctionNoResult {}; // CXXConstructor CreateParams
struct _d4016: NamedDeclName<_s1151> {}; // Field code_event_handler
struct _d4017: NamedDeclName<_s1152> {}; // Field constraints
struct _d4018: NamedDeclName<_s1153> {}; // Field snapshot_blob
struct _d4019: NamedDeclName<_s1154> {}; // Field counter_lookup_callback
struct _d4020: NamedDeclName<_s1155> {}; // Field create_histogram_callback
struct _d4021: NamedDeclName<_s1156> {}; // Field add_histogram_sample_callback
struct _d4022: NamedDeclName<_s1157> {}; // Field array_buffer_allocator
struct _d4023: NamedDeclName<_s1158> {}; // Field external_references
struct _d4024: NamedDeclName<_s1159> {}; // Field allow_atomics_wait
struct _d4025: NamedDeclName<_s1160> {}; // Field only_terminate_in_safe_scope
struct _d4026: NamedDeclName<_s1161>, TypeDecl<_qty3550> {}; // CXXRecord Scope
struct _d4027: NamedDeclName<_s1161>, TypeDecl<_qty3550> {}; // CXXRecord Scope
struct _d4028: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d4029>>, FunctionInstance<_qty3551>, FunctionNoResult {}; // CXXConstructor Scope
struct _d4029: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4030: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3551>, FunctionNoResult {}; // CXXDestructor ~Scope
struct _d4031: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3468, Pack<_d4032>>, FunctionInstance<_qty3551>, FunctionNoResult {}; // CXXConstructor Scope
struct _d4032: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4033: CXXMethodDecl, FunctionDecl<_ty3469, Pack<_d4034>>, FunctionInstance<_qty3551>, FunctionResult<_qty3555, _qty3550>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4034: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4035: NamedDeclName<_s1162>, TypeDecl<_qty3557> {}; // CXXRecord DisallowJavascriptExecutionScope
struct _d4036: NamedDeclName<_s1162>, TypeDecl<_qty3557> {}; // CXXRecord DisallowJavascriptExecutionScope
struct _d4037: NamedDeclName<_s1163>, TypeDecl<_qty3558> {}; // Enum OnFailure
struct _d4038: NamedDeclName<_s1164> {}; // EnumConstant CRASH_ON_FAILURE
struct _d4039: NamedDeclName<_s1165> {}; // EnumConstant THROW_ON_FAILURE
struct _d4040: NamedDeclName<_s1166> {}; // EnumConstant DUMP_ON_FAILURE
struct _d4041: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3473, Pack<_d4042, _d4043>>, FunctionInstance<_qty3560>, FunctionNoResult {}; // CXXConstructor DisallowJavascriptExecutionScope
struct _d4042: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4043: NamedDeclName<_s1167> {}; // ParmVar on_failure
struct _d4044: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3475, Pack<>>, FunctionInstance<_qty3560>, FunctionNoResult {}; // CXXDestructor ~DisallowJavascriptExecutionScope
struct _d4045: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3477, Pack<_d4046>>, FunctionInstance<_qty3560>, FunctionNoResult {}; // CXXConstructor DisallowJavascriptExecutionScope
struct _d4046: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4047: CXXMethodDecl, FunctionDecl<_ty3478, Pack<_d4048>>, FunctionInstance<_qty3560>, FunctionResult<_qty3565, _qty3557>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4048: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4049: NamedDeclName<_s1168>, TypeDecl<_qty3567> {}; // CXXRecord AllowJavascriptExecutionScope
struct _d4050: NamedDeclName<_s1168>, TypeDecl<_qty3567> {}; // CXXRecord AllowJavascriptExecutionScope
struct _d4051: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d4052>>, FunctionInstance<_qty3568>, FunctionNoResult {}; // CXXConstructor AllowJavascriptExecutionScope
struct _d4052: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4053: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3482, Pack<>>, FunctionInstance<_qty3568>, FunctionNoResult {}; // CXXDestructor ~AllowJavascriptExecutionScope
struct _d4054: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3484, Pack<_d4055>>, FunctionInstance<_qty3568>, FunctionNoResult {}; // CXXConstructor AllowJavascriptExecutionScope
struct _d4055: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4056: CXXMethodDecl, FunctionDecl<_ty3485, Pack<_d4057>>, FunctionInstance<_qty3568>, FunctionResult<_qty3573, _qty3567>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4057: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4058: NamedDeclName<_s1169>, TypeDecl<_qty3575> {}; // CXXRecord SuppressMicrotaskExecutionScope
struct _d4059: NamedDeclName<_s1169>, TypeDecl<_qty3575> {}; // CXXRecord SuppressMicrotaskExecutionScope
struct _d4060: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d4061>>, FunctionInstance<_qty3576>, FunctionNoResult {}; // CXXConstructor SuppressMicrotaskExecutionScope
struct _d4061: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4062: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3489, Pack<_d4063>>, FunctionInstance<_qty3576>, FunctionNoResult {}; // CXXConstructor SuppressMicrotaskExecutionScope
struct _d4063: NamedDeclName<_s1012> {}; // ParmVar microtask_queue
struct _d4064: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3490, Pack<>>, FunctionInstance<_qty3576>, FunctionNoResult {}; // CXXDestructor ~SuppressMicrotaskExecutionScope
struct _d4065: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3492, Pack<_d4066>>, FunctionInstance<_qty3576>, FunctionNoResult {}; // CXXConstructor SuppressMicrotaskExecutionScope
struct _d4066: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4067: CXXMethodDecl, FunctionDecl<_ty3493, Pack<_d4068>>, FunctionInstance<_qty3576>, FunctionResult<_qty3582, _qty3575>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4068: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4069: NamedDeclName<_s1170>, TypeDecl<_qty3584> {}; // CXXRecord SafeForTerminationScope
struct _d4070: NamedDeclName<_s1170>, TypeDecl<_qty3584> {}; // CXXRecord SafeForTerminationScope
struct _d4071: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3496, Pack<_d4072>>, FunctionInstance<_qty3586>, FunctionNoResult {}; // CXXConstructor SafeForTerminationScope
struct _d4072: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4073: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3498, Pack<>>, FunctionInstance<_qty3586>, FunctionNoResult {}; // CXXDestructor ~SafeForTerminationScope
struct _d4074: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3500, Pack<_d4075>>, FunctionInstance<_qty3586>, FunctionNoResult {}; // CXXConstructor SafeForTerminationScope
struct _d4075: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4076: CXXMethodDecl, FunctionDecl<_ty3501, Pack<_d4077>>, FunctionInstance<_qty3586>, FunctionResult<_qty3591, _qty3584>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4077: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4078: NamedDeclName<_s1171>, TypeDecl<_qty3593> {}; // Enum GarbageCollectionType
struct _d4079: NamedDeclName<_s1172> {}; // EnumConstant kFullGarbageCollection
struct _d4080: NamedDeclName<_s1173> {}; // EnumConstant kMinorGarbageCollection
struct _d4081: NamedDeclName<_s1174>, TypeDecl<_qty3594> {}; // Enum UseCounterFeature
struct _d4082: NamedDeclName<_s1175> {}; // EnumConstant kUseAsm
struct _d4083: NamedDeclName<_s1176> {}; // EnumConstant kBreakIterator
struct _d4084: NamedDeclName<_s1177> {}; // EnumConstant kLegacyConst
struct _d4085: NamedDeclName<_s1178> {}; // EnumConstant kMarkDequeOverflow
struct _d4086: NamedDeclName<_s1179> {}; // EnumConstant kStoreBufferOverflow
struct _d4087: NamedDeclName<_s1180> {}; // EnumConstant kSlotsBufferOverflow
struct _d4088: NamedDeclName<_s1181> {}; // EnumConstant kObjectObserve
struct _d4089: NamedDeclName<_s1182> {}; // EnumConstant kForcedGC
struct _d4090: NamedDeclName<_s1183> {}; // EnumConstant kSloppyMode
struct _d4091: NamedDeclName<_s1184> {}; // EnumConstant kStrictMode
struct _d4092: NamedDeclName<_s1185> {}; // EnumConstant kStrongMode
struct _d4093: NamedDeclName<_s1186> {}; // EnumConstant kRegExpPrototypeStickyGetter
struct _d4094: NamedDeclName<_s1187> {}; // EnumConstant kRegExpPrototypeToString
struct _d4095: NamedDeclName<_s1188> {}; // EnumConstant kRegExpPrototypeUnicodeGetter
struct _d4096: NamedDeclName<_s1189> {}; // EnumConstant kIntlV8Parse
struct _d4097: NamedDeclName<_s1190> {}; // EnumConstant kIntlPattern
struct _d4098: NamedDeclName<_s1191> {}; // EnumConstant kIntlResolved
struct _d4099: NamedDeclName<_s1192> {}; // EnumConstant kPromiseChain
struct _d4100: NamedDeclName<_s1193> {}; // EnumConstant kPromiseAccept
struct _d4101: NamedDeclName<_s1194> {}; // EnumConstant kPromiseDefer
struct _d4102: NamedDeclName<_s1195> {}; // EnumConstant kHtmlCommentInExternalScript
struct _d4103: NamedDeclName<_s1196> {}; // EnumConstant kHtmlComment
struct _d4104: NamedDeclName<_s1197> {}; // EnumConstant kSloppyModeBlockScopedFunctionRedefinition
struct _d4105: NamedDeclName<_s1198> {}; // EnumConstant kForInInitializer
struct _d4106: NamedDeclName<_s1199> {}; // EnumConstant kArrayProtectorDirtied
struct _d4107: NamedDeclName<_s1200> {}; // EnumConstant kArraySpeciesModified
struct _d4108: NamedDeclName<_s1201> {}; // EnumConstant kArrayPrototypeConstructorModified
struct _d4109: NamedDeclName<_s1202> {}; // EnumConstant kArrayInstanceProtoModified
struct _d4110: NamedDeclName<_s1203> {}; // EnumConstant kArrayInstanceConstructorModified
struct _d4111: NamedDeclName<_s1204> {}; // EnumConstant kLegacyFunctionDeclaration
struct _d4112: NamedDeclName<_s1205> {}; // EnumConstant kRegExpPrototypeSourceGetter
struct _d4113: NamedDeclName<_s1206> {}; // EnumConstant kRegExpPrototypeOldFlagGetter
struct _d4114: NamedDeclName<_s1207> {}; // EnumConstant kDecimalWithLeadingZeroInStrictMode
struct _d4115: NamedDeclName<_s1208> {}; // EnumConstant kLegacyDateParser
struct _d4116: NamedDeclName<_s1209> {}; // EnumConstant kDefineGetterOrSetterWouldThrow
struct _d4117: NamedDeclName<_s1210> {}; // EnumConstant kFunctionConstructorReturnedUndefined
struct _d4118: NamedDeclName<_s1211> {}; // EnumConstant kAssigmentExpressionLHSIsCallInSloppy
struct _d4119: NamedDeclName<_s1212> {}; // EnumConstant kAssigmentExpressionLHSIsCallInStrict
struct _d4120: NamedDeclName<_s1213> {}; // EnumConstant kPromiseConstructorReturnedUndefined
struct _d4121: NamedDeclName<_s1214> {}; // EnumConstant kConstructorNonUndefinedPrimitiveReturn
struct _d4122: NamedDeclName<_s1215> {}; // EnumConstant kLabeledExpressionStatement
struct _d4123: NamedDeclName<_s1216> {}; // EnumConstant kLineOrParagraphSeparatorAsLineTerminator
struct _d4124: NamedDeclName<_s1217> {}; // EnumConstant kIndexAccessor
struct _d4125: NamedDeclName<_s1218> {}; // EnumConstant kErrorCaptureStackTrace
struct _d4126: NamedDeclName<_s1219> {}; // EnumConstant kErrorPrepareStackTrace
struct _d4127: NamedDeclName<_s1220> {}; // EnumConstant kErrorStackTraceLimit
struct _d4128: NamedDeclName<_s1221> {}; // EnumConstant kWebAssemblyInstantiation
struct _d4129: NamedDeclName<_s1222> {}; // EnumConstant kDeoptimizerDisableSpeculation
struct _d4130: NamedDeclName<_s1223> {}; // EnumConstant kArrayPrototypeSortJSArrayModifiedPrototype
struct _d4131: NamedDeclName<_s1224> {}; // EnumConstant kFunctionTokenOffsetTooLongForToString
struct _d4132: NamedDeclName<_s1225> {}; // EnumConstant kWasmSharedMemory
struct _d4133: NamedDeclName<_s1226> {}; // EnumConstant kWasmThreadOpcodes
struct _d4134: NamedDeclName<_s1227> {}; // EnumConstant kAtomicsNotify
struct _d4135: NamedDeclName<_s1228> {}; // EnumConstant kAtomicsWake
struct _d4136: NamedDeclName<_s1229> {}; // EnumConstant kCollator
struct _d4137: NamedDeclName<_s1230> {}; // EnumConstant kNumberFormat
struct _d4138: NamedDeclName<_s1231> {}; // EnumConstant kDateTimeFormat
struct _d4139: NamedDeclName<_s1232> {}; // EnumConstant kPluralRules
struct _d4140: NamedDeclName<_s1233> {}; // EnumConstant kRelativeTimeFormat
struct _d4141: NamedDeclName<_s1234> {}; // EnumConstant kLocale
struct _d4142: NamedDeclName<_s1235> {}; // EnumConstant kListFormat
struct _d4143: NamedDeclName<_s1236> {}; // EnumConstant kSegmenter
struct _d4144: NamedDeclName<_s1237> {}; // EnumConstant kStringLocaleCompare
struct _d4145: NamedDeclName<_s1238> {}; // EnumConstant kStringToLocaleUpperCase
struct _d4146: NamedDeclName<_s1239> {}; // EnumConstant kStringToLocaleLowerCase
struct _d4147: NamedDeclName<_s1240> {}; // EnumConstant kNumberToLocaleString
struct _d4148: NamedDeclName<_s1241> {}; // EnumConstant kDateToLocaleString
struct _d4149: NamedDeclName<_s1242> {}; // EnumConstant kDateToLocaleDateString
struct _d4150: NamedDeclName<_s1243> {}; // EnumConstant kDateToLocaleTimeString
struct _d4151: NamedDeclName<_s1244> {}; // EnumConstant kAttemptOverrideReadOnlyOnPrototypeSloppy
struct _d4152: NamedDeclName<_s1245> {}; // EnumConstant kAttemptOverrideReadOnlyOnPrototypeStrict
struct _d4153: NamedDeclName<_s1246> {}; // EnumConstant kOptimizedFunctionWithOneShotBytecode
struct _d4154: NamedDeclName<_s1247> {}; // EnumConstant kRegExpMatchIsTrueishOnNonJSRegExp
struct _d4155: NamedDeclName<_s1248> {}; // EnumConstant kRegExpMatchIsFalseishOnJSRegExp
struct _d4156: NamedDeclName<_s1249> {}; // EnumConstant kDateGetTimezoneOffset
struct _d4157: NamedDeclName<_s1250> {}; // EnumConstant kStringNormalize
struct _d4158: NamedDeclName<_s1251> {}; // EnumConstant kUseCounterFeatureCount
struct _d4159: NamedDeclName<_s1252>, TypeDecl<_qty3595> {}; // Enum MessageErrorLevel
struct _d4160: NamedDeclName<_s1253> {}; // EnumConstant kMessageLog
struct _d4161: NamedDeclName<_s1254> {}; // EnumConstant kMessageDebug
struct _d4162: NamedDeclName<_s1255> {}; // EnumConstant kMessageInfo
struct _d4163: NamedDeclName<_s1256> {}; // EnumConstant kMessageError
struct _d4164: NamedDeclName<_s1257> {}; // EnumConstant kMessageWarning
struct _d4165: NamedDeclName<_s1258> {}; // EnumConstant kMessageAll
struct _d4166: NamedDeclName<_s1259>, TypeDecl<_qty3596> {}; // Typedef UseCounterCallback
struct _d4167: CXXMethodDecl, FunctionDecl<_ty2318, Pack<>>, FunctionNoInstance, FunctionResult<_qty99, _qty99>, NamedDeclName<_s784> {}; // CXXMethod Allocate
struct _d4168: CXXMethodDecl, FunctionDecl<_ty3511, Pack<_d4169, _d4170>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s151> {}; // CXXMethod Initialize
struct _d4169: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4170: NamedDeclName<_s1260> {}; // ParmVar params
struct _d4171: CXXMethodDecl, FunctionDecl<_ty3512, Pack<_d4172>>, FunctionNoInstance, FunctionResult<_qty99, _qty99>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d4172: NamedDeclName<_s1260> {}; // ParmVar params
struct _d4173: CXXMethodDecl, FunctionDecl<_ty2318, Pack<>>, FunctionNoInstance, FunctionResult<_qty99, _qty99>, NamedDeclName<_s1261> {}; // CXXMethod GetCurrent
struct _d4174: NamedDeclName<_s1262>, TypeDecl<_qty3603> {}; // Typedef AbortOnUncaughtExceptionCallback
struct _d4175: CXXMethodDecl, FunctionDecl<_ty3516, Pack<_d4176>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1263> {}; // CXXMethod SetAbortOnUncaughtExceptionCallback
struct _d4176: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4177: CXXMethodDecl, FunctionDecl<_ty3517, Pack<_d4178>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1264> {}; // CXXMethod SetHostImportModuleDynamicallyCallback
struct _d4178: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4179: CXXMethodDecl, FunctionDecl<_ty3518, Pack<_d4180>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1265> {}; // CXXMethod SetHostInitializeImportMetaObjectCallback
struct _d4180: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4181: CXXMethodDecl, FunctionDecl<_ty3519, Pack<_d4182>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1266> {}; // CXXMethod SetPrepareStackTraceCallback
struct _d4182: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4183: CXXMethodDecl, FunctionDecl<_ty3520, Pack<_d4184>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1267> {}; // CXXMethod MemoryPressureNotification
struct _d4184: NamedDeclName<_s633> {}; // ParmVar level
struct _d4185: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1268> {}; // CXXMethod Enter
struct _d4186: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1269> {}; // CXXMethod Exit
struct _d4187: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s511> {}; // CXXMethod Dispose
struct _d4188: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1270> {}; // CXXMethod DumpAndResetStats
struct _d4189: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1271> {}; // CXXMethod DiscardThreadSpecificMetadata
struct _d4190: CXXMethodDecl, FunctionDecl<_ty3521, Pack<_d4191, _d4192>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1272> {}; // CXXMethod SetData
struct _d4191: NamedDeclName<_s1273> {}; // ParmVar slot
struct _d4192: NamedDeclName<_s130> {}; // ParmVar data
struct _d4193: CXXMethodDecl, FunctionDecl<_ty3522, Pack<_d4194>>, FunctionInstance<_qty99>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s1274> {}; // CXXMethod GetData
struct _d4194: NamedDeclName<_s1273> {}; // ParmVar slot
struct _d4195: CXXMethodDecl, FunctionDecl<_ty1672, Pack<>>, FunctionNoInstance, FunctionResult<_qty1791, _qty1791>, NamedDeclName<_s1275> {}; // CXXMethod GetNumberOfDataSlots
struct _d4196: NamedDeclName<_s1276> {}; // FunctionTemplate GetDataFromSnapshotOnce
struct _d4197: NamedDeclName<_s21>, TypeDecl<_qty3612> {}; // TemplateTypeParm T
struct _d4198: CXXMethodDecl, FunctionDecl<_ty3524, Pack<_d4199>>, FunctionInstance<_qty99>, FunctionResult<_qty3613, _qty3613>, NamedDeclName<_s1276> {}; // CXXMethod GetDataFromSnapshotOnce
struct _d4199: NamedDeclName<_s128> {}; // ParmVar index
struct _d4200: CXXMethodDecl, FunctionDecl<_ty3526, Pack<_d4201>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1277> {}; // CXXMethod GetHeapStatistics
struct _d4201: NamedDeclName<_s1278> {}; // ParmVar heap_statistics
struct _d4202: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1279> {}; // CXXMethod NumberOfHeapSpaces
struct _d4203: CXXMethodDecl, FunctionDecl<_ty3527, Pack<_d4204, _d4205>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1280> {}; // CXXMethod GetHeapSpaceStatistics
struct _d4204: NamedDeclName<_s1281> {}; // ParmVar space_statistics
struct _d4205: NamedDeclName<_s128> {}; // ParmVar index
struct _d4206: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1282> {}; // CXXMethod NumberOfTrackedHeapObjectTypes
struct _d4207: CXXMethodDecl, FunctionDecl<_ty3528, Pack<_d4208, _d4209>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1283> {}; // CXXMethod GetHeapObjectStatisticsAtLastGC
struct _d4208: NamedDeclName<_s1284> {}; // ParmVar object_statistics
struct _d4209: NamedDeclName<_s1285> {}; // ParmVar type_index
struct _d4210: CXXMethodDecl, FunctionDecl<_ty3529, Pack<_d4211>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1286> {}; // CXXMethod GetHeapCodeAndMetadataStatistics
struct _d4211: NamedDeclName<_s1284> {}; // ParmVar object_statistics
struct _d4212: CXXMethodDecl, FunctionDecl<_ty3532, Pack<_d4213, _d4214, _d4215, _d4216>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1287> {}; // CXXMethod GetStackSample
struct _d4213: NamedDeclName<_s1288> {}; // ParmVar state
struct _d4214: NamedDeclName<_s1289> {}; // ParmVar frames
struct _d4215: NamedDeclName<_s1290> {}; // ParmVar frames_limit
struct _d4216: NamedDeclName<_s1291> {}; // ParmVar sample_info
struct _d4217: CXXMethodDecl, FunctionDecl<_ty3533, Pack<_d4218>>, FunctionInstance<_qty99>, FunctionResult<_qty2167, _qty2167>, NamedDeclName<_s1292> {}; // CXXMethod AdjustAmountOfExternalAllocatedMemory
struct _d4218: NamedDeclName<_s1293> {}; // ParmVar change_in_bytes
struct _d4219: CXXMethodDecl, FunctionDecl<_ty2690, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1294> {}; // CXXMethod NumberOfPhantomHandleResetsSinceLastCall
struct _d4220: CXXMethodDecl, FunctionDecl<_ty3534, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty3624, _qty3624>, NamedDeclName<_s1295> {}; // CXXMethod GetHeapProfiler
struct _d4221: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d4222>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1296> {}; // CXXMethod SetIdle
struct _d4222: NamedDeclName<_s1297> {}; // ParmVar is_idle
struct _d4223: CXXMethodDecl, FunctionDecl<_ty3536, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty3548, _qty3548>, NamedDeclName<_s1298> {}; // CXXMethod GetArrayBufferAllocator
struct _d4224: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1299> {}; // CXXMethod InContext
struct _d4225: CXXMethodDecl, FunctionDecl<_ty3537, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty3627, _qty3627>, NamedDeclName<_s1300> {}; // CXXMethod GetCurrentContext
struct _d4226: CXXMethodDecl, FunctionDecl<_ty3539, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty3629, _qty3629>, NamedDeclName<_s1301> {}; // CXXMethod GetEnteredContext
struct _d4227: CXXMethodDecl, FunctionDecl<_ty3541, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty3631, _qty3631>, NamedDeclName<_s1302> {}; // CXXMethod GetEnteredOrMicrotaskContext
struct _d4228: CXXMethodDecl, FunctionDecl<_ty3543, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty3633, _qty3633>, NamedDeclName<_s1303> {}; // CXXMethod GetIncumbentContext
struct _d4229: CXXMethodDecl, FunctionDecl<_ty3546, Pack<_d4230>>, FunctionInstance<_qty99>, FunctionResult<_qty3636, _qty3636>, NamedDeclName<_s1304> {}; // CXXMethod ThrowException
struct _d4230: NamedDeclName<_s774> {}; // ParmVar exception
struct _d4231: NamedDeclName<_s1035>, TypeDecl<_qty3638> {}; // Typedef GCCallback
struct _d4232: NamedDeclName<_s1305>, TypeDecl<_qty3641> {}; // Typedef GCCallbackWithData
struct _d4233: CXXMethodDecl, FunctionDecl<_ty3556, Pack<_d4234, _d4235, _d4236>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1306> {}; // CXXMethod AddGCPrologueCallback
struct _d4234: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4235: NamedDeclName<_s130> {}; // ParmVar data
struct _d4236: NamedDeclName<_s1307> {}; // ParmVar gc_type_filter
struct _d4237: CXXMethodDecl, FunctionDecl<_ty3557, Pack<_d4238, _d4239>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1306> {}; // CXXMethod AddGCPrologueCallback
struct _d4238: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4239: NamedDeclName<_s1307> {}; // ParmVar gc_type_filter
struct _d4240: CXXMethodDecl, FunctionDecl<_ty3558, Pack<_d4241, _d4242>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1308> {}; // CXXMethod RemoveGCPrologueCallback
struct _d4241: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4242: NamedDeclName<_s130> {}; // ParmVar data
struct _d4243: CXXMethodDecl, FunctionDecl<_ty3559, Pack<_d4244>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1308> {}; // CXXMethod RemoveGCPrologueCallback
struct _d4244: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4245: CXXMethodDecl, FunctionDecl<_ty3560, Pack<_d4246>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1309> {}; // CXXMethod SetEmbedderHeapTracer
struct _d4246: NamedDeclName<_s1310> {}; // ParmVar tracer
struct _d4247: CXXMethodDecl, FunctionDecl<_ty3561, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty3491, _qty3491>, NamedDeclName<_s1311> {}; // CXXMethod GetEmbedderHeapTracer
struct _d4248: NamedDeclName<_s1312>, TypeDecl<_qty3650> {}; // Enum AtomicsWaitEvent
struct _d4249: NamedDeclName<_s1313> {}; // EnumConstant kStartWait
struct _d4250: NamedDeclName<_s1314> {}; // EnumConstant kWokenUp
struct _d4251: NamedDeclName<_s1315> {}; // EnumConstant kTimedOut
struct _d4252: NamedDeclName<_s1316> {}; // EnumConstant kTerminatedExecution
struct _d4253: NamedDeclName<_s1317> {}; // EnumConstant kAPIStopped
struct _d4254: NamedDeclName<_s1318> {}; // EnumConstant kNotEqual
struct _d4255: NamedDeclName<_s1319>, TypeDecl<_qty3651> {}; // CXXRecord AtomicsWaitWakeHandle
struct _d4256: NamedDeclName<_s1319>, TypeDecl<_qty3651> {}; // CXXRecord AtomicsWaitWakeHandle
struct _d4257: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3652>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1320> {}; // CXXMethod Wake
struct _d4258: NamedDeclName<_s1321>, TypeDecl<_qty3653> {}; // Typedef AtomicsWaitCallback
struct _d4259: CXXMethodDecl, FunctionDecl<_ty3570, Pack<_d4260, _d4261>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1322> {}; // CXXMethod SetAtomicsWaitCallback
struct _d4260: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4261: NamedDeclName<_s130> {}; // ParmVar data
struct _d4262: CXXMethodDecl, FunctionDecl<_ty3556, Pack<_d4263, _d4264, _d4265>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1323> {}; // CXXMethod AddGCEpilogueCallback
struct _d4263: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4264: NamedDeclName<_s130> {}; // ParmVar data
struct _d4265: NamedDeclName<_s1307> {}; // ParmVar gc_type_filter
struct _d4266: CXXMethodDecl, FunctionDecl<_ty3557, Pack<_d4267, _d4268>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1323> {}; // CXXMethod AddGCEpilogueCallback
struct _d4267: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4268: NamedDeclName<_s1307> {}; // ParmVar gc_type_filter
struct _d4269: CXXMethodDecl, FunctionDecl<_ty3558, Pack<_d4270, _d4271>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1324> {}; // CXXMethod RemoveGCEpilogueCallback
struct _d4270: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4271: NamedDeclName<_s130> {}; // ParmVar data
struct _d4272: CXXMethodDecl, FunctionDecl<_ty3559, Pack<_d4273>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1324> {}; // CXXMethod RemoveGCEpilogueCallback
struct _d4273: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4274: NamedDeclName<_s1325>, TypeDecl<_qty3658> {}; // Typedef GetExternallyAllocatedMemoryInBytesCallback
struct _d4275: CXXMethodDecl, FunctionDecl<_ty3574, Pack<_d4276>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1326> {}; // CXXMethod SetGetExternallyAllocatedMemoryInBytesCallback
struct _d4276: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4277: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1327> {}; // CXXMethod TerminateExecution
struct _d4278: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1328> {}; // CXXMethod IsExecutionTerminating
struct _d4279: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1329> {}; // CXXMethod CancelTerminateExecution
struct _d4280: CXXMethodDecl, FunctionDecl<_ty3575, Pack<_d4281, _d4282>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1330> {}; // CXXMethod RequestInterrupt
struct _d4281: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4282: NamedDeclName<_s130> {}; // ParmVar data
struct _d4283: CXXMethodDecl, FunctionDecl<_ty3576, Pack<_d4284>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1331> {}; // CXXMethod RequestGarbageCollectionForTesting
struct _d4284: NamedDeclName<_s85> {}; // ParmVar type
struct _d4285: CXXMethodDecl, FunctionDecl<_ty3577, Pack<_d4286>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1332> {}; // CXXMethod SetEventLogger
struct _d4286: NamedDeclName<_s53> {}; // ParmVar that
struct _d4287: CXXMethodDecl, FunctionDecl<_ty3578, Pack<_d4288>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1333> {}; // CXXMethod AddBeforeCallEnteredCallback
struct _d4288: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4289: CXXMethodDecl, FunctionDecl<_ty3578, Pack<_d4290>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1334> {}; // CXXMethod RemoveBeforeCallEnteredCallback
struct _d4290: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4291: CXXMethodDecl, FunctionDecl<_ty3579, Pack<_d4292>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1335> {}; // CXXMethod AddCallCompletedCallback
struct _d4292: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4293: CXXMethodDecl, FunctionDecl<_ty3579, Pack<_d4294>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1336> {}; // CXXMethod RemoveCallCompletedCallback
struct _d4294: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4295: CXXMethodDecl, FunctionDecl<_ty3580, Pack<_d4296>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1337> {}; // CXXMethod SetPromiseHook
struct _d4296: NamedDeclName<_s1338> {}; // ParmVar hook
struct _d4297: CXXMethodDecl, FunctionDecl<_ty3581, Pack<_d4298>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1339> {}; // CXXMethod SetPromiseRejectCallback
struct _d4298: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4299: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1340> {}; // CXXMethod RunMicrotasks
struct _d4300: CXXMethodDecl, FunctionDecl<_ty3583, Pack<_d4301>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1001> {}; // CXXMethod EnqueueMicrotask
struct _d4301: NamedDeclName<_s1002> {}; // ParmVar microtask
struct _d4302: CXXMethodDecl, FunctionDecl<_ty3584, Pack<_d4303, _d4304>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1001> {}; // CXXMethod EnqueueMicrotask
struct _d4303: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4304: NamedDeclName<_s130> {}; // ParmVar data
struct _d4305: CXXMethodDecl, FunctionDecl<_ty3585, Pack<_d4306>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1341> {}; // CXXMethod SetMicrotasksPolicy
struct _d4306: NamedDeclName<_s1000> {}; // ParmVar policy
struct _d4307: CXXMethodDecl, FunctionDecl<_ty3586, Pack<>>, FunctionInstance<_qty3673>, FunctionResult<_qty3354, _qty3354>, NamedDeclName<_s1342> {}; // CXXMethod GetMicrotasksPolicy
struct _d4308: CXXMethodDecl, FunctionDecl<_ty3588, Pack<_d4309>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1003> {}; // CXXMethod AddMicrotasksCompletedCallback
struct _d4309: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4310: CXXMethodDecl, FunctionDecl<_ty3271, Pack<_d4311, _d4312>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1003> {}; // CXXMethod AddMicrotasksCompletedCallback
struct _d4311: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4312: NamedDeclName<_s130> {}; // ParmVar data
struct _d4313: CXXMethodDecl, FunctionDecl<_ty3588, Pack<_d4314>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1004> {}; // CXXMethod RemoveMicrotasksCompletedCallback
struct _d4314: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4315: CXXMethodDecl, FunctionDecl<_ty3271, Pack<_d4316, _d4317>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1004> {}; // CXXMethod RemoveMicrotasksCompletedCallback
struct _d4316: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4317: NamedDeclName<_s130> {}; // ParmVar data
struct _d4318: CXXMethodDecl, FunctionDecl<_ty3589, Pack<_d4319>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1343> {}; // CXXMethod SetUseCounterCallback
struct _d4319: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4320: CXXMethodDecl, FunctionDecl<_ty3590, Pack<_d4321>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1344> {}; // CXXMethod SetCounterFunction
struct _d4321: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4322: CXXMethodDecl, FunctionDecl<_ty3591, Pack<_d4323>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1345> {}; // CXXMethod SetCreateHistogramFunction
struct _d4323: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4324: CXXMethodDecl, FunctionDecl<_ty3592, Pack<_d4325>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1346> {}; // CXXMethod SetAddHistogramSampleFunction
struct _d4325: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4326: CXXMethodDecl, FunctionDecl<_ty3415, Pack<_d4327>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1347> {}; // CXXMethod IdleNotificationDeadline
struct _d4327: NamedDeclName<_s1348> {}; // ParmVar deadline_in_seconds
struct _d4328: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1349> {}; // CXXMethod LowMemoryNotification
struct _d4329: CXXMethodDecl, FunctionDecl<_ty3593, Pack<_d4330>>, FunctionInstance<_qty99>, FunctionResult<_qty1362, _qty1362>, NamedDeclName<_s1350> {}; // CXXMethod ContextDisposedNotification
struct _d4330: NamedDeclName<_s1351> {}; // ParmVar dependant_context
struct _d4331: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1352> {}; // CXXMethod IsolateInForegroundNotification
struct _d4332: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1353> {}; // CXXMethod IsolateInBackgroundNotification
struct _d4333: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1354> {}; // CXXMethod EnableMemorySavingsMode
struct _d4334: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1355> {}; // CXXMethod DisableMemorySavingsMode
struct _d4335: CXXMethodDecl, FunctionDecl<_ty3594, Pack<_d4336>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1356> {}; // CXXMethod SetRAILMode
struct _d4336: NamedDeclName<_s1357> {}; // ParmVar rail_mode
struct _d4337: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1358> {}; // CXXMethod IncreaseHeapLimitForDebugging
struct _d4338: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1359> {}; // CXXMethod RestoreOriginalHeapLimit
struct _d4339: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1360> {}; // CXXMethod IsHeapLimitIncreasedForDebugging
struct _d4340: CXXMethodDecl, FunctionDecl<_ty3595, Pack<_d4341, _d4342>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1361> {}; // CXXMethod SetJitCodeEventHandler
struct _d4341: NamedDeclName<_s277> {}; // ParmVar options
struct _d4342: NamedDeclName<_s1362> {}; // ParmVar event_handler
struct _d4343: CXXMethodDecl, FunctionDecl<_ty3596, Pack<_d4344>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1363> {}; // CXXMethod SetStackLimit
struct _d4344: NamedDeclName<_s932> {}; // ParmVar stack_limit
struct _d4345: CXXMethodDecl, FunctionDecl<_ty3597, Pack<_d4346, _d4347>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1364> {}; // CXXMethod GetCodeRange
struct _d4346: NamedDeclName<_s350> {}; // ParmVar start
struct _d4347: NamedDeclName<_s351> {}; // ParmVar length_in_bytes
struct _d4348: CXXMethodDecl, FunctionDecl<_ty3598, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty1854, _qty1854>, NamedDeclName<_s1365> {}; // CXXMethod GetUnwindState
struct _d4349: CXXMethodDecl, FunctionDecl<_ty3599, Pack<_d4350>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1366> {}; // CXXMethod SetFatalErrorHandler
struct _d4350: NamedDeclName<_s53> {}; // ParmVar that
struct _d4351: CXXMethodDecl, FunctionDecl<_ty3600, Pack<_d4352>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1367> {}; // CXXMethod SetOOMErrorHandler
struct _d4352: NamedDeclName<_s53> {}; // ParmVar that
struct _d4353: CXXMethodDecl, FunctionDecl<_ty3601, Pack<_d4354, _d4355>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1368> {}; // CXXMethod AddNearHeapLimitCallback
struct _d4354: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4355: NamedDeclName<_s130> {}; // ParmVar data
struct _d4356: CXXMethodDecl, FunctionDecl<_ty3602, Pack<_d4357, _d4358>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1369> {}; // CXXMethod RemoveNearHeapLimitCallback
struct _d4357: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4358: NamedDeclName<_s1370> {}; // ParmVar heap_limit
struct _d4359: CXXMethodDecl, FunctionDecl<_ty1788, Pack<_d4360>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1371> {}; // CXXMethod AutomaticallyRestoreInitialHeapLimit
struct _d4360: NamedDeclName<_s1372> {}; // ParmVar threshold_percent
struct _d4361: CXXMethodDecl, FunctionDecl<_ty3603, Pack<_d4362>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1373> {}; // CXXMethod SetAllowCodeGenerationFromStringsCallback
struct _d4362: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4363: CXXMethodDecl, FunctionDecl<_ty3604, Pack<_d4364>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1374> {}; // CXXMethod SetAllowWasmCodeGenerationCallback
struct _d4364: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4365: CXXMethodDecl, FunctionDecl<_ty3605, Pack<_d4366>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1375> {}; // CXXMethod SetWasmModuleCallback
struct _d4366: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4367: CXXMethodDecl, FunctionDecl<_ty3605, Pack<_d4368>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1376> {}; // CXXMethod SetWasmInstanceCallback
struct _d4368: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4369: CXXMethodDecl, FunctionDecl<_ty3606, Pack<_d4370>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1377> {}; // CXXMethod SetWasmStreamingCallback
struct _d4370: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4371: CXXMethodDecl, FunctionDecl<_ty3607, Pack<_d4372>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1378> {}; // CXXMethod SetWasmThreadsEnabledCallback
struct _d4372: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4373: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1379> {}; // CXXMethod IsDead
struct _d4374: CXXMethodDecl, FunctionDecl<_ty3609, Pack<_d4375, _d4376>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1380> {}; // CXXMethod AddMessageListener
struct _d4375: NamedDeclName<_s53> {}; // ParmVar that
struct _d4376: NamedDeclName<_s130> {}; // ParmVar data
struct _d4377: CXXMethodDecl, FunctionDecl<_ty3611, Pack<_d4378, _d4379, _d4380>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1381> {}; // CXXMethod AddMessageListenerWithErrorLevel
struct _d4378: NamedDeclName<_s53> {}; // ParmVar that
struct _d4379: NamedDeclName<_s1382> {}; // ParmVar message_levels
struct _d4380: NamedDeclName<_s130> {}; // ParmVar data
struct _d4381: CXXMethodDecl, FunctionDecl<_ty3612, Pack<_d4382>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1383> {}; // CXXMethod RemoveMessageListeners
struct _d4382: NamedDeclName<_s53> {}; // ParmVar that
struct _d4383: CXXMethodDecl, FunctionDecl<_ty3613, Pack<_d4384>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1384> {}; // CXXMethod SetFailedAccessCheckCallbackFunction
struct _d4384: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4385: CXXMethodDecl, FunctionDecl<_ty3615, Pack<_d4386, _d4387, _d4388>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1385> {}; // CXXMethod SetCaptureStackTraceForUncaughtExceptions
struct _d4386: NamedDeclName<_s1386> {}; // ParmVar capture
struct _d4387: NamedDeclName<_s323> {}; // ParmVar frame_limit
struct _d4388: NamedDeclName<_s277> {}; // ParmVar options
struct _d4389: CXXMethodDecl, FunctionDecl<_ty3616, Pack<_d4390>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1387> {}; // CXXMethod VisitExternalResources
struct _d4390: NamedDeclName<_s1125> {}; // ParmVar visitor
struct _d4391: CXXMethodDecl, FunctionDecl<_ty3617, Pack<_d4392>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1388> {}; // CXXMethod VisitHandlesWithClassIds
struct _d4392: NamedDeclName<_s1125> {}; // ParmVar visitor
struct _d4393: CXXMethodDecl, FunctionDecl<_ty3617, Pack<_d4394>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1389> {}; // CXXMethod VisitWeakHandles
struct _d4394: NamedDeclName<_s1125> {}; // ParmVar visitor
struct _d4395: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1390> {}; // CXXMethod IsInUse
struct _d4396: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d4397>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1391> {}; // CXXMethod SetAllowAtomicsWait
struct _d4397: NamedDeclName<_s1392> {}; // ParmVar allow
struct _d4398: NamedDeclName<_s1393>, TypeDecl<_qty3704> {}; // Enum TimeZoneDetection
struct _d4399: NamedDeclName<_s1394> {}; // EnumConstant kSkip
struct _d4400: NamedDeclName<_s1395> {}; // EnumConstant kRedetect
struct _d4401: CXXMethodDecl, FunctionDecl<_ty3619, Pack<_d4402>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1396> {}; // CXXMethod DateTimeConfigurationChangeNotification
struct _d4402: NamedDeclName<_s1397> {}; // ParmVar time_zone_detection
struct _d4403: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1398> {}; // CXXMethod LocaleConfigurationChangeNotification
struct _d4404: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty99>, FunctionNoResult {}; // CXXConstructor Isolate
struct _d4405: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3620, Pack<>>, FunctionInstance<_qty99>, FunctionNoResult {}; // CXXDestructor ~Isolate
struct _d4406: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3622, Pack<_d4407>>, FunctionInstance<_qty99>, FunctionNoResult {}; // CXXConstructor Isolate
struct _d4407: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4408: CXXMethodDecl, FunctionDecl<_ty3623, Pack<_d4409>>, FunctionInstance<_qty99>, FunctionResult<_qty3710, _qty3>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4409: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4410: CXXMethodDecl, FunctionDecl<_ty2660, Pack<_d4411>>, FunctionNoInstance, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s1399> {}; // CXXMethod operator new
struct _d4411: NamedDeclName<_s376> {}; // ParmVar size
struct _d4412: CXXMethodDecl, FunctionDecl<_ty2660, Pack<_d4413>>, FunctionNoInstance, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s1400> {}; // CXXMethod operator new[]
struct _d4413: NamedDeclName<_s376> {}; // ParmVar size
struct _d4414: CXXMethodDecl, FunctionDecl<_ty3625, Pack<_d4415, _d4416>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1401> {}; // CXXMethod operator delete
struct _d4415: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4416: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4417: CXXMethodDecl, FunctionDecl<_ty3625, Pack<_d4418, _d4419>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1402> {}; // CXXMethod operator delete[]
struct _d4418: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4419: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4420: NamedDeclName<_s38>, TypeDecl<_qty43> {}; // CXXRecord StartupData
struct _d4421: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3713>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1403> {}; // CXXMethod CanBeRehashed
struct _d4422: NamedDeclName<_s130> {}; // Field data
struct _d4423: NamedDeclName<_s1404> {}; // Field raw_size
struct _d4424: NamedDeclName<_s1405>, TypeDecl<_qty3714> {}; // Typedef EntropySource
struct _d4425: NamedDeclName<_s1406>, TypeDecl<_qty3718> {}; // Typedef ReturnAddressLocationResolver
struct _d4426: NamedDeclName<_s1407>, TypeDecl<_qty3721> {}; // CXXRecord V8
struct _d4427: NamedDeclName<_s1407>, TypeDecl<_qty3721> {}; // CXXRecord V8
struct _d4428: CXXMethodDecl, FunctionDecl<_ty3637, Pack<_d4429>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1408> {}; // CXXMethod SetNativesDataBlob
struct _d4429: NamedDeclName<_s1409> {}; // ParmVar startup_blob
struct _d4430: CXXMethodDecl, FunctionDecl<_ty3637, Pack<_d4431>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1410> {}; // CXXMethod SetSnapshotDataBlob
struct _d4431: NamedDeclName<_s1409> {}; // ParmVar startup_blob
struct _d4432: CXXMethodDecl, FunctionDecl<_ty3638, Pack<_d4433>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1411> {}; // CXXMethod SetDcheckErrorHandler
struct _d4433: NamedDeclName<_s53> {}; // ParmVar that
struct _d4434: CXXMethodDecl, FunctionDecl<_ty1016, Pack<_d4435>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1412> {}; // CXXMethod SetFlagsFromString
struct _d4435: NamedDeclName<_s532> {}; // ParmVar str
struct _d4436: CXXMethodDecl, FunctionDecl<_ty3639, Pack<_d4437, _d4438>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1412> {}; // CXXMethod SetFlagsFromString
struct _d4437: NamedDeclName<_s532> {}; // ParmVar str
struct _d4438: NamedDeclName<_s160> {}; // ParmVar length
struct _d4439: CXXMethodDecl, FunctionDecl<_ty3165, Pack<_d4440, _d4441>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1412> {}; // CXXMethod SetFlagsFromString
struct _d4440: NamedDeclName<_s532> {}; // ParmVar str
struct _d4441: NamedDeclName<_s160> {}; // ParmVar length
struct _d4442: CXXMethodDecl, FunctionDecl<_ty3641, Pack<_d4443, _d4444, _d4445>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1413> {}; // CXXMethod SetFlagsFromCommandLine
struct _d4443: NamedDeclName<_s639> {}; // ParmVar argc
struct _d4444: NamedDeclName<_s657> {}; // ParmVar argv
struct _d4445: NamedDeclName<_s1414> {}; // ParmVar remove_flags
struct _d4446: CXXMethodDecl, FunctionDecl<_ty3344, Pack<>>, FunctionNoInstance, FunctionResult<_qty1082, _qty1082>, NamedDeclName<_s1415> {}; // CXXMethod GetVersion
struct _d4447: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s151> {}; // CXXMethod Initialize
struct _d4448: CXXMethodDecl, FunctionDecl<_ty3642, Pack<_d4449>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1416> {}; // CXXMethod SetEntropySource
struct _d4449: NamedDeclName<_s137> {}; // ParmVar source
struct _d4450: CXXMethodDecl, FunctionDecl<_ty3643, Pack<_d4451>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1417> {}; // CXXMethod SetReturnAddressLocationResolver
struct _d4451: NamedDeclName<_s1418> {}; // ParmVar return_address_resolver
struct _d4452: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s511> {}; // CXXMethod Dispose
struct _d4453: CXXMethodDecl, FunctionDecl<_ty3644, Pack<_d4454>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1419> {}; // CXXMethod InitializeICU
struct _d4454: NamedDeclName<_s1420> {}; // ParmVar icu_data_file
struct _d4455: CXXMethodDecl, FunctionDecl<_ty3645, Pack<_d4456, _d4457>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1421> {}; // CXXMethod InitializeICUDefaultLocation
struct _d4456: NamedDeclName<_s1422> {}; // ParmVar exec_path
struct _d4457: NamedDeclName<_s1420> {}; // ParmVar icu_data_file
struct _d4458: CXXMethodDecl, FunctionDecl<_ty1016, Pack<_d4459>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1423> {}; // CXXMethod InitializeExternalStartupData
struct _d4459: NamedDeclName<_s1424> {}; // ParmVar directory_path
struct _d4460: CXXMethodDecl, FunctionDecl<_ty3147, Pack<_d4461, _d4462>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1423> {}; // CXXMethod InitializeExternalStartupData
struct _d4461: NamedDeclName<_s1425> {}; // ParmVar natives_blob
struct _d4462: NamedDeclName<_s1153> {}; // ParmVar snapshot_blob
struct _d4463: CXXMethodDecl, FunctionDecl<_ty3647, Pack<_d4464>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1426> {}; // CXXMethod InitializePlatform
struct _d4464: NamedDeclName<_s1427> {}; // ParmVar platform
struct _d4465: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1428> {}; // CXXMethod ShutdownPlatform
struct _d4466: CXXMethodDecl, FunctionDecl<_ty3648, Pack<_d4467>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1429> {}; // CXXMethod EnableWebAssemblyTrapHandler
struct _d4467: NamedDeclName<_s1430> {}; // ParmVar use_v8_signal_handler
struct _d4468: CXXMethodDecl, FunctionDecl<_ty3649, Pack<_d4469>>, FunctionNoInstance, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1431> {}; // CXXMethod SetUnhandledExceptionCallback
struct _d4469: NamedDeclName<_s1432> {}; // ParmVar unhandled_exception_callback
struct _d4470: NamedDeclName<_s1433>, TypeDecl<_qty3735> {}; // CXXRecord SnapshotCreator
struct _d4471: NamedDeclName<_s1433>, TypeDecl<_qty3735> {}; // CXXRecord SnapshotCreator
struct _d4472: NamedDeclName<_s1434>, TypeDecl<_qty3736> {}; // Enum FunctionCodeHandling
struct _d4473: NamedDeclName<_s1435> {}; // EnumConstant kClear
struct _d4474: NamedDeclName<_s1436> {}; // EnumConstant kKeep
struct _d4475: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3652, Pack<_d4476, _d4477, _d4478>>, FunctionInstance<_qty3738>, FunctionNoResult {}; // CXXConstructor SnapshotCreator
struct _d4476: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4477: NamedDeclName<_s1158> {}; // ParmVar external_references
struct _d4478: NamedDeclName<_s1437> {}; // ParmVar existing_blob
struct _d4479: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3654, Pack<_d4480, _d4481>>, FunctionInstance<_qty3738>, FunctionNoResult {}; // CXXConstructor SnapshotCreator
struct _d4480: NamedDeclName<_s1158> {}; // ParmVar external_references
struct _d4481: NamedDeclName<_s1437> {}; // ParmVar existing_blob
struct _d4482: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3655, Pack<>>, FunctionInstance<_qty3738>, FunctionNoResult {}; // CXXDestructor ~SnapshotCreator
struct _d4483: CXXMethodDecl, FunctionDecl<_ty2318, Pack<>>, FunctionInstance<_qty3738>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d4484: CXXMethodDecl, FunctionDecl<_ty3657, Pack<_d4485, _d4486>>, FunctionInstance<_qty3738>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1438> {}; // CXXMethod SetDefaultContext
struct _d4485: NamedDeclName<_s220> {}; // ParmVar context
struct _d4486: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4487: CXXMethodDecl, FunctionDecl<_ty3659, Pack<_d4488, _d4489>>, FunctionInstance<_qty3738>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1439> {}; // CXXMethod AddContext
struct _d4488: NamedDeclName<_s220> {}; // ParmVar context
struct _d4489: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4490: CXXMethodDecl, FunctionDecl<_ty3661, Pack<_d4491>>, FunctionInstance<_qty3738>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1440> {}; // CXXMethod AddTemplate
struct _d4491: NamedDeclName<_s1441> {}; // ParmVar template_obj
struct _d4492: NamedDeclName<_s1442> {}; // FunctionTemplate AddData
struct _d4493: NamedDeclName<_s21>, TypeDecl<_qty3747> {}; // TemplateTypeParm T
struct _d4494: CXXMethodDecl, FunctionDecl<_ty3665, Pack<_d4495, _d4496>>, FunctionInstance<_qty3738>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1442> {}; // CXXMethod AddData
struct _d4495: NamedDeclName<_s220> {}; // ParmVar context
struct _d4496: NamedDeclName<_s369> {}; // ParmVar object
struct _d4497: NamedDeclName<_s1442> {}; // FunctionTemplate AddData
struct _d4498: NamedDeclName<_s21>, TypeDecl<_qty3751> {}; // TemplateTypeParm T
struct _d4499: CXXMethodDecl, FunctionDecl<_ty3668, Pack<_d4500>>, FunctionInstance<_qty3738>, FunctionResult<_qty1752, _qty1752>, NamedDeclName<_s1442> {}; // CXXMethod AddData
struct _d4500: NamedDeclName<_s369> {}; // ParmVar object
struct _d4501: CXXMethodDecl, FunctionDecl<_ty3669, Pack<_d4502>>, FunctionInstance<_qty3738>, FunctionResult<_qty43, _qty43>, NamedDeclName<_s1443> {}; // CXXMethod CreateBlob
struct _d4502: NamedDeclName<_s1444> {}; // ParmVar function_code_handling
struct _d4503: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3671, Pack<_d4504>>, FunctionInstance<_qty3738>, FunctionNoResult {}; // CXXConstructor SnapshotCreator
struct _d4504: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4505: CXXMethodDecl, FunctionDecl<_ty3671, Pack<_d4506>>, FunctionInstance<_qty3738>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4506: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4507: NamedDeclName<_s21>, TypeDecl<_qty3758> {}; // TemplateTypeParm T
struct _d4508: NamedDeclName<_s20>, TypeDecl<_qty20> {}; // CXXRecord Maybe
struct _d4509: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3759>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1445> {}; // CXXMethod IsNothing
struct _d4510: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3759>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1446> {}; // CXXMethod IsJust
struct _d4511: CXXMethodDecl, FunctionDecl<_ty3674, Pack<>>, FunctionInstance<_qty3759>, FunctionResult<_qty3758, _qty3758>, NamedDeclName<_s1447> {}; // CXXMethod ToChecked
struct _d4512: CXXMethodDecl, FunctionDecl<_ty1921, Pack<>>, FunctionInstance<_qty3759>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1448> {}; // CXXMethod Check
struct _d4513: CXXMethodDecl, FunctionDecl<_ty3676, Pack<_d4514>>, FunctionInstance<_qty3759>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1449> {}; // CXXMethod To
struct _d4514: NamedDeclName<_s71> {}; // ParmVar out
struct _d4515: CXXMethodDecl, FunctionDecl<_ty3674, Pack<>>, FunctionInstance<_qty3759>, FunctionResult<_qty3758, _qty3758>, NamedDeclName<_s1450> {}; // CXXMethod FromJust
struct _d4516: CXXMethodDecl, FunctionDecl<_ty3678, Pack<_d4517>>, FunctionInstance<_qty3759>, FunctionResult<_qty3758, _qty3758>, NamedDeclName<_s73> {}; // CXXMethod FromMaybe
struct _d4517: NamedDeclName<_s74> {}; // ParmVar default_value
struct _d4518: CXXMethodDecl, FunctionDecl<_ty3680, Pack<_d4519>>, FunctionInstance<_qty3759>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d4519: NamedDeclName<_s78> {}; // ParmVar other
struct _d4520: CXXMethodDecl, FunctionDecl<_ty3680, Pack<_d4521>>, FunctionInstance<_qty3759>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d4521: NamedDeclName<_s78> {}; // ParmVar other
struct _d4522: NamedDeclName<_s1451> {}; // FunctionTemplate Nothing
struct _d4523: NamedDeclName<_s21>, TypeDecl<_qty3769> {}; // TemplateTypeParm T
struct _d4524: FunctionDecl<_ty3682, Pack<>>, FunctionNoInstance, FunctionResult<_qty3770, _qty3770>, NamedDeclName<_s1451> {}; // Function Nothing
struct _d4525: NamedDeclName<_s1452> {}; // FunctionTemplate Just
struct _d4526: NamedDeclName<_s21>, TypeDecl<_qty3772> {}; // TemplateTypeParm T
struct _d4527: FunctionDecl<_ty3686, Pack<_d4528>>, FunctionNoInstance, FunctionResult<_qty3775, _qty3775>, NamedDeclName<_s1452> {}; // Function Just
struct _d4528: NamedDeclName<_s1453> {}; // ParmVar t
struct _d4529: NamedDeclName<_s20>, TypeDecl<_qty3777> {}; // ClassTemplateSpecialization Maybe
struct _d4530: NamedDeclName<_s20>, TypeDecl<_qty3777> {}; // CXXRecord Maybe
struct _d4531: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3778>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1445> {}; // CXXMethod IsNothing
struct _d4532: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3778>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1446> {}; // CXXMethod IsJust
struct _d4533: CXXMethodDecl, FunctionDecl<_ty3691, Pack<_d4534>>, FunctionInstance<_qty3778>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s58> {}; // CXXMethod operator==
struct _d4534: NamedDeclName<_s78> {}; // ParmVar other
struct _d4535: CXXMethodDecl, FunctionDecl<_ty3691, Pack<_d4536>>, FunctionInstance<_qty3778>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s59> {}; // CXXMethod operator!=
struct _d4536: NamedDeclName<_s78> {}; // ParmVar other
struct _d4537: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3692, Pack<_d4538>>, FunctionInstance<_qty3783>, FunctionNoResult {}; // CXXConstructor Maybe
struct _d4538: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4539: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3695, Pack<_d4540>>, FunctionInstance<_qty3783>, FunctionNoResult {}; // CXXConstructor Maybe
struct _d4540: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4541: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3783>, FunctionNoResult {}; // CXXDestructor ~Maybe
struct _d4542: FunctionDecl<_ty3696, Pack<>>, FunctionNoInstance, FunctionResult<_qty3786, _qty3786>, NamedDeclName<_s1454> {}; // Function JustVoid
struct _d4543: NamedDeclName<_s1455>, TypeDecl<_qty3788> {}; // CXXRecord TryCatch
struct _d4544: NamedDeclName<_s1455>, TypeDecl<_qty3788> {}; // CXXRecord TryCatch
struct _d4545: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d4546>>, FunctionInstance<_qty3789>, FunctionNoResult {}; // CXXConstructor TryCatch
struct _d4546: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4547: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3700, Pack<>>, FunctionInstance<_qty3789>, FunctionNoResult {}; // CXXDestructor ~TryCatch
struct _d4548: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3791>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1456> {}; // CXXMethod HasCaught
struct _d4549: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3791>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1457> {}; // CXXMethod CanContinue
struct _d4550: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3791>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1458> {}; // CXXMethod HasTerminated
struct _d4551: CXXMethodDecl, FunctionDecl<_ty3702, Pack<>>, FunctionInstance<_qty3789>, FunctionResult<_qty3792, _qty3792>, NamedDeclName<_s1459> {}; // CXXMethod ReThrow
struct _d4552: CXXMethodDecl, FunctionDecl<_ty3704, Pack<>>, FunctionInstance<_qty3791>, FunctionResult<_qty3794, _qty3794>, NamedDeclName<_s961> {}; // CXXMethod Exception
struct _d4553: CXXMethodDecl, FunctionDecl<_ty3707, Pack<_d4554>>, FunctionInstance<_qty3791>, FunctionResult<_qty3797, _qty3797>, NamedDeclName<_s40> {}; // CXXMethod StackTrace
struct _d4554: NamedDeclName<_s220> {}; // ParmVar context
struct _d4555: CXXMethodDecl, FunctionDecl<_ty3709, Pack<>>, FunctionInstance<_qty3791>, FunctionResult<_qty3799, _qty3799>, NamedDeclName<_s293> {}; // CXXMethod Message
struct _d4556: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3789>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s77> {}; // CXXMethod Reset
struct _d4557: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d4558>>, FunctionInstance<_qty3789>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1460> {}; // CXXMethod SetVerbose
struct _d4558: NamedDeclName<_s153> {}; // ParmVar value
struct _d4559: CXXMethodDecl, FunctionDecl<_ty67, Pack<>>, FunctionInstance<_qty3791>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1461> {}; // CXXMethod IsVerbose
struct _d4560: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d4561>>, FunctionInstance<_qty3789>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1462> {}; // CXXMethod SetCaptureMessage
struct _d4561: NamedDeclName<_s153> {}; // ParmVar value
struct _d4562: CXXMethodDecl, FunctionDecl<_ty3711, Pack<_d4563>>, FunctionNoInstance, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s1463> {}; // CXXMethod JSStackComparableAddress
struct _d4563: NamedDeclName<_s723> {}; // ParmVar handler
struct _d4564: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3713, Pack<_d4565>>, FunctionInstance<_qty3789>, FunctionNoResult {}; // CXXConstructor TryCatch
struct _d4565: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4566: CXXMethodDecl, FunctionDecl<_ty3713, Pack<_d4567>>, FunctionInstance<_qty3789>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4567: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4568: NamedDeclName<_s1464>, TypeDecl<_qty3805> {}; // CXXRecord ExtensionConfiguration
struct _d4569: NamedDeclName<_s1464>, TypeDecl<_qty3805> {}; // CXXRecord ExtensionConfiguration
struct _d4570: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3806>, FunctionNoResult {}; // CXXConstructor ExtensionConfiguration
struct _d4571: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3717, Pack<_d4572, _d4573>>, FunctionInstance<_qty3806>, FunctionNoResult {}; // CXXConstructor ExtensionConfiguration
struct _d4572: NamedDeclName<_s1465> {}; // ParmVar name_count
struct _d4573: NamedDeclName<_s662> {}; // ParmVar names
struct _d4574: CXXMethodDecl, FunctionDecl<_ty3118, Pack<>>, FunctionInstance<_qty3809>, FunctionResult<_qty3218, _qty3218>, NamedDeclName<_s1466> {}; // CXXMethod begin
struct _d4575: CXXMethodDecl, FunctionDecl<_ty3118, Pack<>>, FunctionInstance<_qty3809>, FunctionResult<_qty3218, _qty3218>, NamedDeclName<_s1467> {}; // CXXMethod end
struct _d4576: NamedDeclName<_s2>, TypeDecl<_qty1> {}; // CXXRecord Context
struct _d4577: CXXMethodDecl, FunctionDecl<_ty3719, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty3810, _qty3810>, NamedDeclName<_s97> {}; // CXXMethod Global
struct _d4578: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1468> {}; // CXXMethod DetachGlobal
struct _d4579: CXXMethodDecl, FunctionDecl<_ty3724, Pack<_d4580, _d4581, _d4582, _d4583, _d4584, _d4585>>, FunctionNoInstance, FunctionResult<_qty3815, _qty3815>, NamedDeclName<_s62> {}; // CXXMethod New
struct _d4580: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4581: NamedDeclName<_s1469> {}; // ParmVar extensions
struct _d4582: NamedDeclName<_s1470> {}; // ParmVar global_template
struct _d4583: NamedDeclName<_s1471> {}; // ParmVar global_object
struct _d4584: NamedDeclName<_s1472> {}; // ParmVar internal_fields_deserializer
struct _d4585: NamedDeclName<_s1012> {}; // ParmVar microtask_queue
struct _d4586: CXXMethodDecl, FunctionDecl<_ty3727, Pack<_d4587, _d4588, _d4589, _d4590, _d4591, _d4592>>, FunctionNoInstance, FunctionResult<_qty3818, _qty3818>, NamedDeclName<_s869> {}; // CXXMethod FromSnapshot
struct _d4587: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4588: NamedDeclName<_s1473> {}; // ParmVar context_snapshot_index
struct _d4589: NamedDeclName<_s1474> {}; // ParmVar embedder_fields_deserializer
struct _d4590: NamedDeclName<_s1469> {}; // ParmVar extensions
struct _d4591: NamedDeclName<_s1471> {}; // ParmVar global_object
struct _d4592: NamedDeclName<_s1012> {}; // ParmVar microtask_queue
struct _d4593: CXXMethodDecl, FunctionDecl<_ty3731, Pack<_d4594, _d4595, _d4596>>, FunctionNoInstance, FunctionResult<_qty3822, _qty3822>, NamedDeclName<_s1475> {}; // CXXMethod NewRemoteContext
struct _d4594: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4595: NamedDeclName<_s1470> {}; // ParmVar global_template
struct _d4596: NamedDeclName<_s1471> {}; // ParmVar global_object
struct _d4597: CXXMethodDecl, FunctionDecl<_ty3734, Pack<_d4598>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1476> {}; // CXXMethod SetSecurityToken
struct _d4598: NamedDeclName<_s1477> {}; // ParmVar token
struct _d4599: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1478> {}; // CXXMethod UseDefaultSecurityToken
struct _d4600: CXXMethodDecl, FunctionDecl<_ty3735, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty3826, _qty3826>, NamedDeclName<_s1479> {}; // CXXMethod GetSecurityToken
struct _d4601: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1268> {}; // CXXMethod Enter
struct _d4602: CXXMethodDecl, FunctionDecl<_ty59, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1269> {}; // CXXMethod Exit
struct _d4603: CXXMethodDecl, FunctionDecl<_ty2318, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty99, _qty99>, NamedDeclName<_s125> {}; // CXXMethod GetIsolate
struct _d4604: NamedDeclName<_s1480>, TypeDecl<_qty3828> {}; // Enum EmbedderDataFields
struct _d4605: NamedDeclName<_s1481> {}; // EnumConstant kDebugIdIndex
struct _d4606: CXXMethodDecl, FunctionDecl<_ty1672, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty1791, _qty1791>, NamedDeclName<_s1482> {}; // CXXMethod GetNumberOfEmbedderDataFields
struct _d4607: CXXMethodDecl, FunctionDecl<_ty3738, Pack<_d4608>>, FunctionInstance<_qty3812>, FunctionResult<_qty3829, _qty3829>, NamedDeclName<_s1483> {}; // CXXMethod GetEmbedderData
struct _d4608: NamedDeclName<_s128> {}; // ParmVar index
struct _d4609: CXXMethodDecl, FunctionDecl<_ty3740, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty3831, _qty3831>, NamedDeclName<_s1484> {}; // CXXMethod GetExtrasBindingObject
struct _d4610: CXXMethodDecl, FunctionDecl<_ty3743, Pack<_d4611, _d4612>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1485> {}; // CXXMethod SetEmbedderData
struct _d4611: NamedDeclName<_s128> {}; // ParmVar index
struct _d4612: NamedDeclName<_s153> {}; // ParmVar value
struct _d4613: CXXMethodDecl, FunctionDecl<_ty2252, Pack<_d4614>>, FunctionInstance<_qty3812>, FunctionResult<_qty1241, _qty1241>, NamedDeclName<_s1486> {}; // CXXMethod GetAlignedPointerFromEmbedderData
struct _d4614: NamedDeclName<_s128> {}; // ParmVar index
struct _d4615: CXXMethodDecl, FunctionDecl<_ty2259, Pack<_d4616, _d4617>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1487> {}; // CXXMethod SetAlignedPointerInEmbedderData
struct _d4616: NamedDeclName<_s128> {}; // ParmVar index
struct _d4617: NamedDeclName<_s153> {}; // ParmVar value
struct _d4618: CXXMethodDecl, FunctionDecl<_ty1783, Pack<_d4619>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1488> {}; // CXXMethod AllowCodeGenerationFromStrings
struct _d4619: NamedDeclName<_s1392> {}; // ParmVar allow
struct _d4620: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionInstance<_qty3812>, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1489> {}; // CXXMethod IsCodeGenerationFromStringsAllowed
struct _d4621: CXXMethodDecl, FunctionDecl<_ty3745, Pack<_d4622>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1490> {}; // CXXMethod SetErrorMessageForCodeGenerationFromStrings
struct _d4622: NamedDeclName<_s367> {}; // ParmVar message
struct _d4623: NamedDeclName<_s1276> {}; // FunctionTemplate GetDataFromSnapshotOnce
struct _d4624: NamedDeclName<_s21>, TypeDecl<_qty3837> {}; // TemplateTypeParm T
struct _d4625: CXXMethodDecl, FunctionDecl<_ty3747, Pack<_d4626>>, FunctionInstance<_qty3812>, FunctionResult<_qty3838, _qty3838>, NamedDeclName<_s1276> {}; // CXXMethod GetDataFromSnapshotOnce
struct _d4626: NamedDeclName<_s128> {}; // ParmVar index
struct _d4627: NamedDeclName<_s1491>, TypeDecl<_qty3840> {}; // Typedef AbortScriptExecutionCallback
struct _d4628: CXXMethodDecl, FunctionDecl<_ty3754, Pack<_d4629>>, FunctionInstance<_qty3812>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s1492> {}; // CXXMethod SetAbortScriptExecution
struct _d4629: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4630: NamedDeclName<_s1161>, TypeDecl<_qty3845> {}; // CXXRecord Scope
struct _d4631: NamedDeclName<_s1161>, TypeDecl<_qty3845> {}; // CXXRecord Scope
struct _d4632: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3757, Pack<_d4633>>, FunctionInstance<_qty3848>, FunctionNoResult {}; // CXXConstructor Scope
struct _d4633: NamedDeclName<_s220> {}; // ParmVar context
struct _d4634: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty114, Pack<>>, FunctionInstance<_qty3848>, FunctionNoResult {}; // CXXDestructor ~Scope
struct _d4635: NamedDeclName<_s1493>, TypeDecl<_qty3849> {}; // CXXRecord BackupIncumbentScope
struct _d4636: NamedDeclName<_s1493>, TypeDecl<_qty3849> {}; // CXXRecord BackupIncumbentScope
struct _d4637: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3761, Pack<_d4638>>, FunctionInstance<_qty3852>, FunctionNoResult {}; // CXXConstructor BackupIncumbentScope
struct _d4638: NamedDeclName<_s1494> {}; // ParmVar backup_incumbent_context
struct _d4639: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3763, Pack<>>, FunctionInstance<_qty3852>, FunctionNoResult {}; // CXXDestructor ~BackupIncumbentScope
struct _d4640: CXXMethodDecl, FunctionDecl<_ty3764, Pack<>>, FunctionInstance<_qty3855>, FunctionResult<_qty1584, _qty1584>, NamedDeclName<_s1463> {}; // CXXMethod JSStackComparableAddress
struct _d4641: NamedDeclName<_s1495>, TypeDecl<_qty3856> {}; // CXXRecord Unlocker
struct _d4642: NamedDeclName<_s1495>, TypeDecl<_qty3856> {}; // CXXRecord Unlocker
struct _d4643: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d4644>>, FunctionInstance<_qty3857>, FunctionNoResult {}; // CXXConstructor Unlocker
struct _d4644: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4645: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3768, Pack<>>, FunctionInstance<_qty3857>, FunctionNoResult {}; // CXXDestructor ~Unlocker
struct _d4646: NamedDeclName<_s1496>, TypeDecl<_qty3859> {}; // CXXRecord Locker
struct _d4647: NamedDeclName<_s1496>, TypeDecl<_qty3859> {}; // CXXRecord Locker
struct _d4648: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty1457, Pack<_d4649>>, FunctionInstance<_qty3860>, FunctionNoResult {}; // CXXConstructor Locker
struct _d4649: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4650: CXXDestructorDecl, CXXMethodDecl, FunctionDecl<_ty3771, Pack<>>, FunctionInstance<_qty3860>, FunctionNoResult {}; // CXXDestructor ~Locker
struct _d4651: CXXMethodDecl, FunctionDecl<_ty3283, Pack<_d4652>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1497> {}; // CXXMethod IsLocked
struct _d4652: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4653: CXXMethodDecl, FunctionDecl<_ty1636, Pack<>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1498> {}; // CXXMethod IsActive
struct _d4654: CXXConstructorDecl, CXXMethodDecl, FunctionDecl<_ty3773, Pack<_d4655>>, FunctionInstance<_qty3860>, FunctionNoResult {}; // CXXConstructor Locker
struct _d4655: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4656: CXXMethodDecl, FunctionDecl<_ty3773, Pack<_d4657>>, FunctionInstance<_qty3860>, FunctionResult<_qty59, _qty59>, NamedDeclName<_s67> {}; // CXXMethod operator=
struct _d4657: NamedDeclAnon<_s66> {}; // ParmVar 
struct _d4658: NamedDeclName<_s1499>, TypeDecl<_qty3865> {}; // CXXRecord Unwinder
struct _d4659: NamedDeclName<_s1499>, TypeDecl<_qty3865> {}; // CXXRecord Unwinder
struct _d4660: CXXMethodDecl, FunctionDecl<_ty3776, Pack<_d4661, _d4662, _d4663>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1500> {}; // CXXMethod TryUnwindV8Frames
struct _d4661: NamedDeclName<_s1501> {}; // ParmVar unwind_state
struct _d4662: NamedDeclName<_s1502> {}; // ParmVar register_state
struct _d4663: NamedDeclName<_s1503> {}; // ParmVar stack_base
struct _d4664: CXXMethodDecl, FunctionDecl<_ty3777, Pack<_d4665, _d4666>>, FunctionNoInstance, FunctionResult<_qty67, _qty67>, NamedDeclName<_s1504> {}; // CXXMethod PCIsInV8
struct _d4665: NamedDeclName<_s1501> {}; // ParmVar unwind_state
struct _d4666: NamedDeclName<_s341> {}; // ParmVar pc
struct _d4667: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4668: NamedDeclName<_s53> {}; // ParmVar that
struct _d4669: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4670: NamedDeclName<_s53> {}; // ParmVar that
struct _d4671: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4672: NamedDeclName<_s53> {}; // ParmVar that
struct _d4673: NamedDeclName<_s52>, TypeDecl<_qty3877> {}; // TemplateTypeParm S
struct _d4674: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4675: NamedDeclName<_s119> {}; // ParmVar handle
struct _d4676: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4677: NamedDeclName<_s128> {}; // ParmVar index
struct _d4678: NamedDeclName<_s52>, TypeDecl<_qty3879> {}; // TemplateTypeParm S
struct _d4679: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4680: NamedDeclName<_s78> {}; // ParmVar other
struct _d4681: NamedDeclName<_s52>, TypeDecl<_qty3883> {}; // TemplateTypeParm S
struct _d4682: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4683: NamedDeclName<_s78> {}; // ParmVar other
struct _d4684: NamedDeclName<_s82>, TypeDecl<_qty3887> {}; // TemplateTypeParm P
struct _d4685: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d4686: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4687: NamedDeclName<_s85> {}; // ParmVar type
struct _d4688: NamedDeclName<_s82>, TypeDecl<_qty3890> {}; // TemplateTypeParm P
struct _d4689: NamedDeclName<_s89> {}; // ParmVar label
struct _d4690: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d4691: NamedDeclName<_s78> {}; // ParmVar other
struct _d4692: NamedDeclName<_s52>, TypeDecl<_qty3891> {}; // TemplateTypeParm S
struct _d4693: NamedDeclName<_s98> {}; // ParmVar rhs
struct _d4694: NamedDeclName<_s52>, TypeDecl<_qty3894> {}; // TemplateTypeParm S
struct _d4695: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4696: NamedDeclName<_s78> {}; // ParmVar other
struct _d4697: NamedDeclName<_s78> {}; // ParmVar other
struct _d4698: NamedDeclName<_s52>, TypeDecl<_qty3898> {}; // TemplateTypeParm S
struct _d4699: NamedDeclName<_s98> {}; // ParmVar rhs
struct _d4700: NamedDeclName<_s92> {}; // ParmVar class_id
struct _d4701: NamedDeclName<_s83> {}; // ParmVar parameter
struct _d4702: NamedDeclName<_s84> {}; // ParmVar callback
struct _d4703: NamedDeclName<_s52>, TypeDecl<_qty3902> {}; // TemplateTypeParm S
struct _d4704: NamedDeclName<_s119> {}; // ParmVar handle
struct _d4705: NamedDeclName<_s52>, TypeDecl<_qty3906> {}; // TemplateTypeParm S
struct _d4706: NamedDeclName<_s119> {}; // ParmVar handle
struct _d4707: NamedDeclName<_s52>, TypeDecl<_qty3910> {}; // TemplateTypeParm S
struct _d4708: NamedDeclName<_s119> {}; // ParmVar handle
struct _d4709: NamedDeclName<_s215> {}; // ParmVar i
struct _d4710: NamedDeclName<_s215> {}; // ParmVar i
struct _d4711: NamedDeclName<_s215> {}; // ParmVar i
struct _d4712: NamedDeclName<_s153> {}; // ParmVar value
struct _d4713: NamedDeclName<_s52>, TypeDecl<_qty3913> {}; // TemplateTypeParm S
struct _d4714: NamedDeclName<_s672> {}; // ParmVar whatever
struct _d4715: NamedDeclName<_s686> {}; // ParmVar implicit_args
struct _d4716: NamedDeclName<_s641> {}; // ParmVar values
struct _d4717: NamedDeclName<_s160> {}; // ParmVar length
struct _d4718: NamedDeclName<_s215> {}; // ParmVar i
struct _d4719: NamedDeclName<_s175> {}; // ParmVar resource_name
struct _d4720: NamedDeclName<_s176> {}; // ParmVar resource_line_offset
struct _d4721: NamedDeclName<_s177> {}; // ParmVar resource_column_offset
struct _d4722: NamedDeclName<_s178> {}; // ParmVar resource_is_shared_cross_origin
struct _d4723: NamedDeclName<_s179> {}; // ParmVar script_id
struct _d4724: NamedDeclName<_s180> {}; // ParmVar source_map_url
struct _d4725: NamedDeclName<_s181> {}; // ParmVar resource_is_opaque
struct _d4726: NamedDeclName<_s166> {}; // ParmVar is_wasm
struct _d4727: NamedDeclName<_s167> {}; // ParmVar is_module
struct _d4728: NamedDeclName<_s182> {}; // ParmVar host_defined_options
struct _d4729: NamedDeclName<_s1106> {}; // ParmVar string
struct _d4730: NamedDeclName<_s225> {}; // ParmVar origin
struct _d4731: NamedDeclName<_s130> {}; // ParmVar data
struct _d4732: NamedDeclName<_s1106> {}; // ParmVar string
struct _d4733: NamedDeclName<_s130> {}; // ParmVar data
struct _d4734: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4735: NamedDeclName<_s153> {}; // ParmVar value
struct _d4736: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4737: NamedDeclName<_s534> {}; // ParmVar name
struct _d4738: NamedDeclName<_s153> {}; // ParmVar value
struct _d4739: NamedDeclName<_s130> {}; // ParmVar data
struct _d4740: NamedDeclName<_s130> {}; // ParmVar data
struct _d4741: NamedDeclName<_s130> {}; // ParmVar data
struct _d4742: NamedDeclName<_s130> {}; // ParmVar data
struct _d4743: NamedDeclName<_s128> {}; // ParmVar index
struct _d4744: NamedDeclName<_s128> {}; // ParmVar index
struct _d4745: NamedDeclName<_s153> {}; // ParmVar value
struct _d4746: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4747: NamedDeclName<_s517> {}; // ParmVar encoding_out
struct _d4748: NamedDeclName<_s21>, TypeDecl<_qty3929> {}; // TemplateTypeParm T
struct _d4749: NamedDeclName<_s153> {}; // ParmVar value
struct _d4750: NamedDeclName<_s153> {}; // ParmVar value
struct _d4751: NamedDeclName<_s153> {}; // ParmVar value
struct _d4752: NamedDeclName<_s153> {}; // ParmVar value
struct _d4753: NamedDeclName<_s130> {}; // ParmVar data
struct _d4754: NamedDeclName<_s153> {}; // ParmVar value
struct _d4755: NamedDeclName<_s153> {}; // ParmVar value
struct _d4756: NamedDeclName<_s153> {}; // ParmVar value
struct _d4757: NamedDeclName<_s153> {}; // ParmVar value
struct _d4758: NamedDeclName<_s153> {}; // ParmVar value
struct _d4759: NamedDeclName<_s153> {}; // ParmVar value
struct _d4760: NamedDeclName<_s153> {}; // ParmVar value
struct _d4761: NamedDeclName<_s153> {}; // ParmVar value
struct _d4762: NamedDeclName<_s153> {}; // ParmVar value
struct _d4763: NamedDeclName<_s153> {}; // ParmVar value
struct _d4764: NamedDeclName<_s153> {}; // ParmVar value
struct _d4765: NamedDeclName<_s153> {}; // ParmVar value
struct _d4766: NamedDeclName<_s153> {}; // ParmVar value
struct _d4767: NamedDeclName<_s153> {}; // ParmVar value
struct _d4768: NamedDeclName<_s153> {}; // ParmVar value
struct _d4769: NamedDeclName<_s153> {}; // ParmVar value
struct _d4770: NamedDeclName<_s153> {}; // ParmVar value
struct _d4771: NamedDeclName<_s153> {}; // ParmVar value
struct _d4772: NamedDeclName<_s153> {}; // ParmVar value
struct _d4773: NamedDeclName<_s153> {}; // ParmVar value
struct _d4774: NamedDeclName<_s153> {}; // ParmVar value
struct _d4775: NamedDeclName<_s153> {}; // ParmVar value
struct _d4776: NamedDeclName<_s153> {}; // ParmVar value
struct _d4777: NamedDeclName<_s153> {}; // ParmVar value
struct _d4778: NamedDeclName<_s153> {}; // ParmVar value
struct _d4779: NamedDeclName<_s153> {}; // ParmVar value
struct _d4780: NamedDeclName<_s153> {}; // ParmVar value
struct _d4781: NamedDeclName<_s153> {}; // ParmVar value
struct _d4782: NamedDeclName<_s153> {}; // ParmVar value
struct _d4783: NamedDeclName<_s153> {}; // ParmVar value
struct _d4784: NamedDeclName<_s153> {}; // ParmVar value
struct _d4785: NamedDeclName<_s153> {}; // ParmVar value
struct _d4786: NamedDeclName<_s153> {}; // ParmVar value
struct _d4787: NamedDeclName<_s153> {}; // ParmVar value
struct _d4788: NamedDeclName<_s153> {}; // ParmVar value
struct _d4789: NamedDeclName<_s153> {}; // ParmVar value
struct _d4790: NamedDeclName<_s153> {}; // ParmVar value
struct _d4791: NamedDeclName<_s153> {}; // ParmVar value
struct _d4792: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4793: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4794: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4795: NamedDeclName<_s63> {}; // ParmVar isolate
struct _d4796: NamedDeclName<_s1273> {}; // ParmVar slot
struct _d4797: NamedDeclName<_s130> {}; // ParmVar data
struct _d4798: NamedDeclName<_s1273> {}; // ParmVar slot
struct _d4799: NamedDeclName<_s21>, TypeDecl<_qty3931> {}; // TemplateTypeParm T
struct _d4800: NamedDeclName<_s128> {}; // ParmVar index
struct _d4801: NamedDeclName<_s1293> {}; // ParmVar change_in_bytes
struct _d4802: NamedDeclName<_s128> {}; // ParmVar index
struct _d4803: NamedDeclName<_s128> {}; // ParmVar index
struct _d4804: NamedDeclName<_s21>, TypeDecl<_qty3932> {}; // TemplateTypeParm T
struct _d4805: NamedDeclName<_s128> {}; // ParmVar index
struct _d4806: NamedDeclName<_s21>, TypeDecl<_qty3933> {}; // TemplateTypeParm T
struct _d4807: NamedDeclName<_s220> {}; // ParmVar context
struct _d4808: NamedDeclName<_s369> {}; // ParmVar object
struct _d4809: NamedDeclName<_s21>, TypeDecl<_qty3936> {}; // TemplateTypeParm T
struct _d4810: NamedDeclName<_s369> {}; // ParmVar object
// Done: 0
