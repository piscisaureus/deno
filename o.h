  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Primitive>::*)(), &v8::Local<v8::Primitive>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Primitive>::*)(v8::Local<v8::Primitive>), &v8::Local<v8::Primitive>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Primitive>::*)() const, &v8::Local<v8::Primitive>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Primitive>::*)(), &v8::Local<v8::Primitive>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Primitive *(v8::Local<v8::Primitive>::*)() const, &v8::Local<v8::Primitive>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Primitive *(v8::Local<v8::Primitive>::*)() const, &v8::Local<v8::Primitive>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Primitive> (*)(v8::Isolate *, v8::Local<v8::Primitive>), &v8::Local<v8::Primitive>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Primitive> (*)(v8::Isolate *, const v8::PersistentBase<v8::Primitive> &), &v8::Local<v8::Primitive>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Primitive> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Primitive> &), &v8::Local<v8::Primitive>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Primitive>::*)(const v8::Local<v8::Primitive> &), &v8::Local<v8::Primitive>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Primitive>::*)(v8::Local<v8::Primitive> &&), &v8::Local<v8::Primitive>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Primitive>::*)(), &v8::Local<v8::Primitive>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Boolean>::*)(), &v8::Local<v8::Boolean>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Boolean>::*)(v8::Local<v8::Boolean>), &v8::Local<v8::Boolean>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Boolean>::*)() const, &v8::Local<v8::Boolean>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Boolean>::*)(), &v8::Local<v8::Boolean>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Boolean *(v8::Local<v8::Boolean>::*)() const, &v8::Local<v8::Boolean>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Boolean *(v8::Local<v8::Boolean>::*)() const, &v8::Local<v8::Boolean>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *, v8::Local<v8::Boolean>), &v8::Local<v8::Boolean>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *, const v8::PersistentBase<v8::Boolean> &), &v8::Local<v8::Boolean>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Boolean> &), &v8::Local<v8::Boolean>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Boolean>::*)(const v8::Local<v8::Boolean> &), &v8::Local<v8::Boolean>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Boolean>::*)(v8::Local<v8::Boolean> &&), &v8::Local<v8::Boolean>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Boolean>::*)(), &v8::Local<v8::Boolean>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Value>::*)(), &v8::Local<v8::Value>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Value>::*)(v8::Local<v8::Value>), &v8::Local<v8::Value>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Value>::*)() const, &v8::Local<v8::Value>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Value>::*)(), &v8::Local<v8::Value>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Value *(v8::Local<v8::Value>::*)() const, &v8::Local<v8::Value>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Value *(v8::Local<v8::Value>::*)() const, &v8::Local<v8::Value>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, v8::Local<v8::Value>), &v8::Local<v8::Value>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, const v8::PersistentBase<v8::Value> &), &v8::Local<v8::Value>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Value> &), &v8::Local<v8::Value>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Value>::*)(const v8::Local<v8::Value> &), &v8::Local<v8::Value>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Value>::*)(v8::Local<v8::Value> &&), &v8::Local<v8::Value>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Value>::*)(), &v8::Local<v8::Value>::~Local> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> &(v8::Local<v8::Value>::*)(const v8::Local<v8::Value> &), &v8::Local<v8::Value>::operator=> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> &(v8::Local<v8::Value>::*)(v8::Local<v8::Value> &&), &v8::Local<v8::Value>::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::PrimitiveArray>::*)(), &v8::Local<v8::PrimitiveArray>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::PrimitiveArray>::*)(v8::Local<v8::PrimitiveArray>), &v8::Local<v8::PrimitiveArray>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::PrimitiveArray>::*)() const, &v8::Local<v8::PrimitiveArray>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::PrimitiveArray>::*)(), &v8::Local<v8::PrimitiveArray>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::PrimitiveArray *(v8::Local<v8::PrimitiveArray>::*)() const, &v8::Local<v8::PrimitiveArray>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::PrimitiveArray *(v8::Local<v8::PrimitiveArray>::*)() const, &v8::Local<v8::PrimitiveArray>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> (*)(v8::Isolate *, v8::Local<v8::PrimitiveArray>), &v8::Local<v8::PrimitiveArray>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> (*)(v8::Isolate *, const v8::PersistentBase<v8::PrimitiveArray> &), &v8::Local<v8::PrimitiveArray>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> (*)(v8::Isolate *, const v8::TracedGlobal<v8::PrimitiveArray> &), &v8::Local<v8::PrimitiveArray>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::PrimitiveArray>::*)(const v8::Local<v8::PrimitiveArray> &), &v8::Local<v8::PrimitiveArray>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::PrimitiveArray>::*)(v8::Local<v8::PrimitiveArray> &&), &v8::Local<v8::PrimitiveArray>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::PrimitiveArray>::*)(), &v8::Local<v8::PrimitiveArray>::~Local> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> &(v8::Local<v8::PrimitiveArray>::*)(const v8::Local<v8::PrimitiveArray> &), &v8::Local<v8::PrimitiveArray>::operator=> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> &(v8::Local<v8::PrimitiveArray>::*)(v8::Local<v8::PrimitiveArray> &&), &v8::Local<v8::PrimitiveArray>::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Integer>::*)(), &v8::Local<v8::Integer>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Integer>::*)(v8::Local<v8::Integer>), &v8::Local<v8::Integer>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Integer>::*)() const, &v8::Local<v8::Integer>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Integer>::*)(), &v8::Local<v8::Integer>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Integer *(v8::Local<v8::Integer>::*)() const, &v8::Local<v8::Integer>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Integer *(v8::Local<v8::Integer>::*)() const, &v8::Local<v8::Integer>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (*)(v8::Isolate *, v8::Local<v8::Integer>), &v8::Local<v8::Integer>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (*)(v8::Isolate *, const v8::PersistentBase<v8::Integer> &), &v8::Local<v8::Integer>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Integer> &), &v8::Local<v8::Integer>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Integer>::*)(const v8::Local<v8::Integer> &), &v8::Local<v8::Integer>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Integer>::*)(v8::Local<v8::Integer> &&), &v8::Local<v8::Integer>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Integer>::*)(), &v8::Local<v8::Integer>::~Local> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> &(v8::Local<v8::Integer>::*)(const v8::Local<v8::Integer> &), &v8::Local<v8::Integer>::operator=> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> &(v8::Local<v8::Integer>::*)(v8::Local<v8::Integer> &&), &v8::Local<v8::Integer>::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::String>::*)(), &v8::Local<v8::String>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::String>::*)(v8::Local<v8::String>), &v8::Local<v8::String>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::String>::*)() const, &v8::Local<v8::String>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::String>::*)(), &v8::Local<v8::String>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::String *(v8::Local<v8::String>::*)() const, &v8::Local<v8::String>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::String *(v8::Local<v8::String>::*)() const, &v8::Local<v8::String>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (*)(v8::Isolate *, v8::Local<v8::String>), &v8::Local<v8::String>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (*)(v8::Isolate *, const v8::PersistentBase<v8::String> &), &v8::Local<v8::String>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (*)(v8::Isolate *, const v8::TracedGlobal<v8::String> &), &v8::Local<v8::String>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::String>::*)(const v8::Local<v8::String> &), &v8::Local<v8::String>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::String>::*)(v8::Local<v8::String> &&), &v8::Local<v8::String>::Local> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> &(v8::Local<v8::String>::*)(const v8::Local<v8::String> &), &v8::Local<v8::String>::operator=> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> &(v8::Local<v8::String>::*)(v8::Local<v8::String> &&), &v8::Local<v8::String>::operator=> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::String>::*)(), &v8::Local<v8::String>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Context>::*)(), &v8::Local<v8::Context>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Context>::*)(v8::Local<v8::Context>), &v8::Local<v8::Context>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Context>::*)() const, &v8::Local<v8::Context>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Context>::*)(), &v8::Local<v8::Context>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Context *(v8::Local<v8::Context>::*)() const, &v8::Local<v8::Context>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Context *(v8::Local<v8::Context>::*)() const, &v8::Local<v8::Context>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (*)(v8::Isolate *, v8::Local<v8::Context>), &v8::Local<v8::Context>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (*)(v8::Isolate *, const v8::PersistentBase<v8::Context> &), &v8::Local<v8::Context>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Context> &), &v8::Local<v8::Context>::New> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Context>::*)(), &v8::Local<v8::Context>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Context>::*)(const v8::Local<v8::Context> &), &v8::Local<v8::Context>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Context>::*)(v8::Local<v8::Context> &&), &v8::Local<v8::Context>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::UnboundScript>::*)(), &v8::Local<v8::UnboundScript>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::UnboundScript>::*)() const, &v8::Local<v8::UnboundScript>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::UnboundScript>::*)(), &v8::Local<v8::UnboundScript>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::UnboundScript *(v8::Local<v8::UnboundScript>::*)() const, &v8::Local<v8::UnboundScript>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::UnboundScript *(v8::Local<v8::UnboundScript>::*)() const, &v8::Local<v8::UnboundScript>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::UnboundScript> (*)(v8::Isolate *, v8::Local<v8::UnboundScript>), &v8::Local<v8::UnboundScript>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::UnboundScript> (*)(v8::Isolate *, const v8::PersistentBase<v8::UnboundScript> &), &v8::Local<v8::UnboundScript>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::UnboundScript> (*)(v8::Isolate *, const v8::TracedGlobal<v8::UnboundScript> &), &v8::Local<v8::UnboundScript>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Function>::*)(), &v8::Local<v8::Function>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Function>::*)(v8::Local<v8::Function>), &v8::Local<v8::Function>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Function>::*)() const, &v8::Local<v8::Function>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Function>::*)(), &v8::Local<v8::Function>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Function *(v8::Local<v8::Function>::*)() const, &v8::Local<v8::Function>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Function *(v8::Local<v8::Function>::*)() const, &v8::Local<v8::Function>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Function> (*)(v8::Isolate *, v8::Local<v8::Function>), &v8::Local<v8::Function>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Function> (*)(v8::Isolate *, const v8::PersistentBase<v8::Function> &), &v8::Local<v8::Function>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Function> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Function> &), &v8::Local<v8::Function>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Function>::*)(const v8::Local<v8::Function> &), &v8::Local<v8::Function>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Function>::*)(v8::Local<v8::Function> &&), &v8::Local<v8::Function>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Function>::*)(), &v8::Local<v8::Function>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Name>::*)(), &v8::Local<v8::Name>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Name>::*)(v8::Local<v8::String>), &v8::Local<v8::Name>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Name>::*)(v8::Local<v8::Name>), &v8::Local<v8::Name>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Name>::*)() const, &v8::Local<v8::Name>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Name>::*)(), &v8::Local<v8::Name>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Name *(v8::Local<v8::Name>::*)() const, &v8::Local<v8::Name>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Name *(v8::Local<v8::Name>::*)() const, &v8::Local<v8::Name>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Name> (*)(v8::Isolate *, v8::Local<v8::Name>), &v8::Local<v8::Name>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Name> (*)(v8::Isolate *, const v8::PersistentBase<v8::Name> &), &v8::Local<v8::Name>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Name> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Name> &), &v8::Local<v8::Name>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Name>::*)(const v8::Local<v8::Name> &), &v8::Local<v8::Name>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Name>::*)(v8::Local<v8::Name> &&), &v8::Local<v8::Name>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Name>::*)(), &v8::Local<v8::Name>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::FunctionTemplate>::*)(), &v8::Local<v8::FunctionTemplate>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::FunctionTemplate>::*)(v8::Local<v8::FunctionTemplate>), &v8::Local<v8::FunctionTemplate>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::FunctionTemplate>::*)() const, &v8::Local<v8::FunctionTemplate>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::FunctionTemplate>::*)(), &v8::Local<v8::FunctionTemplate>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::FunctionTemplate *(v8::Local<v8::FunctionTemplate>::*)() const, &v8::Local<v8::FunctionTemplate>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::FunctionTemplate *(v8::Local<v8::FunctionTemplate>::*)() const, &v8::Local<v8::FunctionTemplate>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::FunctionTemplate> (*)(v8::Isolate *, v8::Local<v8::FunctionTemplate>), &v8::Local<v8::FunctionTemplate>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::FunctionTemplate> (*)(v8::Isolate *, const v8::PersistentBase<v8::FunctionTemplate> &), &v8::Local<v8::FunctionTemplate>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::FunctionTemplate> (*)(v8::Isolate *, const v8::TracedGlobal<v8::FunctionTemplate> &), &v8::Local<v8::FunctionTemplate>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::FunctionTemplate>::*)(const v8::Local<v8::FunctionTemplate> &), &v8::Local<v8::FunctionTemplate>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::FunctionTemplate>::*)(v8::Local<v8::FunctionTemplate> &&), &v8::Local<v8::FunctionTemplate>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::FunctionTemplate>::*)(), &v8::Local<v8::FunctionTemplate>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Promise>::*)(), &v8::Local<v8::Promise>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Promise>::*)(v8::Local<v8::Promise>), &v8::Local<v8::Promise>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Promise>::*)() const, &v8::Local<v8::Promise>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Promise>::*)(), &v8::Local<v8::Promise>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Promise *(v8::Local<v8::Promise>::*)() const, &v8::Local<v8::Promise>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Promise *(v8::Local<v8::Promise>::*)() const, &v8::Local<v8::Promise>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Promise> (*)(v8::Isolate *, v8::Local<v8::Promise>), &v8::Local<v8::Promise>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Promise> (*)(v8::Isolate *, const v8::PersistentBase<v8::Promise> &), &v8::Local<v8::Promise>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Promise> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Promise> &), &v8::Local<v8::Promise>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Promise>::*)(const v8::Local<v8::Promise> &), &v8::Local<v8::Promise>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Promise>::*)(v8::Local<v8::Promise> &&), &v8::Local<v8::Promise>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Data>::*)(), &v8::Local<v8::Data>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Data>::*)(v8::Local<v8::Data>), &v8::Local<v8::Data>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Data>::*)() const, &v8::Local<v8::Data>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Data>::*)(), &v8::Local<v8::Data>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Data *(v8::Local<v8::Data>::*)() const, &v8::Local<v8::Data>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Data *(v8::Local<v8::Data>::*)() const, &v8::Local<v8::Data>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Data> (*)(v8::Isolate *, v8::Local<v8::Data>), &v8::Local<v8::Data>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Data> (*)(v8::Isolate *, const v8::PersistentBase<v8::Data> &), &v8::Local<v8::Data>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Data> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Data> &), &v8::Local<v8::Data>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Data>::*)(const v8::Local<v8::Data> &), &v8::Local<v8::Data>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Data>::*)(v8::Local<v8::Data> &&), &v8::Local<v8::Data>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Data>::*)(), &v8::Local<v8::Data>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::AccessorSignature>::*)(), &v8::Local<v8::AccessorSignature>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::AccessorSignature>::*)(v8::Local<v8::AccessorSignature>), &v8::Local<v8::AccessorSignature>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::AccessorSignature>::*)() const, &v8::Local<v8::AccessorSignature>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::AccessorSignature>::*)(), &v8::Local<v8::AccessorSignature>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::AccessorSignature *(v8::Local<v8::AccessorSignature>::*)() const, &v8::Local<v8::AccessorSignature>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::AccessorSignature *(v8::Local<v8::AccessorSignature>::*)() const, &v8::Local<v8::AccessorSignature>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::AccessorSignature> (*)(v8::Isolate *, v8::Local<v8::AccessorSignature>), &v8::Local<v8::AccessorSignature>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::AccessorSignature> (*)(v8::Isolate *, const v8::PersistentBase<v8::AccessorSignature> &), &v8::Local<v8::AccessorSignature>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::AccessorSignature> (*)(v8::Isolate *, const v8::TracedGlobal<v8::AccessorSignature> &), &v8::Local<v8::AccessorSignature>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::AccessorSignature>::*)(const v8::Local<v8::AccessorSignature> &), &v8::Local<v8::AccessorSignature>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::AccessorSignature>::*)(v8::Local<v8::AccessorSignature> &&), &v8::Local<v8::AccessorSignature>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::AccessorSignature>::*)(), &v8::Local<v8::AccessorSignature>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Signature>::*)(), &v8::Local<v8::Signature>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Signature>::*)(v8::Local<v8::Signature>), &v8::Local<v8::Signature>::Local> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Local<v8::Signature>::*)() const, &v8::Local<v8::Signature>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Local<v8::Signature>::*)(), &v8::Local<v8::Signature>::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::Signature *(v8::Local<v8::Signature>::*)() const, &v8::Local<v8::Signature>::operator->> ))
  X_CXXMethod(( pick_overload_v<v8::Signature *(v8::Local<v8::Signature>::*)() const, &v8::Local<v8::Signature>::operator*> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Signature> (*)(v8::Isolate *, v8::Local<v8::Signature>), &v8::Local<v8::Signature>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Signature> (*)(v8::Isolate *, const v8::PersistentBase<v8::Signature> &), &v8::Local<v8::Signature>::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Signature> (*)(v8::Isolate *, const v8::TracedGlobal<v8::Signature> &), &v8::Local<v8::Signature>::New> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Signature>::*)(const v8::Local<v8::Signature> &), &v8::Local<v8::Signature>::Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Local<v8::Signature>::*)(v8::Local<v8::Signature> &&), &v8::Local<v8::Signature>::Local> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Local<v8::Signature>::*)(), &v8::Local<v8::Signature>::~Local> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::Value>::*)(), &v8::MaybeLocal<v8::Value>::MaybeLocal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::MaybeLocal<v8::Value>::*)() const, &v8::MaybeLocal<v8::Value>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::MaybeLocal<v8::Value>::*)(), &v8::MaybeLocal<v8::Value>::ToLocalChecked> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::Value>::*)(const v8::MaybeLocal<v8::Value> &), &v8::MaybeLocal<v8::Value>::MaybeLocal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::Value>::*)(v8::MaybeLocal<v8::Value> &&), &v8::MaybeLocal<v8::Value>::MaybeLocal> ))
  X_CXXDestructor(( pick_overload_v<void (v8::MaybeLocal<v8::Value>::*)(), &v8::MaybeLocal<v8::Value>::~MaybeLocal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::String>::*)(), &v8::MaybeLocal<v8::String>::MaybeLocal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::MaybeLocal<v8::String>::*)() const, &v8::MaybeLocal<v8::String>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::MaybeLocal<v8::String>::*)(), &v8::MaybeLocal<v8::String>::ToLocalChecked> ))
  X_CXXDestructor(( pick_overload_v<void (v8::MaybeLocal<v8::String>::*)(), &v8::MaybeLocal<v8::String>::~MaybeLocal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::Object>::*)(), &v8::MaybeLocal<v8::Object>::MaybeLocal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::MaybeLocal<v8::Object>::*)() const, &v8::MaybeLocal<v8::Object>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (v8::MaybeLocal<v8::Object>::*)(), &v8::MaybeLocal<v8::Object>::ToLocalChecked> ))
  X_CXXDestructor(( pick_overload_v<void (v8::MaybeLocal<v8::Object>::*)(), &v8::MaybeLocal<v8::Object>::~MaybeLocal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::Object>::*)(const v8::MaybeLocal<v8::Object> &), &v8::MaybeLocal<v8::Object>::MaybeLocal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::Object>::*)(v8::MaybeLocal<v8::Object> &&), &v8::MaybeLocal<v8::Object>::MaybeLocal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::ObjectTemplate>::*)(), &v8::MaybeLocal<v8::ObjectTemplate>::MaybeLocal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::MaybeLocal<v8::ObjectTemplate>::*)() const, &v8::MaybeLocal<v8::ObjectTemplate>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::ObjectTemplate> (v8::MaybeLocal<v8::ObjectTemplate>::*)(), &v8::MaybeLocal<v8::ObjectTemplate>::ToLocalChecked> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::ObjectTemplate>::*)(const v8::MaybeLocal<v8::ObjectTemplate> &), &v8::MaybeLocal<v8::ObjectTemplate>::MaybeLocal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MaybeLocal<v8::ObjectTemplate>::*)(v8::MaybeLocal<v8::ObjectTemplate> &&), &v8::MaybeLocal<v8::ObjectTemplate>::MaybeLocal> ))
  X_CXXDestructor(( pick_overload_v<void (v8::MaybeLocal<v8::ObjectTemplate>::*)(), &v8::MaybeLocal<v8::ObjectTemplate>::~MaybeLocal> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Object>::*)(), &v8::PersistentBase<v8::Object>::Reset> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PersistentBase<v8::Object>::*)() const, &v8::PersistentBase<v8::Object>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Object>::*)(), &v8::PersistentBase<v8::Object>::Empty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (v8::PersistentBase<v8::Object>::*)(v8::Isolate *) const, &v8::PersistentBase<v8::Object>::Get> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Object>::*)(), &v8::PersistentBase<v8::Object>::SetWeak> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Object>::*)(), &v8::PersistentBase<v8::Object>::ClearWeak> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Object>::*)(const char *), &v8::PersistentBase<v8::Object>::AnnotateStrongRetainer> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PersistentBase<v8::Object>::*)() const, &v8::PersistentBase<v8::Object>::IsWeak> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Object>::*)(unsigned short), &v8::PersistentBase<v8::Object>::SetWrapperClassId> ))
  X_CXXMethod(( pick_overload_v<unsigned short (v8::PersistentBase<v8::Object>::*)() const, &v8::PersistentBase<v8::Object>::WrapperClassId> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Promise>::*)(), &v8::PersistentBase<v8::Promise>::Reset> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PersistentBase<v8::Promise>::*)() const, &v8::PersistentBase<v8::Promise>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Promise>::*)(), &v8::PersistentBase<v8::Promise>::Empty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Promise> (v8::PersistentBase<v8::Promise>::*)(v8::Isolate *) const, &v8::PersistentBase<v8::Promise>::Get> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Promise>::*)(), &v8::PersistentBase<v8::Promise>::SetWeak> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Promise>::*)(), &v8::PersistentBase<v8::Promise>::ClearWeak> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Promise>::*)(const char *), &v8::PersistentBase<v8::Promise>::AnnotateStrongRetainer> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PersistentBase<v8::Promise>::*)() const, &v8::PersistentBase<v8::Promise>::IsWeak> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentBase<v8::Promise>::*)(unsigned short), &v8::PersistentBase<v8::Promise>::SetWrapperClassId> ))
  X_CXXMethod(( pick_overload_v<unsigned short (v8::PersistentBase<v8::Promise>::*)() const, &v8::PersistentBase<v8::Promise>::WrapperClassId> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::*)(), &v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::Persistent> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::*)(const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &), &v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::Persistent> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::*)(const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &), &v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::Persistent> ))
  X_CXXMethod(( pick_overload_v<v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::*)(const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &), &v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::operator=> ))
  X_CXXMethod(( pick_overload_v<v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &(v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::*)(const v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> > &), &v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::operator=> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::*)(), &v8::Persistent<v8::Promise, v8::CopyablePersistentTraits<v8::Promise> >::~Persistent> ))
  X_CXXConstructor(( pick_overload_v<void (v8::TracedGlobal<v8::Object>::*)(), &v8::TracedGlobal<v8::Object>::TracedGlobal> ))
  X_CXXDestructor(( pick_overload_v<void (v8::TracedGlobal<v8::Object>::*)(), &v8::TracedGlobal<v8::Object>::~TracedGlobal> ))
  X_CXXConstructor(( pick_overload_v<void (v8::TracedGlobal<v8::Object>::*)(v8::TracedGlobal<v8::Object> &&), &v8::TracedGlobal<v8::Object>::TracedGlobal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::TracedGlobal<v8::Object>::*)() const, &v8::TracedGlobal<v8::Object>::IsEmpty> ))
  X_CXXMethod(( pick_overload_v<void (v8::TracedGlobal<v8::Object>::*)(), &v8::TracedGlobal<v8::Object>::Reset> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (v8::TracedGlobal<v8::Object>::*)(v8::Isolate *) const, &v8::TracedGlobal<v8::Object>::Get> ))
  X_CXXMethod(( pick_overload_v<void (v8::TracedGlobal<v8::Object>::*)(unsigned short), &v8::TracedGlobal<v8::Object>::SetWrapperClassId> ))
  X_CXXMethod(( pick_overload_v<unsigned short (v8::TracedGlobal<v8::Object>::*)() const, &v8::TracedGlobal<v8::Object>::WrapperClassId> ))
  X_CXXMethod(( pick_overload_v<void (v8::TracedGlobal<v8::Object>::*)(void *, void (*)(const v8::WeakCallbackInfo<void> &)), &v8::TracedGlobal<v8::Object>::SetFinalizationCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::WeakCallbackInfo<void>::*)(v8::Isolate *, void *, void **, void (**)(const v8::WeakCallbackInfo<void> &)), &v8::WeakCallbackInfo<void>::WeakCallbackInfo> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(v8::WeakCallbackInfo<void>::*)() const, &v8::WeakCallbackInfo<void>::GetIsolate> ))
  X_CXXMethod(( pick_overload_v<void *(v8::WeakCallbackInfo<void>::*)() const, &v8::WeakCallbackInfo<void>::GetParameter> ))
  X_CXXMethod(( pick_overload_v<void *(v8::WeakCallbackInfo<void>::*)(int) const, &v8::WeakCallbackInfo<void>::GetInternalField> ))
  X_CXXMethod(( pick_overload_v<void (v8::WeakCallbackInfo<void>::*)(void (*)(const v8::WeakCallbackInfo<void> &)) const, &v8::WeakCallbackInfo<void>::SetSecondPassCallback> ))
//  X_CXXMethod(( pick_overload_v<void (*)(), &v8::NonCopyablePersistentTraits::Uncompilable> ))
  X_CXXConstructor(( pick_overload_v<void (v8::HandleScope::*)(v8::Isolate *), &v8::HandleScope::HandleScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::HandleScope::*)(), &v8::HandleScope::~HandleScope> ))
  X_CXXMethod(( pick_overload_v<int (*)(v8::Isolate *), &v8::HandleScope::NumberOfHandles> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(v8::HandleScope::*)() const, &v8::HandleScope::GetIsolate> ))
  X_CXXConstructor(( pick_overload_v<void (v8::EscapableHandleScope::*)(v8::Isolate *), &v8::EscapableHandleScope::EscapableHandleScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::EscapableHandleScope::*)(), &v8::EscapableHandleScope::~EscapableHandleScope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::SealHandleScope::*)(v8::Isolate *), &v8::SealHandleScope::SealHandleScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::SealHandleScope::*)(), &v8::SealHandleScope::~SealHandleScope> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::ScriptOrModule::*)(), &v8::ScriptOrModule::GetResourceName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> (v8::ScriptOrModule::*)(), &v8::ScriptOrModule::GetHostDefinedOptions> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> (*)(v8::Isolate *, int), &v8::PrimitiveArray::New> ))
  X_CXXMethod(( pick_overload_v<int (v8::PrimitiveArray::*)() const, &v8::PrimitiveArray::Length> ))
  X_CXXMethod(( pick_overload_v<void (v8::PrimitiveArray::*)(v8::Isolate *, int, v8::Local<v8::Primitive>), &v8::PrimitiveArray::Set> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Primitive> (v8::PrimitiveArray::*)(v8::Isolate *, int), &v8::PrimitiveArray::Get> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOriginOptions::*)(bool, bool, bool, bool), &v8::ScriptOriginOptions::ScriptOriginOptions> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOriginOptions::*)(int), &v8::ScriptOriginOptions::ScriptOriginOptions> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ScriptOriginOptions::*)() const, &v8::ScriptOriginOptions::IsSharedCrossOrigin> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ScriptOriginOptions::*)() const, &v8::ScriptOriginOptions::IsOpaque> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ScriptOriginOptions::*)() const, &v8::ScriptOriginOptions::IsWasm> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ScriptOriginOptions::*)() const, &v8::ScriptOriginOptions::IsModule> ))
  X_CXXMethod(( pick_overload_v<int (v8::ScriptOriginOptions::*)() const, &v8::ScriptOriginOptions::Flags> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOriginOptions::*)(const v8::ScriptOriginOptions &), &v8::ScriptOriginOptions::ScriptOriginOptions> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOriginOptions::*)(v8::ScriptOriginOptions &&), &v8::ScriptOriginOptions::ScriptOriginOptions> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ScriptOriginOptions::*)(), &v8::ScriptOriginOptions::~ScriptOriginOptions> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOrigin::*)(v8::Local<v8::Value>, v8::Local<v8::Integer>, v8::Local<v8::Integer>, v8::Local<v8::Boolean>, v8::Local<v8::Integer>, v8::Local<v8::Value>, v8::Local<v8::Boolean>, v8::Local<v8::Boolean>, v8::Local<v8::Boolean>, v8::Local<v8::PrimitiveArray>), &v8::ScriptOrigin::ScriptOrigin> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ResourceName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ResourceLineOffset> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ResourceColumnOffset> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ScriptID> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::SourceMapUrl> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::HostDefinedOptions> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptOriginOptions (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::Options> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOrigin::*)(const v8::ScriptOrigin &), &v8::ScriptOrigin::ScriptOrigin> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOrigin::*)(v8::ScriptOrigin &&), &v8::ScriptOrigin::ScriptOrigin> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Script> (v8::UnboundScript::*)(), &v8::UnboundScript::BindToCurrentContext> ))
  X_CXXMethod(( pick_overload_v<int (v8::UnboundScript::*)(), &v8::UnboundScript::GetId> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::UnboundScript::*)(), &v8::UnboundScript::GetScriptName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::UnboundScript::*)(), &v8::UnboundScript::GetSourceURL> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::UnboundScript::*)(), &v8::UnboundScript::GetSourceMappingURL> ))
  X_CXXMethod(( pick_overload_v<int (v8::UnboundScript::*)(int), &v8::UnboundScript::GetLineNumber> ))
  X_CXXMethod(( pick_overload_v<int (v8::Location::*)(), &v8::Location::GetLineNumber> ))
  X_CXXMethod(( pick_overload_v<int (v8::Location::*)(), &v8::Location::GetColumnNumber> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Location::*)(int, int), &v8::Location::Location> ))
  X_CXXMethod(( pick_overload_v<v8::Module::Status (v8::Module::*)() const, &v8::Module::GetStatus> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Module::*)() const, &v8::Module::GetException> ))
  X_CXXMethod(( pick_overload_v<int (v8::Module::*)() const, &v8::Module::GetModuleRequestsLength> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::Module::*)(int) const, &v8::Module::GetModuleRequest> ))
  X_CXXMethod(( pick_overload_v<v8::Location (v8::Module::*)(int) const, &v8::Module::GetModuleRequestLocation> ))
  X_CXXMethod(( pick_overload_v<int (v8::Module::*)() const, &v8::Module::GetIdentityHash> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Module::*)(v8::Local<v8::Context>, v8::MaybeLocal<v8::Module> (*)(v8::Local<v8::Context>, v8::Local<v8::String>, v8::Local<v8::Module>)), &v8::Module::InstantiateModule> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Module::*)(v8::Local<v8::Context>), &v8::Module::Evaluate> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Module::*)(), &v8::Module::GetModuleNamespace> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::UnboundModuleScript> (v8::Module::*)(), &v8::Module::GetUnboundModuleScript> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Script> (*)(v8::Local<v8::Context>, v8::Local<v8::String>, v8::ScriptOrigin *), &v8::Script::Compile> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Script::*)(v8::Local<v8::Context>), &v8::Script::Run> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::UnboundScript> (v8::Script::*)(), &v8::Script::GetUnboundScript> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::CachedData::*)(), &v8::ScriptCompiler::CachedData::CachedData> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::CachedData::*)(const unsigned char *, int, v8::ScriptCompiler::CachedData::BufferPolicy), &v8::ScriptCompiler::CachedData::CachedData> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ScriptCompiler::CachedData::*)(), &v8::ScriptCompiler::CachedData::~CachedData> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::Source::*)(v8::Local<v8::String>, const v8::ScriptOrigin &, v8::ScriptCompiler::CachedData *), &v8::ScriptCompiler::Source::Source> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::Source::*)(v8::Local<v8::String>, v8::ScriptCompiler::CachedData *), &v8::ScriptCompiler::Source::Source> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ScriptCompiler::Source::*)(), &v8::ScriptCompiler::Source::~Source> ))
  X_CXXMethod(( pick_overload_v<const v8::ScriptCompiler::CachedData *(v8::ScriptCompiler::Source::*)() const, &v8::ScriptCompiler::Source::GetCachedData> ))
  X_CXXMethod(( pick_overload_v<const v8::ScriptOriginOptions &(v8::ScriptCompiler::Source::*)() const, &v8::ScriptCompiler::Source::GetResourceOptions> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ScriptCompiler::ExternalSourceStream::*)(), &v8::ScriptCompiler::ExternalSourceStream::~ExternalSourceStream> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ScriptCompiler::ExternalSourceStream::*)(const unsigned char **), &v8::ScriptCompiler::ExternalSourceStream::GetMoreData> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ScriptCompiler::ExternalSourceStream::*)(), &v8::ScriptCompiler::ExternalSourceStream::SetBookmark> ))
  X_CXXMethod(( pick_overload_v<void (v8::ScriptCompiler::ExternalSourceStream::*)(), &v8::ScriptCompiler::ExternalSourceStream::ResetToBookmark> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptCompiler::ExternalSourceStream &(v8::ScriptCompiler::ExternalSourceStream::*)(const v8::ScriptCompiler::ExternalSourceStream &), &v8::ScriptCompiler::ExternalSourceStream::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::StreamedSource::*)(v8::ScriptCompiler::ExternalSourceStream *, v8::ScriptCompiler::StreamedSource::Encoding), &v8::ScriptCompiler::StreamedSource::StreamedSource> ))
//  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::StreamedSource::*)(std::unique_ptr<v8::ScriptCompiler::ExternalSourceStream, std::default_delete<v8::ScriptCompiler::ExternalSourceStream> >, v8::ScriptCompiler::StreamedSource::Encoding), &v8::ScriptCompiler::StreamedSource::StreamedSource> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ScriptCompiler::StreamedSource::*)(), &v8::ScriptCompiler::StreamedSource::~StreamedSource> ))
  X_CXXMethod(( pick_overload_v<v8::internal::ScriptStreamingData *(v8::ScriptCompiler::StreamedSource::*)() const, &v8::ScriptCompiler::StreamedSource::impl> ))
  X_CXXMethod(( pick_overload_v<void (v8::ScriptCompiler::ScriptStreamingTask::*)(), &v8::ScriptCompiler::ScriptStreamingTask::Run> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::UnboundScript> (*)(v8::Isolate *, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason), &v8::ScriptCompiler::CompileUnboundScript> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Script> (*)(v8::Local<v8::Context>, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason), &v8::ScriptCompiler::Compile> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptCompiler::ScriptStreamingTask *(*)(v8::Isolate *, v8::ScriptCompiler::StreamedSource *, v8::ScriptCompiler::CompileOptions), &v8::ScriptCompiler::StartStreamingScript> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Script> (*)(v8::Local<v8::Context>, v8::ScriptCompiler::StreamedSource *, v8::Local<v8::String>, const v8::ScriptOrigin &), &v8::ScriptCompiler::Compile> ))
  X_CXXMethod(( pick_overload_v<unsigned int (*)(), &v8::ScriptCompiler::CachedDataVersionTag> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Module> (*)(v8::Isolate *, v8::ScriptCompiler::Source *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason), &v8::ScriptCompiler::CompileModule> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Function> (*)(v8::Local<v8::Context>, v8::ScriptCompiler::Source *, unsigned long long, v8::Local<v8::String> *, unsigned long long, v8::Local<v8::Object> *, v8::ScriptCompiler::CompileOptions, v8::ScriptCompiler::NoCacheReason), &v8::ScriptCompiler::CompileFunctionInContext> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptCompiler::CachedData *(*)(v8::Local<v8::UnboundScript>), &v8::ScriptCompiler::CreateCodeCache> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptCompiler::CachedData *(*)(v8::Local<v8::UnboundModuleScript>), &v8::ScriptCompiler::CreateCodeCache> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptCompiler::CachedData *(*)(v8::Local<v8::Function>), &v8::ScriptCompiler::CreateCodeCacheForFunction> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::Message::*)() const, &v8::Message::Get> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(v8::Message::*)() const, &v8::Message::GetIsolate> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (v8::Message::*)(v8::Local<v8::Context>) const, &v8::Message::GetSourceLine> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptOrigin (v8::Message::*)() const, &v8::Message::GetScriptOrigin> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Message::*)() const, &v8::Message::GetScriptResourceName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::StackTrace> (v8::Message::*)() const, &v8::Message::GetStackTrace> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<int> (v8::Message::*)(v8::Local<v8::Context>) const, &v8::Message::GetLineNumber> ))
  X_CXXMethod(( pick_overload_v<int (v8::Message::*)() const, &v8::Message::GetStartPosition> ))
  X_CXXMethod(( pick_overload_v<int (v8::Message::*)() const, &v8::Message::GetEndPosition> ))
  X_CXXMethod(( pick_overload_v<int (v8::Message::*)() const, &v8::Message::ErrorLevel> ))
  X_CXXMethod(( pick_overload_v<int (v8::Message::*)() const, &v8::Message::GetStartColumn> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<int> (v8::Message::*)(v8::Local<v8::Context>) const, &v8::Message::GetStartColumn> ))
  X_CXXMethod(( pick_overload_v<int (v8::Message::*)() const, &v8::Message::GetEndColumn> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<int> (v8::Message::*)(v8::Local<v8::Context>) const, &v8::Message::GetEndColumn> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Message::*)() const, &v8::Message::IsSharedCrossOrigin> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Message::*)() const, &v8::Message::IsOpaque> ))
  X_CXXMethod(( pick_overload_v<void (*)(v8::Isolate *, _iobuf *), &v8::Message::PrintCurrentStackTrace> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::StackFrame> (v8::StackTrace::*)(v8::Isolate *, unsigned int) const, &v8::StackTrace::GetFrame> ))
  X_CXXMethod(( pick_overload_v<int (v8::StackTrace::*)() const, &v8::StackTrace::GetFrameCount> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::StackTrace> (*)(v8::Isolate *, int, v8::StackTrace::StackTraceOptions), &v8::StackTrace::CurrentStackTrace> ))
  X_CXXMethod(( pick_overload_v<int (v8::StackFrame::*)() const, &v8::StackFrame::GetLineNumber> ))
  X_CXXMethod(( pick_overload_v<int (v8::StackFrame::*)() const, &v8::StackFrame::GetColumn> ))
  X_CXXMethod(( pick_overload_v<int (v8::StackFrame::*)() const, &v8::StackFrame::GetScriptId> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::StackFrame::*)() const, &v8::StackFrame::GetScriptName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::StackFrame::*)() const, &v8::StackFrame::GetScriptNameOrSourceURL> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::StackFrame::*)() const, &v8::StackFrame::GetFunctionName> ))
  X_CXXMethod(( pick_overload_v<bool (v8::StackFrame::*)() const, &v8::StackFrame::IsEval> ))
  X_CXXMethod(( pick_overload_v<bool (v8::StackFrame::*)() const, &v8::StackFrame::IsConstructor> ))
  X_CXXMethod(( pick_overload_v<bool (v8::StackFrame::*)() const, &v8::StackFrame::IsWasm> ))
  X_CXXMethod(( pick_overload_v<bool (v8::StackFrame::*)() const, &v8::StackFrame::IsUserJavaScript> ))
  X_CXXConstructor(( pick_overload_v<void (v8::RegisterState::*)(), &v8::RegisterState::RegisterState> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (*)(v8::Local<v8::Context>, v8::Local<v8::String>), &v8::JSON::Parse> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (*)(v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::String>), &v8::JSON::Stringify> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ValueSerializer::Delegate::*)(), &v8::ValueSerializer::Delegate::~Delegate> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::Delegate::*)(v8::Local<v8::String>), &v8::ValueSerializer::Delegate::ThrowDataCloneError> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::ValueSerializer::Delegate::*)(v8::Isolate *, v8::Local<v8::Object>), &v8::ValueSerializer::Delegate::WriteHostObject> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<unsigned int> (v8::ValueSerializer::Delegate::*)(v8::Isolate *, v8::Local<v8::SharedArrayBuffer>), &v8::ValueSerializer::Delegate::GetSharedArrayBufferId> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<unsigned int> (v8::ValueSerializer::Delegate::*)(v8::Isolate *, v8::Local<v8::WasmModuleObject>), &v8::ValueSerializer::Delegate::GetWasmModuleTransferId> ))
  X_CXXMethod(( pick_overload_v<void *(v8::ValueSerializer::Delegate::*)(void *, unsigned long long, unsigned long long *), &v8::ValueSerializer::Delegate::ReallocateBufferMemory> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::Delegate::*)(void *), &v8::ValueSerializer::Delegate::FreeBufferMemory> ))
  X_CXXMethod(( pick_overload_v<v8::ValueSerializer::Delegate &(v8::ValueSerializer::Delegate::*)(const v8::ValueSerializer::Delegate &), &v8::ValueSerializer::Delegate::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ValueSerializer::*)(v8::Isolate *), &v8::ValueSerializer::ValueSerializer> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ValueSerializer::*)(v8::Isolate *, v8::ValueSerializer::Delegate *), &v8::ValueSerializer::ValueSerializer> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ValueSerializer::*)(), &v8::ValueSerializer::~ValueSerializer> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::*)(), &v8::ValueSerializer::WriteHeader> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::ValueSerializer::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::ValueSerializer::WriteValue> ))
  X_CXXMethod(( pick_overload_v<std::pair<unsigned char *, unsigned long long> (v8::ValueSerializer::*)(), &v8::ValueSerializer::Release> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::*)(unsigned int, v8::Local<v8::ArrayBuffer>), &v8::ValueSerializer::TransferArrayBuffer> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::*)(bool), &v8::ValueSerializer::SetTreatArrayBufferViewsAsHostObjects> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::*)(unsigned int), &v8::ValueSerializer::WriteUint32> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::*)(unsigned long long), &v8::ValueSerializer::WriteUint64> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::*)(double), &v8::ValueSerializer::WriteDouble> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueSerializer::*)(const void *, unsigned long long), &v8::ValueSerializer::WriteRawBytes> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ValueDeserializer::Delegate::*)(), &v8::ValueDeserializer::Delegate::~Delegate> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (v8::ValueDeserializer::Delegate::*)(v8::Isolate *), &v8::ValueDeserializer::Delegate::ReadHostObject> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::WasmModuleObject> (v8::ValueDeserializer::Delegate::*)(v8::Isolate *, unsigned int), &v8::ValueDeserializer::Delegate::GetWasmModuleFromId> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::SharedArrayBuffer> (v8::ValueDeserializer::Delegate::*)(v8::Isolate *, unsigned int), &v8::ValueDeserializer::Delegate::GetSharedArrayBufferFromId> ))
  X_CXXMethod(( pick_overload_v<v8::ValueDeserializer::Delegate &(v8::ValueDeserializer::Delegate::*)(const v8::ValueDeserializer::Delegate &), &v8::ValueDeserializer::Delegate::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ValueDeserializer::*)(v8::Isolate *, const unsigned char *, unsigned long long), &v8::ValueDeserializer::ValueDeserializer> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ValueDeserializer::*)(v8::Isolate *, const unsigned char *, unsigned long long, v8::ValueDeserializer::Delegate *), &v8::ValueDeserializer::ValueDeserializer> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ValueDeserializer::*)(), &v8::ValueDeserializer::~ValueDeserializer> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::ValueDeserializer::*)(v8::Local<v8::Context>), &v8::ValueDeserializer::ReadHeader> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::ValueDeserializer::*)(v8::Local<v8::Context>), &v8::ValueDeserializer::ReadValue> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueDeserializer::*)(unsigned int, v8::Local<v8::ArrayBuffer>), &v8::ValueDeserializer::TransferArrayBuffer> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueDeserializer::*)(unsigned int, v8::Local<v8::SharedArrayBuffer>), &v8::ValueDeserializer::TransferSharedArrayBuffer> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueDeserializer::*)(bool), &v8::ValueDeserializer::SetSupportsLegacyWireFormat> ))
  X_CXXMethod(( pick_overload_v<void (v8::ValueDeserializer::*)(bool), &v8::ValueDeserializer::SetExpectInlineWasm> ))
  X_CXXMethod(( pick_overload_v<unsigned int (v8::ValueDeserializer::*)() const, &v8::ValueDeserializer::GetWireFormatVersion> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ValueDeserializer::*)(unsigned int *), &v8::ValueDeserializer::ReadUint32> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ValueDeserializer::*)(unsigned long long *), &v8::ValueDeserializer::ReadUint64> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ValueDeserializer::*)(double *), &v8::ValueDeserializer::ReadDouble> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ValueDeserializer::*)(unsigned long long, const void **), &v8::ValueDeserializer::ReadRawBytes> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsUndefined> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsNull> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsNullOrUndefined> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsTrue> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsFalse> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsName> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsString> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsSymbol> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsFunction> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsArray> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsBigInt> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsBoolean> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsNumber> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsExternal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsInt32> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsUint32> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsDate> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsArgumentsObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsBigIntObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsBooleanObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsNumberObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsStringObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsSymbolObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsNativeError> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsRegExp> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsAsyncFunction> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsGeneratorFunction> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsGeneratorObject> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsPromise> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsMap> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsSet> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsMapIterator> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsSetIterator> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsWeakMap> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsWeakSet> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsArrayBuffer> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsArrayBufferView> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsTypedArray> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsUint8Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsUint8ClampedArray> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsInt8Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsUint16Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsInt16Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsUint32Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsInt32Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsFloat32Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsFloat64Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsBigInt64Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsBigUint64Array> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsDataView> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsSharedArrayBuffer> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsProxy> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsWebAssemblyCompiledModule> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsModuleNamespaceObject> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::BigInt> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToBigInt> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Number> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToNumber> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToString> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToDetailString> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToObject> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Integer> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToInteger> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Uint32> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToUint32> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Int32> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToInt32> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Boolean> (v8::Value::*)(v8::Isolate *) const, &v8::Value::ToBoolean> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Uint32> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::ToArrayIndex> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)(v8::Isolate *) const, &v8::Value::BooleanValue> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<double> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::NumberValue> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<long long> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::IntegerValue> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<unsigned int> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::Uint32Value> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<int> (v8::Value::*)(v8::Local<v8::Context>) const, &v8::Value::Int32Value> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Value::*)(v8::Local<v8::Context>, v8::Local<v8::Value>) const, &v8::Value::Equals> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)(v8::Local<v8::Value>) const, &v8::Value::StrictEquals> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)(v8::Local<v8::Value>) const, &v8::Value::SameValue> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::Value::*)(v8::Isolate *), &v8::Value::TypeOf> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Value::*)(v8::Local<v8::Context>, v8::Local<v8::Object>), &v8::Value::InstanceOf> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Boolean::*)() const, &v8::Boolean::Value> ))
  X_CXXMethod(( pick_overload_v<v8::Boolean *(*)(v8::Value *), &v8::Boolean::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *, bool), &v8::Boolean::New> ))
  X_CXXMethod(( pick_overload_v<int (v8::Name::*)(), &v8::Name::GetIdentityHash> ))
  X_CXXMethod(( pick_overload_v<v8::Name *(*)(v8::Value *), &v8::Name::Cast> ))
  X_CXXMethod(( pick_overload_v<int (v8::String::*)() const, &v8::String::Length> ))
  X_CXXMethod(( pick_overload_v<int (v8::String::*)(v8::Isolate *) const, &v8::String::Utf8Length> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)() const, &v8::String::IsOneByte> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)() const, &v8::String::ContainsOnlyOneByte> ))
  X_CXXMethod(( pick_overload_v<int (v8::String::*)(v8::Isolate *, unsigned short *, int, int, int) const, &v8::String::Write> ))
  X_CXXMethod(( pick_overload_v<int (v8::String::*)(v8::Isolate *, unsigned char *, int, int, int) const, &v8::String::WriteOneByte> ))
  X_CXXMethod(( pick_overload_v<int (v8::String::*)(v8::Isolate *, char *, int, int *, int) const, &v8::String::WriteUtf8> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (*)(v8::Isolate *), &v8::String::Empty> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)() const, &v8::String::IsExternal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)() const, &v8::String::IsExternalOneByte> ))
  X_CXXDestructor(( pick_overload_v<void (v8::String::ExternalStringResourceBase::*)(), &v8::String::ExternalStringResourceBase::~ExternalStringResourceBase> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::ExternalStringResourceBase::*)() const, &v8::String::ExternalStringResourceBase::IsCacheable> ))
//  X_CXXConstructor(( pick_overload_v<void (v8::String::ExternalStringResourceBase::*)(), &v8::String::ExternalStringResourceBase::ExternalStringResourceBase> ))
//  X_CXXMethod(( pick_overload_v<void (v8::String::ExternalStringResourceBase::*)(), &v8::String::ExternalStringResourceBase::Dispose> ))
//  X_CXXMethod(( pick_overload_v<void (v8::String::ExternalStringResourceBase::*)() const, &v8::String::ExternalStringResourceBase::Lock> ))
//  X_CXXMethod(( pick_overload_v<void (v8::String::ExternalStringResourceBase::*)() const, &v8::String::ExternalStringResourceBase::Unlock> ))
  X_CXXDestructor(( pick_overload_v<void (v8::String::ExternalStringResource::*)(), &v8::String::ExternalStringResource::~ExternalStringResource> ))
  X_CXXMethod(( pick_overload_v<const unsigned short *(v8::String::ExternalStringResource::*)() const, &v8::String::ExternalStringResource::data> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::String::ExternalStringResource::*)() const, &v8::String::ExternalStringResource::length> ))
//  X_CXXConstructor(( pick_overload_v<void (v8::String::ExternalStringResource::*)(), &v8::String::ExternalStringResource::ExternalStringResource> ))
  X_CXXDestructor(( pick_overload_v<void (v8::String::ExternalOneByteStringResource::*)(), &v8::String::ExternalOneByteStringResource::~ExternalOneByteStringResource> ))
  X_CXXMethod(( pick_overload_v<const char *(v8::String::ExternalOneByteStringResource::*)() const, &v8::String::ExternalOneByteStringResource::data> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::String::ExternalOneByteStringResource::*)() const, &v8::String::ExternalOneByteStringResource::length> ))
//  X_CXXConstructor(( pick_overload_v<void (v8::String::ExternalOneByteStringResource::*)(), &v8::String::ExternalOneByteStringResource::ExternalOneByteStringResource> ))
  X_CXXMethod(( pick_overload_v<v8::String::ExternalStringResourceBase *(v8::String::*)(v8::String::Encoding *) const, &v8::String::GetExternalStringResourceBase> ))
  X_CXXMethod(( pick_overload_v<v8::String::ExternalStringResource *(v8::String::*)() const, &v8::String::GetExternalStringResource> ))
  X_CXXMethod(( pick_overload_v<const v8::String::ExternalOneByteStringResource *(v8::String::*)() const, &v8::String::GetExternalOneByteStringResource> ))
  X_CXXMethod(( pick_overload_v<v8::String *(*)(v8::Value *), &v8::String::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (*)(v8::Isolate *, const char *, v8::NewStringType, int), &v8::String::NewFromUtf8> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (*)(v8::Isolate *, const unsigned char *, v8::NewStringType, int), &v8::String::NewFromOneByte> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (*)(v8::Isolate *, const unsigned short *, v8::NewStringType, int), &v8::String::NewFromTwoByte> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (*)(v8::Isolate *, v8::Local<v8::String>, v8::Local<v8::String>), &v8::String::Concat> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (*)(v8::Isolate *, v8::String::ExternalStringResource *), &v8::String::NewExternalTwoByte> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)(v8::String::ExternalStringResource *), &v8::String::MakeExternal> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (*)(v8::Isolate *, v8::String::ExternalOneByteStringResource *), &v8::String::NewExternalOneByte> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)(v8::String::ExternalOneByteStringResource *), &v8::String::MakeExternal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)(), &v8::String::CanMakeExternal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::String::*)(v8::Local<v8::String>), &v8::String::StringEquals> ))
  X_CXXConstructor(( pick_overload_v<void (v8::String::Utf8Value::*)(v8::Isolate *, v8::Local<v8::Value>), &v8::String::Utf8Value::Utf8Value> ))
  X_CXXDestructor(( pick_overload_v<void (v8::String::Utf8Value::*)(), &v8::String::Utf8Value::~Utf8Value> ))
  X_CXXMethod(( pick_overload_v<char *(v8::String::Utf8Value::*)(), &v8::String::Utf8Value::operator*> ))
  X_CXXMethod(( pick_overload_v<const char *(v8::String::Utf8Value::*)() const, &v8::String::Utf8Value::operator*> ))
  X_CXXMethod(( pick_overload_v<int (v8::String::Utf8Value::*)() const, &v8::String::Utf8Value::length> ))
  X_CXXConstructor(( pick_overload_v<void (v8::String::Value::*)(v8::Isolate *, v8::Local<v8::Value>), &v8::String::Value::Value> ))
  X_CXXDestructor(( pick_overload_v<void (v8::String::Value::*)(), &v8::String::Value::~Value> ))
  X_CXXMethod(( pick_overload_v<unsigned short *(v8::String::Value::*)(), &v8::String::Value::operator*> ))
  X_CXXMethod(( pick_overload_v<const unsigned short *(v8::String::Value::*)() const, &v8::String::Value::operator*> ))
  X_CXXMethod(( pick_overload_v<int (v8::String::Value::*)() const, &v8::String::Value::length> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Symbol::*)() const, &v8::Symbol::Name> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *, v8::Local<v8::String>), &v8::Symbol::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *, v8::Local<v8::String>), &v8::Symbol::For> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *, v8::Local<v8::String>), &v8::Symbol::ForApi> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetAsyncIterator> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetHasInstance> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetIsConcatSpreadable> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetIterator> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetMatch> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetReplace> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetSearch> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetSplit> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetToPrimitive> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetToStringTag> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (*)(v8::Isolate *), &v8::Symbol::GetUnscopables> ))
  X_CXXMethod(( pick_overload_v<v8::Symbol *(*)(v8::Value *), &v8::Symbol::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Private::*)() const, &v8::Private::Name> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Private> (*)(v8::Isolate *, v8::Local<v8::String>), &v8::Private::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Private> (*)(v8::Isolate *, v8::Local<v8::String>), &v8::Private::ForApi> ))
  X_CXXMethod(( pick_overload_v<v8::Private *(*)(v8::Data *), &v8::Private::Cast> ))
  X_CXXMethod(( pick_overload_v<double (v8::Number::*)() const, &v8::Number::Value> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Number> (*)(v8::Isolate *, double), &v8::Number::New> ))
  X_CXXMethod(( pick_overload_v<v8::Number *(*)(v8::Value *), &v8::Number::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (*)(v8::Isolate *, int), &v8::Integer::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (*)(v8::Isolate *, unsigned int), &v8::Integer::NewFromUnsigned> ))
  X_CXXMethod(( pick_overload_v<long long (v8::Integer::*)() const, &v8::Integer::Value> ))
  X_CXXMethod(( pick_overload_v<v8::Integer *(*)(v8::Value *), &v8::Integer::Cast> ))
  X_CXXMethod(( pick_overload_v<int (v8::Int32::*)() const, &v8::Int32::Value> ))
  X_CXXMethod(( pick_overload_v<v8::Int32 *(*)(v8::Value *), &v8::Int32::Cast> ))
  X_CXXMethod(( pick_overload_v<unsigned int (v8::Uint32::*)() const, &v8::Uint32::Value> ))
  X_CXXMethod(( pick_overload_v<v8::Uint32 *(*)(v8::Value *), &v8::Uint32::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::BigInt> (*)(v8::Isolate *, long long), &v8::BigInt::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::BigInt> (*)(v8::Isolate *, unsigned long long), &v8::BigInt::NewFromUnsigned> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::BigInt> (*)(v8::Local<v8::Context>, int, int, const unsigned long long *), &v8::BigInt::NewFromWords> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::BigInt::*)(bool *) const, &v8::BigInt::Uint64Value> ))
  X_CXXMethod(( pick_overload_v<long long (v8::BigInt::*)(bool *) const, &v8::BigInt::Int64Value> ))
  X_CXXMethod(( pick_overload_v<int (v8::BigInt::*)() const, &v8::BigInt::WordCount> ))
  X_CXXMethod(( pick_overload_v<void (v8::BigInt::*)(int *, int *, unsigned long long *) const, &v8::BigInt::ToWordsArray> ))
  X_CXXMethod(( pick_overload_v<v8::BigInt *(*)(v8::Value *), &v8::BigInt::Cast> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Object::*)(v8::Local<v8::Value>, v8::Local<v8::Value>), &v8::Object::Set> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::Value>), &v8::Object::Set> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Object::*)(unsigned int, v8::Local<v8::Value>), &v8::Object::Set> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, unsigned int, v8::Local<v8::Value>), &v8::Object::Set> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>, v8::Local<v8::Value>), &v8::Object::CreateDataProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, unsigned int, v8::Local<v8::Value>), &v8::Object::CreateDataProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>, v8::Local<v8::Value>, v8::PropertyAttribute), &v8::Object::DefineOwnProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>, v8::PropertyDescriptor &), &v8::Object::DefineProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Object::*)(v8::Local<v8::Value>), &v8::Object::Get> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Object::Get> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Object::*)(unsigned int), &v8::Object::Get> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, unsigned int), &v8::Object::Get> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<v8::PropertyAttribute> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Object::GetPropertyAttributes> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::GetOwnPropertyDescriptor> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Object::Has> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Object::Delete> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, unsigned int), &v8::Object::Has> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, unsigned int), &v8::Object::Delete> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>, void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<void> &), v8::MaybeLocal<v8::Value>, v8::AccessControl, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType), &v8::Object::SetAccessor> ))
  X_CXXMethod(( pick_overload_v<void (v8::Object::*)(v8::Local<v8::Name>, v8::Local<v8::Function>, v8::Local<v8::Function>, v8::PropertyAttribute, v8::AccessControl), &v8::Object::SetAccessorProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>, void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<void> &), v8::Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType), &v8::Object::SetNativeDataProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>, void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType), &v8::Object::SetLazyDataProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Private>), &v8::Object::HasPrivate> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Private>, v8::Local<v8::Value>), &v8::Object::SetPrivate> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Private>), &v8::Object::DeletePrivate> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Private>), &v8::Object::GetPrivate> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Array> (v8::Object::*)(v8::Local<v8::Context>), &v8::Object::GetPropertyNames> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Array> (v8::Object::*)(v8::Local<v8::Context>, v8::KeyCollectionMode, v8::PropertyFilter, v8::IndexFilter, v8::KeyConversionMode), &v8::Object::GetPropertyNames> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Array> (v8::Object::*)(v8::Local<v8::Context>), &v8::Object::GetOwnPropertyNames> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Array> (v8::Object::*)(v8::Local<v8::Context>, v8::PropertyFilter, v8::KeyConversionMode), &v8::Object::GetOwnPropertyNames> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Object::*)(), &v8::Object::GetPrototype> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Object::SetPrototype> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (v8::Object::*)(v8::Local<v8::FunctionTemplate>), &v8::Object::FindInstanceInPrototypeChain> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::String> (v8::Object::*)(v8::Local<v8::Context>), &v8::Object::ObjectProtoToString> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::Object::*)(), &v8::Object::GetConstructorName> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::IntegrityLevel), &v8::Object::SetIntegrityLevel> ))
  X_CXXMethod(( pick_overload_v<int (v8::Object::*)(), &v8::Object::InternalFieldCount> ))
  X_CXXMethod(( pick_overload_v<int (*)(const v8::PersistentBase<v8::Object> &), &v8::Object::InternalFieldCount> ))
  X_CXXMethod(( pick_overload_v<int (*)(const v8::TracedGlobal<v8::Object> &), &v8::Object::InternalFieldCount> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Object::*)(int), &v8::Object::GetInternalField> ))
  X_CXXMethod(( pick_overload_v<void (v8::Object::*)(int, v8::Local<v8::Value>), &v8::Object::SetInternalField> ))
  X_CXXMethod(( pick_overload_v<void *(v8::Object::*)(int), &v8::Object::GetAlignedPointerFromInternalField> ))
  X_CXXMethod(( pick_overload_v<void *(*)(const v8::PersistentBase<v8::Object> &, int), &v8::Object::GetAlignedPointerFromInternalField> ))
  X_CXXMethod(( pick_overload_v<void *(*)(const v8::TracedGlobal<v8::Object> &, int), &v8::Object::GetAlignedPointerFromInternalField> ))
  X_CXXMethod(( pick_overload_v<void (v8::Object::*)(int, void *), &v8::Object::SetAlignedPointerInInternalField> ))
  X_CXXMethod(( pick_overload_v<void (v8::Object::*)(int, int *, void **), &v8::Object::SetAlignedPointerInInternalFields> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::HasOwnProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, unsigned int), &v8::Object::HasOwnProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::HasRealNamedProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, unsigned int), &v8::Object::HasRealIndexedProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::HasRealNamedCallbackProperty> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::GetRealNamedPropertyInPrototypeChain> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<v8::PropertyAttribute> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::GetRealNamedPropertyAttributesInPrototypeChain> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::GetRealNamedProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<v8::PropertyAttribute> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Name>), &v8::Object::GetRealNamedPropertyAttributes> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Object::*)(), &v8::Object::HasNamedLookupInterceptor> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Object::*)(), &v8::Object::HasIndexedLookupInterceptor> ))
  X_CXXMethod(( pick_overload_v<int (v8::Object::*)(), &v8::Object::GetIdentityHash> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (v8::Object::*)(), &v8::Object::Clone> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (v8::Object::*)(), &v8::Object::CreationContext> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (*)(const v8::PersistentBase<v8::Object> &), &v8::Object::CreationContext> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Object::*)(), &v8::Object::IsCallable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Object::*)(), &v8::Object::IsConstructor> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value> *), &v8::Object::CallAsFunction> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Object::*)(v8::Local<v8::Context>, int, v8::Local<v8::Value> *), &v8::Object::CallAsConstructor> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(v8::Object::*)(), &v8::Object::GetIsolate> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Array> (v8::Object::*)(bool *), &v8::Object::PreviewEntries> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (*)(v8::Isolate *), &v8::Object::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (*)(v8::Isolate *, v8::Local<v8::Value>, v8::Local<v8::Name> *, v8::Local<v8::Value> *, unsigned long long), &v8::Object::New> ))
  X_CXXMethod(( pick_overload_v<v8::Object *(*)(v8::Value *), &v8::Object::Cast> ))
  X_CXXMethod(( pick_overload_v<unsigned int (v8::Array::*)() const, &v8::Array::Length> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Array> (*)(v8::Isolate *, int), &v8::Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Array> (*)(v8::Isolate *, v8::Local<v8::Value> *, unsigned long long), &v8::Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Array *(*)(v8::Value *), &v8::Array::Cast> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::Map::*)() const, &v8::Map::Size> ))
  X_CXXMethod(( pick_overload_v<void (v8::Map::*)(), &v8::Map::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Map::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Map::Get> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Map> (v8::Map::*)(v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::Value>), &v8::Map::Set> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Map::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Map::Has> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Map::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Map::Delete> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Array> (v8::Map::*)() const, &v8::Map::AsArray> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Map> (*)(v8::Isolate *), &v8::Map::New> ))
  X_CXXMethod(( pick_overload_v<v8::Map *(*)(v8::Value *), &v8::Map::Cast> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::Set::*)() const, &v8::Set::Size> ))
  X_CXXMethod(( pick_overload_v<void (v8::Set::*)(), &v8::Set::Clear> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Set> (v8::Set::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Set::Add> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Set::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Set::Has> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Set::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Set::Delete> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Array> (v8::Set::*)() const, &v8::Set::AsArray> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Set> (*)(v8::Isolate *), &v8::Set::New> ))
  X_CXXMethod(( pick_overload_v<v8::Set *(*)(v8::Value *), &v8::Set::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Function> (*)(v8::Local<v8::Context>, void (*)(const v8::FunctionCallbackInfo<v8::Value> &), v8::Local<v8::Value>, int, v8::ConstructorBehavior, v8::SideEffectType), &v8::Function::New> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (v8::Function::*)(v8::Local<v8::Context>, int, v8::Local<v8::Value> *) const, &v8::Function::NewInstance> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (v8::Function::*)(v8::Local<v8::Context>) const, &v8::Function::NewInstance> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (v8::Function::*)(v8::Local<v8::Context>, int, v8::Local<v8::Value> *, v8::SideEffectType) const, &v8::Function::NewInstanceWithSideEffectType> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::Function::*)(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value> *), &v8::Function::Call> ))
  X_CXXMethod(( pick_overload_v<void (v8::Function::*)(v8::Local<v8::String>), &v8::Function::SetName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Function::*)() const, &v8::Function::GetName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Function::*)() const, &v8::Function::GetInferredName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Function::*)() const, &v8::Function::GetDebugName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Function::*)() const, &v8::Function::GetDisplayName> ))
  X_CXXMethod(( pick_overload_v<int (v8::Function::*)() const, &v8::Function::GetScriptLineNumber> ))
  X_CXXMethod(( pick_overload_v<int (v8::Function::*)() const, &v8::Function::GetScriptColumnNumber> ))
  X_CXXMethod(( pick_overload_v<int (v8::Function::*)() const, &v8::Function::ScriptId> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Function::*)() const, &v8::Function::GetBoundFunction> ))
  X_CXXMethod(( pick_overload_v<v8::ScriptOrigin (v8::Function::*)() const, &v8::Function::GetScriptOrigin> ))
  X_CXXMethod(( pick_overload_v<v8::Function *(*)(v8::Value *), &v8::Function::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Promise::Resolver> (*)(v8::Local<v8::Context>), &v8::Promise::Resolver::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Promise> (v8::Promise::Resolver::*)(), &v8::Promise::Resolver::GetPromise> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Promise::Resolver::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Promise::Resolver::Resolve> ))
  X_CXXMethod(( pick_overload_v<v8::Maybe<bool> (v8::Promise::Resolver::*)(v8::Local<v8::Context>, v8::Local<v8::Value>), &v8::Promise::Resolver::Reject> ))
  X_CXXMethod(( pick_overload_v<v8::Promise::Resolver *(*)(v8::Value *), &v8::Promise::Resolver::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Promise> (v8::Promise::*)(v8::Local<v8::Context>, v8::Local<v8::Function>), &v8::Promise::Catch> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Promise> (v8::Promise::*)(v8::Local<v8::Context>, v8::Local<v8::Function>), &v8::Promise::Then> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Promise> (v8::Promise::*)(v8::Local<v8::Context>, v8::Local<v8::Function>, v8::Local<v8::Function>), &v8::Promise::Then> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Promise::*)(), &v8::Promise::HasHandler> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Promise::*)(), &v8::Promise::Result> ))
  X_CXXMethod(( pick_overload_v<v8::Promise::PromiseState (v8::Promise::*)(), &v8::Promise::State> ))
  X_CXXMethod(( pick_overload_v<void (v8::Promise::*)(), &v8::Promise::MarkAsHandled> ))
  X_CXXMethod(( pick_overload_v<v8::Promise *(*)(v8::Value *), &v8::Promise::Cast> ))
  X_CXXConstructor(( pick_overload_v<void (v8::PropertyDescriptor::*)(), &v8::PropertyDescriptor::PropertyDescriptor> ))
  X_CXXConstructor(( pick_overload_v<void (v8::PropertyDescriptor::*)(v8::Local<v8::Value>), &v8::PropertyDescriptor::PropertyDescriptor> ))
  X_CXXConstructor(( pick_overload_v<void (v8::PropertyDescriptor::*)(v8::Local<v8::Value>, bool), &v8::PropertyDescriptor::PropertyDescriptor> ))
  X_CXXConstructor(( pick_overload_v<void (v8::PropertyDescriptor::*)(v8::Local<v8::Value>, v8::Local<v8::Value>), &v8::PropertyDescriptor::PropertyDescriptor> ))
  X_CXXDestructor(( pick_overload_v<void (v8::PropertyDescriptor::*)(), &v8::PropertyDescriptor::~PropertyDescriptor> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::value> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::has_value> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::get> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::has_get> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::set> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::has_set> ))
  X_CXXMethod(( pick_overload_v<void (v8::PropertyDescriptor::*)(bool), &v8::PropertyDescriptor::set_enumerable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::enumerable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::has_enumerable> ))
  X_CXXMethod(( pick_overload_v<void (v8::PropertyDescriptor::*)(bool), &v8::PropertyDescriptor::set_configurable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::configurable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::has_configurable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::writable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::has_writable> ))
  X_CXXMethod(( pick_overload_v<v8::PropertyDescriptor::PrivateData *(v8::PropertyDescriptor::*)() const, &v8::PropertyDescriptor::get_private> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Proxy::*)(), &v8::Proxy::GetTarget> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Proxy::*)(), &v8::Proxy::GetHandler> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Proxy::*)(), &v8::Proxy::IsRevoked> ))
  X_CXXMethod(( pick_overload_v<void (v8::Proxy::*)(), &v8::Proxy::Revoke> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Proxy> (*)(v8::Local<v8::Context>, v8::Local<v8::Object>, v8::Local<v8::Object>), &v8::Proxy::New> ))
  X_CXXMethod(( pick_overload_v<v8::Proxy *(*)(v8::Value *), &v8::Proxy::Cast> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MemorySpan<const unsigned char>::*)(), &v8::MemorySpan<const unsigned char>::MemorySpan> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MemorySpan<const unsigned char>::*)(const unsigned char *, unsigned long long), &v8::MemorySpan<const unsigned char>::MemorySpan> ))
  X_CXXMethod(( pick_overload_v<const unsigned char *(v8::MemorySpan<const unsigned char>::*)() const, &v8::MemorySpan<const unsigned char>::data> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::MemorySpan<const unsigned char>::*)() const, &v8::MemorySpan<const unsigned char>::size> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MemorySpan<const unsigned char>::*)(const v8::MemorySpan<const unsigned char> &), &v8::MemorySpan<const unsigned char>::MemorySpan> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MemorySpan<const unsigned char>::*)(v8::MemorySpan<const unsigned char> &&), &v8::MemorySpan<const unsigned char>::MemorySpan> ))
//  X_CXXConstructor(( pick_overload_v<void (v8::OwnedBuffer::*)(std::unique_ptr<unsigned char const[], std::default_delete<unsigned char const[]> >, unsigned long long), &v8::OwnedBuffer::OwnedBuffer> ))
  X_CXXConstructor(( pick_overload_v<void (v8::OwnedBuffer::*)(), &v8::OwnedBuffer::OwnedBuffer> ))
  X_CXXConstructor(( pick_overload_v<void (v8::OwnedBuffer::*)(v8::OwnedBuffer &&), &v8::OwnedBuffer::OwnedBuffer> ))
  X_CXXMethod(( pick_overload_v<v8::OwnedBuffer &(v8::OwnedBuffer::*)(v8::OwnedBuffer &&), &v8::OwnedBuffer::operator=> ))
  X_CXXDestructor(( pick_overload_v<void (v8::OwnedBuffer::*)(), &v8::OwnedBuffer::~OwnedBuffer> ))
  X_CXXMethod(( pick_overload_v<v8::OwnedBuffer (v8::CompiledWasmModule::*)(), &v8::CompiledWasmModule::Serialize> ))
  X_CXXMethod(( pick_overload_v<v8::MemorySpan<const unsigned char> (v8::CompiledWasmModule::*)(), &v8::CompiledWasmModule::GetWireBytesRef> ))
  X_CXXConstructor(( pick_overload_v<void (v8::CompiledWasmModule::*)(const v8::CompiledWasmModule &), &v8::CompiledWasmModule::CompiledWasmModule> ))
  X_CXXConstructor(( pick_overload_v<void (v8::CompiledWasmModule::*)(v8::CompiledWasmModule &&), &v8::CompiledWasmModule::CompiledWasmModule> ))
  X_CXXDestructor(( pick_overload_v<void (v8::CompiledWasmModule::*)(), &v8::CompiledWasmModule::~CompiledWasmModule> ))
  X_CXXConstructor(( pick_overload_v<void (v8::WasmModuleObject::TransferrableModule::*)(v8::WasmModuleObject::TransferrableModule &&), &v8::WasmModuleObject::TransferrableModule::TransferrableModule> ))
  X_CXXMethod(( pick_overload_v<v8::WasmModuleObject::TransferrableModule &(v8::WasmModuleObject::TransferrableModule::*)(v8::WasmModuleObject::TransferrableModule &&), &v8::WasmModuleObject::TransferrableModule::operator=> ))
  X_CXXDestructor(( pick_overload_v<void (v8::WasmModuleObject::TransferrableModule::*)(), &v8::WasmModuleObject::TransferrableModule::~TransferrableModule> ))
  X_CXXMethod(( pick_overload_v<v8::WasmModuleObject::TransferrableModule (v8::WasmModuleObject::*)(), &v8::WasmModuleObject::GetTransferrableModule> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::WasmModuleObject> (*)(v8::Isolate *, const v8::WasmModuleObject::TransferrableModule &), &v8::WasmModuleObject::FromTransferrableModule> ))
  X_CXXMethod(( pick_overload_v<v8::CompiledWasmModule (v8::WasmModuleObject::*)(), &v8::WasmModuleObject::GetCompiledModule> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::WasmModuleObject> (*)(v8::Isolate *, v8::MemorySpan<const unsigned char>, v8::MemorySpan<const unsigned char>), &v8::WasmModuleObject::DeserializeOrCompile> ))
  X_CXXMethod(( pick_overload_v<v8::WasmModuleObject *(*)(v8::Value *), &v8::WasmModuleObject::Cast> ))
  X_CXXDestructor(( pick_overload_v<void (v8::WasmStreaming::Client::*)(), &v8::WasmStreaming::Client::~Client> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmStreaming::Client::*)(v8::CompiledWasmModule), &v8::WasmStreaming::Client::OnModuleCompiled> ))
  X_CXXMethod(( pick_overload_v<v8::WasmStreaming::Client &(v8::WasmStreaming::Client::*)(const v8::WasmStreaming::Client &), &v8::WasmStreaming::Client::operator=> ))
//  X_CXXConstructor(( pick_overload_v<void (v8::WasmStreaming::*)(std::unique_ptr<v8::WasmStreaming::WasmStreamingImpl, std::default_delete<v8::WasmStreaming::WasmStreamingImpl> >), &v8::WasmStreaming::WasmStreaming> ))
  X_CXXDestructor(( pick_overload_v<void (v8::WasmStreaming::*)(), &v8::WasmStreaming::~WasmStreaming> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmStreaming::*)(const unsigned char *, unsigned long long), &v8::WasmStreaming::OnBytesReceived> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmStreaming::*)(), &v8::WasmStreaming::Finish> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmStreaming::*)(v8::MaybeLocal<v8::Value>), &v8::WasmStreaming::Abort> ))
  X_CXXMethod(( pick_overload_v<bool (v8::WasmStreaming::*)(const unsigned char *, unsigned long long), &v8::WasmStreaming::SetCompiledModuleBytes> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmStreaming::*)(std::shared_ptr<v8::WasmStreaming::Client>), &v8::WasmStreaming::SetClient> ))
  X_CXXMethod(( pick_overload_v<std::shared_ptr<v8::WasmStreaming> (*)(v8::Isolate *, v8::Local<v8::Value>), &v8::WasmStreaming::Unpack> ))
  X_CXXConstructor(( pick_overload_v<void (v8::WasmModuleObjectBuilderStreaming::*)(v8::Isolate *), &v8::WasmModuleObjectBuilderStreaming::WasmModuleObjectBuilderStreaming> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmModuleObjectBuilderStreaming::*)(const unsigned char *, unsigned long long), &v8::WasmModuleObjectBuilderStreaming::OnBytesReceived> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmModuleObjectBuilderStreaming::*)(), &v8::WasmModuleObjectBuilderStreaming::Finish> ))
  X_CXXMethod(( pick_overload_v<void (v8::WasmModuleObjectBuilderStreaming::*)(v8::MaybeLocal<v8::Value>), &v8::WasmModuleObjectBuilderStreaming::Abort> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Promise> (v8::WasmModuleObjectBuilderStreaming::*)(), &v8::WasmModuleObjectBuilderStreaming::GetPromise> ))
  X_CXXDestructor(( pick_overload_v<void (v8::WasmModuleObjectBuilderStreaming::*)(), &v8::WasmModuleObjectBuilderStreaming::~WasmModuleObjectBuilderStreaming> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ArrayBuffer::Allocator::*)(), &v8::ArrayBuffer::Allocator::~Allocator> ))
  X_CXXMethod(( pick_overload_v<void *(v8::ArrayBuffer::Allocator::*)(unsigned long long), &v8::ArrayBuffer::Allocator::Allocate> ))
  X_CXXMethod(( pick_overload_v<void *(v8::ArrayBuffer::Allocator::*)(unsigned long long), &v8::ArrayBuffer::Allocator::AllocateUninitialized> ))
  X_CXXMethod(( pick_overload_v<void (v8::ArrayBuffer::Allocator::*)(void *, unsigned long long), &v8::ArrayBuffer::Allocator::Free> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer::Allocator *(*)(), &v8::ArrayBuffer::Allocator::NewDefaultAllocator> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer::Allocator &(v8::ArrayBuffer::Allocator::*)(const v8::ArrayBuffer::Allocator &), &v8::ArrayBuffer::Allocator::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ArrayBuffer::Contents::*)(), &v8::ArrayBuffer::Contents::Contents> ))
  X_CXXMethod(( pick_overload_v<void *(v8::ArrayBuffer::Contents::*)() const, &v8::ArrayBuffer::Contents::AllocationBase> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ArrayBuffer::Contents::*)() const, &v8::ArrayBuffer::Contents::AllocationLength> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer::Allocator::AllocationMode (v8::ArrayBuffer::Contents::*)() const, &v8::ArrayBuffer::Contents::AllocationMode> ))
  X_CXXMethod(( pick_overload_v<void *(v8::ArrayBuffer::Contents::*)() const, &v8::ArrayBuffer::Contents::Data> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ArrayBuffer::Contents::*)() const, &v8::ArrayBuffer::Contents::ByteLength> ))
  X_CXXMethod(( pick_overload_v<void (*(v8::ArrayBuffer::Contents::*)() const)(void *, unsigned long long, void *), &v8::ArrayBuffer::Contents::Deleter> ))
  X_CXXMethod(( pick_overload_v<void *(v8::ArrayBuffer::Contents::*)() const, &v8::ArrayBuffer::Contents::DeleterData> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ArrayBuffer::*)() const, &v8::ArrayBuffer::ByteLength> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::ArrayBuffer> (*)(v8::Isolate *, unsigned long long), &v8::ArrayBuffer::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::ArrayBuffer> (*)(v8::Isolate *, void *, unsigned long long, v8::ArrayBufferCreationMode), &v8::ArrayBuffer::New> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ArrayBuffer::*)() const, &v8::ArrayBuffer::IsExternal> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ArrayBuffer::*)() const, &v8::ArrayBuffer::IsDetachable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ArrayBuffer::*)() const, &v8::ArrayBuffer::IsNeuterable> ))
  X_CXXMethod(( pick_overload_v<void (v8::ArrayBuffer::*)(), &v8::ArrayBuffer::Detach> ))
  X_CXXMethod(( pick_overload_v<void (v8::ArrayBuffer::*)(), &v8::ArrayBuffer::Neuter> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer::Contents (v8::ArrayBuffer::*)(), &v8::ArrayBuffer::Externalize> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer::Contents (v8::ArrayBuffer::*)(), &v8::ArrayBuffer::GetContents> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer *(*)(v8::Value *), &v8::ArrayBuffer::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::ArrayBuffer> (v8::ArrayBufferView::*)(), &v8::ArrayBufferView::Buffer> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ArrayBufferView::*)(), &v8::ArrayBufferView::ByteOffset> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ArrayBufferView::*)(), &v8::ArrayBufferView::ByteLength> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ArrayBufferView::*)(void *, unsigned long long), &v8::ArrayBufferView::CopyContents> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ArrayBufferView::*)() const, &v8::ArrayBufferView::HasBuffer> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBufferView *(*)(v8::Value *), &v8::ArrayBufferView::Cast> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::TypedArray::*)(), &v8::TypedArray::Length> ))
  X_CXXMethod(( pick_overload_v<v8::TypedArray *(*)(v8::Value *), &v8::TypedArray::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint8Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint8Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint8Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint8Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Uint8Array *(*)(v8::Value *), &v8::Uint8Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint8ClampedArray> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint8ClampedArray::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint8ClampedArray> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint8ClampedArray::New> ))
  X_CXXMethod(( pick_overload_v<v8::Uint8ClampedArray *(*)(v8::Value *), &v8::Uint8ClampedArray::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Int8Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Int8Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Int8Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Int8Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Int8Array *(*)(v8::Value *), &v8::Int8Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint16Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint16Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint16Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint16Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Uint16Array *(*)(v8::Value *), &v8::Uint16Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Int16Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Int16Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Int16Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Int16Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Int16Array *(*)(v8::Value *), &v8::Int16Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint32Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint32Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Uint32Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Uint32Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Uint32Array *(*)(v8::Value *), &v8::Uint32Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Int32Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Int32Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Int32Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Int32Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Int32Array *(*)(v8::Value *), &v8::Int32Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Float32Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Float32Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Float32Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Float32Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Float32Array *(*)(v8::Value *), &v8::Float32Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Float64Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::Float64Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Float64Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::Float64Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Float64Array *(*)(v8::Value *), &v8::Float64Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::BigInt64Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::BigInt64Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::BigInt64Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::BigInt64Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::BigInt64Array *(*)(v8::Value *), &v8::BigInt64Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::BigUint64Array> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::BigUint64Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::BigUint64Array> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::BigUint64Array::New> ))
  X_CXXMethod(( pick_overload_v<v8::BigUint64Array *(*)(v8::Value *), &v8::BigUint64Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::DataView> (*)(v8::Local<v8::ArrayBuffer>, unsigned long long, unsigned long long), &v8::DataView::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::DataView> (*)(v8::Local<v8::SharedArrayBuffer>, unsigned long long, unsigned long long), &v8::DataView::New> ))
  X_CXXMethod(( pick_overload_v<v8::DataView *(*)(v8::Value *), &v8::DataView::Cast> ))
  X_CXXConstructor(( pick_overload_v<void (v8::SharedArrayBuffer::Contents::*)(), &v8::SharedArrayBuffer::Contents::Contents> ))
  X_CXXMethod(( pick_overload_v<void *(v8::SharedArrayBuffer::Contents::*)() const, &v8::SharedArrayBuffer::Contents::AllocationBase> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::SharedArrayBuffer::Contents::*)() const, &v8::SharedArrayBuffer::Contents::AllocationLength> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer::Allocator::AllocationMode (v8::SharedArrayBuffer::Contents::*)() const, &v8::SharedArrayBuffer::Contents::AllocationMode> ))
  X_CXXMethod(( pick_overload_v<void *(v8::SharedArrayBuffer::Contents::*)() const, &v8::SharedArrayBuffer::Contents::Data> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::SharedArrayBuffer::Contents::*)() const, &v8::SharedArrayBuffer::Contents::ByteLength> ))
  X_CXXMethod(( pick_overload_v<void (*(v8::SharedArrayBuffer::Contents::*)() const)(void *, unsigned long long, void *), &v8::SharedArrayBuffer::Contents::Deleter> ))
  X_CXXMethod(( pick_overload_v<void *(v8::SharedArrayBuffer::Contents::*)() const, &v8::SharedArrayBuffer::Contents::DeleterData> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::SharedArrayBuffer::*)() const, &v8::SharedArrayBuffer::ByteLength> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::SharedArrayBuffer> (*)(v8::Isolate *, unsigned long long), &v8::SharedArrayBuffer::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::SharedArrayBuffer> (*)(v8::Isolate *, void *, unsigned long long, v8::ArrayBufferCreationMode), &v8::SharedArrayBuffer::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::SharedArrayBuffer> (*)(v8::Isolate *, const v8::SharedArrayBuffer::Contents &, v8::ArrayBufferCreationMode), &v8::SharedArrayBuffer::New> ))
  X_CXXMethod(( pick_overload_v<bool (v8::SharedArrayBuffer::*)() const, &v8::SharedArrayBuffer::IsExternal> ))
  X_CXXMethod(( pick_overload_v<v8::SharedArrayBuffer::Contents (v8::SharedArrayBuffer::*)(), &v8::SharedArrayBuffer::Externalize> ))
  X_CXXMethod(( pick_overload_v<v8::SharedArrayBuffer::Contents (v8::SharedArrayBuffer::*)(), &v8::SharedArrayBuffer::GetContents> ))
  X_CXXMethod(( pick_overload_v<v8::SharedArrayBuffer *(*)(v8::Value *), &v8::SharedArrayBuffer::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (*)(v8::Local<v8::Context>, double), &v8::Date::New> ))
  X_CXXMethod(( pick_overload_v<double (v8::Date::*)() const, &v8::Date::ValueOf> ))
  X_CXXMethod(( pick_overload_v<v8::Date *(*)(v8::Value *), &v8::Date::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, double), &v8::NumberObject::New> ))
  X_CXXMethod(( pick_overload_v<double (v8::NumberObject::*)() const, &v8::NumberObject::ValueOf> ))
  X_CXXMethod(( pick_overload_v<v8::NumberObject *(*)(v8::Value *), &v8::NumberObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, long long), &v8::BigIntObject::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::BigInt> (v8::BigIntObject::*)() const, &v8::BigIntObject::ValueOf> ))
  X_CXXMethod(( pick_overload_v<v8::BigIntObject *(*)(v8::Value *), &v8::BigIntObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, bool), &v8::BooleanObject::New> ))
  X_CXXMethod(( pick_overload_v<bool (v8::BooleanObject::*)() const, &v8::BooleanObject::ValueOf> ))
  X_CXXMethod(( pick_overload_v<v8::BooleanObject *(*)(v8::Value *), &v8::BooleanObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, v8::Local<v8::String>), &v8::StringObject::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::StringObject::*)() const, &v8::StringObject::ValueOf> ))
  X_CXXMethod(( pick_overload_v<v8::StringObject *(*)(v8::Value *), &v8::StringObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Isolate *, v8::Local<v8::Symbol>), &v8::SymbolObject::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Symbol> (v8::SymbolObject::*)() const, &v8::SymbolObject::ValueOf> ))
  X_CXXMethod(( pick_overload_v<v8::SymbolObject *(*)(v8::Value *), &v8::SymbolObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::RegExp> (*)(v8::Local<v8::Context>, v8::Local<v8::String>, v8::RegExp::Flags), &v8::RegExp::New> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (v8::RegExp::*)() const, &v8::RegExp::GetSource> ))
  X_CXXMethod(( pick_overload_v<v8::RegExp::Flags (v8::RegExp::*)() const, &v8::RegExp::GetFlags> ))
  X_CXXMethod(( pick_overload_v<v8::RegExp *(*)(v8::Value *), &v8::RegExp::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::External> (*)(v8::Isolate *, void *), &v8::External::New> ))
  X_CXXMethod(( pick_overload_v<v8::External *(*)(v8::Value *), &v8::External::Cast> ))
  X_CXXMethod(( pick_overload_v<void *(v8::External::*)() const, &v8::External::Value> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Local<v8::Name>, v8::Local<v8::Data>, v8::PropertyAttribute), &v8::Template::Set> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Local<v8::Private>, v8::Local<v8::Data>, v8::PropertyAttribute), &v8::Template::SetPrivate> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Isolate *, const char *, v8::Local<v8::Data>), &v8::Template::Set> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Local<v8::Name>, v8::Local<v8::FunctionTemplate>, v8::Local<v8::FunctionTemplate>, v8::PropertyAttribute, v8::AccessControl), &v8::Template::SetAccessorProperty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Local<v8::String>, void (*)(v8::Local<v8::String>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::String>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<void> &), v8::Local<v8::Value>, v8::PropertyAttribute, v8::Local<v8::AccessorSignature>, v8::AccessControl, v8::SideEffectType, v8::SideEffectType), &v8::Template::SetNativeDataProperty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Local<v8::Name>, void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<void> &), v8::Local<v8::Value>, v8::PropertyAttribute, v8::Local<v8::AccessorSignature>, v8::AccessControl, v8::SideEffectType, v8::SideEffectType), &v8::Template::SetNativeDataProperty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Local<v8::Name>, void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::PropertyAttribute, v8::SideEffectType, v8::SideEffectType), &v8::Template::SetLazyDataProperty> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Local<v8::Name>, v8::Intrinsic, v8::PropertyAttribute), &v8::Template::SetIntrinsicDataProperty> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::FunctionTemplate> (*)(v8::Isolate *, void (*)(const v8::FunctionCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::Local<v8::Signature>, int, v8::ConstructorBehavior, v8::SideEffectType), &v8::FunctionTemplate::New> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::FunctionTemplate> (*)(v8::Isolate *, unsigned long long), &v8::FunctionTemplate::FromSnapshot> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::FunctionTemplate> (*)(v8::Isolate *, void (*)(const v8::FunctionCallbackInfo<v8::Value> &), v8::Local<v8::Private>, v8::Local<v8::Value>, v8::Local<v8::Signature>, int, v8::SideEffectType), &v8::FunctionTemplate::NewWithCache> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Function> (v8::FunctionTemplate::*)(v8::Local<v8::Context>), &v8::FunctionTemplate::GetFunction> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (v8::FunctionTemplate::*)(), &v8::FunctionTemplate::NewRemoteInstance> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(void (*)(const v8::FunctionCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::SideEffectType), &v8::FunctionTemplate::SetCallHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(int), &v8::FunctionTemplate::SetLength> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::ObjectTemplate> (v8::FunctionTemplate::*)(), &v8::FunctionTemplate::InstanceTemplate> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(v8::Local<v8::FunctionTemplate>), &v8::FunctionTemplate::Inherit> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::ObjectTemplate> (v8::FunctionTemplate::*)(), &v8::FunctionTemplate::PrototypeTemplate> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(v8::Local<v8::FunctionTemplate>), &v8::FunctionTemplate::SetPrototypeProviderTemplate> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(v8::Local<v8::String>), &v8::FunctionTemplate::SetClassName> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(bool), &v8::FunctionTemplate::SetAcceptAnyReceiver> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(), &v8::FunctionTemplate::ReadOnlyPrototype> ))
  X_CXXMethod(( pick_overload_v<void (v8::FunctionTemplate::*)(), &v8::FunctionTemplate::RemovePrototype> ))
  X_CXXMethod(( pick_overload_v<bool (v8::FunctionTemplate::*)(v8::Local<v8::Value>), &v8::FunctionTemplate::HasInstance> ))
  X_CXXMethod(( pick_overload_v<v8::FunctionTemplate *(*)(v8::Data *), &v8::FunctionTemplate::Cast> ))
  X_CXXConstructor(( pick_overload_v<void (v8::NamedPropertyHandlerConfiguration::*)(void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Integer> &), void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Boolean> &), void (*)(const v8::PropertyCallbackInfo<v8::Array> &), void (*)(v8::Local<v8::Name>, const v8::PropertyDescriptor &, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::PropertyHandlerFlags), &v8::NamedPropertyHandlerConfiguration::NamedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::NamedPropertyHandlerConfiguration::*)(void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Integer> &), void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Boolean> &), void (*)(const v8::PropertyCallbackInfo<v8::Array> &), v8::Local<v8::Value>, v8::PropertyHandlerFlags), &v8::NamedPropertyHandlerConfiguration::NamedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::NamedPropertyHandlerConfiguration::*)(void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Boolean> &), void (*)(const v8::PropertyCallbackInfo<v8::Array> &), void (*)(v8::Local<v8::Name>, const v8::PropertyDescriptor &, const v8::PropertyCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::PropertyHandlerFlags), &v8::NamedPropertyHandlerConfiguration::NamedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::NamedPropertyHandlerConfiguration::*)(const v8::NamedPropertyHandlerConfiguration &), &v8::NamedPropertyHandlerConfiguration::NamedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::NamedPropertyHandlerConfiguration::*)(v8::NamedPropertyHandlerConfiguration &&), &v8::NamedPropertyHandlerConfiguration::NamedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::IndexedPropertyHandlerConfiguration::*)(void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Integer> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Boolean> &), void (*)(const v8::PropertyCallbackInfo<v8::Array> &), void (*)(unsigned int, const v8::PropertyDescriptor &, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::PropertyHandlerFlags), &v8::IndexedPropertyHandlerConfiguration::IndexedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::IndexedPropertyHandlerConfiguration::*)(void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Integer> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Boolean> &), void (*)(const v8::PropertyCallbackInfo<v8::Array> &), v8::Local<v8::Value>, v8::PropertyHandlerFlags), &v8::IndexedPropertyHandlerConfiguration::IndexedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::IndexedPropertyHandlerConfiguration::*)(void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Boolean> &), void (*)(const v8::PropertyCallbackInfo<v8::Array> &), void (*)(unsigned int, const v8::PropertyDescriptor &, const v8::PropertyCallbackInfo<v8::Value> &), v8::Local<v8::Value>, v8::PropertyHandlerFlags), &v8::IndexedPropertyHandlerConfiguration::IndexedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::IndexedPropertyHandlerConfiguration::*)(const v8::IndexedPropertyHandlerConfiguration &), &v8::IndexedPropertyHandlerConfiguration::IndexedPropertyHandlerConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::IndexedPropertyHandlerConfiguration::*)(v8::IndexedPropertyHandlerConfiguration &&), &v8::IndexedPropertyHandlerConfiguration::IndexedPropertyHandlerConfiguration> ))
  X_CXXDestructor(( pick_overload_v<void (v8::IndexedPropertyHandlerConfiguration::*)(), &v8::IndexedPropertyHandlerConfiguration::~IndexedPropertyHandlerConfiguration> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::ObjectTemplate> (*)(v8::Isolate *, v8::Local<v8::FunctionTemplate>), &v8::ObjectTemplate::New> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::ObjectTemplate> (*)(v8::Isolate *, unsigned long long), &v8::ObjectTemplate::FromSnapshot> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (v8::ObjectTemplate::*)(v8::Local<v8::Context>), &v8::ObjectTemplate::NewInstance> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(v8::Local<v8::String>, void (*)(v8::Local<v8::String>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::String>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<void> &), v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute, v8::Local<v8::AccessorSignature>, v8::SideEffectType, v8::SideEffectType), &v8::ObjectTemplate::SetAccessor> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(v8::Local<v8::Name>, void (*)(v8::Local<v8::Name>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(v8::Local<v8::Name>, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<void> &), v8::Local<v8::Value>, v8::AccessControl, v8::PropertyAttribute, v8::Local<v8::AccessorSignature>, v8::SideEffectType, v8::SideEffectType), &v8::ObjectTemplate::SetAccessor> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(const v8::NamedPropertyHandlerConfiguration &), &v8::ObjectTemplate::SetHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, v8::Local<v8::Value>, const v8::PropertyCallbackInfo<v8::Value> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Integer> &), void (*)(unsigned int, const v8::PropertyCallbackInfo<v8::Boolean> &), void (*)(const v8::PropertyCallbackInfo<v8::Array> &), v8::Local<v8::Value>), &v8::ObjectTemplate::SetIndexedPropertyHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(const v8::IndexedPropertyHandlerConfiguration &), &v8::ObjectTemplate::SetHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(void (*)(const v8::FunctionCallbackInfo<v8::Value> &), v8::Local<v8::Value>), &v8::ObjectTemplate::SetCallAsFunctionHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(), &v8::ObjectTemplate::MarkAsUndetectable> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(bool (*)(v8::Local<v8::Context>, v8::Local<v8::Object>, v8::Local<v8::Value>), v8::Local<v8::Value>), &v8::ObjectTemplate::SetAccessCheckCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(bool (*)(v8::Local<v8::Context>, v8::Local<v8::Object>, v8::Local<v8::Value>), const v8::NamedPropertyHandlerConfiguration &, const v8::IndexedPropertyHandlerConfiguration &, v8::Local<v8::Value>), &v8::ObjectTemplate::SetAccessCheckCallbackAndHandler> ))
  X_CXXMethod(( pick_overload_v<int (v8::ObjectTemplate::*)(), &v8::ObjectTemplate::InternalFieldCount> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(int), &v8::ObjectTemplate::SetInternalFieldCount> ))
  X_CXXMethod(( pick_overload_v<bool (v8::ObjectTemplate::*)(), &v8::ObjectTemplate::IsImmutableProto> ))
  X_CXXMethod(( pick_overload_v<void (v8::ObjectTemplate::*)(), &v8::ObjectTemplate::SetImmutableProto> ))
  X_CXXMethod(( pick_overload_v<v8::ObjectTemplate *(*)(v8::Data *), &v8::ObjectTemplate::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Signature> (*)(v8::Isolate *, v8::Local<v8::FunctionTemplate>), &v8::Signature::New> ))
  X_CXXMethod(( pick_overload_v<v8::Signature *(*)(v8::Data *), &v8::Signature::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::AccessorSignature> (*)(v8::Isolate *, v8::Local<v8::FunctionTemplate>), &v8::AccessorSignature::New> ))
  X_CXXMethod(( pick_overload_v<v8::AccessorSignature *(*)(v8::Data *), &v8::AccessorSignature::Cast> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Extension::*)(const char *, const char *, int, const char **, int), &v8::Extension::Extension> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Extension::*)(), &v8::Extension::~Extension> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::FunctionTemplate> (v8::Extension::*)(v8::Isolate *, v8::Local<v8::String>), &v8::Extension::GetNativeFunctionTemplate> ))
  X_CXXMethod(( pick_overload_v<const char *(v8::Extension::*)() const, &v8::Extension::name> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::Extension::*)() const, &v8::Extension::source_length> ))
  X_CXXMethod(( pick_overload_v<const v8::String::ExternalOneByteStringResource *(v8::Extension::*)() const, &v8::Extension::source> ))
  X_CXXMethod(( pick_overload_v<int (v8::Extension::*)() const, &v8::Extension::dependency_count> ))
  X_CXXMethod(( pick_overload_v<const char **(v8::Extension::*)() const, &v8::Extension::dependencies> ))
  X_CXXMethod(( pick_overload_v<void (v8::Extension::*)(bool), &v8::Extension::set_auto_enable> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Extension::*)(), &v8::Extension::auto_enable> ))
//  X_Function(( pick_overload_v<void (*)(std::unique_ptr<v8::Extension, std::default_delete<v8::Extension> >), &v8::RegisterExtension> ))
  X_Function(( pick_overload_v<v8::Local<v8::Primitive> (*)(v8::Isolate *), &v8::Undefined> ))
  X_Function(( pick_overload_v<v8::Local<v8::Primitive> (*)(v8::Isolate *), &v8::Null> ))
  X_Function(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *), &v8::True> ))
  X_Function(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *), &v8::False> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long, unsigned long long), &v8::ResourceConstraints::ConfigureDefaultsFromHeapSize> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long, unsigned long long), &v8::ResourceConstraints::ConfigureDefaults> ))
  X_CXXMethod(( pick_overload_v<unsigned int *(v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::stack_limit> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned int *), &v8::ResourceConstraints::set_stack_limit> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::code_range_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_code_range_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::max_old_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_max_old_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::max_young_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_max_young_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::initial_old_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_initial_old_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::initial_young_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_initial_young_generation_size_in_bytes> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::code_range_size> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_code_range_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::max_semi_space_size_in_kb> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_max_semi_space_size_in_kb> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::max_old_space_size> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_max_old_space_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::ResourceConstraints::*)() const, &v8::ResourceConstraints::max_zone_pool_size> ))
  X_CXXMethod(( pick_overload_v<void (v8::ResourceConstraints::*)(unsigned long long), &v8::ResourceConstraints::set_max_zone_pool_size> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ResourceConstraints::*)(), &v8::ResourceConstraints::ResourceConstraints> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ResourceConstraints::*)(const v8::ResourceConstraints &), &v8::ResourceConstraints::ResourceConstraints> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ResourceConstraints::*)(v8::ResourceConstraints &&), &v8::ResourceConstraints::ResourceConstraints> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Local<v8::String>), &v8::Exception::RangeError> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Local<v8::String>), &v8::Exception::ReferenceError> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Local<v8::String>), &v8::Exception::SyntaxError> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Local<v8::String>), &v8::Exception::TypeError> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (*)(v8::Local<v8::String>), &v8::Exception::Error> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Message> (*)(v8::Isolate *, v8::Local<v8::Value>), &v8::Exception::CreateMessage> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::StackTrace> (*)(v8::Local<v8::Value>), &v8::Exception::GetStackTrace> ))
  X_CXXConstructor(( pick_overload_v<void (v8::PromiseRejectMessage::*)(v8::Local<v8::Promise>, v8::PromiseRejectEvent, v8::Local<v8::Value>), &v8::PromiseRejectMessage::PromiseRejectMessage> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Promise> (v8::PromiseRejectMessage::*)() const, &v8::PromiseRejectMessage::GetPromise> ))
  X_CXXMethod(( pick_overload_v<v8::PromiseRejectEvent (v8::PromiseRejectMessage::*)() const, &v8::PromiseRejectMessage::GetEvent> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::PromiseRejectMessage::*)() const, &v8::PromiseRejectMessage::GetValue> ))
//  X_CXXMethod(( pick_overload_v<std::unique_ptr<v8::MicrotaskQueue, std::default_delete<v8::MicrotaskQueue> > (*)(v8::Isolate *, v8::MicrotasksPolicy), &v8::MicrotaskQueue::New> ))
  X_CXXDestructor(( pick_overload_v<void (v8::MicrotaskQueue::*)(), &v8::MicrotaskQueue::~MicrotaskQueue> ))
  X_CXXMethod(( pick_overload_v<void (v8::MicrotaskQueue::*)(v8::Isolate *, v8::Local<v8::Function>), &v8::MicrotaskQueue::EnqueueMicrotask> ))
  X_CXXMethod(( pick_overload_v<void (v8::MicrotaskQueue::*)(v8::Isolate *, void (*)(void *), void *), &v8::MicrotaskQueue::EnqueueMicrotask> ))
  X_CXXMethod(( pick_overload_v<void (v8::MicrotaskQueue::*)(void (*)(v8::Isolate *, void *), void *), &v8::MicrotaskQueue::AddMicrotasksCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::MicrotaskQueue::*)(void (*)(v8::Isolate *, void *), void *), &v8::MicrotaskQueue::RemoveMicrotasksCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::MicrotaskQueue::*)(v8::Isolate *), &v8::MicrotaskQueue::PerformCheckpoint> ))
  X_CXXMethod(( pick_overload_v<bool (v8::MicrotaskQueue::*)() const, &v8::MicrotaskQueue::IsRunningMicrotasks> ))
  X_CXXMethod(( pick_overload_v<int (v8::MicrotaskQueue::*)() const, &v8::MicrotaskQueue::GetMicrotasksScopeDepth> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MicrotasksScope::*)(v8::Isolate *, v8::MicrotasksScope::Type), &v8::MicrotasksScope::MicrotasksScope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::MicrotasksScope::*)(v8::Isolate *, v8::MicrotaskQueue *, v8::MicrotasksScope::Type), &v8::MicrotasksScope::MicrotasksScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::MicrotasksScope::*)(), &v8::MicrotasksScope::~MicrotasksScope> ))
  X_CXXMethod(( pick_overload_v<void (*)(v8::Isolate *), &v8::MicrotasksScope::PerformCheckpoint> ))
  X_CXXMethod(( pick_overload_v<int (*)(v8::Isolate *), &v8::MicrotasksScope::GetCurrentDepth> ))
  X_CXXMethod(( pick_overload_v<bool (*)(v8::Isolate *), &v8::MicrotasksScope::IsRunningMicrotasks> ))
  X_CXXConstructor(( pick_overload_v<void (v8::HeapStatistics::*)(), &v8::HeapStatistics::HeapStatistics> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::total_heap_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::total_heap_size_executable> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::total_physical_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::total_available_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::used_heap_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::heap_size_limit> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::malloced_memory> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::external_memory> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::peak_malloced_memory> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::number_of_native_contexts> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::number_of_detached_contexts> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapStatistics::*)(), &v8::HeapStatistics::does_zap_garbage> ))
  X_CXXConstructor(( pick_overload_v<void (v8::HeapSpaceStatistics::*)(), &v8::HeapSpaceStatistics::HeapSpaceStatistics> ))
  X_CXXMethod(( pick_overload_v<const char *(v8::HeapSpaceStatistics::*)(), &v8::HeapSpaceStatistics::space_name> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapSpaceStatistics::*)(), &v8::HeapSpaceStatistics::space_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapSpaceStatistics::*)(), &v8::HeapSpaceStatistics::space_used_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapSpaceStatistics::*)(), &v8::HeapSpaceStatistics::space_available_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapSpaceStatistics::*)(), &v8::HeapSpaceStatistics::physical_space_size> ))
  X_CXXConstructor(( pick_overload_v<void (v8::HeapObjectStatistics::*)(), &v8::HeapObjectStatistics::HeapObjectStatistics> ))
  X_CXXMethod(( pick_overload_v<const char *(v8::HeapObjectStatistics::*)(), &v8::HeapObjectStatistics::object_type> ))
  X_CXXMethod(( pick_overload_v<const char *(v8::HeapObjectStatistics::*)(), &v8::HeapObjectStatistics::object_sub_type> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapObjectStatistics::*)(), &v8::HeapObjectStatistics::object_count> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapObjectStatistics::*)(), &v8::HeapObjectStatistics::object_size> ))
  X_CXXConstructor(( pick_overload_v<void (v8::HeapCodeStatistics::*)(), &v8::HeapCodeStatistics::HeapCodeStatistics> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapCodeStatistics::*)(), &v8::HeapCodeStatistics::code_and_metadata_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapCodeStatistics::*)(), &v8::HeapCodeStatistics::bytecode_and_metadata_size> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::HeapCodeStatistics::*)(), &v8::HeapCodeStatistics::external_script_source_size> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ExternalResourceVisitor::*)(), &v8::ExternalResourceVisitor::~ExternalResourceVisitor> ))
  X_CXXMethod(( pick_overload_v<void (v8::ExternalResourceVisitor::*)(v8::Local<v8::String>), &v8::ExternalResourceVisitor::VisitExternalString> ))
  X_CXXMethod(( pick_overload_v<v8::ExternalResourceVisitor &(v8::ExternalResourceVisitor::*)(const v8::ExternalResourceVisitor &), &v8::ExternalResourceVisitor::operator=> ))
  X_CXXDestructor(( pick_overload_v<void (v8::PersistentHandleVisitor::*)(), &v8::PersistentHandleVisitor::~PersistentHandleVisitor> ))
  X_CXXMethod(( pick_overload_v<void (v8::PersistentHandleVisitor::*)(v8::Persistent<v8::Value, v8::NonCopyablePersistentTraits<v8::Value> > *, unsigned short), &v8::PersistentHandleVisitor::VisitPersistentHandle> ))
  X_CXXMethod(( pick_overload_v<v8::PersistentHandleVisitor &(v8::PersistentHandleVisitor::*)(const v8::PersistentHandleVisitor &), &v8::PersistentHandleVisitor::operator=> ))
  X_CXXDestructor(( pick_overload_v<void (v8::EmbedderHeapTracer::TracedGlobalHandleVisitor::*)(), &v8::EmbedderHeapTracer::TracedGlobalHandleVisitor::~TracedGlobalHandleVisitor> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::TracedGlobalHandleVisitor::*)(const v8::TracedGlobal<v8::Value> &), &v8::EmbedderHeapTracer::TracedGlobalHandleVisitor::VisitTracedGlobalHandle> ))
  X_CXXMethod(( pick_overload_v<v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &(v8::EmbedderHeapTracer::TracedGlobalHandleVisitor::*)(const v8::EmbedderHeapTracer::TracedGlobalHandleVisitor &), &v8::EmbedderHeapTracer::TracedGlobalHandleVisitor::operator=> ))
  X_CXXDestructor(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(), &v8::EmbedderHeapTracer::~EmbedderHeapTracer> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(v8::EmbedderHeapTracer::TracedGlobalHandleVisitor *), &v8::EmbedderHeapTracer::IterateTracedGlobalHandles> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(const std::vector<std::pair<void *, void *>, std::allocator<std::pair<void *, void *> > > &), &v8::EmbedderHeapTracer::RegisterV8References> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(const v8::TracedGlobal<v8::Value> &), &v8::EmbedderHeapTracer::RegisterEmbedderReference> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(), &v8::EmbedderHeapTracer::TracePrologue> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(v8::EmbedderHeapTracer::TraceFlags), &v8::EmbedderHeapTracer::TracePrologue> ))
  X_CXXMethod(( pick_overload_v<bool (v8::EmbedderHeapTracer::*)(double), &v8::EmbedderHeapTracer::AdvanceTracing> ))
  X_CXXMethod(( pick_overload_v<bool (v8::EmbedderHeapTracer::*)(), &v8::EmbedderHeapTracer::IsTracingDone> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(), &v8::EmbedderHeapTracer::TraceEpilogue> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(v8::EmbedderHeapTracer::TraceSummary *), &v8::EmbedderHeapTracer::TraceEpilogue> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(v8::EmbedderHeapTracer::EmbedderStackState), &v8::EmbedderHeapTracer::EnterFinalPause> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(), &v8::EmbedderHeapTracer::FinalizeTracing> ))
  X_CXXMethod(( pick_overload_v<bool (v8::EmbedderHeapTracer::*)(const v8::TracedGlobal<v8::Value> &), &v8::EmbedderHeapTracer::IsRootForNonTracingGC> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(v8::EmbedderHeapTracer::EmbedderStackState), &v8::EmbedderHeapTracer::GarbageCollectionForTesting> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(unsigned long long), &v8::EmbedderHeapTracer::IncreaseAllocatedSize> ))
  X_CXXMethod(( pick_overload_v<void (v8::EmbedderHeapTracer::*)(unsigned long long), &v8::EmbedderHeapTracer::DecreaseAllocatedSize> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(v8::EmbedderHeapTracer::*)() const, &v8::EmbedderHeapTracer::isolate> ))
  X_CXXMethod(( pick_overload_v<v8::EmbedderHeapTracer &(v8::EmbedderHeapTracer::*)(const v8::EmbedderHeapTracer &), &v8::EmbedderHeapTracer::operator=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::SerializeInternalFieldsCallback::*)(v8::StartupData (*)(v8::Local<v8::Object>, int, void *), void *), &v8::SerializeInternalFieldsCallback::SerializeInternalFieldsCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::SerializeInternalFieldsCallback::*)(const v8::SerializeInternalFieldsCallback &), &v8::SerializeInternalFieldsCallback::SerializeInternalFieldsCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::SerializeInternalFieldsCallback::*)(v8::SerializeInternalFieldsCallback &&), &v8::SerializeInternalFieldsCallback::SerializeInternalFieldsCallback> ))
  X_CXXDestructor(( pick_overload_v<void (v8::SerializeInternalFieldsCallback::*)(), &v8::SerializeInternalFieldsCallback::~SerializeInternalFieldsCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::DeserializeInternalFieldsCallback::*)(void (*)(v8::Local<v8::Object>, int, v8::StartupData, void *), void *), &v8::DeserializeInternalFieldsCallback::DeserializeInternalFieldsCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::DeserializeInternalFieldsCallback::*)(const v8::DeserializeInternalFieldsCallback &), &v8::DeserializeInternalFieldsCallback::DeserializeInternalFieldsCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::DeserializeInternalFieldsCallback::*)(v8::DeserializeInternalFieldsCallback &&), &v8::DeserializeInternalFieldsCallback::DeserializeInternalFieldsCallback> ))
  X_CXXDestructor(( pick_overload_v<void (v8::DeserializeInternalFieldsCallback::*)(), &v8::DeserializeInternalFieldsCallback::~DeserializeInternalFieldsCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Isolate::CreateParams::*)(), &v8::Isolate::CreateParams::CreateParams> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Isolate::Scope::*)(v8::Isolate *), &v8::Isolate::Scope::Scope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Isolate::Scope::*)(), &v8::Isolate::Scope::~Scope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Isolate::DisallowJavascriptExecutionScope::*)(v8::Isolate *, v8::Isolate::DisallowJavascriptExecutionScope::OnFailure), &v8::Isolate::DisallowJavascriptExecutionScope::DisallowJavascriptExecutionScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Isolate::DisallowJavascriptExecutionScope::*)(), &v8::Isolate::DisallowJavascriptExecutionScope::~DisallowJavascriptExecutionScope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Isolate::AllowJavascriptExecutionScope::*)(v8::Isolate *), &v8::Isolate::AllowJavascriptExecutionScope::AllowJavascriptExecutionScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Isolate::AllowJavascriptExecutionScope::*)(), &v8::Isolate::AllowJavascriptExecutionScope::~AllowJavascriptExecutionScope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Isolate::SuppressMicrotaskExecutionScope::*)(v8::Isolate *), &v8::Isolate::SuppressMicrotaskExecutionScope::SuppressMicrotaskExecutionScope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Isolate::SuppressMicrotaskExecutionScope::*)(v8::MicrotaskQueue *), &v8::Isolate::SuppressMicrotaskExecutionScope::SuppressMicrotaskExecutionScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Isolate::SuppressMicrotaskExecutionScope::*)(), &v8::Isolate::SuppressMicrotaskExecutionScope::~SuppressMicrotaskExecutionScope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Isolate::SafeForTerminationScope::*)(v8::Isolate *), &v8::Isolate::SafeForTerminationScope::SafeForTerminationScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Isolate::SafeForTerminationScope::*)(), &v8::Isolate::SafeForTerminationScope::~SafeForTerminationScope> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(*)(), &v8::Isolate::Allocate> ))
  X_CXXMethod(( pick_overload_v<void (*)(v8::Isolate *, const v8::Isolate::CreateParams &), &v8::Isolate::Initialize> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(*)(const v8::Isolate::CreateParams &), &v8::Isolate::New> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(*)(), &v8::Isolate::GetCurrent> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool (*)(v8::Isolate *)), &v8::Isolate::SetAbortOnUncaughtExceptionCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::MaybeLocal<v8::Promise> (*)(v8::Local<v8::Context>, v8::Local<v8::ScriptOrModule>, v8::Local<v8::String>)), &v8::Isolate::SetHostImportModuleDynamicallyCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Local<v8::Context>, v8::Local<v8::Module>, v8::Local<v8::Object>)), &v8::Isolate::SetHostInitializeImportMetaObjectCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::MaybeLocal<v8::Value> (*)(v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::Array>)), &v8::Isolate::SetPrepareStackTraceCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::MemoryPressureLevel), &v8::Isolate::MemoryPressureNotification> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::Enter> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::Exit> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::Dispose> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::DumpAndResetStats> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::DiscardThreadSpecificMetadata> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(unsigned int, void *), &v8::Isolate::SetData> ))
  X_CXXMethod(( pick_overload_v<void *(v8::Isolate::*)(unsigned int), &v8::Isolate::GetData> ))
  X_CXXMethod(( pick_overload_v<unsigned int (*)(), &v8::Isolate::GetNumberOfDataSlots> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::HeapStatistics *), &v8::Isolate::GetHeapStatistics> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::Isolate::*)(), &v8::Isolate::NumberOfHeapSpaces> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(v8::HeapSpaceStatistics *, unsigned long long), &v8::Isolate::GetHeapSpaceStatistics> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::Isolate::*)(), &v8::Isolate::NumberOfTrackedHeapObjectTypes> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(v8::HeapObjectStatistics *, unsigned long long), &v8::Isolate::GetHeapObjectStatisticsAtLastGC> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(v8::HeapCodeStatistics *), &v8::Isolate::GetHeapCodeAndMetadataStatistics> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(const v8::RegisterState &, void **, unsigned long long, v8::SampleInfo *), &v8::Isolate::GetStackSample> ))
  X_CXXMethod(( pick_overload_v<long long (v8::Isolate::*)(long long), &v8::Isolate::AdjustAmountOfExternalAllocatedMemory> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::Isolate::*)(), &v8::Isolate::NumberOfPhantomHandleResetsSinceLastCall> ))
  X_CXXMethod(( pick_overload_v<v8::HeapProfiler *(v8::Isolate::*)(), &v8::Isolate::GetHeapProfiler> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool), &v8::Isolate::SetIdle> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer::Allocator *(v8::Isolate::*)(), &v8::Isolate::GetArrayBufferAllocator> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(), &v8::Isolate::InContext> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (v8::Isolate::*)(), &v8::Isolate::GetCurrentContext> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (v8::Isolate::*)(), &v8::Isolate::GetEnteredContext> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (v8::Isolate::*)(), &v8::Isolate::GetEnteredOrMicrotaskContext> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (v8::Isolate::*)(), &v8::Isolate::GetIncumbentContext> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Isolate::*)(v8::Local<v8::Value>), &v8::Isolate::ThrowException> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *), void *, v8::GCType), &v8::Isolate::AddGCPrologueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags), v8::GCType), &v8::Isolate::AddGCPrologueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *), void *), &v8::Isolate::RemoveGCPrologueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags)), &v8::Isolate::RemoveGCPrologueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::EmbedderHeapTracer *), &v8::Isolate::SetEmbedderHeapTracer> ))
  X_CXXMethod(( pick_overload_v<v8::EmbedderHeapTracer *(v8::Isolate::*)(), &v8::Isolate::GetEmbedderHeapTracer> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::AtomicsWaitWakeHandle::*)(), &v8::Isolate::AtomicsWaitWakeHandle::Wake> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate::AtomicsWaitEvent, v8::Local<v8::SharedArrayBuffer>, unsigned long long, long long, double, v8::Isolate::AtomicsWaitWakeHandle *, void *), void *), &v8::Isolate::SetAtomicsWaitCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *), void *, v8::GCType), &v8::Isolate::AddGCEpilogueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags), v8::GCType), &v8::Isolate::AddGCEpilogueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags, void *), void *), &v8::Isolate::RemoveGCEpilogueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::GCType, v8::GCCallbackFlags)), &v8::Isolate::RemoveGCEpilogueCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(unsigned long long (*)()), &v8::Isolate::SetGetExternallyAllocatedMemoryInBytesCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::TerminateExecution> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(), &v8::Isolate::IsExecutionTerminating> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::CancelTerminateExecution> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, void *), void *), &v8::Isolate::RequestInterrupt> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::Isolate::GarbageCollectionType), &v8::Isolate::RequestGarbageCollectionForTesting> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(const char *, int)), &v8::Isolate::SetEventLogger> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *)), &v8::Isolate::AddBeforeCallEnteredCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *)), &v8::Isolate::RemoveBeforeCallEnteredCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *)), &v8::Isolate::AddCallCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *)), &v8::Isolate::RemoveCallCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::PromiseHookType, v8::Local<v8::Promise>, v8::Local<v8::Value>)), &v8::Isolate::SetPromiseHook> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::PromiseRejectMessage)), &v8::Isolate::SetPromiseRejectCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::RunMicrotasks> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::Local<v8::Function>), &v8::Isolate::EnqueueMicrotask> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(void *), void *), &v8::Isolate::EnqueueMicrotask> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::MicrotasksPolicy), &v8::Isolate::SetMicrotasksPolicy> ))
  X_CXXMethod(( pick_overload_v<v8::MicrotasksPolicy (v8::Isolate::*)() const, &v8::Isolate::GetMicrotasksPolicy> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *)), &v8::Isolate::AddMicrotasksCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, void *), void *), &v8::Isolate::AddMicrotasksCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *)), &v8::Isolate::RemoveMicrotasksCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, void *), void *), &v8::Isolate::RemoveMicrotasksCompletedCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Isolate *, v8::Isolate::UseCounterFeature)), &v8::Isolate::SetUseCounterCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(int *(*)(const char *)), &v8::Isolate::SetCounterFunction> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void *(*)(const char *, int, int, unsigned long long)), &v8::Isolate::SetCreateHistogramFunction> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(void *, int)), &v8::Isolate::SetAddHistogramSampleFunction> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(double), &v8::Isolate::IdleNotificationDeadline> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::LowMemoryNotification> ))
  X_CXXMethod(( pick_overload_v<int (v8::Isolate::*)(bool), &v8::Isolate::ContextDisposedNotification> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::IsolateInForegroundNotification> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::IsolateInBackgroundNotification> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::EnableMemorySavingsMode> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::DisableMemorySavingsMode> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::RAILMode), &v8::Isolate::SetRAILMode> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::IncreaseHeapLimitForDebugging> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::RestoreOriginalHeapLimit> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(), &v8::Isolate::IsHeapLimitIncreasedForDebugging> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::JitCodeEventOptions, void (*)(const v8::JitCodeEvent *)), &v8::Isolate::SetJitCodeEventHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(unsigned long long), &v8::Isolate::SetStackLimit> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void **, unsigned long long *), &v8::Isolate::GetCodeRange> ))
  X_CXXMethod(( pick_overload_v<v8::UnwindState (v8::Isolate::*)(), &v8::Isolate::GetUnwindState> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(const char *, const char *)), &v8::Isolate::SetFatalErrorHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(const char *, bool)), &v8::Isolate::SetOOMErrorHandler> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(unsigned long long (*)(void *, unsigned long long, unsigned long long), void *), &v8::Isolate::AddNearHeapLimitCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(unsigned long long (*)(void *, unsigned long long, unsigned long long), unsigned long long), &v8::Isolate::RemoveNearHeapLimitCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(double), &v8::Isolate::AutomaticallyRestoreInitialHeapLimit> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool (*)(v8::Local<v8::Context>, v8::Local<v8::String>)), &v8::Isolate::SetAllowCodeGenerationFromStringsCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool (*)(v8::Local<v8::Context>, v8::Local<v8::String>)), &v8::Isolate::SetAllowWasmCodeGenerationCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool (*)(const v8::FunctionCallbackInfo<v8::Value> &)), &v8::Isolate::SetWasmModuleCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool (*)(const v8::FunctionCallbackInfo<v8::Value> &)), &v8::Isolate::SetWasmInstanceCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(const v8::FunctionCallbackInfo<v8::Value> &)), &v8::Isolate::SetWasmStreamingCallback> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool (*)(v8::Local<v8::Context>)), &v8::Isolate::SetWasmThreadsEnabledCallback> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(), &v8::Isolate::IsDead> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(void (*)(v8::Local<v8::Message>, v8::Local<v8::Value>), v8::Local<v8::Value>), &v8::Isolate::AddMessageListener> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(void (*)(v8::Local<v8::Message>, v8::Local<v8::Value>), int, v8::Local<v8::Value>), &v8::Isolate::AddMessageListenerWithErrorLevel> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Local<v8::Message>, v8::Local<v8::Value>)), &v8::Isolate::RemoveMessageListeners> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(void (*)(v8::Local<v8::Object>, v8::AccessType, v8::Local<v8::Value>)), &v8::Isolate::SetFailedAccessCheckCallbackFunction> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool, int, v8::StackTrace::StackTraceOptions), &v8::Isolate::SetCaptureStackTraceForUncaughtExceptions> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::ExternalResourceVisitor *), &v8::Isolate::VisitExternalResources> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::PersistentHandleVisitor *), &v8::Isolate::VisitHandlesWithClassIds> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::PersistentHandleVisitor *), &v8::Isolate::VisitWeakHandles> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Isolate::*)(), &v8::Isolate::IsInUse> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(bool), &v8::Isolate::SetAllowAtomicsWait> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(v8::Isolate::TimeZoneDetection), &v8::Isolate::DateTimeConfigurationChangeNotification> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(), &v8::Isolate::LocaleConfigurationChangeNotification> ))
  X_CXXMethod(( pick_overload_v<bool (v8::StartupData::*)() const, &v8::StartupData::CanBeRehashed> ))
  X_CXXMethod(( pick_overload_v<void (*)(v8::StartupData *), &v8::V8::SetNativesDataBlob> ))
  X_CXXMethod(( pick_overload_v<void (*)(v8::StartupData *), &v8::V8::SetSnapshotDataBlob> ))
  X_CXXMethod(( pick_overload_v<void (*)(void (*)(const char *, int, const char *)), &v8::V8::SetDcheckErrorHandler> ))
  X_CXXMethod(( pick_overload_v<void (*)(const char *), &v8::V8::SetFlagsFromString> ))
  X_CXXMethod(( pick_overload_v<void (*)(const char *, unsigned long long), &v8::V8::SetFlagsFromString> ))
  X_CXXMethod(( pick_overload_v<void (*)(const char *, int), &v8::V8::SetFlagsFromString> ))
  X_CXXMethod(( pick_overload_v<void (*)(int *, char **, bool), &v8::V8::SetFlagsFromCommandLine> ))
  X_CXXMethod(( pick_overload_v<const char *(*)(), &v8::V8::GetVersion> ))
  X_CXXMethod(( pick_overload_v<bool (*)(), &v8::V8::Initialize> ))
  X_CXXMethod(( pick_overload_v<void (*)(bool (*)(unsigned char *, unsigned long long)), &v8::V8::SetEntropySource> ))
  X_CXXMethod(( pick_overload_v<void (*)(unsigned long long (*)(unsigned long long)), &v8::V8::SetReturnAddressLocationResolver> ))
  X_CXXMethod(( pick_overload_v<bool (*)(), &v8::V8::Dispose> ))
  X_CXXMethod(( pick_overload_v<bool (*)(const char *), &v8::V8::InitializeICU> ))
  X_CXXMethod(( pick_overload_v<bool (*)(const char *, const char *), &v8::V8::InitializeICUDefaultLocation> ))
  X_CXXMethod(( pick_overload_v<void (*)(const char *), &v8::V8::InitializeExternalStartupData> ))
  X_CXXMethod(( pick_overload_v<void (*)(const char *, const char *), &v8::V8::InitializeExternalStartupData> ))
  X_CXXMethod(( pick_overload_v<void (*)(v8::Platform *), &v8::V8::InitializePlatform> ))
  X_CXXMethod(( pick_overload_v<void (*)(), &v8::V8::ShutdownPlatform> ))
  X_CXXMethod(( pick_overload_v<bool (*)(bool), &v8::V8::EnableWebAssemblyTrapHandler> ))
  X_CXXMethod(( pick_overload_v<void (*)(int (*)(_EXCEPTION_POINTERS *)), &v8::V8::SetUnhandledExceptionCallback> ))
  X_CXXConstructor(( pick_overload_v<void (v8::SnapshotCreator::*)(v8::Isolate *, const long long *, v8::StartupData *), &v8::SnapshotCreator::SnapshotCreator> ))
  X_CXXConstructor(( pick_overload_v<void (v8::SnapshotCreator::*)(const long long *, v8::StartupData *), &v8::SnapshotCreator::SnapshotCreator> ))
  X_CXXDestructor(( pick_overload_v<void (v8::SnapshotCreator::*)(), &v8::SnapshotCreator::~SnapshotCreator> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(v8::SnapshotCreator::*)(), &v8::SnapshotCreator::GetIsolate> ))
  X_CXXMethod(( pick_overload_v<void (v8::SnapshotCreator::*)(v8::Local<v8::Context>, v8::SerializeInternalFieldsCallback), &v8::SnapshotCreator::SetDefaultContext> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::SnapshotCreator::*)(v8::Local<v8::Context>, v8::SerializeInternalFieldsCallback), &v8::SnapshotCreator::AddContext> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::SnapshotCreator::*)(v8::Local<v8::Template>), &v8::SnapshotCreator::AddTemplate> ))
  X_CXXMethod(( pick_overload_v<v8::StartupData (v8::SnapshotCreator::*)(v8::SnapshotCreator::FunctionCodeHandling), &v8::SnapshotCreator::CreateBlob> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Maybe<void>::*)() const, &v8::Maybe<void>::IsNothing> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Maybe<void>::*)() const, &v8::Maybe<void>::IsJust> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Maybe<void>::*)(const v8::Maybe<void> &) const, &v8::Maybe<void>::operator==> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Maybe<void>::*)(const v8::Maybe<void> &) const, &v8::Maybe<void>::operator!=> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Maybe<void>::*)(const v8::Maybe<void> &), &v8::Maybe<void>::Maybe> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Maybe<void>::*)(v8::Maybe<void> &&), &v8::Maybe<void>::Maybe> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Maybe<void>::*)(), &v8::Maybe<void>::~Maybe> ))
  X_Function(( pick_overload_v<v8::Maybe<void> (*)(), &v8::JustVoid> ))
  X_CXXConstructor(( pick_overload_v<void (v8::TryCatch::*)(v8::Isolate *), &v8::TryCatch::TryCatch> ))
  X_CXXDestructor(( pick_overload_v<void (v8::TryCatch::*)(), &v8::TryCatch::~TryCatch> ))
  X_CXXMethod(( pick_overload_v<bool (v8::TryCatch::*)() const, &v8::TryCatch::HasCaught> ))
  X_CXXMethod(( pick_overload_v<bool (v8::TryCatch::*)() const, &v8::TryCatch::CanContinue> ))
  X_CXXMethod(( pick_overload_v<bool (v8::TryCatch::*)() const, &v8::TryCatch::HasTerminated> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::TryCatch::*)(), &v8::TryCatch::ReThrow> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::TryCatch::*)() const, &v8::TryCatch::Exception> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Value> (v8::TryCatch::*)(v8::Local<v8::Context>) const, &v8::TryCatch::StackTrace> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Message> (v8::TryCatch::*)() const, &v8::TryCatch::Message> ))
  X_CXXMethod(( pick_overload_v<void (v8::TryCatch::*)(), &v8::TryCatch::Reset> ))
  X_CXXMethod(( pick_overload_v<void (v8::TryCatch::*)(bool), &v8::TryCatch::SetVerbose> ))
  X_CXXMethod(( pick_overload_v<bool (v8::TryCatch::*)() const, &v8::TryCatch::IsVerbose> ))
  X_CXXMethod(( pick_overload_v<void (v8::TryCatch::*)(bool), &v8::TryCatch::SetCaptureMessage> ))
  X_CXXMethod(( pick_overload_v<void *(*)(v8::TryCatch *), &v8::TryCatch::JSStackComparableAddress> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ExtensionConfiguration::*)(), &v8::ExtensionConfiguration::ExtensionConfiguration> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ExtensionConfiguration::*)(int, const char **), &v8::ExtensionConfiguration::ExtensionConfiguration> ))
  X_CXXMethod(( pick_overload_v<const char **(v8::ExtensionConfiguration::*)() const, &v8::ExtensionConfiguration::begin> ))
  X_CXXMethod(( pick_overload_v<const char **(v8::ExtensionConfiguration::*)() const, &v8::ExtensionConfiguration::end> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (v8::Context::*)(), &v8::Context::Global> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(), &v8::Context::DetachGlobal> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Context> (*)(v8::Isolate *, v8::ExtensionConfiguration *, v8::MaybeLocal<v8::ObjectTemplate>, v8::MaybeLocal<v8::Value>, v8::DeserializeInternalFieldsCallback, v8::MicrotaskQueue *), &v8::Context::New> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Context> (*)(v8::Isolate *, unsigned long long, v8::DeserializeInternalFieldsCallback, v8::ExtensionConfiguration *, v8::MaybeLocal<v8::Value>, v8::MicrotaskQueue *), &v8::Context::FromSnapshot> ))
  X_CXXMethod(( pick_overload_v<v8::MaybeLocal<v8::Object> (*)(v8::Isolate *, v8::Local<v8::ObjectTemplate>, v8::MaybeLocal<v8::Value>), &v8::Context::NewRemoteContext> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(v8::Local<v8::Value>), &v8::Context::SetSecurityToken> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(), &v8::Context::UseDefaultSecurityToken> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Context::*)(), &v8::Context::GetSecurityToken> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(), &v8::Context::Enter> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(), &v8::Context::Exit> ))
  X_CXXMethod(( pick_overload_v<v8::Isolate *(v8::Context::*)(), &v8::Context::GetIsolate> ))
  X_CXXMethod(( pick_overload_v<unsigned int (v8::Context::*)(), &v8::Context::GetNumberOfEmbedderDataFields> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Context::*)(int), &v8::Context::GetEmbedderData> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Object> (v8::Context::*)(), &v8::Context::GetExtrasBindingObject> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(int, v8::Local<v8::Value>), &v8::Context::SetEmbedderData> ))
  X_CXXMethod(( pick_overload_v<void *(v8::Context::*)(int), &v8::Context::GetAlignedPointerFromEmbedderData> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(int, void *), &v8::Context::SetAlignedPointerInEmbedderData> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(bool), &v8::Context::AllowCodeGenerationFromStrings> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Context::*)(), &v8::Context::IsCodeGenerationFromStringsAllowed> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(v8::Local<v8::String>), &v8::Context::SetErrorMessageForCodeGenerationFromStrings> ))
  X_CXXMethod(( pick_overload_v<void (v8::Context::*)(void (*)(v8::Isolate *, v8::Local<v8::Context>)), &v8::Context::SetAbortScriptExecution> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Context::Scope::*)(v8::Local<v8::Context>), &v8::Context::Scope::Scope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Context::Scope::*)(), &v8::Context::Scope::~Scope> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Context::BackupIncumbentScope::*)(v8::Local<v8::Context>), &v8::Context::BackupIncumbentScope::BackupIncumbentScope> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Context::BackupIncumbentScope::*)(), &v8::Context::BackupIncumbentScope::~BackupIncumbentScope> ))
  X_CXXMethod(( pick_overload_v<unsigned long long (v8::Context::BackupIncumbentScope::*)() const, &v8::Context::BackupIncumbentScope::JSStackComparableAddress> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Unlocker::*)(v8::Isolate *), &v8::Unlocker::Unlocker> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Unlocker::*)(), &v8::Unlocker::~Unlocker> ))
  X_CXXConstructor(( pick_overload_v<void (v8::Locker::*)(v8::Isolate *), &v8::Locker::Locker> ))
  X_CXXDestructor(( pick_overload_v<void (v8::Locker::*)(), &v8::Locker::~Locker> ))
  X_CXXMethod(( pick_overload_v<bool (*)(v8::Isolate *), &v8::Locker::IsLocked> ))
  X_CXXMethod(( pick_overload_v<bool (*)(), &v8::Locker::IsActive> ))
  X_CXXMethod(( pick_overload_v<bool (*)(const v8::UnwindState &, v8::RegisterState *, const void *), &v8::Unwinder::TryUnwindV8Frames> ))
  X_CXXMethod(( pick_overload_v<bool (*)(const v8::UnwindState &, void *), &v8::Unwinder::PCIsInV8> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptOrigin::*)(v8::Local<v8::Value>, v8::Local<v8::Integer>, v8::Local<v8::Integer>, v8::Local<v8::Boolean>, v8::Local<v8::Integer>, v8::Local<v8::Value>, v8::Local<v8::Boolean>, v8::Local<v8::Boolean>, v8::Local<v8::Boolean>, v8::Local<v8::PrimitiveArray>), &v8::ScriptOrigin::ScriptOrigin> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ResourceName> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::PrimitiveArray> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::HostDefinedOptions> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ResourceLineOffset> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ResourceColumnOffset> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Integer> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::ScriptID> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::ScriptOrigin::*)() const, &v8::ScriptOrigin::SourceMapUrl> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::Source::*)(v8::Local<v8::String>, const v8::ScriptOrigin &, v8::ScriptCompiler::CachedData *), &v8::ScriptCompiler::Source::Source> ))
  X_CXXConstructor(( pick_overload_v<void (v8::ScriptCompiler::Source::*)(v8::Local<v8::String>, v8::ScriptCompiler::CachedData *), &v8::ScriptCompiler::Source::Source> ))
  X_CXXDestructor(( pick_overload_v<void (v8::ScriptCompiler::Source::*)(), &v8::ScriptCompiler::Source::~Source> ))
  X_CXXMethod(( pick_overload_v<const v8::ScriptCompiler::CachedData *(v8::ScriptCompiler::Source::*)() const, &v8::ScriptCompiler::Source::GetCachedData> ))
  X_CXXMethod(( pick_overload_v<const v8::ScriptOriginOptions &(v8::ScriptCompiler::Source::*)() const, &v8::ScriptCompiler::Source::GetResourceOptions> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *, bool), &v8::Boolean::New> ))
  X_CXXMethod(( pick_overload_v<void (v8::Template::*)(v8::Isolate *, const char *, v8::Local<v8::Data>), &v8::Template::Set> ))
  X_CXXMethod(( pick_overload_v<v8::FunctionTemplate *(*)(v8::Data *), &v8::FunctionTemplate::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::ObjectTemplate *(*)(v8::Data *), &v8::ObjectTemplate::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Signature *(*)(v8::Data *), &v8::Signature::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::AccessorSignature *(*)(v8::Data *), &v8::AccessorSignature::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Object::*)(int), &v8::Object::GetInternalField> ))
  X_CXXMethod(( pick_overload_v<void *(v8::Object::*)(int), &v8::Object::GetAlignedPointerFromInternalField> ))
  X_CXXMethod(( pick_overload_v<v8::String *(*)(v8::Value *), &v8::String::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::String> (*)(v8::Isolate *), &v8::String::Empty> ))
  X_CXXMethod(( pick_overload_v<v8::String::ExternalStringResource *(v8::String::*)() const, &v8::String::GetExternalStringResource> ))
  X_CXXMethod(( pick_overload_v<v8::String::ExternalStringResourceBase *(v8::String::*)(v8::String::Encoding *) const, &v8::String::GetExternalStringResourceBase> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsUndefined> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsNull> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsNullOrUndefined> ))
  X_CXXMethod(( pick_overload_v<bool (v8::Value::*)() const, &v8::Value::IsString> ))
  X_CXXMethod(( pick_overload_v<v8::Boolean *(*)(v8::Value *), &v8::Boolean::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Name *(*)(v8::Value *), &v8::Name::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Symbol *(*)(v8::Value *), &v8::Symbol::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Private *(*)(v8::Data *), &v8::Private::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Number *(*)(v8::Value *), &v8::Number::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Integer *(*)(v8::Value *), &v8::Integer::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Int32 *(*)(v8::Value *), &v8::Int32::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Uint32 *(*)(v8::Value *), &v8::Uint32::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::BigInt *(*)(v8::Value *), &v8::BigInt::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Date *(*)(v8::Value *), &v8::Date::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::StringObject *(*)(v8::Value *), &v8::StringObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::SymbolObject *(*)(v8::Value *), &v8::SymbolObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::NumberObject *(*)(v8::Value *), &v8::NumberObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::BigIntObject *(*)(v8::Value *), &v8::BigIntObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::BooleanObject *(*)(v8::Value *), &v8::BooleanObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::RegExp *(*)(v8::Value *), &v8::RegExp::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Object *(*)(v8::Value *), &v8::Object::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Array *(*)(v8::Value *), &v8::Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Map *(*)(v8::Value *), &v8::Map::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Set *(*)(v8::Value *), &v8::Set::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Promise *(*)(v8::Value *), &v8::Promise::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Proxy *(*)(v8::Value *), &v8::Proxy::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::WasmModuleObject *(*)(v8::Value *), &v8::WasmModuleObject::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Promise::Resolver *(*)(v8::Value *), &v8::Promise::Resolver::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBuffer *(*)(v8::Value *), &v8::ArrayBuffer::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::ArrayBufferView *(*)(v8::Value *), &v8::ArrayBufferView::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::TypedArray *(*)(v8::Value *), &v8::TypedArray::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Uint8Array *(*)(v8::Value *), &v8::Uint8Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Int8Array *(*)(v8::Value *), &v8::Int8Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Uint16Array *(*)(v8::Value *), &v8::Uint16Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Int16Array *(*)(v8::Value *), &v8::Int16Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Uint32Array *(*)(v8::Value *), &v8::Uint32Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Int32Array *(*)(v8::Value *), &v8::Int32Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Float32Array *(*)(v8::Value *), &v8::Float32Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Float64Array *(*)(v8::Value *), &v8::Float64Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::BigInt64Array *(*)(v8::Value *), &v8::BigInt64Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::BigUint64Array *(*)(v8::Value *), &v8::BigUint64Array::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Uint8ClampedArray *(*)(v8::Value *), &v8::Uint8ClampedArray::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::DataView *(*)(v8::Value *), &v8::DataView::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::SharedArrayBuffer *(*)(v8::Value *), &v8::SharedArrayBuffer::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::Function *(*)(v8::Value *), &v8::Function::Cast> ))
  X_CXXMethod(( pick_overload_v<v8::External *(*)(v8::Value *), &v8::External::Cast> ))
  X_Function(( pick_overload_v<v8::Local<v8::Primitive> (*)(v8::Isolate *), &v8::Undefined> ))
  X_Function(( pick_overload_v<v8::Local<v8::Primitive> (*)(v8::Isolate *), &v8::Null> ))
  X_Function(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *), &v8::True> ))
  X_Function(( pick_overload_v<v8::Local<v8::Boolean> (*)(v8::Isolate *), &v8::False> ))
  X_CXXMethod(( pick_overload_v<void (v8::Isolate::*)(unsigned int, void *), &v8::Isolate::SetData> ))
  X_CXXMethod(( pick_overload_v<void *(v8::Isolate::*)(unsigned int), &v8::Isolate::GetData> ))
  X_CXXMethod(( pick_overload_v<unsigned int (*)(), &v8::Isolate::GetNumberOfDataSlots> ))
  X_CXXMethod(( pick_overload_v<long long (v8::Isolate::*)(long long), &v8::Isolate::AdjustAmountOfExternalAllocatedMemory> ))
  X_CXXMethod(( pick_overload_v<v8::Local<v8::Value> (v8::Context::*)(int), &v8::Context::GetEmbedderData> ))
  X_CXXMethod(( pick_overload_v<void *(v8::Context::*)(int), &v8::Context::GetAlignedPointerFromEmbedderData> ))
// Done: 0
